{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/SubDomainManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport { FiPlus, FiEdit, FiTrash2, FiChevronDown, FiChevronRight, FiFolder, FiFolderPlus, FiFileText, FiArrowLeft, FiMoreVertical, FiMove, FiTarget } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubDomainManagement = () => {\n  _s();\n  console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  const {\n    domainId\n  } = useParams();\n  const navigate = useNavigate();\n  const [domain, setDomain] = useState(null);\n  const [subDomains, setSubDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSubDomain, setEditingSubDomain] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n    domainId,\n    domain: domain === null || domain === void 0 ? void 0 : domain.title,\n    subDomainsCount: subDomains.length,\n    loading,\n    selectedParent: selectedParent === null || selectedParent === void 0 ? void 0 : selectedParent.title,\n    expandedCount: expandedNodes.size\n  });\n  useEffect(() => {\n    if (domainId) {\n      console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n      fetchDomainAndSubDomains();\n    }\n  }, [domainId]);\n  const fetchDomainAndSubDomains = async () => {\n    try {\n      var _domainsResponse$data, _domainsResponse$data2, _domainsResponse$data3;\n      setLoading(true);\n      console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n      console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n      // First, let's try to get domain details\n      console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n      const domainsResponse = await authService.getDomains({\n        id: domainId\n      });\n      console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n      // Extract domain from response\n      let domainData = null;\n      if ((_domainsResponse$data = domainsResponse.data) !== null && _domainsResponse$data !== void 0 && _domainsResponse$data.domains && domainsResponse.data.domains.length > 0) {\n        domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n      } else if ((_domainsResponse$data2 = domainsResponse.data) !== null && _domainsResponse$data2 !== void 0 && (_domainsResponse$data3 = _domainsResponse$data2.data) !== null && _domainsResponse$data3 !== void 0 && _domainsResponse$data3.domains && domainsResponse.data.data.domains.length > 0) {\n        domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n      } else if (Array.isArray(domainsResponse.data)) {\n        domainData = domainsResponse.data.find(d => d.id == domainId);\n      }\n      console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n      // If we don't have domain data, create a placeholder\n      if (!domainData) {\n        console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n        domainData = {\n          id: domainId,\n          title: `Domain ${domainId}`,\n          description: 'Loading domain details...',\n          projectCount: 0\n        };\n      }\n      setDomain(domainData);\n\n      // Try to get hierarchy if domain exists\n      try {\n        var _hierarchyResponse$da, _hierarchyData$subDom;\n        console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n        const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n        console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        const hierarchyData = ((_hierarchyResponse$da = hierarchyResponse.data) === null || _hierarchyResponse$da === void 0 ? void 0 : _hierarchyResponse$da.data) || hierarchyResponse.data;\n        console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        setSubDomains((hierarchyData === null || hierarchyData === void 0 ? void 0 : hierarchyData.subDomains) || []);\n\n        // Auto-expand first level\n        if ((hierarchyData === null || hierarchyData === void 0 ? void 0 : (_hierarchyData$subDom = hierarchyData.subDomains) === null || _hierarchyData$subDom === void 0 ? void 0 : _hierarchyData$subDom.length) > 0) {\n          const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n          setExpandedNodes(new Set(firstLevelIds));\n          console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n        }\n      } catch (hierarchyError) {\n        console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n        setSubDomains([]);\n      }\n    } catch (error) {\n      console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n      console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n      toast.error('Failed to fetch domain information');\n\n      // Create fallback domain\n      setDomain({\n        id: domainId,\n        title: `Domain ${domainId}`,\n        description: 'Error loading domain details',\n        projectCount: 0\n      });\n      setSubDomains([]);\n    } finally {\n      setLoading(false);\n      console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n    }\n  };\n  const handleAddSubDomain = (parent = null) => {\n    console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n    console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    setSelectedParent(parent);\n    setEditingSubDomain(null);\n    setShowAddModal(true);\n    console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', {\n      showAddModal: true,\n      selectedParent: parent === null || parent === void 0 ? void 0 : parent.title,\n      editingSubDomain: null\n    });\n  };\n  const handleEditSubDomain = subDomain => {\n    console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n    console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    setSelectedParent(null);\n    setEditingSubDomain(subDomain);\n    setShowAddModal(true);\n  };\n  const handleDeleteSubDomain = async subDomain => {\n    const hasChildren = subDomain.children && subDomain.children.length > 0;\n    const hasProjects = subDomain.projectCount > 0;\n    let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n    if (hasChildren) {\n      confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n    }\n    if (hasProjects) {\n      confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n    }\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n    try {\n      console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n      console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n      console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n      console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      const response = await authService.deleteSubDomain(subDomain.id);\n      console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      toast.success('Sub-domain deleted successfully');\n      fetchDomainAndSubDomains();\n    } catch (error) {\n      console.error('❌ SUBDOMAIN DELETE - Error:', error);\n      toast.error('Failed to delete sub-domain');\n    }\n  };\n  const toggleExpanded = nodeId => {\n    console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n      console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n    } else {\n      newExpanded.add(nodeId);\n      console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n  if (loading) {\n    console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading sub-domains...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this);\n  }\n  console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subdomain-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"breadcrumb-link\",\n            onClick: () => navigate('/domains'),\n            children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), \"Domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-current\",\n            children: (domain === null || domain === void 0 ? void 0 : domain.title) || 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SubDomain Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Manage the hierarchical structure of \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'this domain']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: () => handleAddSubDomain(),\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), \"Add Root SubDomain\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Build Your SubDomain Hierarchy:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guide-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\\"Add Root SubDomain\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 47\n            }, this), \" to create top-level categories\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click the \", /*#__PURE__*/_jsxDEV(FiPlus, {\n              className: \"inline-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 51\n            }, this), \" button next to any subdomain to add children\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Only \", /*#__PURE__*/_jsxDEV(FiTarget, {\n              className: \"inline-icon leaf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 46\n            }, this), \" leaf subdomains can have projects assigned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), domain && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-icon\",\n        children: /*#__PURE__*/_jsxDEV(FiFolder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: domain.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: domain.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"domain-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: subDomains.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), \" root sub-domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: domain.projectCount || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), \" total projects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subdomain-tree-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SubDomain Hierarchy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiFolder, {\n              className: \"folder-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), \"Has children\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiTarget, {\n              className: \"leaf-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), \"Leaf (can have projects)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), subDomains.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subdomain-tree\",\n        children: subDomains.map(subDomain => /*#__PURE__*/_jsxDEV(SubDomainNode, {\n          subDomain: subDomain,\n          level: 0,\n          isExpanded: expandedNodes.has(subDomain.id),\n          onToggleExpanded: toggleExpanded,\n          onEdit: handleEditSubDomain,\n          onDelete: handleDeleteSubDomain,\n          onAddChild: handleAddSubDomain,\n          expandedNodes: expandedNodes\n        }, subDomain.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-tree-state\",\n        children: [/*#__PURE__*/_jsxDEV(FiFolderPlus, {\n          size: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No SubDomains Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start organizing your \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'domain', \" projects by creating subdomains\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-examples\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Example Structure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-tree\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item\",\n              children: \"\\uD83D\\uDCC2 Machine Learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item nested\",\n              children: \"\\uD83C\\uDFAF Deep Learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item nested\",\n              children: \"\\uD83C\\uDFAF Computer Vision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item\",\n              children: \"\\uD83C\\uDFAF Data Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button large\",\n            onClick: () => handleAddSubDomain(),\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), \"Create Your First SubDomain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"\\uD83D\\uDCA1 Tip: Start with broad categories, then add specific subcategories as needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(SubDomainModal, {\n      subDomain: editingSubDomain,\n      parent: selectedParent,\n      domain: domain,\n      onClose: () => {\n        setShowAddModal(false);\n        setEditingSubDomain(null);\n        setSelectedParent(null);\n      },\n      onSave: () => {\n        setShowAddModal(false);\n        setEditingSubDomain(null);\n        setSelectedParent(null);\n        fetchDomainAndSubDomains();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n\n// SubDomain Node Component\n_s(SubDomainManagement, \"lp32VzwwmiT+yY65aYfsI0hRlQE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SubDomainManagement;\nconst SubDomainNode = ({\n  subDomain,\n  level,\n  isExpanded,\n  onToggleExpanded,\n  onEdit,\n  onDelete,\n  onAddChild,\n  expandedNodes\n}) => {\n  _s2();\n  const [showMenu, setShowMenu] = useState(false);\n  const hasChildren = subDomain.children && subDomain.children.length > 0;\n  const isLeaf = !hasChildren;\n  console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n    title: subDomain.title,\n    level,\n    hasChildren,\n    isLeaf,\n    isExpanded,\n    projectCount: subDomain.projectCount\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `subdomain-node level-${level}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-main\",\n        children: [hasChildren ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"expand-button\",\n          onClick: () => onToggleExpanded(subDomain.id),\n          children: isExpanded ? /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expand-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-icon\",\n          children: isLeaf ? /*#__PURE__*/_jsxDEV(FiTarget, {\n            className: \"leaf-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(FiFolder, {\n            className: \"folder-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"node-title\",\n            children: subDomain.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"node-description\",\n            children: subDomain.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-stats\",\n            children: [hasChildren && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge\",\n              children: [subDomain.children.length, \" sub-domains\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), subDomain.projectCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge projects\",\n              children: [subDomain.projectCount, \" projects\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), isLeaf && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge leaf\",\n              children: \"Can have projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button add\",\n          onClick: () => onAddChild(subDomain),\n          title: `Add child subdomain under \"${subDomain.title}\"`,\n          children: /*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowMenu(!showMenu),\n            title: \"More actions\",\n            children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onEdit(subDomain);\n                setShowMenu(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this), \" Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onAddChild(subDomain);\n                setShowMenu(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this), \" Add Child SubDomain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onDelete(subDomain);\n                setShowMenu(false);\n              },\n              className: \"danger\",\n              children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), hasChildren && isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-children\",\n      children: subDomain.children.map(child => /*#__PURE__*/_jsxDEV(SubDomainNode, {\n        subDomain: child,\n        level: level + 1,\n        isExpanded: expandedNodes.has(child.id),\n        onToggleExpanded: onToggleExpanded,\n        onEdit: onEdit,\n        onDelete: onDelete,\n        onAddChild: onAddChild,\n        expandedNodes: expandedNodes\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this);\n};\n\n// SubDomain Modal Component\n_s2(SubDomainNode, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c2 = SubDomainNode;\nconst SubDomainModal = ({\n  subDomain,\n  parent,\n  domain,\n  onClose,\n  onSave\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    title: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.title) || '',\n    description: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.description) || ''\n  });\n  const [loading, setLoading] = useState(false);\n  console.log('📝 SUBDOMAIN MODAL - Props:', {\n    isEditing: !!subDomain,\n    parentTitle: parent === null || parent === void 0 ? void 0 : parent.title,\n    domainTitle: domain === null || domain === void 0 ? void 0 : domain.title,\n    formData\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const requestData = {\n        ...formData,\n        domainId: domain.id,\n        parentId: (parent === null || parent === void 0 ? void 0 : parent.id) || null\n      };\n      console.log('💾 SUBDOMAIN SAVE - Starting API call');\n      console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n      console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n      if (subDomain) {\n        console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n        const response = await authService.updateSubDomain(subDomain.id, requestData);\n        console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n        toast.success('Sub-domain updated successfully');\n      } else {\n        console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n        const response = await authService.createSubDomain(requestData);\n        console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n        toast.success('Sub-domain created successfully');\n      }\n      onSave();\n    } catch (error) {\n      console.error('❌ SUBDOMAIN SAVE - Error:', error);\n      toast.error('Failed to save sub-domain');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getModalTitle = () => {\n    if (subDomain) {\n      return `Edit SubDomain: ${subDomain.title}`;\n    }\n    if (parent) {\n      return `Add SubDomain under: ${parent.title}`;\n    }\n    return `Add Root SubDomain in: ${(domain === null || domain === void 0 ? void 0 : domain.title) || 'Domain'}`;\n  };\n  const getLevel = () => {\n    if (!parent) return 'Root Level';\n    // This is a simplified level calculation\n    return `Level ${(parent.level || 0) + 1}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: getModalTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"SubDomain Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            placeholder: \"e.g., Machine Learning, Deep Learning\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              description: e.target.value\n            })),\n            rows: 3,\n            placeholder: \"Describe what this sub-domain covers...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this), \" \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 66\n          }, this), parent && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Parent SubDomain:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), \" \", parent.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), \" \", getLevel()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading,\n            children: loading ? 'Saving...' : 'Save SubDomain'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 566,\n    columnNumber: 5\n  }, this);\n};\n_s3(SubDomainModal, \"GK/DCXfCNFb5ohLoW+l6KsTmPCs=\");\n_c3 = SubDomainModal;\nexport default SubDomainManagement;\n\n// // src/components/domains/SubDomainManagement.js - NEW FILE\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiChevronDown,\n//   FiChevronRight,\n//   FiFolder,\n//   FiFolderPlus,\n//   FiFileText,\n//   FiArrowLeft,\n//   FiMoreVertical,\n//   FiMove,\n//   FiTarget\n// } from 'react-icons/fi';\n\n// const SubDomainManagement = () => {\n//   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n//   const { domainId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [domain, setDomain] = useState(null);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingSubDomain, setEditingSubDomain] = useState(null);\n//   const [selectedParent, setSelectedParent] = useState(null);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n//   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n//     domainId,\n//     domain: domain?.title,\n//     subDomainsCount: subDomains.length,\n//     loading,\n//     selectedParent: selectedParent?.title,\n//     expandedCount: expandedNodes.size\n//   });\n\n//   useEffect(() => {\n//     if (domainId) {\n//       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n//       fetchDomainAndSubDomains();\n//     }\n//   }, [domainId]);\n\n//   const fetchDomainAndSubDomains = async () => {\n//     try {\n//       setLoading(true);\n\n//       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n//       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n//       // Fetch domain details and hierarchy\n//       const [domainResponse, hierarchyResponse] = await Promise.all([\n//         authService.getDomains({ id: domainId }),\n//         authService.getDomainHierarchy(domainId)\n//       ]);\n\n//       console.log('✅ SUBDOMAIN FETCH - Domain response:', domainResponse.data);\n//       console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n//       const domainData = domainResponse.data?.domains?.[0] || \n//                         domainResponse.data?.data?.domains?.[0] || \n//                         domainResponse.data;\n\n//       const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n\n//       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n//       console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy:', hierarchyData);\n\n//       setDomain(domainData);\n//       setSubDomains(hierarchyData?.subDomains || []);\n\n//       // Auto-expand first level\n//       if (hierarchyData?.subDomains?.length > 0) {\n//         const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n//         setExpandedNodes(new Set(firstLevelIds));\n//         console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n//       }\n\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n//       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n//       toast.error('Failed to fetch sub-domains');\n//     } finally {\n//       setLoading(false);\n//       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n//     }\n//   };\n\n//   const handleAddSubDomain = (parent = null) => {\n//     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n//     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n//     setSelectedParent(parent);\n//     setEditingSubDomain(null);\n//     setShowAddModal(true);\n\n//     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n//       showAddModal: true, \n//       selectedParent: parent?.title,\n//       editingSubDomain: null \n//     });\n//   };\n\n//   const handleEditSubDomain = (subDomain) => {\n//     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n//     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n//     setSelectedParent(null);\n//     setEditingSubDomain(subDomain);\n//     setShowAddModal(true);\n//   };\n\n//   const handleDeleteSubDomain = async (subDomain) => {\n//     const hasChildren = subDomain.children && subDomain.children.length > 0;\n//     const hasProjects = subDomain.projectCount > 0;\n\n//     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n//     if (hasChildren) {\n//       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n//     }\n//     if (hasProjects) {\n//       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n//     }\n\n//     if (!window.confirm(confirmMessage)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n//       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n//       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n//       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n//       const response = await authService.deleteSubDomain(subDomain.id);\n\n//       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n\n//       toast.success('Sub-domain deleted successfully');\n//       fetchDomainAndSubDomains();\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n//       toast.error('Failed to delete sub-domain');\n//     }\n//   };\n\n//   const toggleExpanded = (nodeId) => {\n//     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   const isLeafNode = (subDomain) => {\n//     return !subDomain.children || subDomain.children.length === 0;\n//   };\n\n//   const getNodeLevel = (subDomain, level = 0) => {\n//     return level;\n//   };\n\n//   if (loading) {\n//     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading sub-domains...</p>\n//       </div>\n//     );\n//   }\n\n//   if (!domain) {\n//     console.log('❌ SUBDOMAIN MANAGEMENT - Domain not found');\n\n//     return (\n//       <div className=\"empty-state\">\n//         <h3>Domain not found</h3>\n//         <p>The requested domain could not be loaded.</p>\n//         <button \n//           className=\"primary-button\" \n//           onClick={() => navigate('/domains')}\n//         >\n//           <FiArrowLeft />\n//           Back to Domains\n//         </button>\n//       </div>\n//     );\n//   }\n\n//   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n//   return (\n//     <div className=\"subdomain-management\">\n//       {/* Header with Breadcrumb */}\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <div className=\"breadcrumb\">\n//             <button \n//               className=\"breadcrumb-link\"\n//               onClick={() => navigate('/domains')}\n//             >\n//               <FiArrowLeft />\n//               Domains\n//             </button>\n//             <span className=\"breadcrumb-separator\">/</span>\n//             <span className=\"breadcrumb-current\">{domain.title}</span>\n//           </div>\n//           <h1>SubDomain Management</h1>\n//           <p>Manage the hierarchical structure of {domain.title}</p>\n//         </div>\n//         <div className=\"header-actions\">\n//           <button \n//             className=\"primary-button\" \n//             onClick={() => handleAddSubDomain()}\n//           >\n//             <FiPlus />\n//             Add Root SubDomain\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Quick Guide */}\n//       <div className=\"quick-guide\">\n//         <h3>How to Add SubDomains:</h3>\n//         <div className=\"guide-steps\">\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">1</span>\n//             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">2</span>\n//             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">3</span>\n//             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domain Info Card */}\n//       <div className=\"domain-info-card\">\n//         <div className=\"domain-icon\">\n//           <FiFolder />\n//         </div>\n//         <div className=\"domain-details\">\n//           <h3>{domain.title}</h3>\n//           <p>{domain.description}</p>\n//           <div className=\"domain-stats\">\n//             <span className=\"stat-item\">\n//               <strong>{subDomains.length}</strong> root sub-domains\n//             </span>\n//             <span className=\"stat-item\">\n//               <strong>{domain.projectCount || 0}</strong> total projects\n//             </span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* SubDomain Tree */}\n//       <div className=\"subdomain-tree-container\">\n//         <div className=\"tree-header\">\n//           <h2>SubDomain Hierarchy</h2>\n//           <div className=\"tree-legend\">\n//             <span className=\"legend-item\">\n//               <FiFolder className=\"folder-icon\" />\n//               Has children\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiTarget className=\"leaf-icon\" />\n//               Leaf (can have projects)\n//             </span>\n//           </div>\n//         </div>\n\n//         {subDomains.length > 0 ? (\n//           <div className=\"subdomain-tree\">\n//             {subDomains.map((subDomain) => (\n//               <SubDomainNode\n//                 key={subDomain.id}\n//                 subDomain={subDomain}\n//                 level={0}\n//                 isExpanded={expandedNodes.has(subDomain.id)}\n//                 onToggleExpanded={toggleExpanded}\n//                 onEdit={handleEditSubDomain}\n//                 onDelete={handleDeleteSubDomain}\n//                 onAddChild={handleAddSubDomain}\n//                 expandedNodes={expandedNodes}\n//               />\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"empty-tree-state\">\n//             <FiFolderPlus size={64} />\n//             <h3>No SubDomains Yet</h3>\n//             <p>Start organizing your {domain.title} projects by creating subdomains</p>\n//             <div className=\"empty-state-examples\">\n//               <h4>Example Structure:</h4>\n//               <div className=\"example-tree\">\n//                 <div className=\"example-item\">📂 Machine Learning</div>\n//                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n//                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n//                 <div className=\"example-item\">🎯 Data Science</div>\n//               </div>\n//             </div>\n//             <div className=\"empty-state-actions\">\n//               <button \n//                 className=\"primary-button large\" \n//                 onClick={() => handleAddSubDomain()}\n//               >\n//                 <FiPlus />\n//                 Create Your First SubDomain\n//               </button>\n//               <p className=\"help-text\">\n//                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit Modal */}\n//       {showAddModal && (\n//         <SubDomainModal\n//           subDomain={editingSubDomain}\n//           parent={selectedParent}\n//           domain={domain}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//           }}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Node Component\n// const SubDomainNode = ({ \n//   subDomain, \n//   level, \n//   isExpanded, \n//   onToggleExpanded, \n//   onEdit, \n//   onDelete, \n//   onAddChild,\n//   expandedNodes \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n//   const hasChildren = subDomain.children && subDomain.children.length > 0;\n//   const isLeaf = !hasChildren;\n\n//   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n//     title: subDomain.title,\n//     level,\n//     hasChildren,\n//     isLeaf,\n//     isExpanded,\n//     projectCount: subDomain.projectCount\n//   });\n\n//   return (\n//     <div className={`subdomain-node level-${level}`}>\n//       <div className=\"node-content\">\n//         <div className=\"node-main\">\n//           {hasChildren ? (\n//             <button \n//               className=\"expand-button\"\n//               onClick={() => onToggleExpanded(subDomain.id)}\n//             >\n//               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n//             </button>\n//           ) : (\n//             <div className=\"expand-placeholder\" />\n//           )}\n\n//           <div className=\"node-icon\">\n//             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n//           </div>\n\n//           <div className=\"node-info\">\n//             <h4 className=\"node-title\">{subDomain.title}</h4>\n//             <p className=\"node-description\">{subDomain.description}</p>\n//             <div className=\"node-stats\">\n//               {hasChildren && (\n//                 <span className=\"stat-badge\">\n//                   {subDomain.children.length} sub-domains\n//                 </span>\n//               )}\n//               {subDomain.projectCount > 0 && (\n//                 <span className=\"stat-badge projects\">\n//                   {subDomain.projectCount} projects\n//                 </span>\n//               )}\n//               {isLeaf && (\n//                 <span className=\"stat-badge leaf\">\n//                   Can have projects\n//                 </span>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"node-actions\">\n//           <button \n//             className=\"action-button add\" \n//             onClick={() => onAddChild(subDomain)}\n//             title={`Add child subdomain under \"${subDomain.title}\"`}\n//           >\n//             <FiPlus />\n//           </button>\n//           <div className=\"action-menu\">\n//             <button \n//               onClick={() => setShowMenu(!showMenu)}\n//               title=\"More actions\"\n//             >\n//               <FiMoreVertical />\n//             </button>\n//             {showMenu && (\n//               <div className=\"dropdown-menu\">\n//                 <button onClick={() => onEdit(subDomain)}>\n//                   <FiEdit /> Edit\n//                 </button>\n//                 <button onClick={() => onAddChild(subDomain)}>\n//                   <FiPlus /> Add Child SubDomain\n//                 </button>\n//                 <button onClick={() => onDelete(subDomain)} className=\"danger\">\n//                   <FiTrash2 /> Delete\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Children */}\n//       {hasChildren && isExpanded && (\n//         <div className=\"node-children\">\n//           {subDomain.children.map((child) => (\n//             <SubDomainNode\n//               key={child.id}\n//               subDomain={child}\n//               level={level + 1}\n//               isExpanded={expandedNodes.has(child.id)}\n//               onToggleExpanded={onToggleExpanded}\n//               onEdit={onEdit}\n//               onDelete={onDelete}\n//               onAddChild={onAddChild}\n//               expandedNodes={expandedNodes}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Modal Component\n// const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: subDomain?.title || '',\n//     description: subDomain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('📝 SUBDOMAIN MODAL - Props:', {\n//     isEditing: !!subDomain,\n//     parentTitle: parent?.title,\n//     domainTitle: domain?.title,\n//     formData\n//   });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       const requestData = {\n//         ...formData,\n//         domainId: domain.id,\n//         parentId: parent?.id || null\n//       };\n\n//       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n//       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n//       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n//       if (subDomain) {\n//         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n//         const response = await authService.updateSubDomain(subDomain.id, requestData);\n//         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n//         toast.success('Sub-domain updated successfully');\n//       } else {\n//         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n//         const response = await authService.createSubDomain(requestData);\n//         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n//         toast.success('Sub-domain created successfully');\n//       }\n\n//       onSave();\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n//       toast.error('Failed to save sub-domain');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const getModalTitle = () => {\n//     if (subDomain) {\n//       return `Edit SubDomain: ${subDomain.title}`;\n//     }\n//     if (parent) {\n//       return `Add SubDomain under: ${parent.title}`;\n//     }\n//     return `Add Root SubDomain in: ${domain.title}`;\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{getModalTitle()}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>SubDomain Title</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"e.g., Machine Learning, Deep Learning\"\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//               placeholder=\"Describe what this sub-domain covers...\"\n//             />\n//           </div>\n\n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain.title}<br />\n//             {parent && (\n//               <>\n//                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n//               </>\n//             )}\n//             <strong>Level:</strong> {parent ? `Level ${getLevel(parent) + 1}` : 'Root Level'}\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Saving...' : 'Save SubDomain'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Helper function to get level\n// const getLevel = (subDomain, level = 0) => {\n//   // This would need to be calculated based on the hierarchy\n//   return level + 1;\n// };\n\n// export default SubDomainManagement;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SubDomainManagement\");\n$RefreshReg$(_c2, \"SubDomainNode\");\n$RefreshReg$(_c3, \"SubDomainModal\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","authService","toast","FiPlus","FiEdit","FiTrash2","FiChevronDown","FiChevronRight","FiFolder","FiFolderPlus","FiFileText","FiArrowLeft","FiMoreVertical","FiMove","FiTarget","jsxDEV","_jsxDEV","Fragment","_Fragment","SubDomainManagement","_s","console","log","domainId","navigate","domain","setDomain","subDomains","setSubDomains","loading","setLoading","showAddModal","setShowAddModal","editingSubDomain","setEditingSubDomain","selectedParent","setSelectedParent","expandedNodes","setExpandedNodes","Set","title","subDomainsCount","length","expandedCount","size","fetchDomainAndSubDomains","_domainsResponse$data","_domainsResponse$data2","_domainsResponse$data3","domainsResponse","getDomains","id","data","domainData","domains","find","d","Array","isArray","description","projectCount","_hierarchyResponse$da","_hierarchyData$subDom","hierarchyResponse","getDomainHierarchy","hierarchyData","firstLevelIds","map","sd","hierarchyError","error","response","handleAddSubDomain","parent","handleEditSubDomain","subDomain","handleDeleteSubDomain","hasChildren","children","hasProjects","confirmMessage","window","confirm","deleteSubDomain","success","toggleExpanded","nodeId","newExpanded","has","delete","add","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SubDomainNode","level","isExpanded","onToggleExpanded","onEdit","onDelete","onAddChild","SubDomainModal","onClose","onSave","_c","_s2","showMenu","setShowMenu","isLeaf","child","_c2","_s3","formData","setFormData","isEditing","parentTitle","domainTitle","handleSubmit","e","preventDefault","requestData","parentId","updateSubDomain","createSubDomain","getModalTitle","getLevel","onSubmit","type","value","onChange","prev","target","placeholder","required","rows","disabled","_c3","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/SubDomainManagement.js"],"sourcesContent":["// src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport {\n  FiPlus,\n  FiEdit,\n  FiTrash2,\n  FiChevronDown,\n  FiChevronRight,\n  FiFolder,\n  FiFolderPlus,\n  FiFileText,\n  FiArrowLeft,\n  FiMoreVertical,\n  FiMove,\n  FiTarget\n} from 'react-icons/fi';\n\nconst SubDomainManagement = () => {\n  console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n  const { domainId } = useParams();\n  const navigate = useNavigate();\n  \n  const [domain, setDomain] = useState(null);\n  const [subDomains, setSubDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSubDomain, setEditingSubDomain] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n  console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n    domainId,\n    domain: domain?.title,\n    subDomainsCount: subDomains.length,\n    loading,\n    selectedParent: selectedParent?.title,\n    expandedCount: expandedNodes.size\n  });\n\n  useEffect(() => {\n    if (domainId) {\n      console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n      fetchDomainAndSubDomains();\n    }\n  }, [domainId]);\n\n  const fetchDomainAndSubDomains = async () => {\n    try {\n      setLoading(true);\n      \n      console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n      console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n      // First, let's try to get domain details\n      console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n      const domainsResponse = await authService.getDomains({ id: domainId });\n      console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n      // Extract domain from response\n      let domainData = null;\n      if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n        domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n      } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n        domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n      } else if (Array.isArray(domainsResponse.data)) {\n        domainData = domainsResponse.data.find(d => d.id == domainId);\n      }\n      \n      console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n      // If we don't have domain data, create a placeholder\n      if (!domainData) {\n        console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n        domainData = {\n          id: domainId,\n          title: `Domain ${domainId}`,\n          description: 'Loading domain details...',\n          projectCount: 0\n        };\n      }\n      \n      setDomain(domainData);\n      \n      // Try to get hierarchy if domain exists\n      try {\n        console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n        const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n        console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n        const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n        console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n        setSubDomains(hierarchyData?.subDomains || []);\n        \n        // Auto-expand first level\n        if (hierarchyData?.subDomains?.length > 0) {\n          const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n          setExpandedNodes(new Set(firstLevelIds));\n          console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n        }\n      } catch (hierarchyError) {\n        console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n        setSubDomains([]);\n      }\n      \n    } catch (error) {\n      console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n      console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n      toast.error('Failed to fetch domain information');\n      \n      // Create fallback domain\n      setDomain({\n        id: domainId,\n        title: `Domain ${domainId}`,\n        description: 'Error loading domain details',\n        projectCount: 0\n      });\n      setSubDomains([]);\n    } finally {\n      setLoading(false);\n      console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n    }\n  };\n\n  const handleAddSubDomain = (parent = null) => {\n    console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n    console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n    setSelectedParent(parent);\n    setEditingSubDomain(null);\n    setShowAddModal(true);\n    \n    console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n      showAddModal: true, \n      selectedParent: parent?.title,\n      editingSubDomain: null \n    });\n  };\n\n  const handleEditSubDomain = (subDomain) => {\n    console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n    console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n    setSelectedParent(null);\n    setEditingSubDomain(subDomain);\n    setShowAddModal(true);\n  };\n\n  const handleDeleteSubDomain = async (subDomain) => {\n    const hasChildren = subDomain.children && subDomain.children.length > 0;\n    const hasProjects = subDomain.projectCount > 0;\n    \n    let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n    if (hasChildren) {\n      confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n    }\n    if (hasProjects) {\n      confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n    }\n    \n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n\n    try {\n      console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n      console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n      console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n      console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n      const response = await authService.deleteSubDomain(subDomain.id);\n      \n      console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n      toast.success('Sub-domain deleted successfully');\n      fetchDomainAndSubDomains();\n    } catch (error) {\n      console.error('❌ SUBDOMAIN DELETE - Error:', error);\n      toast.error('Failed to delete sub-domain');\n    }\n  };\n\n  const toggleExpanded = (nodeId) => {\n    console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n      console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n    } else {\n      newExpanded.add(nodeId);\n      console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  if (loading) {\n    console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading sub-domains...</p>\n      </div>\n    );\n  }\n\n  console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n  return (\n    <div className=\"subdomain-management\">\n      {/* Header with Breadcrumb */}\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <div className=\"breadcrumb\">\n            <button \n              className=\"breadcrumb-link\"\n              onClick={() => navigate('/domains')}\n            >\n              <FiArrowLeft />\n              Domains\n            </button>\n            <span className=\"breadcrumb-separator\">/</span>\n            <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n          </div>\n          <h1>SubDomain Management</h1>\n          <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            className=\"primary-button\" \n            onClick={() => handleAddSubDomain()}\n          >\n            <FiPlus />\n            Add Root SubDomain\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Guide */}\n      <div className=\"quick-guide\">\n        <h3>How to Build Your SubDomain Hierarchy:</h3>\n        <div className=\"guide-steps\">\n          <div className=\"guide-step\">\n            <span className=\"step-number\">1</span>\n            <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">2</span>\n            <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">3</span>\n            <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Domain Info Card */}\n      {domain && (\n        <div className=\"domain-info-card\">\n          <div className=\"domain-icon\">\n            <FiFolder />\n          </div>\n          <div className=\"domain-details\">\n            <h3>{domain.title}</h3>\n            <p>{domain.description}</p>\n            <div className=\"domain-stats\">\n              <span className=\"stat-item\">\n                <strong>{subDomains.length}</strong> root sub-domains\n              </span>\n              <span className=\"stat-item\">\n                <strong>{domain.projectCount || 0}</strong> total projects\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* SubDomain Tree */}\n      <div className=\"subdomain-tree-container\">\n        <div className=\"tree-header\">\n          <h2>SubDomain Hierarchy</h2>\n          <div className=\"tree-legend\">\n            <span className=\"legend-item\">\n              <FiFolder className=\"folder-icon\" />\n              Has children\n            </span>\n            <span className=\"legend-item\">\n              <FiTarget className=\"leaf-icon\" />\n              Leaf (can have projects)\n            </span>\n          </div>\n        </div>\n\n        {subDomains.length > 0 ? (\n          <div className=\"subdomain-tree\">\n            {subDomains.map((subDomain) => (\n              <SubDomainNode\n                key={subDomain.id}\n                subDomain={subDomain}\n                level={0}\n                isExpanded={expandedNodes.has(subDomain.id)}\n                onToggleExpanded={toggleExpanded}\n                onEdit={handleEditSubDomain}\n                onDelete={handleDeleteSubDomain}\n                onAddChild={handleAddSubDomain}\n                expandedNodes={expandedNodes}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"empty-tree-state\">\n            <FiFolderPlus size={64} />\n            <h3>No SubDomains Yet</h3>\n            <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n            <div className=\"empty-state-examples\">\n              <h4>Example Structure:</h4>\n              <div className=\"example-tree\">\n                <div className=\"example-item\">📂 Machine Learning</div>\n                <div className=\"example-item nested\">🎯 Deep Learning</div>\n                <div className=\"example-item nested\">🎯 Computer Vision</div>\n                <div className=\"example-item\">🎯 Data Science</div>\n              </div>\n            </div>\n            <div className=\"empty-state-actions\">\n              <button \n                className=\"primary-button large\" \n                onClick={() => handleAddSubDomain()}\n              >\n                <FiPlus />\n                Create Your First SubDomain\n              </button>\n              <p className=\"help-text\">\n                💡 Tip: Start with broad categories, then add specific subcategories as needed\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add/Edit Modal */}\n      {showAddModal && (\n        <SubDomainModal\n          subDomain={editingSubDomain}\n          parent={selectedParent}\n          domain={domain}\n          onClose={() => {\n            setShowAddModal(false);\n            setEditingSubDomain(null);\n            setSelectedParent(null);\n          }}\n          onSave={() => {\n            setShowAddModal(false);\n            setEditingSubDomain(null);\n            setSelectedParent(null);\n            fetchDomainAndSubDomains();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\n// SubDomain Node Component\nconst SubDomainNode = ({ \n  subDomain, \n  level, \n  isExpanded, \n  onToggleExpanded, \n  onEdit, \n  onDelete, \n  onAddChild,\n  expandedNodes \n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const hasChildren = subDomain.children && subDomain.children.length > 0;\n  const isLeaf = !hasChildren;\n\n  console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n    title: subDomain.title,\n    level,\n    hasChildren,\n    isLeaf,\n    isExpanded,\n    projectCount: subDomain.projectCount\n  });\n\n  return (\n    <div className={`subdomain-node level-${level}`}>\n      <div className=\"node-content\">\n        <div className=\"node-main\">\n          {hasChildren ? (\n            <button \n              className=\"expand-button\"\n              onClick={() => onToggleExpanded(subDomain.id)}\n            >\n              {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n            </button>\n          ) : (\n            <div className=\"expand-placeholder\" />\n          )}\n          \n          <div className=\"node-icon\">\n            {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n          </div>\n          \n          <div className=\"node-info\">\n            <h4 className=\"node-title\">{subDomain.title}</h4>\n            <p className=\"node-description\">{subDomain.description}</p>\n            <div className=\"node-stats\">\n              {hasChildren && (\n                <span className=\"stat-badge\">\n                  {subDomain.children.length} sub-domains\n                </span>\n              )}\n              {subDomain.projectCount > 0 && (\n                <span className=\"stat-badge projects\">\n                  {subDomain.projectCount} projects\n                </span>\n              )}\n              {isLeaf && (\n                <span className=\"stat-badge leaf\">\n                  Can have projects\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"node-actions\">\n          <button \n            className=\"action-button add\" \n            onClick={() => onAddChild(subDomain)}\n            title={`Add child subdomain under \"${subDomain.title}\"`}\n          >\n            <FiPlus />\n          </button>\n          <div className=\"action-menu\">\n            <button \n              onClick={() => setShowMenu(!showMenu)}\n              title=\"More actions\"\n            >\n              <FiMoreVertical />\n            </button>\n            {showMenu && (\n              <div className=\"dropdown-menu\">\n                <button onClick={() => {\n                  onEdit(subDomain);\n                  setShowMenu(false);\n                }}>\n                  <FiEdit /> Edit\n                </button>\n                <button onClick={() => {\n                  onAddChild(subDomain);\n                  setShowMenu(false);\n                }}>\n                  <FiPlus /> Add Child SubDomain\n                </button>\n                <button onClick={() => {\n                  onDelete(subDomain);\n                  setShowMenu(false);\n                }} className=\"danger\">\n                  <FiTrash2 /> Delete\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* Children */}\n      {hasChildren && isExpanded && (\n        <div className=\"node-children\">\n          {subDomain.children.map((child) => (\n            <SubDomainNode\n              key={child.id}\n              subDomain={child}\n              level={level + 1}\n              isExpanded={expandedNodes.has(child.id)}\n              onToggleExpanded={onToggleExpanded}\n              onEdit={onEdit}\n              onDelete={onDelete}\n              onAddChild={onAddChild}\n              expandedNodes={expandedNodes}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// SubDomain Modal Component\nconst SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: subDomain?.title || '',\n    description: subDomain?.description || ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  console.log('📝 SUBDOMAIN MODAL - Props:', {\n    isEditing: !!subDomain,\n    parentTitle: parent?.title,\n    domainTitle: domain?.title,\n    formData\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const requestData = {\n        ...formData,\n        domainId: domain.id,\n        parentId: parent?.id || null\n      };\n\n      console.log('💾 SUBDOMAIN SAVE - Starting API call');\n      console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n      console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n      if (subDomain) {\n        console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n        const response = await authService.updateSubDomain(subDomain.id, requestData);\n        console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n        toast.success('Sub-domain updated successfully');\n      } else {\n        console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n        const response = await authService.createSubDomain(requestData);\n        console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n        toast.success('Sub-domain created successfully');\n      }\n\n      onSave();\n    } catch (error) {\n      console.error('❌ SUBDOMAIN SAVE - Error:', error);\n      toast.error('Failed to save sub-domain');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getModalTitle = () => {\n    if (subDomain) {\n      return `Edit SubDomain: ${subDomain.title}`;\n    }\n    if (parent) {\n      return `Add SubDomain under: ${parent.title}`;\n    }\n    return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n  };\n\n  const getLevel = () => {\n    if (!parent) return 'Root Level';\n    // This is a simplified level calculation\n    return `Level ${(parent.level || 0) + 1}`;\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <h2>{getModalTitle()}</h2>\n          <button onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>SubDomain Title</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              placeholder=\"e.g., Machine Learning, Deep Learning\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Description (Optional)</label>\n            <textarea\n              value={formData.description}\n              onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              rows={3}\n              placeholder=\"Describe what this sub-domain covers...\"\n            />\n          </div>\n          \n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n            {parent && (\n              <>\n                <strong>Parent SubDomain:</strong> {parent.title}<br />\n              </>\n            )}\n            <strong>Level:</strong> {getLevel()}\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n              {loading ? 'Saving...' : 'Save SubDomain'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SubDomainManagement;\n\n\n// // src/components/domains/SubDomainManagement.js - NEW FILE\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiChevronDown,\n//   FiChevronRight,\n//   FiFolder,\n//   FiFolderPlus,\n//   FiFileText,\n//   FiArrowLeft,\n//   FiMoreVertical,\n//   FiMove,\n//   FiTarget\n// } from 'react-icons/fi';\n\n// const SubDomainManagement = () => {\n//   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n//   const { domainId } = useParams();\n//   const navigate = useNavigate();\n  \n//   const [domain, setDomain] = useState(null);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingSubDomain, setEditingSubDomain] = useState(null);\n//   const [selectedParent, setSelectedParent] = useState(null);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n//   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n//     domainId,\n//     domain: domain?.title,\n//     subDomainsCount: subDomains.length,\n//     loading,\n//     selectedParent: selectedParent?.title,\n//     expandedCount: expandedNodes.size\n//   });\n\n//   useEffect(() => {\n//     if (domainId) {\n//       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n//       fetchDomainAndSubDomains();\n//     }\n//   }, [domainId]);\n\n//   const fetchDomainAndSubDomains = async () => {\n//     try {\n//       setLoading(true);\n      \n//       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n//       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n//       // Fetch domain details and hierarchy\n//       const [domainResponse, hierarchyResponse] = await Promise.all([\n//         authService.getDomains({ id: domainId }),\n//         authService.getDomainHierarchy(domainId)\n//       ]);\n      \n//       console.log('✅ SUBDOMAIN FETCH - Domain response:', domainResponse.data);\n//       console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n      \n//       const domainData = domainResponse.data?.domains?.[0] || \n//                         domainResponse.data?.data?.domains?.[0] || \n//                         domainResponse.data;\n      \n//       const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n      \n//       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n//       console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy:', hierarchyData);\n      \n//       setDomain(domainData);\n//       setSubDomains(hierarchyData?.subDomains || []);\n      \n//       // Auto-expand first level\n//       if (hierarchyData?.subDomains?.length > 0) {\n//         const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n//         setExpandedNodes(new Set(firstLevelIds));\n//         console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n//       }\n      \n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n//       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n//       toast.error('Failed to fetch sub-domains');\n//     } finally {\n//       setLoading(false);\n//       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n//     }\n//   };\n\n//   const handleAddSubDomain = (parent = null) => {\n//     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n//     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n//     setSelectedParent(parent);\n//     setEditingSubDomain(null);\n//     setShowAddModal(true);\n    \n//     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n//       showAddModal: true, \n//       selectedParent: parent?.title,\n//       editingSubDomain: null \n//     });\n//   };\n\n//   const handleEditSubDomain = (subDomain) => {\n//     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n//     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n//     setSelectedParent(null);\n//     setEditingSubDomain(subDomain);\n//     setShowAddModal(true);\n//   };\n\n//   const handleDeleteSubDomain = async (subDomain) => {\n//     const hasChildren = subDomain.children && subDomain.children.length > 0;\n//     const hasProjects = subDomain.projectCount > 0;\n    \n//     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n//     if (hasChildren) {\n//       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n//     }\n//     if (hasProjects) {\n//       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n//     }\n    \n//     if (!window.confirm(confirmMessage)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n//       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n//       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n//       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n//       const response = await authService.deleteSubDomain(subDomain.id);\n      \n//       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n//       toast.success('Sub-domain deleted successfully');\n//       fetchDomainAndSubDomains();\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n//       toast.error('Failed to delete sub-domain');\n//     }\n//   };\n\n//   const toggleExpanded = (nodeId) => {\n//     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   const isLeafNode = (subDomain) => {\n//     return !subDomain.children || subDomain.children.length === 0;\n//   };\n\n//   const getNodeLevel = (subDomain, level = 0) => {\n//     return level;\n//   };\n\n//   if (loading) {\n//     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading sub-domains...</p>\n//       </div>\n//     );\n//   }\n\n//   if (!domain) {\n//     console.log('❌ SUBDOMAIN MANAGEMENT - Domain not found');\n    \n//     return (\n//       <div className=\"empty-state\">\n//         <h3>Domain not found</h3>\n//         <p>The requested domain could not be loaded.</p>\n//         <button \n//           className=\"primary-button\" \n//           onClick={() => navigate('/domains')}\n//         >\n//           <FiArrowLeft />\n//           Back to Domains\n//         </button>\n//       </div>\n//     );\n//   }\n\n//   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n//   return (\n//     <div className=\"subdomain-management\">\n//       {/* Header with Breadcrumb */}\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <div className=\"breadcrumb\">\n//             <button \n//               className=\"breadcrumb-link\"\n//               onClick={() => navigate('/domains')}\n//             >\n//               <FiArrowLeft />\n//               Domains\n//             </button>\n//             <span className=\"breadcrumb-separator\">/</span>\n//             <span className=\"breadcrumb-current\">{domain.title}</span>\n//           </div>\n//           <h1>SubDomain Management</h1>\n//           <p>Manage the hierarchical structure of {domain.title}</p>\n//         </div>\n//         <div className=\"header-actions\">\n//           <button \n//             className=\"primary-button\" \n//             onClick={() => handleAddSubDomain()}\n//           >\n//             <FiPlus />\n//             Add Root SubDomain\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Quick Guide */}\n//       <div className=\"quick-guide\">\n//         <h3>How to Add SubDomains:</h3>\n//         <div className=\"guide-steps\">\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">1</span>\n//             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">2</span>\n//             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">3</span>\n//             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domain Info Card */}\n//       <div className=\"domain-info-card\">\n//         <div className=\"domain-icon\">\n//           <FiFolder />\n//         </div>\n//         <div className=\"domain-details\">\n//           <h3>{domain.title}</h3>\n//           <p>{domain.description}</p>\n//           <div className=\"domain-stats\">\n//             <span className=\"stat-item\">\n//               <strong>{subDomains.length}</strong> root sub-domains\n//             </span>\n//             <span className=\"stat-item\">\n//               <strong>{domain.projectCount || 0}</strong> total projects\n//             </span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* SubDomain Tree */}\n//       <div className=\"subdomain-tree-container\">\n//         <div className=\"tree-header\">\n//           <h2>SubDomain Hierarchy</h2>\n//           <div className=\"tree-legend\">\n//             <span className=\"legend-item\">\n//               <FiFolder className=\"folder-icon\" />\n//               Has children\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiTarget className=\"leaf-icon\" />\n//               Leaf (can have projects)\n//             </span>\n//           </div>\n//         </div>\n\n//         {subDomains.length > 0 ? (\n//           <div className=\"subdomain-tree\">\n//             {subDomains.map((subDomain) => (\n//               <SubDomainNode\n//                 key={subDomain.id}\n//                 subDomain={subDomain}\n//                 level={0}\n//                 isExpanded={expandedNodes.has(subDomain.id)}\n//                 onToggleExpanded={toggleExpanded}\n//                 onEdit={handleEditSubDomain}\n//                 onDelete={handleDeleteSubDomain}\n//                 onAddChild={handleAddSubDomain}\n//                 expandedNodes={expandedNodes}\n//               />\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"empty-tree-state\">\n//             <FiFolderPlus size={64} />\n//             <h3>No SubDomains Yet</h3>\n//             <p>Start organizing your {domain.title} projects by creating subdomains</p>\n//             <div className=\"empty-state-examples\">\n//               <h4>Example Structure:</h4>\n//               <div className=\"example-tree\">\n//                 <div className=\"example-item\">📂 Machine Learning</div>\n//                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n//                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n//                 <div className=\"example-item\">🎯 Data Science</div>\n//               </div>\n//             </div>\n//             <div className=\"empty-state-actions\">\n//               <button \n//                 className=\"primary-button large\" \n//                 onClick={() => handleAddSubDomain()}\n//               >\n//                 <FiPlus />\n//                 Create Your First SubDomain\n//               </button>\n//               <p className=\"help-text\">\n//                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit Modal */}\n//       {showAddModal && (\n//         <SubDomainModal\n//           subDomain={editingSubDomain}\n//           parent={selectedParent}\n//           domain={domain}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//           }}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Node Component\n// const SubDomainNode = ({ \n//   subDomain, \n//   level, \n//   isExpanded, \n//   onToggleExpanded, \n//   onEdit, \n//   onDelete, \n//   onAddChild,\n//   expandedNodes \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n//   const hasChildren = subDomain.children && subDomain.children.length > 0;\n//   const isLeaf = !hasChildren;\n\n//   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n//     title: subDomain.title,\n//     level,\n//     hasChildren,\n//     isLeaf,\n//     isExpanded,\n//     projectCount: subDomain.projectCount\n//   });\n\n//   return (\n//     <div className={`subdomain-node level-${level}`}>\n//       <div className=\"node-content\">\n//         <div className=\"node-main\">\n//           {hasChildren ? (\n//             <button \n//               className=\"expand-button\"\n//               onClick={() => onToggleExpanded(subDomain.id)}\n//             >\n//               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n//             </button>\n//           ) : (\n//             <div className=\"expand-placeholder\" />\n//           )}\n          \n//           <div className=\"node-icon\">\n//             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n//           </div>\n          \n//           <div className=\"node-info\">\n//             <h4 className=\"node-title\">{subDomain.title}</h4>\n//             <p className=\"node-description\">{subDomain.description}</p>\n//             <div className=\"node-stats\">\n//               {hasChildren && (\n//                 <span className=\"stat-badge\">\n//                   {subDomain.children.length} sub-domains\n//                 </span>\n//               )}\n//               {subDomain.projectCount > 0 && (\n//                 <span className=\"stat-badge projects\">\n//                   {subDomain.projectCount} projects\n//                 </span>\n//               )}\n//               {isLeaf && (\n//                 <span className=\"stat-badge leaf\">\n//                   Can have projects\n//                 </span>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n        \n//         <div className=\"node-actions\">\n//           <button \n//             className=\"action-button add\" \n//             onClick={() => onAddChild(subDomain)}\n//             title={`Add child subdomain under \"${subDomain.title}\"`}\n//           >\n//             <FiPlus />\n//           </button>\n//           <div className=\"action-menu\">\n//             <button \n//               onClick={() => setShowMenu(!showMenu)}\n//               title=\"More actions\"\n//             >\n//               <FiMoreVertical />\n//             </button>\n//             {showMenu && (\n//               <div className=\"dropdown-menu\">\n//                 <button onClick={() => onEdit(subDomain)}>\n//                   <FiEdit /> Edit\n//                 </button>\n//                 <button onClick={() => onAddChild(subDomain)}>\n//                   <FiPlus /> Add Child SubDomain\n//                 </button>\n//                 <button onClick={() => onDelete(subDomain)} className=\"danger\">\n//                   <FiTrash2 /> Delete\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n      \n//       {/* Children */}\n//       {hasChildren && isExpanded && (\n//         <div className=\"node-children\">\n//           {subDomain.children.map((child) => (\n//             <SubDomainNode\n//               key={child.id}\n//               subDomain={child}\n//               level={level + 1}\n//               isExpanded={expandedNodes.has(child.id)}\n//               onToggleExpanded={onToggleExpanded}\n//               onEdit={onEdit}\n//               onDelete={onDelete}\n//               onAddChild={onAddChild}\n//               expandedNodes={expandedNodes}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Modal Component\n// const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: subDomain?.title || '',\n//     description: subDomain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('📝 SUBDOMAIN MODAL - Props:', {\n//     isEditing: !!subDomain,\n//     parentTitle: parent?.title,\n//     domainTitle: domain?.title,\n//     formData\n//   });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       const requestData = {\n//         ...formData,\n//         domainId: domain.id,\n//         parentId: parent?.id || null\n//       };\n\n//       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n//       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n//       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n//       if (subDomain) {\n//         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n//         const response = await authService.updateSubDomain(subDomain.id, requestData);\n//         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n//         toast.success('Sub-domain updated successfully');\n//       } else {\n//         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n//         const response = await authService.createSubDomain(requestData);\n//         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n//         toast.success('Sub-domain created successfully');\n//       }\n\n//       onSave();\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n//       toast.error('Failed to save sub-domain');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const getModalTitle = () => {\n//     if (subDomain) {\n//       return `Edit SubDomain: ${subDomain.title}`;\n//     }\n//     if (parent) {\n//       return `Add SubDomain under: ${parent.title}`;\n//     }\n//     return `Add Root SubDomain in: ${domain.title}`;\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{getModalTitle()}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>SubDomain Title</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"e.g., Machine Learning, Deep Learning\"\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//               placeholder=\"Describe what this sub-domain covers...\"\n//             />\n//           </div>\n          \n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain.title}<br />\n//             {parent && (\n//               <>\n//                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n//               </>\n//             )}\n//             <strong>Level:</strong> {parent ? `Level ${getLevel(parent) + 1}` : 'Root Level'}\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Saving...' : 'Save SubDomain'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Helper function to get level\n// const getLevel = (subDomain, level = 0) => {\n//   // This would need to be calculated based on the hierarchy\n//   return level + 1;\n// };\n\n// export default SubDomainManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}