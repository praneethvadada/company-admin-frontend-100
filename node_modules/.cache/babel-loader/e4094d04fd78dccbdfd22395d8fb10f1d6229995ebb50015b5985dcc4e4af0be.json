{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { authService } from '../services/authService';\nimport { cookieUtils } from '../utils/cookieUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const initializeAuth = useCallback(async () => {\n    console.log('üîç AuthContext: Starting authentication initialization');\n    try {\n      cookieUtils.debugCookies();\n      const token = cookieUtils.getToken();\n      const userData = cookieUtils.getUser();\n      console.log('üì¶ Auth data check:', {\n        hasToken: !!token,\n        hasUserData: !!userData,\n        tokenLength: token ? token.length : 0,\n        userDataKeys: userData ? Object.keys(userData) : []\n      });\n      if (token && userData) {\n        console.log('‚úÖ AuthContext: Found auth data in cookies, setting authenticated state');\n        authService.setAuthToken(token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        console.log('‚úÖ AuthContext: User authenticated from cookies:', userData);\n      } else {\n        console.log('‚ùå AuthContext: No valid auth data found in cookies');\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error('‚ùå AuthContext: Error initializing auth:', error);\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n    console.log('üîÑ AuthContext: Setting loading to false');\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    console.log('üîÑ AuthProvider: Component mounted, initializing authentication');\n    initializeAuth();\n  }, [initializeAuth]);\n  const login = async credentials => {\n    console.log('üîê AuthContext: Login attempt started');\n    try {\n      const response = await authService.login(credentials);\n      console.log('‚úÖ Login API Response - Full Structure:', response);\n      console.log('‚úÖ Response.data:', response.data);\n      console.log('‚úÖ Response.data keys:', Object.keys(response.data));\n\n      // Check different possible response structures\n      let token, userData;\n      if (response.data.token && response.data.user) {\n        token = response.data.token;\n        userData = response.data.user;\n      } else if (response.data.data && response.data.data.token && response.data.data.user) {\n        token = response.data.data.token;\n        userData = response.data.data.user;\n      } else if (response.data.accessToken || response.data.authToken) {\n        token = response.data.accessToken || response.data.authToken;\n        userData = response.data.userData || response.data.user || response.data.data;\n      } else {\n        // Try to find token-like fields\n        for (const key in response.data) {\n          const value = response.data[key];\n          if (typeof value === 'string' && value.length > 20) {\n            token = value;\n          }\n          if (typeof value === 'object' && value !== null && (value.id || value.email || value.name)) {\n            userData = value;\n          }\n        }\n      }\n      console.log('üîç Extracted data:', {\n        hasToken: !!token,\n        tokenPreview: token ? token.substring(0, 20) + '...' : 'None',\n        hasUserData: !!userData,\n        userData: userData\n      });\n      if (!token || !userData) {\n        console.error('‚ùå Could not extract token or user data from response');\n        return {\n          success: false,\n          message: 'Invalid login response structure'\n        };\n      }\n      cookieUtils.setToken(token);\n      cookieUtils.setUser(userData);\n      authService.setAuthToken(token);\n      setUser(userData);\n      setIsAuthenticated(true);\n      console.log('‚úÖ Login successful, user authenticated:', userData);\n      return {\n        success: true,\n        data: {\n          token,\n          user: userData\n        }\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('‚ùå Login failed:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const signup = async userData => {\n    console.log('üìù AuthContext: Signup attempt started');\n    try {\n      const response = await authService.signup(userData);\n      console.log('‚úÖ Signup API Response:', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('‚ùå Signup failed:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Signup failed'\n      };\n    }\n  };\n  const logout = () => {\n    console.log('üö™ AuthContext: Logout initiated');\n    cookieUtils.clearAuth();\n    authService.removeAuthToken();\n    setUser(null);\n    setIsAuthenticated(false);\n    authService.logout().catch(error => {\n      console.error('‚ùå Logout API call failed:', error);\n    });\n    console.log('‚úÖ Logout completed');\n  };\n\n  // Step 1: Request password change (sends OTP) - Based on your exact API\n  const changePassword = async passwordData => {\n    console.log('üîê AuthContext: Change password step 1 - Requesting OTP');\n    console.log('üì§ Change password request data:', {\n      currentPassword: '***',\n      newPassword: '***',\n      confirmPassword: '***'\n    });\n    try {\n      const response = await authService.changePassword(passwordData);\n      console.log('‚úÖ Change password step 1 - Full response:', response);\n      console.log('‚úÖ Response data:', response.data);\n\n      // Based on your API structure: { success: true, message: \"...\", data: { token: \"...\", message: \"...\", expiresIn: 600 } }\n      if (response.data.success) {\n        const {\n          data\n        } = response.data;\n        console.log('‚úÖ OTP sent successfully, token extracted:', {\n          hasToken: !!(data !== null && data !== void 0 && data.token),\n          tokenPreview: data !== null && data !== void 0 && data.token ? data.token.substring(0, 20) + '...' : 'None',\n          expiresIn: data === null || data === void 0 ? void 0 : data.expiresIn,\n          message: data === null || data === void 0 ? void 0 : data.message\n        });\n        return {\n          success: true,\n          data: {\n            token: data.token,\n            message: response.data.message,\n            expiresIn: data.expiresIn,\n            sentTo: (user === null || user === void 0 ? void 0 : user.email) || 'your registered email'\n          }\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message || 'Failed to send OTP'\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data, _error$response5, _error$response5$data;\n      console.error('‚ùå Change password step 1 failed:', error);\n      console.error('‚ùå Error response:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n\n      // Handle validation errors\n      if ((_error$response4 = error.response) !== null && _error$response4 !== void 0 && (_error$response4$data = _error$response4.data) !== null && _error$response4$data !== void 0 && _error$response4$data.errors) {\n        const validationErrors = error.response.data.errors;\n        const errorMessage = validationErrors.map(err => err.message).join(', ');\n        return {\n          success: false,\n          message: errorMessage,\n          validationErrors: validationErrors\n        };\n      }\n      return {\n        success: false,\n        message: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to send OTP. Please check your current password.'\n      };\n    }\n  };\n\n  // Step 2: Verify OTP and change password - Based on your exact API\n  const verifyPasswordChangeOTP = async otpData => {\n    console.log('üîê AuthContext: Change password step 2 - Verifying OTP');\n    console.log('üì§ OTP verification data:', {\n      hasToken: !!otpData.token,\n      tokenPreview: otpData.token ? otpData.token.substring(0, 20) + '...' : 'None',\n      hasOtp: !!otpData.otp\n    });\n\n    // Ensure we have all required fields\n    if (!otpData.otp) {\n      return {\n        success: false,\n        message: 'OTP is required'\n      };\n    }\n    if (!otpData.token) {\n      return {\n        success: false,\n        message: 'Token is missing. Please try again from the beginning.'\n      };\n    }\n    try {\n      const response = await authService.verifyPasswordChangeOTP({\n        token: otpData.token,\n        otp: otpData.otp\n      });\n      console.log('‚úÖ OTP verification response:', response.data);\n\n      // Based on your API structure: { success: true, message: \"Password changed successfully\" }\n      if (response.data.success) {\n        return {\n          success: true,\n          data: response.data\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message || 'Invalid OTP'\n        };\n      }\n    } catch (error) {\n      var _error$response6, _error$response7, _error$response7$data;\n      console.error('‚ùå OTP verification failed:', error);\n      console.error('‚ùå Error response:', (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data);\n      return {\n        success: false,\n        message: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Invalid OTP. Please try again.'\n      };\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout,\n    changePassword,\n    verifyPasswordChangeOTP\n  };\n  console.log('üîÑ AuthContext: Current state:', {\n    isAuthenticated,\n    hasUser: !!user,\n    loading,\n    userName: (user === null || user === void 0 ? void 0 : user.name) || 'None'\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"pnsvw7czjvmiFgw/Bh5bzhjzExE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","authService","cookieUtils","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","initializeAuth","console","log","debugCookies","token","getToken","userData","getUser","hasToken","hasUserData","tokenLength","length","userDataKeys","Object","keys","setAuthToken","error","login","credentials","response","data","accessToken","authToken","key","value","id","email","name","tokenPreview","substring","success","message","setToken","_error$response","_error$response$data","signup","_error$response2","_error$response2$data","logout","clearAuth","removeAuthToken","catch","changePassword","passwordData","currentPassword","newPassword","confirmPassword","expiresIn","sentTo","_error$response3","_error$response4","_error$response4$data","_error$response5","_error$response5$data","errors","validationErrors","errorMessage","map","err","join","verifyPasswordChangeOTP","otpData","hasOtp","otp","_error$response6","_error$response7","_error$response7$data","hasUser","userName","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { authService } from '../services/authService';\nimport { cookieUtils } from '../utils/cookieUtils';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const initializeAuth = useCallback(async () => {\n    console.log('üîç AuthContext: Starting authentication initialization');\n    \n    try {\n      cookieUtils.debugCookies();\n      \n      const token = cookieUtils.getToken();\n      const userData = cookieUtils.getUser();\n      \n      console.log('üì¶ Auth data check:', { \n        hasToken: !!token, \n        hasUserData: !!userData,\n        tokenLength: token ? token.length : 0,\n        userDataKeys: userData ? Object.keys(userData) : []\n      });\n      \n      if (token && userData) {\n        console.log('‚úÖ AuthContext: Found auth data in cookies, setting authenticated state');\n        authService.setAuthToken(token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        console.log('‚úÖ AuthContext: User authenticated from cookies:', userData);\n      } else {\n        console.log('‚ùå AuthContext: No valid auth data found in cookies');\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error('‚ùå AuthContext: Error initializing auth:', error);\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n    \n    console.log('üîÑ AuthContext: Setting loading to false');\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    console.log('üîÑ AuthProvider: Component mounted, initializing authentication');\n    initializeAuth();\n  }, [initializeAuth]);\n\n  const login = async (credentials) => {\n    console.log('üîê AuthContext: Login attempt started');\n    \n    try {\n      const response = await authService.login(credentials);\n      console.log('‚úÖ Login API Response - Full Structure:', response);\n      console.log('‚úÖ Response.data:', response.data);\n      console.log('‚úÖ Response.data keys:', Object.keys(response.data));\n      \n      // Check different possible response structures\n      let token, userData;\n      \n      if (response.data.token && response.data.user) {\n        token = response.data.token;\n        userData = response.data.user;\n      } else if (response.data.data && response.data.data.token && response.data.data.user) {\n        token = response.data.data.token;\n        userData = response.data.data.user;\n      } else if (response.data.accessToken || response.data.authToken) {\n        token = response.data.accessToken || response.data.authToken;\n        userData = response.data.userData || response.data.user || response.data.data;\n      } else {\n        // Try to find token-like fields\n        for (const key in response.data) {\n          const value = response.data[key];\n          if (typeof value === 'string' && value.length > 20) {\n            token = value;\n          }\n          if (typeof value === 'object' && value !== null && (value.id || value.email || value.name)) {\n            userData = value;\n          }\n        }\n      }\n      \n      console.log('üîç Extracted data:', {\n        hasToken: !!token,\n        tokenPreview: token ? token.substring(0, 20) + '...' : 'None',\n        hasUserData: !!userData,\n        userData: userData\n      });\n      \n      if (!token || !userData) {\n        console.error('‚ùå Could not extract token or user data from response');\n        return { success: false, message: 'Invalid login response structure' };\n      }\n      \n      cookieUtils.setToken(token);\n      cookieUtils.setUser(userData);\n      authService.setAuthToken(token);\n      setUser(userData);\n      setIsAuthenticated(true);\n      \n      console.log('‚úÖ Login successful, user authenticated:', userData);\n      return { success: true, data: { token, user: userData } };\n    } catch (error) {\n      console.error('‚ùå Login failed:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const signup = async (userData) => {\n    console.log('üìù AuthContext: Signup attempt started');\n    \n    try {\n      const response = await authService.signup(userData);\n      console.log('‚úÖ Signup API Response:', response.data);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('‚ùå Signup failed:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Signup failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    console.log('üö™ AuthContext: Logout initiated');\n    cookieUtils.clearAuth();\n    authService.removeAuthToken();\n    setUser(null);\n    setIsAuthenticated(false);\n    \n    authService.logout().catch(error => {\n      console.error('‚ùå Logout API call failed:', error);\n    });\n    \n    console.log('‚úÖ Logout completed');\n  };\n\n  // Step 1: Request password change (sends OTP) - Based on your exact API\n  const changePassword = async (passwordData) => {\n    console.log('üîê AuthContext: Change password step 1 - Requesting OTP');\n    console.log('üì§ Change password request data:', { \n      currentPassword: '***', \n      newPassword: '***',\n      confirmPassword: '***'\n    });\n    \n    try {\n      const response = await authService.changePassword(passwordData);\n      console.log('‚úÖ Change password step 1 - Full response:', response);\n      console.log('‚úÖ Response data:', response.data);\n      \n      // Based on your API structure: { success: true, message: \"...\", data: { token: \"...\", message: \"...\", expiresIn: 600 } }\n      if (response.data.success) {\n        const { data } = response.data;\n        console.log('‚úÖ OTP sent successfully, token extracted:', {\n          hasToken: !!data?.token,\n          tokenPreview: data?.token ? data.token.substring(0, 20) + '...' : 'None',\n          expiresIn: data?.expiresIn,\n          message: data?.message\n        });\n        \n        return { \n          success: true, \n          data: {\n            token: data.token,\n            message: response.data.message,\n            expiresIn: data.expiresIn,\n            sentTo: user?.email || 'your registered email'\n          }\n        };\n      } else {\n        return { \n          success: false, \n          message: response.data.message || 'Failed to send OTP' \n        };\n      }\n      \n    } catch (error) {\n      console.error('‚ùå Change password step 1 failed:', error);\n      console.error('‚ùå Error response:', error.response?.data);\n      \n      // Handle validation errors\n      if (error.response?.data?.errors) {\n        const validationErrors = error.response.data.errors;\n        const errorMessage = validationErrors.map(err => err.message).join(', ');\n        return { \n          success: false, \n          message: errorMessage,\n          validationErrors: validationErrors\n        };\n      }\n      \n      return { \n        success: false, \n        message: error.response?.data?.message || 'Failed to send OTP. Please check your current password.' \n      };\n    }\n  };\n\n  // Step 2: Verify OTP and change password - Based on your exact API\n  const verifyPasswordChangeOTP = async (otpData) => {\n    console.log('üîê AuthContext: Change password step 2 - Verifying OTP');\n    console.log('üì§ OTP verification data:', { \n      hasToken: !!otpData.token,\n      tokenPreview: otpData.token ? otpData.token.substring(0, 20) + '...' : 'None',\n      hasOtp: !!otpData.otp\n    });\n    \n    // Ensure we have all required fields\n    if (!otpData.otp) {\n      return { success: false, message: 'OTP is required' };\n    }\n    \n    if (!otpData.token) {\n      return { success: false, message: 'Token is missing. Please try again from the beginning.' };\n    }\n    \n    try {\n      const response = await authService.verifyPasswordChangeOTP({\n        token: otpData.token,\n        otp: otpData.otp\n      });\n      \n      console.log('‚úÖ OTP verification response:', response.data);\n      \n      // Based on your API structure: { success: true, message: \"Password changed successfully\" }\n      if (response.data.success) {\n        return { \n          success: true, \n          data: response.data \n        };\n      } else {\n        return { \n          success: false, \n          message: response.data.message || 'Invalid OTP' \n        };\n      }\n      \n    } catch (error) {\n      console.error('‚ùå OTP verification failed:', error);\n      console.error('‚ùå Error response:', error.response?.data);\n      \n      return { \n        success: false, \n        message: error.response?.data?.message || 'Invalid OTP. Please try again.' \n      };\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout,\n    changePassword,\n    verifyPasswordChangeOTP\n  };\n\n  console.log('üîÑ AuthContext: Current state:', { \n    isAuthenticated, \n    hasUser: !!user, \n    loading,\n    userName: user?.name || 'None'\n  });\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}