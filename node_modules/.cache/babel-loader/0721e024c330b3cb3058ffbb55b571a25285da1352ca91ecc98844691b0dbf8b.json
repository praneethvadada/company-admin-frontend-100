{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { authService } from '../services/authService';\nimport { cookieUtils } from '../utils/cookieUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const initializeAuth = useCallback(async () => {\n    console.log('üîç AuthContext: Initializing authentication from cookies');\n    try {\n      const token = cookieUtils.getToken();\n      const userData = cookieUtils.getUser();\n      console.log('üì¶ Auth data from cookies:', {\n        hasToken: !!token,\n        hasUserData: !!userData\n      });\n      if (token && userData) {\n        console.log('‚úÖ AuthContext: Valid auth data found in cookies');\n\n        // Set token in API headers\n        authService.setAuthToken(token);\n\n        // For now, trust the token if it exists (you can add verification later)\n        // Since your backend might not have /auth/verify endpoint yet\n        try {\n          console.log('üîç Attempting to verify token...');\n          // Try to make a simple authenticated request\n          await authService.getDashboardStats();\n\n          // If successful, token is valid\n          setUser(userData);\n          setIsAuthenticated(true);\n          console.log('‚úÖ AuthContext: Token verified via dashboard stats, user authenticated:', userData);\n        } catch (verifyError) {\n          var _verifyError$response;\n          console.error('‚ùå AuthContext: Token verification failed:', verifyError);\n\n          // If it's a 401, token is invalid\n          if (((_verifyError$response = verifyError.response) === null || _verifyError$response === void 0 ? void 0 : _verifyError$response.status) === 401) {\n            console.log('üîÑ Token expired, clearing auth data');\n            cookieUtils.clearAuth();\n            authService.removeAuthToken();\n          } else {\n            // For other errors (network, server down), still allow access\n            console.log('‚ö†Ô∏è Network/server error during verification, allowing access with existing token');\n            setUser(userData);\n            setIsAuthenticated(true);\n          }\n        }\n      } else {\n        console.log('‚ùå AuthContext: No valid auth data found in cookies');\n      }\n    } catch (error) {\n      console.error('‚ùå AuthContext: Error initializing auth:', error);\n      cookieUtils.clearAuth();\n      authService.removeAuthToken();\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    console.log('üîÑ AuthProvider: Initializing authentication check');\n    initializeAuth();\n  }, [initializeAuth]);\n  const login = async credentials => {\n    console.log('üîê AuthContext: Login attempt started');\n    console.log('üì§ Login request data:', {\n      email: credentials.email,\n      password: '***'\n    });\n    try {\n      const response = await authService.login(credentials);\n      console.log('‚úÖ Login API Response:', response.data);\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Store in cookies\n      console.log('üç™ Storing auth data in cookies');\n      cookieUtils.setToken(token);\n      cookieUtils.setUser(userData);\n\n      // Set token in API headers\n      authService.setAuthToken(token);\n\n      // Update state\n      setUser(userData);\n      setIsAuthenticated(true);\n      console.log('‚úÖ Login successful, user authenticated:', userData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('‚ùå Login failed:', error);\n      console.error('‚ùå Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed'\n      };\n    }\n  };\n  const signup = async userData => {\n    console.log('üìù AuthContext: Signup attempt started');\n    console.log('üì§ Signup request data:', {\n      name: userData.name,\n      email: userData.email,\n      password: '***',\n      confirmPassword: '***'\n    });\n    try {\n      const response = await authService.signup(userData);\n      console.log('‚úÖ Signup API Response:', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('‚ùå Signup failed:', error);\n      console.error('‚ùå Error response:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Signup failed'\n      };\n    }\n  };\n  const logout = () => {\n    console.log('üö™ AuthContext: Logout initiated');\n\n    // Call logout API\n    authService.logout().catch(error => {\n      console.error('‚ùå Logout API call failed:', error);\n    });\n\n    // Clear cookies\n    console.log('üç™ Clearing auth data from cookies');\n    cookieUtils.clearAuth();\n\n    // Remove token from API headers\n    authService.removeAuthToken();\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n    console.log('‚úÖ Logout completed');\n  };\n  const changePassword = async passwordData => {\n    console.log('üîê AuthContext: Change password attempt started');\n    console.log('üì§ Change password request data:', {\n      currentPassword: '***',\n      newPassword: '***'\n    });\n    try {\n      const response = await authService.changePassword(passwordData);\n      console.log('‚úÖ Change password API Response:', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response6$data;\n      console.error('‚ùå Change password failed:', error);\n      console.error('‚ùå Error response:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n      return {\n        success: false,\n        message: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Password change failed'\n      };\n    }\n  };\n  const forgotPassword = async email => {\n    console.log('üîë AuthContext: Forgot password attempt started');\n    console.log('üì§ Forgot password request data:', {\n      email\n    });\n    try {\n      const response = await authService.forgotPassword(email);\n      console.log('‚úÖ Forgot password API Response:', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response7, _error$response8, _error$response8$data;\n      console.error('‚ùå Forgot password failed:', error);\n      console.error('‚ùå Error response:', (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data);\n      return {\n        success: false,\n        message: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to send reset email'\n      };\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout,\n    changePassword,\n    forgotPassword\n  };\n  console.log('üîÑ AuthContext: Current state:', {\n    isAuthenticated,\n    hasUser: !!user,\n    loading,\n    userName: (user === null || user === void 0 ? void 0 : user.name) || 'None'\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"pnsvw7czjvmiFgw/Bh5bzhjzExE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","authService","cookieUtils","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","initializeAuth","console","log","token","getToken","userData","getUser","hasToken","hasUserData","setAuthToken","getDashboardStats","verifyError","_verifyError$response","error","response","status","clearAuth","removeAuthToken","login","credentials","email","password","data","setToken","success","_error$response","_error$response2","_error$response2$data","message","signup","name","confirmPassword","_error$response3","_error$response4","_error$response4$data","logout","catch","changePassword","passwordData","currentPassword","newPassword","_error$response5","_error$response6","_error$response6$data","forgotPassword","_error$response7","_error$response8","_error$response8$data","value","hasUser","userName","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { authService } from '../services/authService';\nimport { cookieUtils } from '../utils/cookieUtils';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const initializeAuth = useCallback(async () => {\n    console.log('üîç AuthContext: Initializing authentication from cookies');\n    \n    try {\n      const token = cookieUtils.getToken();\n      const userData = cookieUtils.getUser();\n      \n      console.log('üì¶ Auth data from cookies:', { \n        hasToken: !!token, \n        hasUserData: !!userData \n      });\n      \n      if (token && userData) {\n        console.log('‚úÖ AuthContext: Valid auth data found in cookies');\n        \n        // Set token in API headers\n        authService.setAuthToken(token);\n        \n        // For now, trust the token if it exists (you can add verification later)\n        // Since your backend might not have /auth/verify endpoint yet\n        try {\n          console.log('üîç Attempting to verify token...');\n          // Try to make a simple authenticated request\n          await authService.getDashboardStats();\n          \n          // If successful, token is valid\n          setUser(userData);\n          setIsAuthenticated(true);\n          console.log('‚úÖ AuthContext: Token verified via dashboard stats, user authenticated:', userData);\n          \n        } catch (verifyError) {\n          console.error('‚ùå AuthContext: Token verification failed:', verifyError);\n          \n          // If it's a 401, token is invalid\n          if (verifyError.response?.status === 401) {\n            console.log('üîÑ Token expired, clearing auth data');\n            cookieUtils.clearAuth();\n            authService.removeAuthToken();\n          } else {\n            // For other errors (network, server down), still allow access\n            console.log('‚ö†Ô∏è Network/server error during verification, allowing access with existing token');\n            setUser(userData);\n            setIsAuthenticated(true);\n          }\n        }\n      } else {\n        console.log('‚ùå AuthContext: No valid auth data found in cookies');\n      }\n    } catch (error) {\n      console.error('‚ùå AuthContext: Error initializing auth:', error);\n      cookieUtils.clearAuth();\n      authService.removeAuthToken();\n    }\n    \n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    console.log('üîÑ AuthProvider: Initializing authentication check');\n    initializeAuth();\n  }, [initializeAuth]);\n\n  const login = async (credentials) => {\n    console.log('üîê AuthContext: Login attempt started');\n    console.log('üì§ Login request data:', { email: credentials.email, password: '***' });\n    \n    try {\n      const response = await authService.login(credentials);\n      console.log('‚úÖ Login API Response:', response.data);\n      \n      const { token, user: userData } = response.data;\n      \n      // Store in cookies\n      console.log('üç™ Storing auth data in cookies');\n      cookieUtils.setToken(token);\n      cookieUtils.setUser(userData);\n      \n      // Set token in API headers\n      authService.setAuthToken(token);\n      \n      // Update state\n      setUser(userData);\n      setIsAuthenticated(true);\n      \n      console.log('‚úÖ Login successful, user authenticated:', userData);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('‚ùå Login failed:', error);\n      console.error('‚ùå Error response:', error.response?.data);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const signup = async (userData) => {\n    console.log('üìù AuthContext: Signup attempt started');\n    console.log('üì§ Signup request data:', { \n      name: userData.name, \n      email: userData.email, \n      password: '***',\n      confirmPassword: '***'\n    });\n    \n    try {\n      const response = await authService.signup(userData);\n      console.log('‚úÖ Signup API Response:', response.data);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('‚ùå Signup failed:', error);\n      console.error('‚ùå Error response:', error.response?.data);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Signup failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    console.log('üö™ AuthContext: Logout initiated');\n    \n    // Call logout API\n    authService.logout().catch(error => {\n      console.error('‚ùå Logout API call failed:', error);\n    });\n    \n    // Clear cookies\n    console.log('üç™ Clearing auth data from cookies');\n    cookieUtils.clearAuth();\n    \n    // Remove token from API headers\n    authService.removeAuthToken();\n    \n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n    \n    console.log('‚úÖ Logout completed');\n  };\n\n  const changePassword = async (passwordData) => {\n    console.log('üîê AuthContext: Change password attempt started');\n    console.log('üì§ Change password request data:', { \n      currentPassword: '***', \n      newPassword: '***' \n    });\n    \n    try {\n      const response = await authService.changePassword(passwordData);\n      console.log('‚úÖ Change password API Response:', response.data);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('‚ùå Change password failed:', error);\n      console.error('‚ùå Error response:', error.response?.data);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Password change failed' \n      };\n    }\n  };\n\n  const forgotPassword = async (email) => {\n    console.log('üîë AuthContext: Forgot password attempt started');\n    console.log('üì§ Forgot password request data:', { email });\n    \n    try {\n      const response = await authService.forgotPassword(email);\n      console.log('‚úÖ Forgot password API Response:', response.data);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('‚ùå Forgot password failed:', error);\n      console.error('‚ùå Error response:', error.response?.data);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Failed to send reset email' \n      };\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout,\n    changePassword,\n    forgotPassword\n  };\n\n  console.log('üîÑ AuthContext: Current state:', { \n    isAuthenticated, \n    hasUser: !!user, \n    loading,\n    userName: user?.name || 'None'\n  });\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}