{"ast":null,"code":"// src/services/api.js - IMPROVED VERSION\nimport axios from 'axios';\n\n// ✅ IMPROVED: More robust URL validation and environment handling\nconst getApiBaseUrl = () => {\n  const envUrl = process.env.REACT_APP_API_URL;\n  const fallbackUrl = 'http://localhost:5001/api';\n  console.log('🔍 Environment API URL:', envUrl);\n  console.log('🔍 Fallback API URL:', fallbackUrl);\n\n  // ✅ IMPROVED: Better validation for environment URL\n  if (envUrl && envUrl.trim() !== '' && envUrl !== 'undefined') {\n    try {\n      new URL(envUrl);\n      console.log('✅ Using environment API URL:', envUrl);\n      return envUrl;\n    } catch (error) {\n      console.warn('⚠️ Invalid environment API URL, using fallback:', envUrl);\n    }\n  }\n  console.log('🌐 Using fallback API Base URL:', fallbackUrl);\n  return fallbackUrl;\n};\nconst API_BASE_URL = getApiBaseUrl();\n\n// ✅ IMPROVED: Better error handling for URL validation\ntry {\n  new URL(API_BASE_URL);\n  console.log('✅ API Base URL is valid:', API_BASE_URL);\n} catch (error) {\n  console.error('❌ Invalid API Base URL:', API_BASE_URL, error);\n  throw new Error(`Invalid API Base URL: ${API_BASE_URL}`);\n}\n\n// ✅ IMPROVED: Enhanced axios configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 15000,\n  // ✅ IMPROVED: Increased timeout to 15 seconds\n  // ✅ NEW: Add retry configuration\n  retry: 3,\n  retryDelay: 1000\n});\n\n// ✅ IMPROVED: Enhanced request interceptor with better token handling\napi.interceptors.request.use(config => {\n  // ✅ IMPROVED: Less verbose logging in production\n  if (process.env.NODE_ENV === 'development') {\n    var _config$method;\n    console.log(`🌐 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  }\n\n  // ✅ IMPROVED: Get token from localStorage directly (more reliable)\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // ✅ NEW: Add request timestamp for debugging\n  config.metadata = {\n    requestStartTime: Date.now()\n  };\n  return config;\n}, error => {\n  console.error('🌐 API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// ✅ IMPROVED: Enhanced response interceptor with better error handling and retry logic\napi.interceptors.response.use(response => {\n  var _response$config$meta;\n  // ✅ IMPROVED: Calculate response time\n  const responseTime = Date.now() - ((_response$config$meta = response.config.metadata) === null || _response$config$meta === void 0 ? void 0 : _response$config$meta.requestStartTime);\n  if (process.env.NODE_ENV === 'development') {\n    var _response$config$meth;\n    console.log(`✅ API Response: ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url} - ${response.status} (${responseTime}ms)`);\n  }\n  return response;\n}, async error => {\n  var _error$response3, _error$response4, _error$response5, _error$response6, _error$response7, _error$response8;\n  const originalRequest = error.config;\n\n  // ✅ IMPROVED: Better error logging\n  if (process.env.NODE_ENV === 'development') {\n    var _error$response, _error$response2;\n    console.log('❌ API Error Details:', {\n      message: error.message,\n      code: error.code,\n      url: originalRequest === null || originalRequest === void 0 ? void 0 : originalRequest.url,\n      method: originalRequest === null || originalRequest === void 0 ? void 0 : originalRequest.method,\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n    });\n  }\n\n  // ✅ NEW: Implement retry logic for network errors\n  if (error.code === 'NETWORK_ERROR' || error.code === 'ECONNABORTED' || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) >= 500 && ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) < 600) {\n    originalRequest._retryCount = originalRequest._retryCount || 0;\n    if (originalRequest._retryCount < api.defaults.retry) {\n      var _originalRequest$meth;\n      originalRequest._retryCount++;\n      console.log(`🔄 Retrying request (${originalRequest._retryCount}/${api.defaults.retry}): ${(_originalRequest$meth = originalRequest.method) === null || _originalRequest$meth === void 0 ? void 0 : _originalRequest$meth.toUpperCase()} ${originalRequest.url}`);\n\n      // ✅ NEW: Exponential backoff delay\n      const delay = api.defaults.retryDelay * Math.pow(2, originalRequest._retryCount - 1);\n      await new Promise(resolve => setTimeout(resolve, delay));\n      return api(originalRequest);\n    }\n  }\n\n  // ✅ IMPROVED: Better 401 handling\n  if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 401) {\n    console.log('🚪 Unauthorized access detected');\n\n    // ✅ IMPROVED: Only redirect if not already on login page\n    if (!window.location.pathname.includes('/login')) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // ✅ NEW: Show user-friendly message\n      console.log('🚪 Redirecting to login due to expired session');\n\n      // ✅ IMPROVED: Use replace to prevent back navigation to protected page\n      window.location.replace('/login');\n    }\n  }\n\n  // ✅ NEW: Handle network errors with user-friendly messages\n  if (error.code === 'NETWORK_ERROR') {\n    error.userMessage = 'Network error. Please check your internet connection and try again.';\n  } else if (error.code === 'ECONNABORTED') {\n    error.userMessage = 'Request timeout. Please try again.';\n  } else if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 404) {\n    error.userMessage = 'The requested resource was not found.';\n  } else if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 403) {\n    error.userMessage = 'You do not have permission to access this resource.';\n  } else if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) >= 500) {\n    error.userMessage = 'Server error. Please try again later.';\n  }\n  return Promise.reject(error);\n});\n\n// ✅ NEW: Add request/response interceptor for debugging in development\nif (process.env.NODE_ENV === 'development') {\n  api.interceptors.request.use(config => {\n    var _config$method2;\n    console.group(`🌐 ${(_config$method2 = config.method) === null || _config$method2 === void 0 ? void 0 : _config$method2.toUpperCase()} ${config.url}`);\n    console.log('📤 Request Config:', {\n      baseURL: config.baseURL,\n      url: config.url,\n      method: config.method,\n      headers: config.headers,\n      data: config.data\n    });\n    console.groupEnd();\n    return config;\n  });\n  api.interceptors.response.use(response => {\n    var _response$config$meth2;\n    console.group(`✅ ${(_response$config$meth2 = response.config.method) === null || _response$config$meth2 === void 0 ? void 0 : _response$config$meth2.toUpperCase()} ${response.config.url} - ${response.status}`);\n    console.log('📥 Response Data:', response.data);\n    console.groupEnd();\n    return response;\n  }, error => {\n    var _error$config, _error$config$method, _error$config2, _error$response9, _error$response0;\n    console.group(`❌ ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : (_error$config$method = _error$config.method) === null || _error$config$method === void 0 ? void 0 : _error$config$method.toUpperCase()} ${(_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url} - ${(_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.status}`);\n    console.log('📥 Error Response:', (_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : _error$response0.data);\n    console.log('📥 Error Message:', error.message);\n    console.groupEnd();\n    return Promise.reject(error);\n  });\n}\n\n// ✅ NEW: Add helper methods for common API patterns\napi.helpers = {\n  // Helper for handling paginated requests\n  getPaginated: async (url, params = {}) => {\n    var _response$data, _response$data2, _response$data3, _response$data4, _response$data4$pagin;\n    const response = await api.get(url, {\n      params\n    });\n    return {\n      data: ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || response.data,\n      pagination: (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.pagination,\n      total: ((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.total) || ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : (_response$data4$pagin = _response$data4.pagination) === null || _response$data4$pagin === void 0 ? void 0 : _response$data4$pagin.totalItems)\n    };\n  },\n  // Helper for handling file uploads\n  uploadFile: async (url, file, onProgress) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    return api.post(url, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: progressEvent => {\n        if (onProgress) {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          onProgress(progress);\n        }\n      }\n    });\n  },\n  // Helper for downloading files\n  downloadFile: async (url, filename) => {\n    const response = await api.get(url, {\n      responseType: 'blob'\n    });\n    const blob = new Blob([response.data]);\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(downloadUrl);\n  }\n};\n\n// ✅ NEW: Add connection test method\napi.testConnection = async () => {\n  try {\n    console.log('🔍 Testing API connection...');\n    const response = await api.get('/health');\n    console.log('✅ API connection successful:', response.data);\n    return true;\n  } catch (error) {\n    console.error('❌ API connection failed:', error.message);\n    return false;\n  }\n};\n\n// ✅ NEW: Export both the api instance and helper functions\nexport default api;\n\n// ✅ NEW: Export helper functions separately for convenience\nexport const {\n  getPaginated,\n  uploadFile,\n  downloadFile\n} = api.helpers;\nexport const testConnection = api.testConnection;\n\n// // src/services/api.js - FIXED VERSION\n// import axios from 'axios';\n\n// // Ensure we have a valid base URL\n// const getApiBaseUrl = () => {\n//   const envUrl = process.env.REACT_APP_API_URL;\n//   const fallbackUrl = 'http://localhost:5001/api';\n\n//   console.log('🔍 Environment API URL:', envUrl);\n//   console.log('🔍 Fallback API URL:', fallbackUrl);\n\n//   // Use environment variable if it exists and is valid, otherwise use fallback\n//   const baseUrl = envUrl && envUrl.trim() !== '' ? envUrl : fallbackUrl;\n//   console.log('🌐 Using API Base URL:', baseUrl);\n\n//   return baseUrl;\n// };\n\n// const API_BASE_URL = getApiBaseUrl();\n\n// // Validate the URL before creating axios instance\n// try {\n//   new URL(API_BASE_URL);\n//   console.log('✅ API Base URL is valid:', API_BASE_URL);\n// } catch (error) {\n//   console.error('❌ Invalid API Base URL:', API_BASE_URL, error);\n//   throw new Error(`Invalid API Base URL: ${API_BASE_URL}`);\n// }\n\n// const api = axios.create({\n//   baseURL: API_BASE_URL,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   timeout: 10000, // 10 second timeout\n// });\n\n// // Request interceptor to add auth token\n// api.interceptors.request.use(\n//   (config) => {\n//     console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`);\n//     console.log('📦 Request config:', {\n//       baseURL: config.baseURL,\n//       url: config.url,\n//       method: config.method,\n//       headers: config.headers\n//     });\n//     // Token is already set in headers via authService.setAuthToken()\n//     return config;\n//   },\n//   (error) => {\n//     console.error('🌐 API Request Error:', error);\n//     return Promise.reject(error);\n//   }\n// );\n\n// // Response interceptor for error handling\n// api.interceptors.response.use(\n//   (response) => {\n//     console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} - ${response.status}`);\n//     return response;\n//   },\n//   (error) => {\n//     console.log('❌ API Error Details:', {\n//       message: error.message,\n//       code: error.code,\n//       config: {\n//         method: error.config?.method,\n//         baseURL: error.config?.baseURL,\n//         url: error.config?.url,\n//         fullUrl: error.config?.baseURL + error.config?.url\n//       },\n//       response: {\n//         status: error.response?.status,\n//         data: error.response?.data\n//       }\n//     });\n\n//     console.error(`❌ API Error: ${error.config?.method?.toUpperCase()} ${error.config?.url} - ${error.response?.status}`, {\n//       status: error.response?.status,\n//       data: error.response?.data,\n//       message: error.message\n//     });\n\n//     // Handle 401 unauthorized errors\n//     if (error.response?.status === 401) {\n//       console.log('🚪 Unauthorized access detected, redirecting to login...');\n//       // Don't auto-redirect here, let the authService handle it\n//     }\n\n//     return Promise.reject(error);\n//   }\n// );\n\n// export default api;\n\n// // // src/services/api.js - CREATE THIS FILE\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // const api = axios.create({\n// //   baseURL: API_BASE_URL,\n// //   headers: {\n// //     'Content-Type': 'application/json',\n// //   },\n// // });\n\n// // // Request interceptor to add auth token\n// // api.interceptors.request.use(\n// //   (config) => {\n// //     console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n// //     // Token is already set in headers via authService.setAuthToken()\n// //     return config;\n// //   },\n// //   (error) => {\n// //     console.error('🌐 API Request Error:', error);\n// //     return Promise.reject(error);\n// //   }\n// // );\n\n// // // Response interceptor for error handling\n// // api.interceptors.response.use(\n// //   (response) => {\n// //     console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} - ${response.status}`);\n// //     return response;\n// //   },\n// //   (error) => {\n// //     console.error(`❌ API Error: ${error.config?.method?.toUpperCase()} ${error.config?.url} - ${error.response?.status}`, {\n// //       status: error.response?.status,\n// //       data: error.response?.data,\n// //       message: error.message\n// //     });\n\n// //     // Handle 401 unauthorized errors\n// //     if (error.response?.status === 401) {\n// //       console.log('🚪 Unauthorized access detected, redirecting to login...');\n// //       // Don't auto-redirect here, let the authService handle it\n// //     }\n\n// //     return Promise.reject(error);\n// //   }\n// // );\n\n// // export default api;\n\n// // // import axios from 'axios';\n// // // import { cookieUtils } from '../utils/cookieUtils';\n\n// // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // // console.log('🌐 API Base URL:', API_BASE_URL);\n\n// // // const api = axios.create({\n// // //   baseURL: API_BASE_URL,\n// // //   headers: {\n// // //     'Content-Type': 'application/json',\n// // //   },\n// // //   timeout: 10000, // 10 seconds timeout\n// // // });\n\n// // // // Request interceptor to add auth token and log requests\n// // // api.interceptors.request.use(\n// // //   (config) => {\n// // //     console.log('📤 API Request:', {\n// // //       method: config.method?.toUpperCase(),\n// // //       url: config.url,\n// // //       baseURL: config.baseURL,\n// // //       fullURL: `${config.baseURL}${config.url}`,\n// // //       headers: config.headers,\n// // //       data: config.data\n// // //     });\n\n// // //     // Get token from cookies\n// // //     const token = cookieUtils.getToken();\n// // //     if (token) {\n// // //       config.headers.Authorization = `Bearer ${token}`;\n// // //       console.log('🔑 Added Authorization header from cookies');\n// // //     } else {\n// // //       console.log('⚠️ No auth token found in cookies');\n// // //     }\n\n// // //     return config;\n// // //   },\n// // //   (error) => {\n// // //     console.error('❌ API Request Error:', error);\n// // //     return Promise.reject(error);\n// // //   }\n// // // );\n\n// // // // Response interceptor to handle auth errors and log responses\n// // // api.interceptors.response.use(\n// // //   (response) => {\n// // //     console.log('📥 API Response Success:', {\n// // //       status: response.status,\n// // //       statusText: response.statusText,\n// // //       url: response.config.url,\n// // //       headers: response.headers,\n// // //       data: response.data,\n// // //       dataType: typeof response.data,\n// // //       dataKeys: typeof response.data === 'object' ? Object.keys(response.data) : 'Not an object'\n// // //     });\n// // //     return response;\n// // //   },\n// // //   (error) => {\n// // //     console.error('❌ API Response Error:', {\n// // //       status: error.response?.status,\n// // //       statusText: error.response?.statusText,\n// // //       url: error.config?.url,\n// // //       message: error.message,\n// // //       data: error.response?.data\n// // //     });\n\n// // //     if (error.response?.status === 401) {\n// // //       console.log('🚨 401 Unauthorized - Clearing auth data and redirecting to login');\n// // //       cookieUtils.clearAuth();\n\n// // //       // Only redirect if not already on login page\n// // //       if (window.location.pathname !== '/login') {\n// // //         window.location.href = '/login';\n// // //       }\n// // //     }\n\n// // //     return Promise.reject(error);\n// // //   }\n// // // );\n\n// // // export default api;","map":{"version":3,"names":["axios","getApiBaseUrl","envUrl","process","env","REACT_APP_API_URL","fallbackUrl","console","log","trim","URL","error","warn","API_BASE_URL","Error","api","create","baseURL","headers","timeout","retry","retryDelay","interceptors","request","use","config","NODE_ENV","_config$method","method","toUpperCase","url","token","localStorage","getItem","Authorization","metadata","requestStartTime","Date","now","Promise","reject","response","_response$config$meta","responseTime","_response$config$meth","status","_error$response3","_error$response4","_error$response5","_error$response6","_error$response7","_error$response8","originalRequest","_error$response","_error$response2","message","code","data","_retryCount","defaults","_originalRequest$meth","delay","Math","pow","resolve","setTimeout","window","location","pathname","includes","removeItem","replace","userMessage","_config$method2","group","groupEnd","_response$config$meth2","_error$config","_error$config$method","_error$config2","_error$response9","_error$response0","helpers","getPaginated","params","_response$data","_response$data2","_response$data3","_response$data4","_response$data4$pagin","get","pagination","total","totalItems","uploadFile","file","onProgress","formData","FormData","append","post","onUploadProgress","progressEvent","progress","round","loaded","downloadFile","filename","responseType","blob","Blob","downloadUrl","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","testConnection"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/services/api.js"],"sourcesContent":["// src/services/api.js - IMPROVED VERSION\nimport axios from 'axios';\n\n// ✅ IMPROVED: More robust URL validation and environment handling\nconst getApiBaseUrl = () => {\n  const envUrl = process.env.REACT_APP_API_URL;\n  const fallbackUrl = 'http://localhost:5001/api';\n  \n  console.log('🔍 Environment API URL:', envUrl);\n  console.log('🔍 Fallback API URL:', fallbackUrl);\n  \n  // ✅ IMPROVED: Better validation for environment URL\n  if (envUrl && envUrl.trim() !== '' && envUrl !== 'undefined') {\n    try {\n      new URL(envUrl);\n      console.log('✅ Using environment API URL:', envUrl);\n      return envUrl;\n    } catch (error) {\n      console.warn('⚠️ Invalid environment API URL, using fallback:', envUrl);\n    }\n  }\n  \n  console.log('🌐 Using fallback API Base URL:', fallbackUrl);\n  return fallbackUrl;\n};\n\nconst API_BASE_URL = getApiBaseUrl();\n\n// ✅ IMPROVED: Better error handling for URL validation\ntry {\n  new URL(API_BASE_URL);\n  console.log('✅ API Base URL is valid:', API_BASE_URL);\n} catch (error) {\n  console.error('❌ Invalid API Base URL:', API_BASE_URL, error);\n  throw new Error(`Invalid API Base URL: ${API_BASE_URL}`);\n}\n\n// ✅ IMPROVED: Enhanced axios configuration\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 15000, // ✅ IMPROVED: Increased timeout to 15 seconds\n  // ✅ NEW: Add retry configuration\n  retry: 3,\n  retryDelay: 1000,\n});\n\n// ✅ IMPROVED: Enhanced request interceptor with better token handling\napi.interceptors.request.use(\n  (config) => {\n    // ✅ IMPROVED: Less verbose logging in production\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    }\n    \n    // ✅ IMPROVED: Get token from localStorage directly (more reliable)\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    // ✅ NEW: Add request timestamp for debugging\n    config.metadata = { requestStartTime: Date.now() };\n    \n    return config;\n  },\n  (error) => {\n    console.error('🌐 API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// ✅ IMPROVED: Enhanced response interceptor with better error handling and retry logic\napi.interceptors.response.use(\n  (response) => {\n    // ✅ IMPROVED: Calculate response time\n    const responseTime = Date.now() - response.config.metadata?.requestStartTime;\n    \n    if (process.env.NODE_ENV === 'development') {\n      console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} - ${response.status} (${responseTime}ms)`);\n    }\n    \n    return response;\n  },\n  async (error) => {\n    const originalRequest = error.config;\n    \n    // ✅ IMPROVED: Better error logging\n    if (process.env.NODE_ENV === 'development') {\n      console.log('❌ API Error Details:', {\n        message: error.message,\n        code: error.code,\n        url: originalRequest?.url,\n        method: originalRequest?.method,\n        status: error.response?.status,\n        data: error.response?.data\n      });\n    }\n    \n    // ✅ NEW: Implement retry logic for network errors\n    if (\n      error.code === 'NETWORK_ERROR' || \n      error.code === 'ECONNABORTED' ||\n      (error.response?.status >= 500 && error.response?.status < 600)\n    ) {\n      originalRequest._retryCount = originalRequest._retryCount || 0;\n      \n      if (originalRequest._retryCount < api.defaults.retry) {\n        originalRequest._retryCount++;\n        console.log(`🔄 Retrying request (${originalRequest._retryCount}/${api.defaults.retry}): ${originalRequest.method?.toUpperCase()} ${originalRequest.url}`);\n        \n        // ✅ NEW: Exponential backoff delay\n        const delay = api.defaults.retryDelay * Math.pow(2, originalRequest._retryCount - 1);\n        await new Promise(resolve => setTimeout(resolve, delay));\n        \n        return api(originalRequest);\n      }\n    }\n    \n    // ✅ IMPROVED: Better 401 handling\n    if (error.response?.status === 401) {\n      console.log('🚪 Unauthorized access detected');\n      \n      // ✅ IMPROVED: Only redirect if not already on login page\n      if (!window.location.pathname.includes('/login')) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        \n        // ✅ NEW: Show user-friendly message\n        console.log('🚪 Redirecting to login due to expired session');\n        \n        // ✅ IMPROVED: Use replace to prevent back navigation to protected page\n        window.location.replace('/login');\n      }\n    }\n    \n    // ✅ NEW: Handle network errors with user-friendly messages\n    if (error.code === 'NETWORK_ERROR') {\n      error.userMessage = 'Network error. Please check your internet connection and try again.';\n    } else if (error.code === 'ECONNABORTED') {\n      error.userMessage = 'Request timeout. Please try again.';\n    } else if (error.response?.status === 404) {\n      error.userMessage = 'The requested resource was not found.';\n    } else if (error.response?.status === 403) {\n      error.userMessage = 'You do not have permission to access this resource.';\n    } else if (error.response?.status >= 500) {\n      error.userMessage = 'Server error. Please try again later.';\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// ✅ NEW: Add request/response interceptor for debugging in development\nif (process.env.NODE_ENV === 'development') {\n  api.interceptors.request.use(\n    (config) => {\n      console.group(`🌐 ${config.method?.toUpperCase()} ${config.url}`);\n      console.log('📤 Request Config:', {\n        baseURL: config.baseURL,\n        url: config.url,\n        method: config.method,\n        headers: config.headers,\n        data: config.data\n      });\n      console.groupEnd();\n      return config;\n    }\n  );\n  \n  api.interceptors.response.use(\n    (response) => {\n      console.group(`✅ ${response.config.method?.toUpperCase()} ${response.config.url} - ${response.status}`);\n      console.log('📥 Response Data:', response.data);\n      console.groupEnd();\n      return response;\n    },\n    (error) => {\n      console.group(`❌ ${error.config?.method?.toUpperCase()} ${error.config?.url} - ${error.response?.status}`);\n      console.log('📥 Error Response:', error.response?.data);\n      console.log('📥 Error Message:', error.message);\n      console.groupEnd();\n      return Promise.reject(error);\n    }\n  );\n}\n\n// ✅ NEW: Add helper methods for common API patterns\napi.helpers = {\n  // Helper for handling paginated requests\n  getPaginated: async (url, params = {}) => {\n    const response = await api.get(url, { params });\n    return {\n      data: response.data?.data || response.data,\n      pagination: response.data?.pagination,\n      total: response.data?.total || response.data?.pagination?.totalItems\n    };\n  },\n  \n  // Helper for handling file uploads\n  uploadFile: async (url, file, onProgress) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    return api.post(url, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress: (progressEvent) => {\n        if (onProgress) {\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          onProgress(progress);\n        }\n      },\n    });\n  },\n  \n  // Helper for downloading files\n  downloadFile: async (url, filename) => {\n    const response = await api.get(url, {\n      responseType: 'blob',\n    });\n    \n    const blob = new Blob([response.data]);\n    const downloadUrl = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = downloadUrl;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(downloadUrl);\n  }\n};\n\n// ✅ NEW: Add connection test method\napi.testConnection = async () => {\n  try {\n    console.log('🔍 Testing API connection...');\n    const response = await api.get('/health');\n    console.log('✅ API connection successful:', response.data);\n    return true;\n  } catch (error) {\n    console.error('❌ API connection failed:', error.message);\n    return false;\n  }\n};\n\n// ✅ NEW: Export both the api instance and helper functions\nexport default api;\n\n// ✅ NEW: Export helper functions separately for convenience\nexport const { getPaginated, uploadFile, downloadFile } = api.helpers;\nexport const testConnection = api.testConnection;\n\n\n// // src/services/api.js - FIXED VERSION\n// import axios from 'axios';\n\n// // Ensure we have a valid base URL\n// const getApiBaseUrl = () => {\n//   const envUrl = process.env.REACT_APP_API_URL;\n//   const fallbackUrl = 'http://localhost:5001/api';\n  \n//   console.log('🔍 Environment API URL:', envUrl);\n//   console.log('🔍 Fallback API URL:', fallbackUrl);\n  \n//   // Use environment variable if it exists and is valid, otherwise use fallback\n//   const baseUrl = envUrl && envUrl.trim() !== '' ? envUrl : fallbackUrl;\n//   console.log('🌐 Using API Base URL:', baseUrl);\n  \n//   return baseUrl;\n// };\n\n// const API_BASE_URL = getApiBaseUrl();\n\n// // Validate the URL before creating axios instance\n// try {\n//   new URL(API_BASE_URL);\n//   console.log('✅ API Base URL is valid:', API_BASE_URL);\n// } catch (error) {\n//   console.error('❌ Invalid API Base URL:', API_BASE_URL, error);\n//   throw new Error(`Invalid API Base URL: ${API_BASE_URL}`);\n// }\n\n// const api = axios.create({\n//   baseURL: API_BASE_URL,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   timeout: 10000, // 10 second timeout\n// });\n\n// // Request interceptor to add auth token\n// api.interceptors.request.use(\n//   (config) => {\n//     console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.baseURL}${config.url}`);\n//     console.log('📦 Request config:', {\n//       baseURL: config.baseURL,\n//       url: config.url,\n//       method: config.method,\n//       headers: config.headers\n//     });\n//     // Token is already set in headers via authService.setAuthToken()\n//     return config;\n//   },\n//   (error) => {\n//     console.error('🌐 API Request Error:', error);\n//     return Promise.reject(error);\n//   }\n// );\n\n// // Response interceptor for error handling\n// api.interceptors.response.use(\n//   (response) => {\n//     console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} - ${response.status}`);\n//     return response;\n//   },\n//   (error) => {\n//     console.log('❌ API Error Details:', {\n//       message: error.message,\n//       code: error.code,\n//       config: {\n//         method: error.config?.method,\n//         baseURL: error.config?.baseURL,\n//         url: error.config?.url,\n//         fullUrl: error.config?.baseURL + error.config?.url\n//       },\n//       response: {\n//         status: error.response?.status,\n//         data: error.response?.data\n//       }\n//     });\n\n//     console.error(`❌ API Error: ${error.config?.method?.toUpperCase()} ${error.config?.url} - ${error.response?.status}`, {\n//       status: error.response?.status,\n//       data: error.response?.data,\n//       message: error.message\n//     });\n\n//     // Handle 401 unauthorized errors\n//     if (error.response?.status === 401) {\n//       console.log('🚪 Unauthorized access detected, redirecting to login...');\n//       // Don't auto-redirect here, let the authService handle it\n//     }\n\n//     return Promise.reject(error);\n//   }\n// );\n\n// export default api;\n\n\n// // // src/services/api.js - CREATE THIS FILE\n// // import axios from 'axios';\n\n// // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // const api = axios.create({\n// //   baseURL: API_BASE_URL,\n// //   headers: {\n// //     'Content-Type': 'application/json',\n// //   },\n// // });\n\n// // // Request interceptor to add auth token\n// // api.interceptors.request.use(\n// //   (config) => {\n// //     console.log(`🌐 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n// //     // Token is already set in headers via authService.setAuthToken()\n// //     return config;\n// //   },\n// //   (error) => {\n// //     console.error('🌐 API Request Error:', error);\n// //     return Promise.reject(error);\n// //   }\n// // );\n\n// // // Response interceptor for error handling\n// // api.interceptors.response.use(\n// //   (response) => {\n// //     console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} - ${response.status}`);\n// //     return response;\n// //   },\n// //   (error) => {\n// //     console.error(`❌ API Error: ${error.config?.method?.toUpperCase()} ${error.config?.url} - ${error.response?.status}`, {\n// //       status: error.response?.status,\n// //       data: error.response?.data,\n// //       message: error.message\n// //     });\n    \n// //     // Handle 401 unauthorized errors\n// //     if (error.response?.status === 401) {\n// //       console.log('🚪 Unauthorized access detected, redirecting to login...');\n// //       // Don't auto-redirect here, let the authService handle it\n// //     }\n    \n// //     return Promise.reject(error);\n// //   }\n// // );\n\n// // export default api;\n\n\n// // // import axios from 'axios';\n// // // import { cookieUtils } from '../utils/cookieUtils';\n\n// // // const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// // // console.log('🌐 API Base URL:', API_BASE_URL);\n\n// // // const api = axios.create({\n// // //   baseURL: API_BASE_URL,\n// // //   headers: {\n// // //     'Content-Type': 'application/json',\n// // //   },\n// // //   timeout: 10000, // 10 seconds timeout\n// // // });\n\n// // // // Request interceptor to add auth token and log requests\n// // // api.interceptors.request.use(\n// // //   (config) => {\n// // //     console.log('📤 API Request:', {\n// // //       method: config.method?.toUpperCase(),\n// // //       url: config.url,\n// // //       baseURL: config.baseURL,\n// // //       fullURL: `${config.baseURL}${config.url}`,\n// // //       headers: config.headers,\n// // //       data: config.data\n// // //     });\n    \n// // //     // Get token from cookies\n// // //     const token = cookieUtils.getToken();\n// // //     if (token) {\n// // //       config.headers.Authorization = `Bearer ${token}`;\n// // //       console.log('🔑 Added Authorization header from cookies');\n// // //     } else {\n// // //       console.log('⚠️ No auth token found in cookies');\n// // //     }\n    \n// // //     return config;\n// // //   },\n// // //   (error) => {\n// // //     console.error('❌ API Request Error:', error);\n// // //     return Promise.reject(error);\n// // //   }\n// // // );\n\n// // // // Response interceptor to handle auth errors and log responses\n// // // api.interceptors.response.use(\n// // //   (response) => {\n// // //     console.log('📥 API Response Success:', {\n// // //       status: response.status,\n// // //       statusText: response.statusText,\n// // //       url: response.config.url,\n// // //       headers: response.headers,\n// // //       data: response.data,\n// // //       dataType: typeof response.data,\n// // //       dataKeys: typeof response.data === 'object' ? Object.keys(response.data) : 'Not an object'\n// // //     });\n// // //     return response;\n// // //   },\n// // //   (error) => {\n// // //     console.error('❌ API Response Error:', {\n// // //       status: error.response?.status,\n// // //       statusText: error.response?.statusText,\n// // //       url: error.config?.url,\n// // //       message: error.message,\n// // //       data: error.response?.data\n// // //     });\n    \n// // //     if (error.response?.status === 401) {\n// // //       console.log('🚨 401 Unauthorized - Clearing auth data and redirecting to login');\n// // //       cookieUtils.clearAuth();\n      \n// // //       // Only redirect if not already on login page\n// // //       if (window.location.pathname !== '/login') {\n// // //         window.location.href = '/login';\n// // //       }\n// // //     }\n    \n// // //     return Promise.reject(error);\n// // //   }\n// // // );\n\n// // // export default api;\n"],"mappings":"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CAAC;;AAED;AACAhG,GAAG,CAAC4G,cAAc,GAAG,YAAY;EAC/B,IAAI;IACFpH,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC3C,MAAMiC,QAAQ,GAAG,MAAM1B,GAAG,CAAC2E,GAAG,CAAC,SAAS,CAAC;IACzCnF,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEiC,QAAQ,CAACgB,IAAI,CAAC;IAC1D,OAAO,IAAI;EACb,CAAC,CAAC,OAAO9C,KAAK,EAAE;IACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC4C,OAAO,CAAC;IACxD,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA,eAAexC,GAAG;;AAElB;AACA,OAAO,MAAM;EAAEoE,YAAY;EAAEW,UAAU;EAAEY;AAAa,CAAC,GAAG3F,GAAG,CAACmE,OAAO;AACrE,OAAO,MAAMyC,cAAc,GAAG5G,GAAG,CAAC4G,cAAc;;AAGhD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}