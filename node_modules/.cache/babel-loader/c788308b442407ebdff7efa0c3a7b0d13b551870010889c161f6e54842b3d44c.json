{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { authService } from '../services/authService';\nimport { cookieUtils } from '../utils/cookieUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const initializeAuth = useCallback(async () => {\n    console.log('üîç AuthContext: Starting authentication initialization');\n    try {\n      cookieUtils.debugCookies();\n      const token = cookieUtils.getToken();\n      const userData = cookieUtils.getUser();\n      console.log('üì¶ Auth data check:', {\n        hasToken: !!token,\n        hasUserData: !!userData,\n        tokenLength: token ? token.length : 0,\n        userDataKeys: userData ? Object.keys(userData) : []\n      });\n      if (token && userData) {\n        console.log('‚úÖ AuthContext: Found auth data in cookies, setting authenticated state');\n        authService.setAuthToken(token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        console.log('‚úÖ AuthContext: User authenticated from cookies:', userData);\n      } else {\n        console.log('‚ùå AuthContext: No valid auth data found in cookies');\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error('‚ùå AuthContext: Error initializing auth:', error);\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n    console.log('üîÑ AuthContext: Setting loading to false');\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    console.log('üîÑ AuthProvider: Component mounted, initializing authentication');\n    initializeAuth();\n  }, [initializeAuth]);\n  const login = async credentials => {\n    console.log('üîê AuthContext: Login attempt started');\n    try {\n      const response = await authService.login(credentials);\n      console.log('‚úÖ Login API Response - Full Structure:', response);\n      console.log('‚úÖ Response.data:', response.data);\n      console.log('‚úÖ Response.data keys:', Object.keys(response.data));\n\n      // Check different possible response structures\n      let token, userData;\n      if (response.data.token && response.data.user) {\n        token = response.data.token;\n        userData = response.data.user;\n      } else if (response.data.data && response.data.data.token && response.data.data.user) {\n        token = response.data.data.token;\n        userData = response.data.data.user;\n      } else if (response.data.accessToken || response.data.authToken) {\n        token = response.data.accessToken || response.data.authToken;\n        userData = response.data.userData || response.data.user || response.data.data;\n      } else {\n        // Try to find token-like fields\n        for (const key in response.data) {\n          const value = response.data[key];\n          if (typeof value === 'string' && value.length > 20) {\n            token = value;\n          }\n          if (typeof value === 'object' && value !== null && (value.id || value.email || value.name)) {\n            userData = value;\n          }\n        }\n      }\n      console.log('üîç Extracted data:', {\n        hasToken: !!token,\n        tokenPreview: token ? token.substring(0, 20) + '...' : 'None',\n        hasUserData: !!userData,\n        userData: userData\n      });\n      if (!token || !userData) {\n        console.error('‚ùå Could not extract token or user data from response');\n        return {\n          success: false,\n          message: 'Invalid login response structure'\n        };\n      }\n      cookieUtils.setToken(token);\n      cookieUtils.setUser(userData);\n      authService.setAuthToken(token);\n      setUser(userData);\n      setIsAuthenticated(true);\n      console.log('‚úÖ Login successful, user authenticated:', userData);\n      return {\n        success: true,\n        data: {\n          token,\n          user: userData\n        }\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('‚ùå Login failed:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const signup = async userData => {\n    console.log('üìù AuthContext: Signup attempt started');\n    try {\n      const response = await authService.signup(userData);\n      console.log('‚úÖ Signup API Response:', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('‚ùå Signup failed:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Signup failed'\n      };\n    }\n  };\n  const logout = () => {\n    console.log('üö™ AuthContext: Logout initiated');\n    cookieUtils.clearAuth();\n    authService.removeAuthToken();\n    setUser(null);\n    setIsAuthenticated(false);\n    authService.logout().catch(error => {\n      console.error('‚ùå Logout API call failed:', error);\n    });\n    console.log('‚úÖ Logout completed');\n  };\n\n  // Step 1: Request password change (sends OTP)\n  const changePassword = async passwordData => {\n    console.log('üîê AuthContext: Change password step 1 - Requesting OTP');\n    console.log('üì§ Change password request data:', {\n      currentPassword: '***',\n      newPassword: '***',\n      confirmPassword: '***'\n    });\n    try {\n      var _responseData$message, _responseData$message2;\n      const response = await authService.changePassword(passwordData);\n      console.log('‚úÖ Change password step 1 - Full response:', response);\n      console.log('‚úÖ Response data:', response.data);\n      console.log('‚úÖ Response data keys:', Object.keys(response.data));\n\n      // Look for different possible token field names in the response\n      let extractedToken = null;\n      const responseData = response.data;\n\n      // Check common token field names\n      const possibleTokenFields = ['token', 'otpToken', 'changeToken', 'verificationToken', 'resetToken', 'tempToken', 'sessionToken'];\n      for (const field of possibleTokenFields) {\n        if (responseData[field]) {\n          extractedToken = responseData[field];\n          console.log(`‚úÖ Found token in field: ${field}`);\n          break;\n        }\n      }\n\n      // If not found in top level, check if it's nested\n      if (!extractedToken && responseData.data) {\n        for (const field of possibleTokenFields) {\n          if (responseData.data[field]) {\n            extractedToken = responseData.data[field];\n            console.log(`‚úÖ Found token in nested field: data.${field}`);\n            break;\n          }\n        }\n      }\n\n      // If still not found, look for any string that looks like a token (long strings)\n      if (!extractedToken) {\n        console.log('üîç Searching for token-like strings in response...');\n        for (const key in responseData) {\n          const value = responseData[key];\n          if (typeof value === 'string' && value.length > 10) {\n            console.log(`üîç Potential token found in field \"${key}\": ${value.substring(0, 20)}...`);\n            extractedToken = value;\n            break;\n          }\n        }\n      }\n      console.log('ÔøΩÔøΩ Token extraction result:', {\n        foundToken: !!extractedToken,\n        tokenPreview: extractedToken ? extractedToken.substring(0, 20) + '...' : 'None',\n        tokenLength: extractedToken ? extractedToken.length : 0\n      });\n\n      // Check if OTP was sent successfully\n      const isSuccess = responseData.success === true || responseData.success === 'true' || responseData.otpSent === true || ((_responseData$message = responseData.message) === null || _responseData$message === void 0 ? void 0 : _responseData$message.toLowerCase().includes('otp')) || ((_responseData$message2 = responseData.message) === null || _responseData$message2 === void 0 ? void 0 : _responseData$message2.toLowerCase().includes('sent')) || response.status === 200;\n      if (isSuccess) {\n        return {\n          success: true,\n          data: {\n            ...responseData,\n            token: extractedToken || 'MANUAL_TOKEN_' + Date.now(),\n            // Fallback token if none found\n            sentTo: responseData.sentTo || responseData.email || (user === null || user === void 0 ? void 0 : user.email) || 'your registered email'\n          }\n        };\n      } else {\n        return {\n          success: false,\n          message: responseData.message || 'Failed to send OTP'\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('‚ùå Change password step 1 failed:', error);\n      console.error('‚ùå Error response:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to send OTP. Please check your current password.'\n      };\n    }\n  };\n\n  // Step 2: Verify OTP and change password\n  const verifyPasswordChangeOTP = async otpData => {\n    console.log('üîê AuthContext: Change password step 2 - Verifying OTP');\n    console.log('üì§ OTP verification data before sending:', {\n      otp: otpData.otp ? 'Present' : 'Missing',\n      hasToken: !!otpData.token,\n      tokenPreview: otpData.token ? otpData.token.substring(0, 20) + '...' : 'None',\n      currentPassword: otpData.currentPassword ? 'Present' : 'Missing',\n      newPassword: otpData.newPassword ? 'Present' : 'Missing'\n    });\n\n    // Ensure we have all required fields\n    if (!otpData.otp) {\n      return {\n        success: false,\n        message: 'OTP is required'\n      };\n    }\n    if (!otpData.token) {\n      return {\n        success: false,\n        message: 'Token is missing. Please try again from the beginning.'\n      };\n    }\n    try {\n      var _responseData$message3, _responseData$message4;\n      const response = await authService.verifyPasswordChangeOTP(otpData);\n      console.log('‚úÖ OTP verification response:', response.data);\n      const responseData = response.data;\n      const isSuccess = responseData.success === true || responseData.success === 'true' || ((_responseData$message3 = responseData.message) === null || _responseData$message3 === void 0 ? void 0 : _responseData$message3.toLowerCase().includes('success')) || ((_responseData$message4 = responseData.message) === null || _responseData$message4 === void 0 ? void 0 : _responseData$message4.toLowerCase().includes('changed')) || response.status === 200;\n      if (isSuccess) {\n        return {\n          success: true,\n          data: responseData\n        };\n      } else {\n        return {\n          success: false,\n          message: responseData.message || 'Invalid OTP'\n        };\n      }\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response7, _error$response8, _error$response8$data;\n      console.error('‚ùå OTP verification failed:', error);\n      console.error('‚ùå Error response:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data);\n\n      // Try alternative endpoints if main one fails\n      if (((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 400 || ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 404) {\n        console.log('üîÑ Trying alternative OTP verification endpoints...');\n        try {\n          console.log('üîÑ Trying alternative endpoint 1...');\n          const altResponse = await authService.verifyPasswordChangeOTPAlt(otpData);\n          console.log('‚úÖ Alternative endpoint 1 success:', altResponse.data);\n          return {\n            success: true,\n            data: altResponse.data\n          };\n        } catch (altError) {\n          console.error('‚ùå Alternative endpoint 1 failed:', altError);\n        }\n        try {\n          console.log('üîÑ Trying alternative endpoint 2...');\n          const confirmResponse = await authService.confirmPasswordChange(otpData);\n          console.log('‚úÖ Alternative endpoint 2 success:', confirmResponse.data);\n          return {\n            success: true,\n            data: confirmResponse.data\n          };\n        } catch (confirmError) {\n          console.error('‚ùå Alternative endpoint 2 failed:', confirmError);\n        }\n      }\n      return {\n        success: false,\n        message: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Invalid OTP. Please try again.'\n      };\n    }\n  };\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout,\n    changePassword,\n    verifyPasswordChangeOTP\n  };\n  console.log('üîÑ AuthContext: Current state:', {\n    isAuthenticated,\n    hasUser: !!user,\n    loading,\n    userName: (user === null || user === void 0 ? void 0 : user.name) || 'None'\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"pnsvw7czjvmiFgw/Bh5bzhjzExE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","authService","cookieUtils","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","initializeAuth","console","log","debugCookies","token","getToken","userData","getUser","hasToken","hasUserData","tokenLength","length","userDataKeys","Object","keys","setAuthToken","error","login","credentials","response","data","accessToken","authToken","key","value","id","email","name","tokenPreview","substring","success","message","setToken","_error$response","_error$response$data","signup","_error$response2","_error$response2$data","logout","clearAuth","removeAuthToken","catch","changePassword","passwordData","currentPassword","newPassword","confirmPassword","_responseData$message","_responseData$message2","extractedToken","responseData","possibleTokenFields","field","foundToken","isSuccess","otpSent","toLowerCase","includes","status","Date","now","sentTo","_error$response3","_error$response4","_error$response4$data","verifyPasswordChangeOTP","otpData","otp","_responseData$message3","_responseData$message4","_error$response5","_error$response6","_error$response7","_error$response8","_error$response8$data","altResponse","verifyPasswordChangeOTPAlt","altError","confirmResponse","confirmPasswordChange","confirmError","hasUser","userName","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport { authService } from '../services/authService';\nimport { cookieUtils } from '../utils/cookieUtils';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const initializeAuth = useCallback(async () => {\n    console.log('üîç AuthContext: Starting authentication initialization');\n    \n    try {\n      cookieUtils.debugCookies();\n      \n      const token = cookieUtils.getToken();\n      const userData = cookieUtils.getUser();\n      \n      console.log('üì¶ Auth data check:', { \n        hasToken: !!token, \n        hasUserData: !!userData,\n        tokenLength: token ? token.length : 0,\n        userDataKeys: userData ? Object.keys(userData) : []\n      });\n      \n      if (token && userData) {\n        console.log('‚úÖ AuthContext: Found auth data in cookies, setting authenticated state');\n        authService.setAuthToken(token);\n        setUser(userData);\n        setIsAuthenticated(true);\n        console.log('‚úÖ AuthContext: User authenticated from cookies:', userData);\n      } else {\n        console.log('‚ùå AuthContext: No valid auth data found in cookies');\n        setUser(null);\n        setIsAuthenticated(false);\n      }\n    } catch (error) {\n      console.error('‚ùå AuthContext: Error initializing auth:', error);\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n    \n    console.log('üîÑ AuthContext: Setting loading to false');\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    console.log('üîÑ AuthProvider: Component mounted, initializing authentication');\n    initializeAuth();\n  }, [initializeAuth]);\n\n  const login = async (credentials) => {\n    console.log('üîê AuthContext: Login attempt started');\n    \n    try {\n      const response = await authService.login(credentials);\n      console.log('‚úÖ Login API Response - Full Structure:', response);\n      console.log('‚úÖ Response.data:', response.data);\n      console.log('‚úÖ Response.data keys:', Object.keys(response.data));\n      \n      // Check different possible response structures\n      let token, userData;\n      \n      if (response.data.token && response.data.user) {\n        token = response.data.token;\n        userData = response.data.user;\n      } else if (response.data.data && response.data.data.token && response.data.data.user) {\n        token = response.data.data.token;\n        userData = response.data.data.user;\n      } else if (response.data.accessToken || response.data.authToken) {\n        token = response.data.accessToken || response.data.authToken;\n        userData = response.data.userData || response.data.user || response.data.data;\n      } else {\n        // Try to find token-like fields\n        for (const key in response.data) {\n          const value = response.data[key];\n          if (typeof value === 'string' && value.length > 20) {\n            token = value;\n          }\n          if (typeof value === 'object' && value !== null && (value.id || value.email || value.name)) {\n            userData = value;\n          }\n        }\n      }\n      \n      console.log('üîç Extracted data:', {\n        hasToken: !!token,\n        tokenPreview: token ? token.substring(0, 20) + '...' : 'None',\n        hasUserData: !!userData,\n        userData: userData\n      });\n      \n      if (!token || !userData) {\n        console.error('‚ùå Could not extract token or user data from response');\n        return { success: false, message: 'Invalid login response structure' };\n      }\n      \n      cookieUtils.setToken(token);\n      cookieUtils.setUser(userData);\n      authService.setAuthToken(token);\n      setUser(userData);\n      setIsAuthenticated(true);\n      \n      console.log('‚úÖ Login successful, user authenticated:', userData);\n      return { success: true, data: { token, user: userData } };\n    } catch (error) {\n      console.error('‚ùå Login failed:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const signup = async (userData) => {\n    console.log('üìù AuthContext: Signup attempt started');\n    \n    try {\n      const response = await authService.signup(userData);\n      console.log('‚úÖ Signup API Response:', response.data);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('‚ùå Signup failed:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Signup failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    console.log('üö™ AuthContext: Logout initiated');\n    cookieUtils.clearAuth();\n    authService.removeAuthToken();\n    setUser(null);\n    setIsAuthenticated(false);\n    \n    authService.logout().catch(error => {\n      console.error('‚ùå Logout API call failed:', error);\n    });\n    \n    console.log('‚úÖ Logout completed');\n  };\n\n  // Step 1: Request password change (sends OTP)\n  const changePassword = async (passwordData) => {\n    console.log('üîê AuthContext: Change password step 1 - Requesting OTP');\n    console.log('üì§ Change password request data:', { \n      currentPassword: '***', \n      newPassword: '***',\n      confirmPassword: '***'\n    });\n    \n    try {\n      const response = await authService.changePassword(passwordData);\n      console.log('‚úÖ Change password step 1 - Full response:', response);\n      console.log('‚úÖ Response data:', response.data);\n      console.log('‚úÖ Response data keys:', Object.keys(response.data));\n      \n      // Look for different possible token field names in the response\n      let extractedToken = null;\n      const responseData = response.data;\n      \n      // Check common token field names\n      const possibleTokenFields = [\n        'token', 'otpToken', 'changeToken', 'verificationToken', \n        'resetToken', 'tempToken', 'sessionToken'\n      ];\n      \n      for (const field of possibleTokenFields) {\n        if (responseData[field]) {\n          extractedToken = responseData[field];\n          console.log(`‚úÖ Found token in field: ${field}`);\n          break;\n        }\n      }\n      \n      // If not found in top level, check if it's nested\n      if (!extractedToken && responseData.data) {\n        for (const field of possibleTokenFields) {\n          if (responseData.data[field]) {\n            extractedToken = responseData.data[field];\n            console.log(`‚úÖ Found token in nested field: data.${field}`);\n            break;\n          }\n        }\n      }\n      \n      // If still not found, look for any string that looks like a token (long strings)\n      if (!extractedToken) {\n        console.log('üîç Searching for token-like strings in response...');\n        for (const key in responseData) {\n          const value = responseData[key];\n          if (typeof value === 'string' && value.length > 10) {\n            console.log(`üîç Potential token found in field \"${key}\": ${value.substring(0, 20)}...`);\n            extractedToken = value;\n            break;\n          }\n        }\n      }\n      \n      console.log('ÔøΩÔøΩ Token extraction result:', {\n        foundToken: !!extractedToken,\n        tokenPreview: extractedToken ? extractedToken.substring(0, 20) + '...' : 'None',\n        tokenLength: extractedToken ? extractedToken.length : 0\n      });\n      \n      // Check if OTP was sent successfully\n      const isSuccess = responseData.success === true || \n                       responseData.success === 'true' ||\n                       responseData.otpSent === true ||\n                       responseData.message?.toLowerCase().includes('otp') ||\n                       responseData.message?.toLowerCase().includes('sent') ||\n                       response.status === 200;\n      \n      if (isSuccess) {\n        return { \n          success: true, \n          data: {\n            ...responseData,\n            token: extractedToken || 'MANUAL_TOKEN_' + Date.now(), // Fallback token if none found\n            sentTo: responseData.sentTo || responseData.email || user?.email || 'your registered email'\n          }\n        };\n      } else {\n        return { \n          success: false, \n          message: responseData.message || 'Failed to send OTP' \n        };\n      }\n      \n    } catch (error) {\n      console.error('‚ùå Change password step 1 failed:', error);\n      console.error('‚ùå Error response:', error.response?.data);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Failed to send OTP. Please check your current password.' \n      };\n    }\n  };\n\n  // Step 2: Verify OTP and change password\n  const verifyPasswordChangeOTP = async (otpData) => {\n    console.log('üîê AuthContext: Change password step 2 - Verifying OTP');\n    console.log('üì§ OTP verification data before sending:', { \n      otp: otpData.otp ? 'Present' : 'Missing',\n      hasToken: !!otpData.token,\n      tokenPreview: otpData.token ? otpData.token.substring(0, 20) + '...' : 'None',\n      currentPassword: otpData.currentPassword ? 'Present' : 'Missing',\n      newPassword: otpData.newPassword ? 'Present' : 'Missing'\n    });\n    \n    // Ensure we have all required fields\n    if (!otpData.otp) {\n      return { success: false, message: 'OTP is required' };\n    }\n    \n    if (!otpData.token) {\n      return { success: false, message: 'Token is missing. Please try again from the beginning.' };\n    }\n    \n    try {\n      const response = await authService.verifyPasswordChangeOTP(otpData);\n      console.log('‚úÖ OTP verification response:', response.data);\n      \n      const responseData = response.data;\n      const isSuccess = responseData.success === true || \n                       responseData.success === 'true' ||\n                       responseData.message?.toLowerCase().includes('success') ||\n                       responseData.message?.toLowerCase().includes('changed') ||\n                       response.status === 200;\n      \n      if (isSuccess) {\n        return { success: true, data: responseData };\n      } else {\n        return { \n          success: false, \n          message: responseData.message || 'Invalid OTP' \n        };\n      }\n      \n    } catch (error) {\n      console.error('‚ùå OTP verification failed:', error);\n      console.error('‚ùå Error response:', error.response?.data);\n      \n      // Try alternative endpoints if main one fails\n      if (error.response?.status === 400 || error.response?.status === 404) {\n        console.log('üîÑ Trying alternative OTP verification endpoints...');\n        \n        try {\n          console.log('üîÑ Trying alternative endpoint 1...');\n          const altResponse = await authService.verifyPasswordChangeOTPAlt(otpData);\n          console.log('‚úÖ Alternative endpoint 1 success:', altResponse.data);\n          return { success: true, data: altResponse.data };\n        } catch (altError) {\n          console.error('‚ùå Alternative endpoint 1 failed:', altError);\n        }\n        \n        try {\n          console.log('üîÑ Trying alternative endpoint 2...');\n          const confirmResponse = await authService.confirmPasswordChange(otpData);\n          console.log('‚úÖ Alternative endpoint 2 success:', confirmResponse.data);\n          return { success: true, data: confirmResponse.data };\n        } catch (confirmError) {\n          console.error('‚ùå Alternative endpoint 2 failed:', confirmError);\n        }\n      }\n      \n      return { \n        success: false, \n        message: error.response?.data?.message || 'Invalid OTP. Please try again.' \n      };\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    signup,\n    logout,\n    changePassword,\n    verifyPasswordChangeOTP\n  };\n\n  console.log('üîÑ AuthContext: Current state:', { \n    isAuthenticated, \n    hasUser: !!user, \n    loading,\n    userName: user?.name || 'None'\n  });\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}