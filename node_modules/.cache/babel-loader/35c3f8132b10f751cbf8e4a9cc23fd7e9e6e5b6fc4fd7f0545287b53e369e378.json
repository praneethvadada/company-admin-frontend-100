{"ast":null,"code":"import api from './api';\nexport const authService = {\n  // Login user\n  login: credentials => {\n    console.log('🔐 authService.login: Making login API call');\n    return api.post('/auth/login', credentials);\n  },\n  // Register new user\n  signup: userData => {\n    console.log('📝 authService.signup: Making signup API call');\n    return api.post('/auth/signup', userData);\n  },\n  // Forgot password - send reset email\n  forgotPassword: email => {\n    console.log('🔑 authService.forgotPassword: Making forgot password API call');\n    return api.post('/auth/request-forgot-password', {\n      email\n    });\n  },\n  // Step 1: Request password change (sends OTP) - Exact API match\n  changePassword: passwordData => {\n    console.log('🔐 authService.changePassword: Step 1 - Requesting password change with OTP');\n    console.log('📦 Request data being sent to /auth/change-password:', {\n      currentPassword: passwordData.currentPassword ? 'Present' : 'Missing',\n      newPassword: passwordData.newPassword ? 'Present' : 'Missing',\n      confirmPassword: passwordData.confirmPassword ? 'Present' : 'Missing'\n    });\n    const requestBody = {\n      currentPassword: passwordData.currentPassword,\n      newPassword: passwordData.newPassword,\n      confirmPassword: passwordData.confirmPassword\n    };\n    console.log('📤 Exact request body:', JSON.stringify(requestBody, null, 2));\n    return api.post('/auth/change-password', requestBody);\n  },\n  // Step 2: Verify OTP and complete password change - Exact API match\n  verifyPasswordChangeOTP: otpData => {\n    console.log('🔐 authService.verifyPasswordChangeOTP: Step 2 - Verifying OTP');\n    console.log('📦 OTP verification data received in authService:', {\n      token: otpData.token ? 'Present' : 'Missing',\n      tokenValue: otpData.token,\n      tokenType: typeof otpData.token,\n      tokenLength: otpData.token ? otpData.token.length : 0,\n      otp: otpData.otp ? 'Present' : 'Missing',\n      otpValue: otpData.otp,\n      otpType: typeof otpData.otp\n    });\n\n    // Exact API structure as specified\n    const requestBody = {\n      token: otpData.token,\n      otp: otpData.otp\n    };\n    console.log('📤 Final request body for /auth/verify-password-change:');\n    console.log('�� Request body object:', requestBody);\n    console.log('📤 Request body JSON:', JSON.stringify(requestBody, null, 2));\n    return api.post('/auth/verify-password-change', requestBody);\n  },\n  // Logout user\n  logout: () => {\n    console.log('🚪 authService.logout: Making logout API call');\n    return api.post('/auth/logout');\n  },\n  // Set auth token in headers\n  setAuthToken: token => {\n    console.log('🔑 authService.setAuthToken: Setting auth token in API headers');\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  // Remove auth token from headers\n  removeAuthToken: () => {\n    console.log('🗑️ authService.removeAuthToken: Removing auth token from API headers');\n    delete api.defaults.headers.common['Authorization'];\n  },\n  // Dashboard API calls\n  getDashboardStats: () => {\n    console.log('📊 authService.getDashboardStats: Making dashboard stats API call');\n    return api.get('/admin/dashboard/stats');\n  },\n  // Domain management\n  getDomains: () => {\n    console.log('📁 authService.getDomains: Making get domains API call');\n    return api.get('/admin/domains');\n  },\n  // Project management\n  getProjects: () => {\n    console.log('📋 authService.getProjects: Making get projects API call');\n    return api.get('/admin/projects');\n  },\n  // Leads management\n  getLeads: () => {\n    console.log('👥 authService.getLeads: Making get leads API call');\n    return api.get('/admin/leads');\n  }\n};","map":{"version":3,"names":["api","authService","login","credentials","console","log","post","signup","userData","forgotPassword","email","changePassword","passwordData","currentPassword","newPassword","confirmPassword","requestBody","JSON","stringify","verifyPasswordChangeOTP","otpData","token","tokenValue","tokenType","tokenLength","length","otp","otpValue","otpType","logout","setAuthToken","defaults","headers","common","removeAuthToken","getDashboardStats","get","getDomains","getProjects","getLeads"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/services/authService.js"],"sourcesContent":["import api from './api';\n\nexport const authService = {\n  // Login user\n  login: (credentials) => {\n    console.log('🔐 authService.login: Making login API call');\n    return api.post('/auth/login', credentials);\n  },\n\n  // Register new user\n  signup: (userData) => {\n    console.log('📝 authService.signup: Making signup API call');\n    return api.post('/auth/signup', userData);\n  },\n\n  // Forgot password - send reset email\n  forgotPassword: (email) => {\n    console.log('🔑 authService.forgotPassword: Making forgot password API call');\n    return api.post('/auth/request-forgot-password', { email });\n  },\n\n  // Step 1: Request password change (sends OTP) - Exact API match\n  changePassword: (passwordData) => {\n    console.log('🔐 authService.changePassword: Step 1 - Requesting password change with OTP');\n    console.log('📦 Request data being sent to /auth/change-password:', {\n      currentPassword: passwordData.currentPassword ? 'Present' : 'Missing',\n      newPassword: passwordData.newPassword ? 'Present' : 'Missing',\n      confirmPassword: passwordData.confirmPassword ? 'Present' : 'Missing'\n    });\n    \n    const requestBody = {\n      currentPassword: passwordData.currentPassword,\n      newPassword: passwordData.newPassword,\n      confirmPassword: passwordData.confirmPassword\n    };\n    \n    console.log('📤 Exact request body:', JSON.stringify(requestBody, null, 2));\n    \n    return api.post('/auth/change-password', requestBody);\n  },\n\n  // Step 2: Verify OTP and complete password change - Exact API match\n  verifyPasswordChangeOTP: (otpData) => {\n    console.log('🔐 authService.verifyPasswordChangeOTP: Step 2 - Verifying OTP');\n    console.log('📦 OTP verification data received in authService:', {\n      token: otpData.token ? 'Present' : 'Missing',\n      tokenValue: otpData.token,\n      tokenType: typeof otpData.token,\n      tokenLength: otpData.token ? otpData.token.length : 0,\n      otp: otpData.otp ? 'Present' : 'Missing',\n      otpValue: otpData.otp,\n      otpType: typeof otpData.otp\n    });\n    \n    // Exact API structure as specified\n    const requestBody = {\n      token: otpData.token,\n      otp: otpData.otp\n    };\n    \n    console.log('📤 Final request body for /auth/verify-password-change:');\n    console.log('�� Request body object:', requestBody);\n    console.log('📤 Request body JSON:', JSON.stringify(requestBody, null, 2));\n    \n    return api.post('/auth/verify-password-change', requestBody);\n  },\n\n  // Logout user\n  logout: () => {\n    console.log('🚪 authService.logout: Making logout API call');\n    return api.post('/auth/logout');\n  },\n\n  // Set auth token in headers\n  setAuthToken: (token) => {\n    console.log('🔑 authService.setAuthToken: Setting auth token in API headers');\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n\n  // Remove auth token from headers\n  removeAuthToken: () => {\n    console.log('🗑️ authService.removeAuthToken: Removing auth token from API headers');\n    delete api.defaults.headers.common['Authorization'];\n  },\n\n  // Dashboard API calls\n  getDashboardStats: () => {\n    console.log('📊 authService.getDashboardStats: Making dashboard stats API call');\n    return api.get('/admin/dashboard/stats');\n  },\n\n  // Domain management\n  getDomains: () => {\n    console.log('📁 authService.getDomains: Making get domains API call');\n    return api.get('/admin/domains');\n  },\n\n  // Project management\n  getProjects: () => {\n    console.log('📋 authService.getProjects: Making get projects API call');\n    return api.get('/admin/projects');\n  },\n\n  // Leads management\n  getLeads: () => {\n    console.log('👥 authService.getLeads: Making get leads API call');\n    return api.get('/admin/leads');\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}