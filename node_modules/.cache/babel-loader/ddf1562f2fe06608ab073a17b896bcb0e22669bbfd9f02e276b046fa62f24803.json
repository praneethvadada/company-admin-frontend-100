{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/DomainManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n// src/components/domains/DomainManagement.js - REPLACE YOUR EXISTING FILE\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // ADD THIS IMPORT\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport { FiPlus, FiEdit, FiTrash2, FiSearch, FiGrid, FiList, FiFolder, FiChevronRight, FiMoreVertical, FiSettings // ADD THIS IMPORT\n} from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DomainManagement = () => {\n  _s();\n  console.log('🚀 DOMAIN MANAGEMENT - Component rendering/mounting');\n  const navigate = useNavigate(); // ADD THIS LINE\n  const [domains, setDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0\n  });\n  const [filters, setFilters] = useState({\n    search: '',\n    isActive: true,\n    sortBy: 'title',\n    sortOrder: 'ASC'\n  });\n  const [viewMode, setViewMode] = useState('grid'); // 'grid' or 'list'\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingDomain, setEditingDomain] = useState(null);\n  const [selectedDomain, setSelectedDomain] = useState(null);\n  console.log('📊 DOMAIN MANAGEMENT - Current state:', {\n    domainsCount: domains.length,\n    loading,\n    pagination,\n    filters,\n    viewMode,\n    showAddModal,\n    editingDomain: !!editingDomain,\n    selectedDomain: !!selectedDomain\n  });\n  useEffect(() => {\n    console.log('🔄 DOMAIN MANAGEMENT - useEffect triggered for fetchDomains');\n    console.log('📋 DOMAIN MANAGEMENT - Current filters:', filters);\n    console.log('📋 DOMAIN MANAGEMENT - Current pagination:', pagination);\n    fetchDomains();\n  }, [filters, pagination.currentPage]);\n  const fetchDomains = async () => {\n    try {\n      var _response$data, _response$data2, _response$data2$data, _response$data3, _response$data4, _response$data4$data;\n      setLoading(true);\n      const params = {\n        page: pagination.currentPage,\n        limit: 10,\n        ...filters\n      };\n      console.log('🔍 DOMAIN FETCH - Starting API call');\n      console.log('📋 DOMAIN FETCH - Request params:', params);\n      console.log('🌐 DOMAIN FETCH - API URL: /admin/domains with params:', new URLSearchParams(params).toString());\n      const response = await authService.getDomains(params);\n      console.log('✅ DOMAIN FETCH - Full API Response:', response);\n      console.log('📦 DOMAIN FETCH - Response status:', response.status);\n      console.log('📦 DOMAIN FETCH - Response headers:', response.headers);\n      console.log('📦 DOMAIN FETCH - Response data:', response.data);\n      console.log('📦 DOMAIN FETCH - Response data type:', typeof response.data);\n      console.log('📦 DOMAIN FETCH - Response data keys:', Object.keys(response.data || {}));\n      const domains = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.domains) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$data = _response$data2.data) === null || _response$data2$data === void 0 ? void 0 : _response$data2$data.domains) || [];\n      const paginationData = ((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.pagination) || ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : (_response$data4$data = _response$data4.data) === null || _response$data4$data === void 0 ? void 0 : _response$data4$data.pagination) || pagination;\n      console.log('🎯 DOMAIN FETCH - Extracted domains:', domains);\n      console.log('🎯 DOMAIN FETCH - Extracted pagination:', paginationData);\n      console.log('🎯 DOMAIN FETCH - Domains count:', domains.length);\n      setDomains(domains);\n      setPagination(paginationData);\n    } catch (error) {\n      var _error$response;\n      console.error('❌ DOMAIN FETCH - Error occurred:', error);\n      console.error('❌ DOMAIN FETCH - Error response:', error.response);\n      console.error('❌ DOMAIN FETCH - Error response data:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.error('❌ DOMAIN FETCH - Error message:', error.message);\n      toast.error('Failed to fetch domains');\n    } finally {\n      setLoading(false);\n      console.log('🏁 DOMAIN FETCH - Loading set to false');\n    }\n  };\n  const handleSearch = searchTerm => {\n    console.log('🔍 DOMAIN SEARCH - Search initiated');\n    console.log('📋 DOMAIN SEARCH - Search term:', searchTerm);\n    console.log('📋 DOMAIN SEARCH - Previous filters:', filters);\n    const newFilters = {\n      ...filters,\n      search: searchTerm\n    };\n    setFilters(prev => ({\n      ...prev,\n      search: searchTerm\n    }));\n    setPagination(prev => ({\n      ...prev,\n      currentPage: 1\n    }));\n    console.log('📋 DOMAIN SEARCH - New filters:', newFilters);\n    console.log('📋 DOMAIN SEARCH - Reset pagination to page 1');\n  };\n  const handleAddDomain = () => {\n    console.log('➕ DOMAIN MANAGEMENT - Add domain clicked');\n    setEditingDomain(null);\n    setShowAddModal(true);\n    console.log('📊 DOMAIN MANAGEMENT - Modal state changed:', {\n      showAddModal: true,\n      editingDomain: null\n    });\n  };\n  const handleEditDomain = domain => {\n    console.log('✏️ DOMAIN MANAGEMENT - Edit domain clicked');\n    console.log('📋 DOMAIN MANAGEMENT - Domain to edit:', domain);\n    setEditingDomain(domain);\n    setShowAddModal(true);\n    console.log('📊 DOMAIN MANAGEMENT - Modal state changed:', {\n      showAddModal: true,\n      editingDomain: domain\n    });\n  };\n\n  // ADD THIS NEW FUNCTION\n  const handleManageSubDomains = domain => {\n    console.log('🔧 DOMAIN MANAGEMENT - Manage subdomains clicked');\n    console.log('📋 DOMAIN MANAGEMENT - Domain for subdomain management:', domain);\n    console.log('🌐 DOMAIN MANAGEMENT - Navigating to: /domains/' + domain.id + '/subdomains');\n    navigate(`/domains/${domain.id}/subdomains`);\n  };\n  const handleDeleteDomain = async domain => {\n    if (!window.confirm(`Are you sure you want to delete \"${domain.title}\"?`)) {\n      return;\n    }\n    try {\n      console.log('🗑️ DOMAIN DELETE - Starting API call');\n      console.log('📋 DOMAIN DELETE - Domain to delete:', domain);\n      console.log('🌐 DOMAIN DELETE - API URL: /admin/domains/' + domain.id);\n      const response = await authService.deleteDomain(domain.id);\n      console.log('✅ DOMAIN DELETE - Full API Response:', response);\n      console.log('📦 DOMAIN DELETE - Response status:', response.status);\n      console.log('📦 DOMAIN DELETE - Response data:', response.data);\n      toast.success('Domain deleted successfully');\n      console.log('🎯 DOMAIN DELETE - Success, refreshing domains list');\n      fetchDomains();\n    } catch (error) {\n      var _error$response2;\n      console.error('❌ DOMAIN DELETE - Error occurred:', error);\n      console.error('❌ DOMAIN DELETE - Error response:', error.response);\n      console.error('❌ DOMAIN DELETE - Error response data:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n      console.error('❌ DOMAIN DELETE - Error message:', error.message);\n      toast.error('Failed to delete domain');\n    }\n  };\n  const handleViewHierarchy = async domain => {\n    try {\n      var _response$data5;\n      console.log('🌳 DOMAIN HIERARCHY - Starting API call');\n      console.log('📋 DOMAIN HIERARCHY - Domain for hierarchy:', domain);\n      console.log('🌐 DOMAIN HIERARCHY - API URL: /admin/domains/' + domain.id + '/hierarchy');\n      const response = await authService.getDomainHierarchy(domain.id);\n      console.log('✅ DOMAIN HIERARCHY - Full API Response:', response);\n      console.log('📦 DOMAIN HIERARCHY - Response status:', response.status);\n      console.log('📦 DOMAIN HIERARCHY - Response data:', response.data);\n      console.log('📦 DOMAIN HIERARCHY - Response data type:', typeof response.data);\n      console.log('📦 DOMAIN HIERARCHY - Response data keys:', Object.keys(response.data || {}));\n      const hierarchyData = ((_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.data) || response.data;\n      console.log('🎯 DOMAIN HIERARCHY - Extracted hierarchy data:', hierarchyData);\n      setSelectedDomain(hierarchyData);\n    } catch (error) {\n      var _error$response3;\n      console.error('❌ DOMAIN HIERARCHY - Error occurred:', error);\n      console.error('❌ DOMAIN HIERARCHY - Error response:', error.response);\n      console.error('❌ DOMAIN HIERARCHY - Error response data:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      console.error('❌ DOMAIN HIERARCHY - Error message:', error.message);\n      toast.error('Failed to load domain hierarchy');\n    }\n  };\n  if (loading && domains.length === 0) {\n    console.log('⏳ DOMAIN MANAGEMENT - Showing loading state');\n    console.log('📊 DOMAIN MANAGEMENT - Loading:', loading, 'Domains count:', domains.length);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading domains...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n  console.log('🎨 DOMAIN MANAGEMENT - Rendering main component');\n  console.log('📊 DOMAIN MANAGEMENT - Final render state:', {\n    domainsCount: domains.length,\n    loading,\n    viewMode,\n    showAddModal,\n    selectedDomain: !!selectedDomain\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"domain-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Domain Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Manage your project domains and categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        onClick: handleAddDomain,\n        children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), \"Add Domain\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(FiSearch, {\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search domains...\",\n          value: filters.search,\n          onChange: e => handleSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.sortBy,\n            onChange: e => setFilters(prev => ({\n              ...prev,\n              sortBy: e.target.value\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"title\",\n              children: \"Sort by Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"createdAt\",\n              children: \"Sort by Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"projectCount\",\n              children: \"Sort by Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-mode-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: viewMode === 'grid' ? 'active' : '',\n            onClick: () => setViewMode('grid'),\n            children: /*#__PURE__*/_jsxDEV(FiGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: viewMode === 'list' ? 'active' : '',\n            onClick: () => setViewMode('list'),\n            children: /*#__PURE__*/_jsxDEV(FiList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `domains-container ${viewMode}`,\n      children: domains.length > 0 ? domains.map(domain => /*#__PURE__*/_jsxDEV(DomainCard, {\n        domain: domain,\n        viewMode: viewMode,\n        onEdit: handleEditDomain,\n        onDelete: handleDeleteDomain,\n        onViewHierarchy: handleViewHierarchy,\n        onManageSubDomains: handleManageSubDomains // ADD THIS LINE\n      }, domain.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(FiFolder, {\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No domains found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create your first domain to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: handleAddDomain,\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), \"Add Domain\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), pagination.totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: pagination.currentPage === 1,\n        onClick: () => setPagination(prev => ({\n          ...prev,\n          currentPage: prev.currentPage - 1\n        })),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-info\",\n        children: [\"Page \", pagination.currentPage, \" of \", pagination.totalPages, \"(\", pagination.totalItems, \" total)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: pagination.currentPage === pagination.totalPages,\n        onClick: () => setPagination(prev => ({\n          ...prev,\n          currentPage: prev.currentPage + 1\n        })),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(DomainModal, {\n      domain: editingDomain,\n      onClose: () => setShowAddModal(false),\n      onSave: () => {\n        setShowAddModal(false);\n        fetchDomains();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), selectedDomain && /*#__PURE__*/_jsxDEV(HierarchyModal, {\n      domain: selectedDomain,\n      onClose: () => setSelectedDomain(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n\n// UPDATED Domain Card Component\n_s(DomainManagement, \"aK5yakz6d+tI55IKiwkn0r1JQIs=\", false, function () {\n  return [useNavigate];\n});\n_c = DomainManagement;\nconst DomainCard = ({\n  domain,\n  viewMode,\n  onEdit,\n  onDelete,\n  onViewHierarchy,\n  onManageSubDomains\n}) => {\n  _s2();\n  const [showMenu, setShowMenu] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `domain-card ${viewMode}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-icon\",\n        children: /*#__PURE__*/_jsxDEV(FiFolder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"domain-title\",\n          children: domain.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"domain-description\",\n          children: domain.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowMenu(!showMenu),\n          children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onManageSubDomains(domain);\n              setShowMenu(false);\n            },\n            className: \"primary-option\",\n            children: [/*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), \" Manage SubDomains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onEdit(domain);\n              setShowMenu(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), \" Edit Domain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onViewHierarchy(domain);\n              setShowMenu(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), \" View Hierarchy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onDelete(domain);\n              setShowMenu(false);\n            },\n            className: \"danger\",\n            children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), \" Delete Domain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: domain.subDomainCount || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Sub-domains\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: domain.projectCount || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status ${domain.isActive ? 'active' : 'inactive'}`,\n          children: domain.isActive ? 'Active' : 'Inactive'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 5\n  }, this);\n};\n\n// // Domain Modal Component\n// const DomainModal = ({ domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: domain?.title || '',\n//     description: domain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       console.log('💾 DOMAIN SAVE - Starting API call');\n//       console.log('📋 DOMAIN SAVE - Form data:', formData);\n//       console.log('📋 DOMAIN SAVE - Is editing?', !!domain);\n//       console.log('📋 DOMAIN SAVE - Domain ID (if editing):', domain?.id);\n\n//       if (domain) {\n//         console.log('🌐 DOMAIN SAVE - API URL: /admin/domains/' + domain.id + ' (PUT)');\n//         const response = await authService.updateDomain(domain.id, formData);\n\n//         console.log('✅ DOMAIN UPDATE - Full API Response:', response);\n//         console.log('📦 DOMAIN UPDATE - Response status:', response.status);\n//         console.log('📦 DOMAIN UPDATE - Response data:', response.data);\n\n//         toast.success('Domain updated successfully');\n//       } else {\n//         console.log('🌐 DOMAIN SAVE - API URL: /admin/domains (POST)');\n//         const response = await authService.createDomain(formData);\n\n//         console.log('✅ DOMAIN CREATE - Full API Response:', response);\n//         console.log('📦 DOMAIN CREATE - Response status:', response.status);\n//         console.log('📦 DOMAIN CREATE - Response data:', response.data);\n\n//         toast.success('Domain created successfully');\n//       }\n\n//       console.log('🎯 DOMAIN SAVE - Success, calling onSave callback');\n//       onSave();\n//     } catch (error) {\n//       console.error('❌ DOMAIN SAVE - Error occurred:', error);\n//       console.error('❌ DOMAIN SAVE - Error response:', error.response);\n//       console.error('❌ DOMAIN SAVE - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN SAVE - Error message:', error.message);\n//       toast.error('Failed to save domain');\n//     } finally {\n//       setLoading(false);\n//       console.log('🏁 DOMAIN SAVE - Loading set to false');\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{domain ? 'Edit Domain' : 'Add New Domain'}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Domain Title</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//             />\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Saving...' : 'Save'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// FINAL CORRECTED VERSION - REPLACE ENTIRELY\n\n// Domain Modal Component\n_s2(DomainCard, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c2 = DomainCard;\nconst DomainModal = ({\n  domain,\n  onClose,\n  onSave\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    title: (domain === null || domain === void 0 ? void 0 : domain.title) || '',\n    description: (domain === null || domain === void 0 ? void 0 : domain.description) || ''\n  });\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      console.log('💾 DOMAIN SAVE - Starting API call');\n      console.log('📋 DOMAIN SAVE - Form data:', formData);\n      console.log('📋 DOMAIN SAVE - Is editing?', !!domain);\n      console.log('📋 DOMAIN SAVE - Domain ID (if editing):', domain === null || domain === void 0 ? void 0 : domain.id);\n      if (domain) {\n        console.log('🌐 DOMAIN SAVE - API URL: /admin/domains/' + domain.id + ' (PUT)');\n        const response = await authService.updateDomain(domain.id, formData);\n        console.log('✅ DOMAIN UPDATE - Full API Response:', response);\n        console.log('📦 DOMAIN UPDATE - Response status:', response.status);\n        console.log('📦 DOMAIN UPDATE - Response data:', response.data);\n        toast.success('Domain updated successfully');\n      } else {\n        console.log('🌐 DOMAIN SAVE - API URL: /admin/domains (POST)');\n        const response = await authService.createDomain(formData);\n        console.log('✅ DOMAIN CREATE - Full API Response:', response);\n        console.log('📦 DOMAIN CREATE - Response status:', response.status);\n        console.log('📦 DOMAIN CREATE - Response data:', response.data);\n        toast.success('Domain created successfully');\n      }\n      console.log('🎯 DOMAIN SAVE - Success, calling onSave callback');\n      onSave();\n    } catch (error) {\n      var _error$response4;\n      console.error('❌ DOMAIN SAVE - Error occurred:', error);\n      console.error('❌ DOMAIN SAVE - Error response:', error.response);\n      console.error('❌ DOMAIN SAVE - Error response data:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n      console.error('❌ DOMAIN SAVE - Error message:', error.message);\n      toast.error('Failed to save domain');\n    } finally {\n      setLoading(false);\n      console.log('🏁 DOMAIN SAVE - Loading set to false');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: domain ? 'Edit Domain' : 'Add New Domain'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Domain Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              description: e.target.value\n            })),\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading,\n            children: loading ? 'Saving...' : 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 564,\n    columnNumber: 5\n  }, this);\n};\n\n// Hierarchy Modal Component\n_s3(DomainModal, \"slf2vEcRg1/0PRL0+hsz4LpG4P8=\");\n_c3 = DomainModal;\nconst HierarchyModal = ({\n  domain,\n  onClose\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Domain Hierarchy: \", domain.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hierarchy-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hierarchy-tree\",\n          children: domain.subDomains && domain.subDomains.length > 0 ? domain.subDomains.map(subDomain => /*#__PURE__*/_jsxDEV(HierarchyNode, {\n            node: subDomain,\n            level: 0\n          }, subDomain.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No sub-domains found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 609,\n    columnNumber: 5\n  }, this);\n};\n\n// Hierarchy Node Component\n_c4 = HierarchyModal;\nconst HierarchyNode = ({\n  node,\n  level\n}) => {\n  _s4();\n  const [expanded, setExpanded] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `hierarchy-node level-${level}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-header\",\n      children: [node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expand-button\",\n        onClick: () => setExpanded(!expanded),\n        children: /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          className: expanded ? 'expanded' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FiFolder, {\n        className: \"node-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"node-title\",\n        children: node.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this), node.projects && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"project-count\",\n        children: [\"(\", node.projects.length, \" projects)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), expanded && node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-children\",\n      children: node.children.map(child => /*#__PURE__*/_jsxDEV(HierarchyNode, {\n        node: child,\n        level: level + 1\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 637,\n    columnNumber: 5\n  }, this);\n};\n_s4(HierarchyNode, \"NZEs4N34I2vU569ODzuIjdsqMlo=\");\n_c5 = HierarchyNode;\nexport default DomainManagement;\n\n// // src/components/domains/DomainManagement.js - NEW FILE\n// import React, { useState, useEffect } from 'react';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiSearch,\n//   FiGrid,\n//   FiList,\n//   FiFolder,\n//   FiChevronRight,\n//   FiMoreVertical\n// } from 'react-icons/fi';\n\n// const DomainManagement = () => {\n//   console.log('🚀 DOMAIN MANAGEMENT - Component rendering/mounting');\n\n//   const [domains, setDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [pagination, setPagination] = useState({\n//     currentPage: 1,\n//     totalPages: 1,\n//     totalItems: 0\n//   });\n//   const [filters, setFilters] = useState({\n//     search: '',\n//     isActive: true,\n//     sortBy: 'title',\n//     sortOrder: 'ASC'\n//   });\n//   const [viewMode, setViewMode] = useState('grid'); // 'grid' or 'list'\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingDomain, setEditingDomain] = useState(null);\n//   const [selectedDomain, setSelectedDomain] = useState(null);\n\n//   console.log('📊 DOMAIN MANAGEMENT - Current state:', {\n//     domainsCount: domains.length,\n//     loading,\n//     pagination,\n//     filters,\n//     viewMode,\n//     showAddModal,\n//     editingDomain: !!editingDomain,\n//     selectedDomain: !!selectedDomain\n//   });\n\n//   useEffect(() => {\n//     console.log('🔄 DOMAIN MANAGEMENT - useEffect triggered for fetchDomains');\n//     console.log('📋 DOMAIN MANAGEMENT - Current filters:', filters);\n//     console.log('📋 DOMAIN MANAGEMENT - Current pagination:', pagination);\n//     fetchDomains();\n//   }, [filters, pagination.currentPage]);\n\n//   const fetchDomains = async () => {\n//     try {\n//       setLoading(true);\n//       const params = {\n//         page: pagination.currentPage,\n//         limit: 10,\n//         ...filters\n//       };\n\n//       console.log('🔍 DOMAIN FETCH - Starting API call');\n//       console.log('📋 DOMAIN FETCH - Request params:', params);\n//       console.log('🌐 DOMAIN FETCH - API URL: /admin/domains with params:', new URLSearchParams(params).toString());\n\n//       const response = await authService.getDomains(params);\n\n//       console.log('✅ DOMAIN FETCH - Full API Response:', response);\n//       console.log('📦 DOMAIN FETCH - Response status:', response.status);\n//       console.log('📦 DOMAIN FETCH - Response headers:', response.headers);\n//       console.log('📦 DOMAIN FETCH - Response data:', response.data);\n//       console.log('📦 DOMAIN FETCH - Response data type:', typeof response.data);\n//       console.log('📦 DOMAIN FETCH - Response data keys:', Object.keys(response.data || {}));\n\n//       const domains = response.data?.domains || response.data?.data?.domains || [];\n//       const paginationData = response.data?.pagination || response.data?.data?.pagination || pagination;\n\n//       console.log('🎯 DOMAIN FETCH - Extracted domains:', domains);\n//       console.log('🎯 DOMAIN FETCH - Extracted pagination:', paginationData);\n//       console.log('🎯 DOMAIN FETCH - Domains count:', domains.length);\n\n//       setDomains(domains);\n//       setPagination(paginationData);\n//     } catch (error) {\n//       console.error('❌ DOMAIN FETCH - Error occurred:', error);\n//       console.error('❌ DOMAIN FETCH - Error response:', error.response);\n//       console.error('❌ DOMAIN FETCH - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN FETCH - Error message:', error.message);\n//       toast.error('Failed to fetch domains');\n//     } finally {\n//       setLoading(false);\n//       console.log('🏁 DOMAIN FETCH - Loading set to false');\n//     }\n//   };\n\n//   const handleSearch = (searchTerm) => {\n//     console.log('🔍 DOMAIN SEARCH - Search initiated');\n//     console.log('📋 DOMAIN SEARCH - Search term:', searchTerm);\n//     console.log('📋 DOMAIN SEARCH - Previous filters:', filters);\n\n//     const newFilters = { ...filters, search: searchTerm };\n//     setFilters(prev => ({ ...prev, search: searchTerm }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n\n//     console.log('📋 DOMAIN SEARCH - New filters:', newFilters);\n//     console.log('📋 DOMAIN SEARCH - Reset pagination to page 1');\n//   };\n\n//   const handleAddDomain = () => {\n//     console.log('➕ DOMAIN MANAGEMENT - Add domain clicked');\n//     setEditingDomain(null);\n//     setShowAddModal(true);\n//     console.log('📊 DOMAIN MANAGEMENT - Modal state changed:', { showAddModal: true, editingDomain: null });\n//   };\n\n//   const handleEditDomain = (domain) => {\n//     console.log('✏️ DOMAIN MANAGEMENT - Edit domain clicked');\n//     console.log('📋 DOMAIN MANAGEMENT - Domain to edit:', domain);\n//     setEditingDomain(domain);\n//     setShowAddModal(true);\n//     console.log('📊 DOMAIN MANAGEMENT - Modal state changed:', { showAddModal: true, editingDomain: domain });\n//   };\n\n//   const handleDeleteDomain = async (domain) => {\n//     if (!window.confirm(`Are you sure you want to delete \"${domain.title}\"?`)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('🗑️ DOMAIN DELETE - Starting API call');\n//       console.log('📋 DOMAIN DELETE - Domain to delete:', domain);\n//       console.log('🌐 DOMAIN DELETE - API URL: /admin/domains/' + domain.id);\n\n//       const response = await authService.deleteDomain(domain.id);\n\n//       console.log('✅ DOMAIN DELETE - Full API Response:', response);\n//       console.log('📦 DOMAIN DELETE - Response status:', response.status);\n//       console.log('📦 DOMAIN DELETE - Response data:', response.data);\n\n//       toast.success('Domain deleted successfully');\n//       console.log('🎯 DOMAIN DELETE - Success, refreshing domains list');\n//       fetchDomains();\n//     } catch (error) {\n//       console.error('❌ DOMAIN DELETE - Error occurred:', error);\n//       console.error('❌ DOMAIN DELETE - Error response:', error.response);\n//       console.error('❌ DOMAIN DELETE - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN DELETE - Error message:', error.message);\n//       toast.error('Failed to delete domain');\n//     }\n//   };\n\n//   const handleViewHierarchy = async (domain) => {\n//     try {\n//       console.log('🌳 DOMAIN HIERARCHY - Starting API call');\n//       console.log('📋 DOMAIN HIERARCHY - Domain for hierarchy:', domain);\n//       console.log('🌐 DOMAIN HIERARCHY - API URL: /admin/domains/' + domain.id + '/hierarchy');\n\n//       const response = await authService.getDomainHierarchy(domain.id);\n\n//       console.log('✅ DOMAIN HIERARCHY - Full API Response:', response);\n//       console.log('📦 DOMAIN HIERARCHY - Response status:', response.status);\n//       console.log('📦 DOMAIN HIERARCHY - Response data:', response.data);\n//       console.log('📦 DOMAIN HIERARCHY - Response data type:', typeof response.data);\n//       console.log('📦 DOMAIN HIERARCHY - Response data keys:', Object.keys(response.data || {}));\n\n//       const hierarchyData = response.data?.data || response.data;\n//       console.log('🎯 DOMAIN HIERARCHY - Extracted hierarchy data:', hierarchyData);\n\n//       setSelectedDomain(hierarchyData);\n//     } catch (error) {\n//       console.error('❌ DOMAIN HIERARCHY - Error occurred:', error);\n//       console.error('❌ DOMAIN HIERARCHY - Error response:', error.response);\n//       console.error('❌ DOMAIN HIERARCHY - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN HIERARCHY - Error message:', error.message);\n//       toast.error('Failed to load domain hierarchy');\n//     }\n//   };\n\n//   if (loading && domains.length === 0) {\n//     console.log('⏳ DOMAIN MANAGEMENT - Showing loading state');\n//     console.log('📊 DOMAIN MANAGEMENT - Loading:', loading, 'Domains count:', domains.length);\n\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading domains...</p>\n//       </div>\n//     );\n//   }\n\n//   console.log('🎨 DOMAIN MANAGEMENT - Rendering main component');\n//   console.log('📊 DOMAIN MANAGEMENT - Final render state:', {\n//     domainsCount: domains.length,\n//     loading,\n//     viewMode,\n//     showAddModal,\n//     selectedDomain: !!selectedDomain\n//   });\n\n//   return (\n//     <div className=\"domain-management\">\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <h1>Domain Management</h1>\n//           <p>Manage your project domains and categories</p>\n//         </div>\n//         <button className=\"primary-button\" onClick={handleAddDomain}>\n//           <FiPlus />\n//           Add Domain\n//         </button>\n//       </div>\n\n//       {/* Filters and Controls */}\n//       <div className=\"controls-section\">\n//         <div className=\"search-bar\">\n//           <FiSearch className=\"search-icon\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search domains...\"\n//             value={filters.search}\n//             onChange={(e) => handleSearch(e.target.value)}\n//           />\n//         </div>\n\n//         <div className=\"view-controls\">\n//           <div className=\"filter-group\">\n//             <select\n//               value={filters.sortBy}\n//               onChange={(e) => setFilters(prev => ({ ...prev, sortBy: e.target.value }))}\n//             >\n//               <option value=\"title\">Sort by Title</option>\n//               <option value=\"createdAt\">Sort by Date</option>\n//               <option value=\"projectCount\">Sort by Projects</option>\n//             </select>\n//           </div>\n\n//           <div className=\"view-mode-toggle\">\n//             <button\n//               className={viewMode === 'grid' ? 'active' : ''}\n//               onClick={() => setViewMode('grid')}\n//             >\n//               <FiGrid />\n//             </button>\n//             <button\n//               className={viewMode === 'list' ? 'active' : ''}\n//               onClick={() => setViewMode('list')}\n//             >\n//               <FiList />\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domains Display */}\n//       <div className={`domains-container ${viewMode}`}>\n//         {domains.length > 0 ? (\n//           domains.map((domain) => (\n//             <DomainCard\n//               key={domain.id}\n//               domain={domain}\n//               viewMode={viewMode}\n//               onEdit={handleEditDomain}\n//               onDelete={handleDeleteDomain}\n//               onViewHierarchy={handleViewHierarchy}\n//             />\n//           ))\n//         ) : (\n//           <div className=\"empty-state\">\n//             <FiFolder size={48} />\n//             <h3>No domains found</h3>\n//             <p>Create your first domain to get started</p>\n//             <button className=\"primary-button\" onClick={handleAddDomain}>\n//               <FiPlus />\n//               Add Domain\n//             </button>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Pagination */}\n//       {pagination.totalPages > 1 && (\n//         <div className=\"pagination\">\n//           <button\n//             disabled={pagination.currentPage === 1}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n//           >\n//             Previous\n//           </button>\n\n//           <span className=\"page-info\">\n//             Page {pagination.currentPage} of {pagination.totalPages}\n//             ({pagination.totalItems} total)\n//           </span>\n\n//           <button\n//             disabled={pagination.currentPage === pagination.totalPages}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Add/Edit Modal */}\n//       {showAddModal && (\n//         <DomainModal\n//           domain={editingDomain}\n//           onClose={() => setShowAddModal(false)}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             fetchDomains();\n//           }}\n//         />\n//       )}\n\n//       {/* Hierarchy View Modal */}\n//       {selectedDomain && (\n//         <HierarchyModal\n//           domain={selectedDomain}\n//           onClose={() => setSelectedDomain(null)}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // Domain Card Component\n// const DomainCard = ({ domain, viewMode, onEdit, onDelete, onViewHierarchy }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   return (\n//     <div className={`domain-card ${viewMode}`}>\n//       <div className=\"domain-header\">\n//         <div className=\"domain-icon\">\n//           <FiFolder />\n//         </div>\n//         <div className=\"domain-info\">\n//           <h3 className=\"domain-title\">{domain.title}</h3>\n//           <p className=\"domain-description\">{domain.description}</p>\n//         </div>\n//         <div className=\"domain-menu\">\n//           <button onClick={() => setShowMenu(!showMenu)}>\n//             <FiMoreVertical />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\">\n//               <button onClick={() => onEdit(domain)}>\n//                 <FiEdit /> Edit\n//               </button>\n//               <button onClick={() => onViewHierarchy(domain)}>\n//                 <FiChevronRight /> View Hierarchy\n//               </button>\n//               <button onClick={() => onDelete(domain)} className=\"danger\">\n//                 <FiTrash2 /> Delete\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       <div className=\"domain-stats\">\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{domain.subDomainCount || 0}</span>\n//           <span className=\"stat-label\">Sub-domains</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{domain.projectCount || 0}</span>\n//           <span className=\"stat-label\">Projects</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className={`status ${domain.isActive ? 'active' : 'inactive'}`}>\n//             {domain.isActive ? 'Active' : 'Inactive'}\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Domain Modal Component\n// const DomainModal = ({ domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: domain?.title || '',\n//     description: domain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       console.log('💾 DOMAIN SAVE - Starting API call');\n//       console.log('📋 DOMAIN SAVE - Form data:', formData);\n//       console.log('📋 DOMAIN SAVE - Is editing?', !!domain);\n//       console.log('📋 DOMAIN SAVE - Domain ID (if editing):', domain?.id);\n\n//       if (domain) {\n//         console.log('🌐 DOMAIN SAVE - API URL: /admin/domains/' + domain.id + ' (PUT)');\n//         const response = await authService.updateDomain(domain.id, formData);\n\n//         console.log('✅ DOMAIN UPDATE - Full API Response:', response);\n//         console.log('📦 DOMAIN UPDATE - Response status:', response.status);\n//         console.log('📦 DOMAIN UPDATE - Response data:', response.data);\n\n//         toast.success('Domain updated successfully');\n//       } else {\n//         console.log('🌐 DOMAIN SAVE - API URL: /admin/domains (POST)');\n//         const response = await authService.createDomain(formData);\n\n//         console.log('✅ DOMAIN CREATE - Full API Response:', response);\n//         console.log('📦 DOMAIN CREATE - Response status:', response.status);\n//         console.log('📦 DOMAIN CREATE - Response data:', response.data);\n\n//         toast.success('Domain created successfully');\n//       }\n\n//       console.log('🎯 DOMAIN SAVE - Success, calling onSave callback');\n//       onSave();\n//     } catch (error) {\n//       console.error('❌ DOMAIN SAVE - Error occurred:', error);\n//       console.error('❌ DOMAIN SAVE - Error response:', error.response);\n//       console.error('❌ DOMAIN SAVE - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN SAVE - Error message:', error.message);\n//       toast.error('Failed to save domain');\n//     } finally {\n//       setLoading(false);\n//       console.log('🏁 DOMAIN SAVE - Loading set to false');\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{domain ? 'Edit Domain' : 'Add New Domain'}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Domain Title</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//             />\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Saving...' : 'Save'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Hierarchy Modal Component\n// const HierarchyModal = ({ domain, onClose }) => {\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Domain Hierarchy: {domain.title}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n\n//         <div className=\"hierarchy-content\">\n//           <div className=\"hierarchy-tree\">\n//             {domain.subDomains && domain.subDomains.length > 0 ? (\n//               domain.subDomains.map((subDomain) => (\n//                 <HierarchyNode key={subDomain.id} node={subDomain} level={0} />\n//               ))\n//             ) : (\n//               <p>No sub-domains found</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Hierarchy Node Component\n// const HierarchyNode = ({ node, level }) => {\n//   const [expanded, setExpanded] = useState(true);\n\n//   return (\n//     <div className={`hierarchy-node level-${level}`}>\n//       <div className=\"node-header\">\n//         {node.children && node.children.length > 0 && (\n//           <button \n//             className=\"expand-button\"\n//             onClick={() => setExpanded(!expanded)}\n//           >\n//             <FiChevronRight className={expanded ? 'expanded' : ''} />\n//           </button>\n//         )}\n//         <FiFolder className=\"node-icon\" />\n//         <span className=\"node-title\">{node.title}</span>\n//         {node.projects && (\n//           <span className=\"project-count\">({node.projects.length} projects)</span>\n//         )}\n//       </div>\n\n//       {expanded && node.children && node.children.length > 0 && (\n//         <div className=\"node-children\">\n//           {node.children.map((child) => (\n//             <HierarchyNode key={child.id} node={child} level={level + 1} />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DomainManagement;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DomainManagement\");\n$RefreshReg$(_c2, \"DomainCard\");\n$RefreshReg$(_c3, \"DomainModal\");\n$RefreshReg$(_c4, \"HierarchyModal\");\n$RefreshReg$(_c5, \"HierarchyNode\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","authService","toast","FiPlus","FiEdit","FiTrash2","FiSearch","FiGrid","FiList","FiFolder","FiChevronRight","FiMoreVertical","FiSettings","jsxDEV","_jsxDEV","DomainManagement","_s","console","log","navigate","domains","setDomains","loading","setLoading","pagination","setPagination","currentPage","totalPages","totalItems","filters","setFilters","search","isActive","sortBy","sortOrder","viewMode","setViewMode","showAddModal","setShowAddModal","editingDomain","setEditingDomain","selectedDomain","setSelectedDomain","domainsCount","length","fetchDomains","_response$data","_response$data2","_response$data2$data","_response$data3","_response$data4","_response$data4$data","params","page","limit","URLSearchParams","toString","response","getDomains","status","headers","data","Object","keys","paginationData","error","_error$response","message","handleSearch","searchTerm","newFilters","prev","handleAddDomain","handleEditDomain","domain","handleManageSubDomains","id","handleDeleteDomain","window","confirm","title","deleteDomain","success","_error$response2","handleViewHierarchy","_response$data5","getDomainHierarchy","hierarchyData","_error$response3","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","map","DomainCard","onEdit","onDelete","onViewHierarchy","onManageSubDomains","size","disabled","DomainModal","onClose","onSave","HierarchyModal","_c","_s2","showMenu","setShowMenu","description","subDomainCount","projectCount","_c2","_s3","formData","setFormData","handleSubmit","preventDefault","updateDomain","createDomain","_error$response4","onSubmit","required","rows","_c3","subDomains","subDomain","HierarchyNode","node","level","_c4","_s4","expanded","setExpanded","projects","child","_c5","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/DomainManagement.js"],"sourcesContent":["// src/components/domains/DomainManagement.js - REPLACE YOUR EXISTING FILE\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // ADD THIS IMPORT\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport {\n  FiPlus,\n  FiEdit,\n  FiTrash2,\n  FiSearch,\n  FiGrid,\n  FiList,\n  FiFolder,\n  FiChevronRight,\n  FiMoreVertical,\n  FiSettings // ADD THIS IMPORT\n} from 'react-icons/fi';\n\nconst DomainManagement = () => {\n  console.log('🚀 DOMAIN MANAGEMENT - Component rendering/mounting');\n  \n  const navigate = useNavigate(); // ADD THIS LINE\n  const [domains, setDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0\n  });\n  const [filters, setFilters] = useState({\n    search: '',\n    isActive: true,\n    sortBy: 'title',\n    sortOrder: 'ASC'\n  });\n  const [viewMode, setViewMode] = useState('grid'); // 'grid' or 'list'\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingDomain, setEditingDomain] = useState(null);\n  const [selectedDomain, setSelectedDomain] = useState(null);\n\n  console.log('📊 DOMAIN MANAGEMENT - Current state:', {\n    domainsCount: domains.length,\n    loading,\n    pagination,\n    filters,\n    viewMode,\n    showAddModal,\n    editingDomain: !!editingDomain,\n    selectedDomain: !!selectedDomain\n  });\n\n  useEffect(() => {\n    console.log('🔄 DOMAIN MANAGEMENT - useEffect triggered for fetchDomains');\n    console.log('📋 DOMAIN MANAGEMENT - Current filters:', filters);\n    console.log('📋 DOMAIN MANAGEMENT - Current pagination:', pagination);\n    fetchDomains();\n  }, [filters, pagination.currentPage]);\n\n  const fetchDomains = async () => {\n    try {\n      setLoading(true);\n      const params = {\n        page: pagination.currentPage,\n        limit: 10,\n        ...filters\n      };\n      \n      console.log('🔍 DOMAIN FETCH - Starting API call');\n      console.log('📋 DOMAIN FETCH - Request params:', params);\n      console.log('🌐 DOMAIN FETCH - API URL: /admin/domains with params:', new URLSearchParams(params).toString());\n      \n      const response = await authService.getDomains(params);\n      \n      console.log('✅ DOMAIN FETCH - Full API Response:', response);\n      console.log('📦 DOMAIN FETCH - Response status:', response.status);\n      console.log('📦 DOMAIN FETCH - Response headers:', response.headers);\n      console.log('📦 DOMAIN FETCH - Response data:', response.data);\n      console.log('📦 DOMAIN FETCH - Response data type:', typeof response.data);\n      console.log('📦 DOMAIN FETCH - Response data keys:', Object.keys(response.data || {}));\n      \n      const domains = response.data?.domains || response.data?.data?.domains || [];\n      const paginationData = response.data?.pagination || response.data?.data?.pagination || pagination;\n      \n      console.log('🎯 DOMAIN FETCH - Extracted domains:', domains);\n      console.log('🎯 DOMAIN FETCH - Extracted pagination:', paginationData);\n      console.log('🎯 DOMAIN FETCH - Domains count:', domains.length);\n      \n      setDomains(domains);\n      setPagination(paginationData);\n    } catch (error) {\n      console.error('❌ DOMAIN FETCH - Error occurred:', error);\n      console.error('❌ DOMAIN FETCH - Error response:', error.response);\n      console.error('❌ DOMAIN FETCH - Error response data:', error.response?.data);\n      console.error('❌ DOMAIN FETCH - Error message:', error.message);\n      toast.error('Failed to fetch domains');\n    } finally {\n      setLoading(false);\n      console.log('🏁 DOMAIN FETCH - Loading set to false');\n    }\n  };\n\n  const handleSearch = (searchTerm) => {\n    console.log('🔍 DOMAIN SEARCH - Search initiated');\n    console.log('📋 DOMAIN SEARCH - Search term:', searchTerm);\n    console.log('📋 DOMAIN SEARCH - Previous filters:', filters);\n    \n    const newFilters = { ...filters, search: searchTerm };\n    setFilters(prev => ({ ...prev, search: searchTerm }));\n    setPagination(prev => ({ ...prev, currentPage: 1 }));\n    \n    console.log('📋 DOMAIN SEARCH - New filters:', newFilters);\n    console.log('📋 DOMAIN SEARCH - Reset pagination to page 1');\n  };\n\n  const handleAddDomain = () => {\n    console.log('➕ DOMAIN MANAGEMENT - Add domain clicked');\n    setEditingDomain(null);\n    setShowAddModal(true);\n    console.log('📊 DOMAIN MANAGEMENT - Modal state changed:', { showAddModal: true, editingDomain: null });\n  };\n\n  const handleEditDomain = (domain) => {\n    console.log('✏️ DOMAIN MANAGEMENT - Edit domain clicked');\n    console.log('📋 DOMAIN MANAGEMENT - Domain to edit:', domain);\n    setEditingDomain(domain);\n    setShowAddModal(true);\n    console.log('📊 DOMAIN MANAGEMENT - Modal state changed:', { showAddModal: true, editingDomain: domain });\n  };\n\n  // ADD THIS NEW FUNCTION\n  const handleManageSubDomains = (domain) => {\n    console.log('🔧 DOMAIN MANAGEMENT - Manage subdomains clicked');\n    console.log('📋 DOMAIN MANAGEMENT - Domain for subdomain management:', domain);\n    console.log('🌐 DOMAIN MANAGEMENT - Navigating to: /domains/' + domain.id + '/subdomains');\n    navigate(`/domains/${domain.id}/subdomains`);\n  };\n\n  const handleDeleteDomain = async (domain) => {\n    if (!window.confirm(`Are you sure you want to delete \"${domain.title}\"?`)) {\n      return;\n    }\n\n    try {\n      console.log('🗑️ DOMAIN DELETE - Starting API call');\n      console.log('📋 DOMAIN DELETE - Domain to delete:', domain);\n      console.log('🌐 DOMAIN DELETE - API URL: /admin/domains/' + domain.id);\n      \n      const response = await authService.deleteDomain(domain.id);\n      \n      console.log('✅ DOMAIN DELETE - Full API Response:', response);\n      console.log('📦 DOMAIN DELETE - Response status:', response.status);\n      console.log('📦 DOMAIN DELETE - Response data:', response.data);\n      \n      toast.success('Domain deleted successfully');\n      console.log('🎯 DOMAIN DELETE - Success, refreshing domains list');\n      fetchDomains();\n    } catch (error) {\n      console.error('❌ DOMAIN DELETE - Error occurred:', error);\n      console.error('❌ DOMAIN DELETE - Error response:', error.response);\n      console.error('❌ DOMAIN DELETE - Error response data:', error.response?.data);\n      console.error('❌ DOMAIN DELETE - Error message:', error.message);\n      toast.error('Failed to delete domain');\n    }\n  };\n\n  const handleViewHierarchy = async (domain) => {\n    try {\n      console.log('🌳 DOMAIN HIERARCHY - Starting API call');\n      console.log('📋 DOMAIN HIERARCHY - Domain for hierarchy:', domain);\n      console.log('🌐 DOMAIN HIERARCHY - API URL: /admin/domains/' + domain.id + '/hierarchy');\n      \n      const response = await authService.getDomainHierarchy(domain.id);\n      \n      console.log('✅ DOMAIN HIERARCHY - Full API Response:', response);\n      console.log('📦 DOMAIN HIERARCHY - Response status:', response.status);\n      console.log('📦 DOMAIN HIERARCHY - Response data:', response.data);\n      console.log('📦 DOMAIN HIERARCHY - Response data type:', typeof response.data);\n      console.log('📦 DOMAIN HIERARCHY - Response data keys:', Object.keys(response.data || {}));\n      \n      const hierarchyData = response.data?.data || response.data;\n      console.log('🎯 DOMAIN HIERARCHY - Extracted hierarchy data:', hierarchyData);\n      \n      setSelectedDomain(hierarchyData);\n    } catch (error) {\n      console.error('❌ DOMAIN HIERARCHY - Error occurred:', error);\n      console.error('❌ DOMAIN HIERARCHY - Error response:', error.response);\n      console.error('❌ DOMAIN HIERARCHY - Error response data:', error.response?.data);\n      console.error('❌ DOMAIN HIERARCHY - Error message:', error.message);\n      toast.error('Failed to load domain hierarchy');\n    }\n  };\n\n  if (loading && domains.length === 0) {\n    console.log('⏳ DOMAIN MANAGEMENT - Showing loading state');\n    console.log('📊 DOMAIN MANAGEMENT - Loading:', loading, 'Domains count:', domains.length);\n    \n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading domains...</p>\n      </div>\n    );\n  }\n\n  console.log('🎨 DOMAIN MANAGEMENT - Rendering main component');\n  console.log('📊 DOMAIN MANAGEMENT - Final render state:', {\n    domainsCount: domains.length,\n    loading,\n    viewMode,\n    showAddModal,\n    selectedDomain: !!selectedDomain\n  });\n\n  return (\n    <div className=\"domain-management\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Domain Management</h1>\n          <p>Manage your project domains and categories</p>\n        </div>\n        <button className=\"primary-button\" onClick={handleAddDomain}>\n          <FiPlus />\n          Add Domain\n        </button>\n      </div>\n\n      {/* Filters and Controls */}\n      <div className=\"controls-section\">\n        <div className=\"search-bar\">\n          <FiSearch className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search domains...\"\n            value={filters.search}\n            onChange={(e) => handleSearch(e.target.value)}\n          />\n        </div>\n        \n        <div className=\"view-controls\">\n          <div className=\"filter-group\">\n            <select\n              value={filters.sortBy}\n              onChange={(e) => setFilters(prev => ({ ...prev, sortBy: e.target.value }))}\n            >\n              <option value=\"title\">Sort by Title</option>\n              <option value=\"createdAt\">Sort by Date</option>\n              <option value=\"projectCount\">Sort by Projects</option>\n            </select>\n          </div>\n          \n          <div className=\"view-mode-toggle\">\n            <button\n              className={viewMode === 'grid' ? 'active' : ''}\n              onClick={() => setViewMode('grid')}\n            >\n              <FiGrid />\n            </button>\n            <button\n              className={viewMode === 'list' ? 'active' : ''}\n              onClick={() => setViewMode('list')}\n            >\n              <FiList />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Domains Display */}\n      <div className={`domains-container ${viewMode}`}>\n        {domains.length > 0 ? (\n          domains.map((domain) => (\n            <DomainCard\n              key={domain.id}\n              domain={domain}\n              viewMode={viewMode}\n              onEdit={handleEditDomain}\n              onDelete={handleDeleteDomain}\n              onViewHierarchy={handleViewHierarchy}\n              onManageSubDomains={handleManageSubDomains} // ADD THIS LINE\n            />\n          ))\n        ) : (\n          <div className=\"empty-state\">\n            <FiFolder size={48} />\n            <h3>No domains found</h3>\n            <p>Create your first domain to get started</p>\n            <button className=\"primary-button\" onClick={handleAddDomain}>\n              <FiPlus />\n              Add Domain\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Pagination */}\n      {pagination.totalPages > 1 && (\n        <div className=\"pagination\">\n          <button\n            disabled={pagination.currentPage === 1}\n            onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n          >\n            Previous\n          </button>\n          \n          <span className=\"page-info\">\n            Page {pagination.currentPage} of {pagination.totalPages}\n            ({pagination.totalItems} total)\n          </span>\n          \n          <button\n            disabled={pagination.currentPage === pagination.totalPages}\n            onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n          >\n            Next\n          </button>\n        </div>\n      )}\n\n      {/* Add/Edit Modal */}\n      {showAddModal && (\n        <DomainModal\n          domain={editingDomain}\n          onClose={() => setShowAddModal(false)}\n          onSave={() => {\n            setShowAddModal(false);\n            fetchDomains();\n          }}\n        />\n      )}\n\n      {/* Hierarchy View Modal */}\n      {selectedDomain && (\n        <HierarchyModal\n          domain={selectedDomain}\n          onClose={() => setSelectedDomain(null)}\n        />\n      )}\n    </div>\n  );\n};\n\n// UPDATED Domain Card Component\nconst DomainCard = ({ domain, viewMode, onEdit, onDelete, onViewHierarchy, onManageSubDomains }) => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <div className={`domain-card ${viewMode}`}>\n      <div className=\"domain-header\">\n        <div className=\"domain-icon\">\n          <FiFolder />\n        </div>\n        <div className=\"domain-info\">\n          <h3 className=\"domain-title\">{domain.title}</h3>\n          <p className=\"domain-description\">{domain.description}</p>\n        </div>\n        <div className=\"domain-menu\">\n          <button onClick={() => setShowMenu(!showMenu)}>\n            <FiMoreVertical />\n          </button>\n          {showMenu && (\n            <div className=\"dropdown-menu\">\n              {/* ADD THIS NEW OPTION AT THE TOP */}\n              <button \n                onClick={() => {\n                  onManageSubDomains(domain);\n                  setShowMenu(false);\n                }}\n                className=\"primary-option\"\n              >\n                <FiSettings /> Manage SubDomains\n              </button>\n              <button onClick={() => {\n                onEdit(domain);\n                setShowMenu(false);\n              }}>\n                <FiEdit /> Edit Domain\n              </button>\n              <button onClick={() => {\n                onViewHierarchy(domain);\n                setShowMenu(false);\n              }}>\n                <FiChevronRight /> View Hierarchy\n              </button>\n              <button onClick={() => {\n                onDelete(domain);\n                setShowMenu(false);\n              }} className=\"danger\">\n                <FiTrash2 /> Delete Domain\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"domain-stats\">\n        <div className=\"stat\">\n          <span className=\"stat-value\">{domain.subDomainCount || 0}</span>\n          <span className=\"stat-label\">Sub-domains</span>\n        </div>\n        <div className=\"stat\">\n          <span className=\"stat-value\">{domain.projectCount || 0}</span>\n          <span className=\"stat-label\">Projects</span>\n        </div>\n        <div className=\"stat\">\n          <span className={`status ${domain.isActive ? 'active' : 'inactive'}`}>\n            {domain.isActive ? 'Active' : 'Inactive'}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// // Domain Modal Component\n// const DomainModal = ({ domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: domain?.title || '',\n//     description: domain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       console.log('💾 DOMAIN SAVE - Starting API call');\n//       console.log('📋 DOMAIN SAVE - Form data:', formData);\n//       console.log('📋 DOMAIN SAVE - Is editing?', !!domain);\n//       console.log('📋 DOMAIN SAVE - Domain ID (if editing):', domain?.id);\n      \n//       if (domain) {\n//         console.log('🌐 DOMAIN SAVE - API URL: /admin/domains/' + domain.id + ' (PUT)');\n//         const response = await authService.updateDomain(domain.id, formData);\n        \n//         console.log('✅ DOMAIN UPDATE - Full API Response:', response);\n//         console.log('📦 DOMAIN UPDATE - Response status:', response.status);\n//         console.log('📦 DOMAIN UPDATE - Response data:', response.data);\n        \n//         toast.success('Domain updated successfully');\n//       } else {\n//         console.log('🌐 DOMAIN SAVE - API URL: /admin/domains (POST)');\n//         const response = await authService.createDomain(formData);\n        \n//         console.log('✅ DOMAIN CREATE - Full API Response:', response);\n//         console.log('📦 DOMAIN CREATE - Response status:', response.status);\n//         console.log('📦 DOMAIN CREATE - Response data:', response.data);\n        \n//         toast.success('Domain created successfully');\n//       }\n      \n//       console.log('🎯 DOMAIN SAVE - Success, calling onSave callback');\n//       onSave();\n//     } catch (error) {\n//       console.error('❌ DOMAIN SAVE - Error occurred:', error);\n//       console.error('❌ DOMAIN SAVE - Error response:', error.response);\n//       console.error('❌ DOMAIN SAVE - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN SAVE - Error message:', error.message);\n//       toast.error('Failed to save domain');\n//     } finally {\n//       setLoading(false);\n//       console.log('🏁 DOMAIN SAVE - Loading set to false');\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{domain ? 'Edit Domain' : 'Add New Domain'}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Domain Title</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//             />\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Saving...' : 'Save'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n\n// FINAL CORRECTED VERSION - REPLACE ENTIRELY\n\n// Domain Modal Component\nconst DomainModal = ({ domain, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: domain?.title || '',\n    description: domain?.description || ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      console.log('💾 DOMAIN SAVE - Starting API call');\n      console.log('📋 DOMAIN SAVE - Form data:', formData);\n      console.log('📋 DOMAIN SAVE - Is editing?', !!domain);\n      console.log('📋 DOMAIN SAVE - Domain ID (if editing):', domain?.id);\n      \n      if (domain) {\n        console.log('🌐 DOMAIN SAVE - API URL: /admin/domains/' + domain.id + ' (PUT)');\n        const response = await authService.updateDomain(domain.id, formData);\n        \n        console.log('✅ DOMAIN UPDATE - Full API Response:', response);\n        console.log('📦 DOMAIN UPDATE - Response status:', response.status);\n        console.log('📦 DOMAIN UPDATE - Response data:', response.data);\n        \n        toast.success('Domain updated successfully');\n      } else {\n        console.log('🌐 DOMAIN SAVE - API URL: /admin/domains (POST)');\n        const response = await authService.createDomain(formData);\n        \n        console.log('✅ DOMAIN CREATE - Full API Response:', response);\n        console.log('📦 DOMAIN CREATE - Response status:', response.status);\n        console.log('📦 DOMAIN CREATE - Response data:', response.data);\n        \n        toast.success('Domain created successfully');\n      }\n      \n      console.log('🎯 DOMAIN SAVE - Success, calling onSave callback');\n      onSave();\n    } catch (error) {\n      console.error('❌ DOMAIN SAVE - Error occurred:', error);\n      console.error('❌ DOMAIN SAVE - Error response:', error.response);\n      console.error('❌ DOMAIN SAVE - Error response data:', error.response?.data);\n      console.error('❌ DOMAIN SAVE - Error message:', error.message);\n      toast.error('Failed to save domain');\n    } finally {\n      setLoading(false);\n      console.log('🏁 DOMAIN SAVE - Loading set to false');\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <h2>{domain ? 'Edit Domain' : 'Add New Domain'}</h2>\n          <button onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Domain Title</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Description (Optional)</label>\n            <textarea\n              value={formData.description}\n              onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              rows={3}\n            />\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n              {loading ? 'Saving...' : 'Save'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n\n// Hierarchy Modal Component\nconst HierarchyModal = ({ domain, onClose }) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Domain Hierarchy: {domain.title}</h2>\n          <button onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"hierarchy-content\">\n          <div className=\"hierarchy-tree\">\n            {domain.subDomains && domain.subDomains.length > 0 ? (\n              domain.subDomains.map((subDomain) => (\n                <HierarchyNode key={subDomain.id} node={subDomain} level={0} />\n              ))\n            ) : (\n              <p>No sub-domains found</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Hierarchy Node Component\nconst HierarchyNode = ({ node, level }) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <div className={`hierarchy-node level-${level}`}>\n      <div className=\"node-header\">\n        {node.children && node.children.length > 0 && (\n          <button \n            className=\"expand-button\"\n            onClick={() => setExpanded(!expanded)}\n          >\n            <FiChevronRight className={expanded ? 'expanded' : ''} />\n          </button>\n        )}\n        <FiFolder className=\"node-icon\" />\n        <span className=\"node-title\">{node.title}</span>\n        {node.projects && (\n          <span className=\"project-count\">({node.projects.length} projects)</span>\n        )}\n      </div>\n      \n      {expanded && node.children && node.children.length > 0 && (\n        <div className=\"node-children\">\n          {node.children.map((child) => (\n            <HierarchyNode key={child.id} node={child} level={level + 1} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DomainManagement;\n\n\n// // src/components/domains/DomainManagement.js - NEW FILE\n// import React, { useState, useEffect } from 'react';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiSearch,\n//   FiGrid,\n//   FiList,\n//   FiFolder,\n//   FiChevronRight,\n//   FiMoreVertical\n// } from 'react-icons/fi';\n\n// const DomainManagement = () => {\n//   console.log('🚀 DOMAIN MANAGEMENT - Component rendering/mounting');\n  \n//   const [domains, setDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [pagination, setPagination] = useState({\n//     currentPage: 1,\n//     totalPages: 1,\n//     totalItems: 0\n//   });\n//   const [filters, setFilters] = useState({\n//     search: '',\n//     isActive: true,\n//     sortBy: 'title',\n//     sortOrder: 'ASC'\n//   });\n//   const [viewMode, setViewMode] = useState('grid'); // 'grid' or 'list'\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingDomain, setEditingDomain] = useState(null);\n//   const [selectedDomain, setSelectedDomain] = useState(null);\n\n//   console.log('📊 DOMAIN MANAGEMENT - Current state:', {\n//     domainsCount: domains.length,\n//     loading,\n//     pagination,\n//     filters,\n//     viewMode,\n//     showAddModal,\n//     editingDomain: !!editingDomain,\n//     selectedDomain: !!selectedDomain\n//   });\n\n//   useEffect(() => {\n//     console.log('🔄 DOMAIN MANAGEMENT - useEffect triggered for fetchDomains');\n//     console.log('📋 DOMAIN MANAGEMENT - Current filters:', filters);\n//     console.log('📋 DOMAIN MANAGEMENT - Current pagination:', pagination);\n//     fetchDomains();\n//   }, [filters, pagination.currentPage]);\n\n//   const fetchDomains = async () => {\n//     try {\n//       setLoading(true);\n//       const params = {\n//         page: pagination.currentPage,\n//         limit: 10,\n//         ...filters\n//       };\n      \n//       console.log('🔍 DOMAIN FETCH - Starting API call');\n//       console.log('📋 DOMAIN FETCH - Request params:', params);\n//       console.log('🌐 DOMAIN FETCH - API URL: /admin/domains with params:', new URLSearchParams(params).toString());\n      \n//       const response = await authService.getDomains(params);\n      \n//       console.log('✅ DOMAIN FETCH - Full API Response:', response);\n//       console.log('📦 DOMAIN FETCH - Response status:', response.status);\n//       console.log('📦 DOMAIN FETCH - Response headers:', response.headers);\n//       console.log('📦 DOMAIN FETCH - Response data:', response.data);\n//       console.log('📦 DOMAIN FETCH - Response data type:', typeof response.data);\n//       console.log('📦 DOMAIN FETCH - Response data keys:', Object.keys(response.data || {}));\n      \n//       const domains = response.data?.domains || response.data?.data?.domains || [];\n//       const paginationData = response.data?.pagination || response.data?.data?.pagination || pagination;\n      \n//       console.log('🎯 DOMAIN FETCH - Extracted domains:', domains);\n//       console.log('🎯 DOMAIN FETCH - Extracted pagination:', paginationData);\n//       console.log('🎯 DOMAIN FETCH - Domains count:', domains.length);\n      \n//       setDomains(domains);\n//       setPagination(paginationData);\n//     } catch (error) {\n//       console.error('❌ DOMAIN FETCH - Error occurred:', error);\n//       console.error('❌ DOMAIN FETCH - Error response:', error.response);\n//       console.error('❌ DOMAIN FETCH - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN FETCH - Error message:', error.message);\n//       toast.error('Failed to fetch domains');\n//     } finally {\n//       setLoading(false);\n//       console.log('🏁 DOMAIN FETCH - Loading set to false');\n//     }\n//   };\n\n//   const handleSearch = (searchTerm) => {\n//     console.log('🔍 DOMAIN SEARCH - Search initiated');\n//     console.log('📋 DOMAIN SEARCH - Search term:', searchTerm);\n//     console.log('📋 DOMAIN SEARCH - Previous filters:', filters);\n    \n//     const newFilters = { ...filters, search: searchTerm };\n//     setFilters(prev => ({ ...prev, search: searchTerm }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n    \n//     console.log('📋 DOMAIN SEARCH - New filters:', newFilters);\n//     console.log('📋 DOMAIN SEARCH - Reset pagination to page 1');\n//   };\n\n//   const handleAddDomain = () => {\n//     console.log('➕ DOMAIN MANAGEMENT - Add domain clicked');\n//     setEditingDomain(null);\n//     setShowAddModal(true);\n//     console.log('📊 DOMAIN MANAGEMENT - Modal state changed:', { showAddModal: true, editingDomain: null });\n//   };\n\n//   const handleEditDomain = (domain) => {\n//     console.log('✏️ DOMAIN MANAGEMENT - Edit domain clicked');\n//     console.log('📋 DOMAIN MANAGEMENT - Domain to edit:', domain);\n//     setEditingDomain(domain);\n//     setShowAddModal(true);\n//     console.log('📊 DOMAIN MANAGEMENT - Modal state changed:', { showAddModal: true, editingDomain: domain });\n//   };\n\n//   const handleDeleteDomain = async (domain) => {\n//     if (!window.confirm(`Are you sure you want to delete \"${domain.title}\"?`)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('🗑️ DOMAIN DELETE - Starting API call');\n//       console.log('📋 DOMAIN DELETE - Domain to delete:', domain);\n//       console.log('🌐 DOMAIN DELETE - API URL: /admin/domains/' + domain.id);\n      \n//       const response = await authService.deleteDomain(domain.id);\n      \n//       console.log('✅ DOMAIN DELETE - Full API Response:', response);\n//       console.log('📦 DOMAIN DELETE - Response status:', response.status);\n//       console.log('📦 DOMAIN DELETE - Response data:', response.data);\n      \n//       toast.success('Domain deleted successfully');\n//       console.log('🎯 DOMAIN DELETE - Success, refreshing domains list');\n//       fetchDomains();\n//     } catch (error) {\n//       console.error('❌ DOMAIN DELETE - Error occurred:', error);\n//       console.error('❌ DOMAIN DELETE - Error response:', error.response);\n//       console.error('❌ DOMAIN DELETE - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN DELETE - Error message:', error.message);\n//       toast.error('Failed to delete domain');\n//     }\n//   };\n\n//   const handleViewHierarchy = async (domain) => {\n//     try {\n//       console.log('🌳 DOMAIN HIERARCHY - Starting API call');\n//       console.log('📋 DOMAIN HIERARCHY - Domain for hierarchy:', domain);\n//       console.log('🌐 DOMAIN HIERARCHY - API URL: /admin/domains/' + domain.id + '/hierarchy');\n      \n//       const response = await authService.getDomainHierarchy(domain.id);\n      \n//       console.log('✅ DOMAIN HIERARCHY - Full API Response:', response);\n//       console.log('📦 DOMAIN HIERARCHY - Response status:', response.status);\n//       console.log('📦 DOMAIN HIERARCHY - Response data:', response.data);\n//       console.log('📦 DOMAIN HIERARCHY - Response data type:', typeof response.data);\n//       console.log('📦 DOMAIN HIERARCHY - Response data keys:', Object.keys(response.data || {}));\n      \n//       const hierarchyData = response.data?.data || response.data;\n//       console.log('🎯 DOMAIN HIERARCHY - Extracted hierarchy data:', hierarchyData);\n      \n//       setSelectedDomain(hierarchyData);\n//     } catch (error) {\n//       console.error('❌ DOMAIN HIERARCHY - Error occurred:', error);\n//       console.error('❌ DOMAIN HIERARCHY - Error response:', error.response);\n//       console.error('❌ DOMAIN HIERARCHY - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN HIERARCHY - Error message:', error.message);\n//       toast.error('Failed to load domain hierarchy');\n//     }\n//   };\n\n//   if (loading && domains.length === 0) {\n//     console.log('⏳ DOMAIN MANAGEMENT - Showing loading state');\n//     console.log('📊 DOMAIN MANAGEMENT - Loading:', loading, 'Domains count:', domains.length);\n    \n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading domains...</p>\n//       </div>\n//     );\n//   }\n\n//   console.log('🎨 DOMAIN MANAGEMENT - Rendering main component');\n//   console.log('📊 DOMAIN MANAGEMENT - Final render state:', {\n//     domainsCount: domains.length,\n//     loading,\n//     viewMode,\n//     showAddModal,\n//     selectedDomain: !!selectedDomain\n//   });\n\n//   return (\n//     <div className=\"domain-management\">\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <h1>Domain Management</h1>\n//           <p>Manage your project domains and categories</p>\n//         </div>\n//         <button className=\"primary-button\" onClick={handleAddDomain}>\n//           <FiPlus />\n//           Add Domain\n//         </button>\n//       </div>\n\n//       {/* Filters and Controls */}\n//       <div className=\"controls-section\">\n//         <div className=\"search-bar\">\n//           <FiSearch className=\"search-icon\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search domains...\"\n//             value={filters.search}\n//             onChange={(e) => handleSearch(e.target.value)}\n//           />\n//         </div>\n        \n//         <div className=\"view-controls\">\n//           <div className=\"filter-group\">\n//             <select\n//               value={filters.sortBy}\n//               onChange={(e) => setFilters(prev => ({ ...prev, sortBy: e.target.value }))}\n//             >\n//               <option value=\"title\">Sort by Title</option>\n//               <option value=\"createdAt\">Sort by Date</option>\n//               <option value=\"projectCount\">Sort by Projects</option>\n//             </select>\n//           </div>\n          \n//           <div className=\"view-mode-toggle\">\n//             <button\n//               className={viewMode === 'grid' ? 'active' : ''}\n//               onClick={() => setViewMode('grid')}\n//             >\n//               <FiGrid />\n//             </button>\n//             <button\n//               className={viewMode === 'list' ? 'active' : ''}\n//               onClick={() => setViewMode('list')}\n//             >\n//               <FiList />\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domains Display */}\n//       <div className={`domains-container ${viewMode}`}>\n//         {domains.length > 0 ? (\n//           domains.map((domain) => (\n//             <DomainCard\n//               key={domain.id}\n//               domain={domain}\n//               viewMode={viewMode}\n//               onEdit={handleEditDomain}\n//               onDelete={handleDeleteDomain}\n//               onViewHierarchy={handleViewHierarchy}\n//             />\n//           ))\n//         ) : (\n//           <div className=\"empty-state\">\n//             <FiFolder size={48} />\n//             <h3>No domains found</h3>\n//             <p>Create your first domain to get started</p>\n//             <button className=\"primary-button\" onClick={handleAddDomain}>\n//               <FiPlus />\n//               Add Domain\n//             </button>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Pagination */}\n//       {pagination.totalPages > 1 && (\n//         <div className=\"pagination\">\n//           <button\n//             disabled={pagination.currentPage === 1}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n//           >\n//             Previous\n//           </button>\n          \n//           <span className=\"page-info\">\n//             Page {pagination.currentPage} of {pagination.totalPages}\n//             ({pagination.totalItems} total)\n//           </span>\n          \n//           <button\n//             disabled={pagination.currentPage === pagination.totalPages}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Add/Edit Modal */}\n//       {showAddModal && (\n//         <DomainModal\n//           domain={editingDomain}\n//           onClose={() => setShowAddModal(false)}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             fetchDomains();\n//           }}\n//         />\n//       )}\n\n//       {/* Hierarchy View Modal */}\n//       {selectedDomain && (\n//         <HierarchyModal\n//           domain={selectedDomain}\n//           onClose={() => setSelectedDomain(null)}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // Domain Card Component\n// const DomainCard = ({ domain, viewMode, onEdit, onDelete, onViewHierarchy }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   return (\n//     <div className={`domain-card ${viewMode}`}>\n//       <div className=\"domain-header\">\n//         <div className=\"domain-icon\">\n//           <FiFolder />\n//         </div>\n//         <div className=\"domain-info\">\n//           <h3 className=\"domain-title\">{domain.title}</h3>\n//           <p className=\"domain-description\">{domain.description}</p>\n//         </div>\n//         <div className=\"domain-menu\">\n//           <button onClick={() => setShowMenu(!showMenu)}>\n//             <FiMoreVertical />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\">\n//               <button onClick={() => onEdit(domain)}>\n//                 <FiEdit /> Edit\n//               </button>\n//               <button onClick={() => onViewHierarchy(domain)}>\n//                 <FiChevronRight /> View Hierarchy\n//               </button>\n//               <button onClick={() => onDelete(domain)} className=\"danger\">\n//                 <FiTrash2 /> Delete\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n      \n//       <div className=\"domain-stats\">\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{domain.subDomainCount || 0}</span>\n//           <span className=\"stat-label\">Sub-domains</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{domain.projectCount || 0}</span>\n//           <span className=\"stat-label\">Projects</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className={`status ${domain.isActive ? 'active' : 'inactive'}`}>\n//             {domain.isActive ? 'Active' : 'Inactive'}\n//           </span>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Domain Modal Component\n// const DomainModal = ({ domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: domain?.title || '',\n//     description: domain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       console.log('💾 DOMAIN SAVE - Starting API call');\n//       console.log('📋 DOMAIN SAVE - Form data:', formData);\n//       console.log('📋 DOMAIN SAVE - Is editing?', !!domain);\n//       console.log('📋 DOMAIN SAVE - Domain ID (if editing):', domain?.id);\n      \n//       if (domain) {\n//         console.log('🌐 DOMAIN SAVE - API URL: /admin/domains/' + domain.id + ' (PUT)');\n//         const response = await authService.updateDomain(domain.id, formData);\n        \n//         console.log('✅ DOMAIN UPDATE - Full API Response:', response);\n//         console.log('📦 DOMAIN UPDATE - Response status:', response.status);\n//         console.log('📦 DOMAIN UPDATE - Response data:', response.data);\n        \n//         toast.success('Domain updated successfully');\n//       } else {\n//         console.log('🌐 DOMAIN SAVE - API URL: /admin/domains (POST)');\n//         const response = await authService.createDomain(formData);\n        \n//         console.log('✅ DOMAIN CREATE - Full API Response:', response);\n//         console.log('📦 DOMAIN CREATE - Response status:', response.status);\n//         console.log('📦 DOMAIN CREATE - Response data:', response.data);\n        \n//         toast.success('Domain created successfully');\n//       }\n      \n//       console.log('🎯 DOMAIN SAVE - Success, calling onSave callback');\n//       onSave();\n//     } catch (error) {\n//       console.error('❌ DOMAIN SAVE - Error occurred:', error);\n//       console.error('❌ DOMAIN SAVE - Error response:', error.response);\n//       console.error('❌ DOMAIN SAVE - Error response data:', error.response?.data);\n//       console.error('❌ DOMAIN SAVE - Error message:', error.message);\n//       toast.error('Failed to save domain');\n//     } finally {\n//       setLoading(false);\n//       console.log('🏁 DOMAIN SAVE - Loading set to false');\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{domain ? 'Edit Domain' : 'Add New Domain'}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Domain Title</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//             />\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Saving...' : 'Save'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Hierarchy Modal Component\n// const HierarchyModal = ({ domain, onClose }) => {\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Domain Hierarchy: {domain.title}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n        \n//         <div className=\"hierarchy-content\">\n//           <div className=\"hierarchy-tree\">\n//             {domain.subDomains && domain.subDomains.length > 0 ? (\n//               domain.subDomains.map((subDomain) => (\n//                 <HierarchyNode key={subDomain.id} node={subDomain} level={0} />\n//               ))\n//             ) : (\n//               <p>No sub-domains found</p>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Hierarchy Node Component\n// const HierarchyNode = ({ node, level }) => {\n//   const [expanded, setExpanded] = useState(true);\n\n//   return (\n//     <div className={`hierarchy-node level-${level}`}>\n//       <div className=\"node-header\">\n//         {node.children && node.children.length > 0 && (\n//           <button \n//             className=\"expand-button\"\n//             onClick={() => setExpanded(!expanded)}\n//           >\n//             <FiChevronRight className={expanded ? 'expanded' : ''} />\n//           </button>\n//         )}\n//         <FiFolder className=\"node-icon\" />\n//         <span className=\"node-title\">{node.title}</span>\n//         {node.projects && (\n//           <span className=\"project-count\">({node.projects.length} projects)</span>\n//         )}\n//       </div>\n      \n//       {expanded && node.children && node.children.length > 0 && (\n//         <div className=\"node-children\">\n//           {node.children.map((child) => (\n//             <HierarchyNode key={child.id} node={child} level={level + 1} />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default DomainManagement;\n\n\n"],"mappings":"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CA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmG,EAAA,EAAAO,GAAA,EAAAY,GAAA,EAAAM,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}