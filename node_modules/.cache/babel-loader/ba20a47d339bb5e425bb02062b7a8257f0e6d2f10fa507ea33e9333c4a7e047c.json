{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/SubDomainManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\n// src/components/domains/SubDomainManagement.js - ENHANCED WITH PROJECT VIEW/EDIT/DELETE\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport { FiPlus, FiEdit, FiTrash2, FiChevronDown, FiChevronRight, FiFolder, FiFolderPlus, FiFileText, FiArrowLeft, FiMoreVertical, FiMove, FiTarget, FiEye, FiStar, FiArchive, FiList, FiX } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubDomainManagement = () => {\n  _s();\n  console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  const {\n    domainId\n  } = useParams();\n  const navigate = useNavigate();\n  const [domain, setDomain] = useState(null);\n  const [subDomains, setSubDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSubDomain, setEditingSubDomain] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n  // Project creation state\n  const [showProjectModal, setShowProjectModal] = useState(false);\n  const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n  // NEW: Project management states\n  const [showProjectsModal, setShowProjectsModal] = useState(false);\n  const [selectedSubDomainForProjectsView, setSelectedSubDomainForProjectsView] = useState(null);\n  const [projectsInSubDomain, setProjectsInSubDomain] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showProjectEditModal, setShowProjectEditModal] = useState(false);\n  const [projectsLoading, setProjectsLoading] = useState(false);\n  console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n    domainId,\n    domain: domain === null || domain === void 0 ? void 0 : domain.title,\n    subDomainsCount: subDomains.length,\n    loading,\n    selectedParent: selectedParent === null || selectedParent === void 0 ? void 0 : selectedParent.title,\n    expandedCount: expandedNodes.size,\n    showProjectModal,\n    selectedSubDomainForProject: selectedSubDomainForProject === null || selectedSubDomainForProject === void 0 ? void 0 : selectedSubDomainForProject.title,\n    // NEW states\n    showProjectsModal,\n    selectedSubDomainForProjectsView: selectedSubDomainForProjectsView === null || selectedSubDomainForProjectsView === void 0 ? void 0 : selectedSubDomainForProjectsView.title,\n    projectsInSubDomainCount: projectsInSubDomain.length,\n    editingProject: editingProject === null || editingProject === void 0 ? void 0 : editingProject.title\n  });\n  useEffect(() => {\n    if (domainId) {\n      console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n      fetchDomainAndSubDomains();\n    }\n  }, [domainId]);\n  const fetchDomainAndSubDomains = async () => {\n    try {\n      var _domainsResponse$data, _domainsResponse$data2, _domainsResponse$data3, _subDomainsResponse$d, _subDomainsResponse$d2, _subDomainsResponse$d3;\n      setLoading(true);\n      console.log('🔍 SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n      // Get domain details\n      const domainsResponse = await authService.getDomains();\n      console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      let domainData = null;\n      const domains = ((_domainsResponse$data = domainsResponse.data) === null || _domainsResponse$data === void 0 ? void 0 : _domainsResponse$data.domains) || ((_domainsResponse$data2 = domainsResponse.data) === null || _domainsResponse$data2 === void 0 ? void 0 : (_domainsResponse$data3 = _domainsResponse$data2.data) === null || _domainsResponse$data3 === void 0 ? void 0 : _domainsResponse$data3.domains) || [];\n      if (domains.length > 0) {\n        domainData = domains.find(d => d.id == domainId);\n      }\n      if (!domainData) {\n        domainData = {\n          id: domainId,\n          title: `Domain ${domainId}`,\n          description: 'Domain not found in list',\n          projectCount: 0\n        };\n      }\n      setDomain(domainData);\n\n      // Get subdomains\n      const subDomainsResponse = await authService.getSubDomains({\n        domainId: domainId\n      });\n      console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      const subDomainsData = ((_subDomainsResponse$d = subDomainsResponse.data) === null || _subDomainsResponse$d === void 0 ? void 0 : _subDomainsResponse$d.subDomains) || ((_subDomainsResponse$d2 = subDomainsResponse.data) === null || _subDomainsResponse$d2 === void 0 ? void 0 : (_subDomainsResponse$d3 = _subDomainsResponse$d2.data) === null || _subDomainsResponse$d3 === void 0 ? void 0 : _subDomainsResponse$d3.subDomains) || [];\n      setSubDomains(subDomainsData);\n\n      // Auto-expand first level\n      if (subDomainsData.length > 0) {\n        const firstLevelIds = subDomainsData.map(sd => sd.id);\n        setExpandedNodes(new Set(firstLevelIds));\n      }\n\n      // Try hierarchy API as fallback\n      try {\n        var _hierarchyResponse$da;\n        const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n        const hierarchyData = ((_hierarchyResponse$da = hierarchyResponse.data) === null || _hierarchyResponse$da === void 0 ? void 0 : _hierarchyResponse$da.data) || hierarchyResponse.data;\n        if (hierarchyData !== null && hierarchyData !== void 0 && hierarchyData.subDomains && hierarchyData.subDomains.length > 0) {\n          setSubDomains(hierarchyData.subDomains);\n          if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n            setDomain(prev => ({\n              ...prev,\n              ...hierarchyData\n            }));\n          }\n        }\n      } catch (hierarchyError) {\n        console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n      }\n    } catch (error) {\n      console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n      toast.error('Failed to fetch domain information');\n      setDomain({\n        id: domainId,\n        title: `Domain ${domainId}`,\n        description: 'Error loading domain details',\n        projectCount: 0\n      });\n      setSubDomains([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddSubDomain = (parent = null) => {\n    console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent === null || parent === void 0 ? void 0 : parent.title);\n    setSelectedParent(parent);\n    setEditingSubDomain(null);\n    setShowAddModal(true);\n  };\n  const handleEditSubDomain = subDomain => {\n    console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n    setSelectedParent(null);\n    setEditingSubDomain(subDomain);\n    setShowAddModal(true);\n  };\n\n  // Handle adding project to subdomain\n  const handleAddProjectToSubDomain = subDomain => {\n    console.log('📝 ADD PROJECT - Starting for subdomain:', subDomain.title);\n    console.log('📝 ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    if (subDomain.children && subDomain.children.length > 0) {\n      toast.error('Projects can only be added to leaf sub-domains (those without children)');\n      return;\n    }\n    setSelectedSubDomainForProject(subDomain);\n    setShowProjectModal(true);\n  };\n\n  // NEW: Handle viewing projects in subdomain\n  const handleViewProjectsInSubDomain = async subDomain => {\n    console.log('👁️ VIEW PROJECTS - Starting for subdomain:', subDomain.title);\n    if (subDomain.children && subDomain.children.length > 0) {\n      toast.error('Only leaf sub-domains have projects to view');\n      return;\n    }\n    if (!subDomain.projectCount || subDomain.projectCount === 0) {\n      toast.info('This sub-domain has no projects yet');\n      return;\n    }\n    setSelectedSubDomainForProjectsView(subDomain);\n    await fetchProjectsInSubDomain(subDomain.id);\n    setShowProjectsModal(true);\n  };\n\n  // NEW: Fetch projects for a specific subdomain\n  const fetchProjectsInSubDomain = async subDomainId => {\n    try {\n      var _response$data;\n      setProjectsLoading(true);\n      console.log('📡 FETCH PROJECTS - For subdomain:', subDomainId);\n      const response = await authService.getProjects({\n        subDomainId: subDomainId,\n        limit: 100 // Get all projects for this subdomain\n      });\n      console.log('✅ FETCH PROJECTS - Response:', response.data);\n      const projects = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.projects) || [];\n      setProjectsInSubDomain(projects);\n    } catch (error) {\n      console.error('❌ FETCH PROJECTS - Error:', error);\n      toast.error('Failed to fetch projects');\n      setProjectsInSubDomain([]);\n    } finally {\n      setProjectsLoading(false);\n    }\n  };\n\n  // NEW: Handle editing a project\n  const handleEditProject = project => {\n    console.log('✏️ EDIT PROJECT - Starting for:', project.title);\n    setEditingProject(project);\n    setShowProjectEditModal(true);\n  };\n\n  // NEW: Handle deleting a project\n  const handleDeleteProject = async project => {\n    console.log('🗑️ DELETE PROJECT - Requesting deletion:', project.title);\n    if (!window.confirm(`Are you sure you want to delete the project \"${project.title}\"?`)) {\n      console.log('❌ DELETE PROJECT - Cancelled by user');\n      return;\n    }\n    try {\n      console.log('📡 DELETE PROJECT - API call for:', project.id);\n      await authService.deleteProject(project.id);\n      console.log('✅ DELETE PROJECT - Success');\n      toast.success('Project deleted successfully');\n\n      // Refresh projects list and subdomain data\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      await fetchDomainAndSubDomains(); // Refresh to update project counts\n    } catch (error) {\n      console.error('❌ DELETE PROJECT - Error:', error);\n      toast.error('Failed to delete project');\n    }\n  };\n\n  // NEW: Handle archiving a project\n  const handleArchiveProject = async project => {\n    const isArchiving = project.isActive;\n    const action = isArchiving ? 'archive' : 'restore';\n    console.log('📁 ARCHIVE PROJECT - Action:', action, 'for:', project.title);\n    if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n      return;\n    }\n    try {\n      await authService.archiveProject(project.id, {\n        archive: isArchiving,\n        reason: `${action} via subdomain management`\n      });\n      console.log('✅ ARCHIVE PROJECT - Success');\n      toast.success(`Project ${action}d successfully`);\n\n      // Refresh projects list\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n    } catch (error) {\n      console.error('❌ ARCHIVE PROJECT - Error:', error);\n      toast.error(`Failed to ${action} project`);\n    }\n  };\n\n  // NEW: Handle toggling featured status\n  const handleToggleProjectFeatured = async project => {\n    console.log('⭐ TOGGLE FEATURED - For project:', project.title);\n    try {\n      await authService.updateProject(project.id, {\n        isFeatured: !project.isFeatured\n      });\n      console.log('✅ TOGGLE FEATURED - Success');\n      toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n\n      // Refresh projects list\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n    } catch (error) {\n      console.error('❌ TOGGLE FEATURED - Error:', error);\n      toast.error('Failed to update featured status');\n    }\n  };\n  const handleDeleteSubDomain = async subDomain => {\n    const hasChildren = subDomain.children && subDomain.children.length > 0;\n    const hasProjects = subDomain.projectCount > 0;\n    let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n    if (hasChildren) {\n      confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n    }\n    if (hasProjects) {\n      confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n    }\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n    try {\n      console.log('🗑️ SUBDOMAIN DELETE - Deleting:', subDomain.title);\n      const response = await authService.deleteSubDomain(subDomain.id);\n      toast.success('Sub-domain deleted successfully');\n      fetchDomainAndSubDomains();\n    } catch (error) {\n      console.error('❌ SUBDOMAIN DELETE - Error:', error);\n      toast.error('Failed to delete sub-domain');\n    }\n  };\n  const toggleExpanded = nodeId => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading sub-domains...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subdomain-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"breadcrumb-link\",\n            onClick: () => navigate('/domains'),\n            children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this), \"Domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-current\",\n            children: (domain === null || domain === void 0 ? void 0 : domain.title) || 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SubDomain Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Manage the hierarchical structure of \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'this domain']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: () => handleAddSubDomain(),\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), \"Add Root SubDomain\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Build Your SubDomain Hierarchy:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guide-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\\"Add Root SubDomain\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 47\n            }, this), \" to create top-level categories\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click the \", /*#__PURE__*/_jsxDEV(FiPlus, {\n              className: \"inline-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 51\n            }, this), \" button next to any subdomain to add children\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Only \", /*#__PURE__*/_jsxDEV(FiTarget, {\n              className: \"inline-icon leaf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 46\n            }, this), \" leaf subdomains can have projects assigned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\\"Add Project\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 47\n            }, this), \" or \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\\"View Projects\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 81\n            }, this), \" on leaf subdomains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), domain && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-icon\",\n        children: /*#__PURE__*/_jsxDEV(FiFolder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: domain.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: domain.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"domain-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: subDomains.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), \" root sub-domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: domain.projectCount || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), \" total projects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subdomain-tree-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SubDomain Hierarchy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiFolder, {\n              className: \"folder-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), \"Has children\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiTarget, {\n              className: \"leaf-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), \"Leaf (can have projects)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiFileText, {\n              className: \"project-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), \"Add Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiList, {\n              className: \"view-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), \"View Projects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), subDomains.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subdomain-tree\",\n        children: subDomains.map(subDomain => /*#__PURE__*/_jsxDEV(SubDomainNode, {\n          subDomain: subDomain,\n          level: 0,\n          isExpanded: expandedNodes.has(subDomain.id),\n          onToggleExpanded: toggleExpanded,\n          onEdit: handleEditSubDomain,\n          onDelete: handleDeleteSubDomain,\n          onAddChild: handleAddSubDomain,\n          onAddProject: handleAddProjectToSubDomain,\n          onViewProjects: handleViewProjectsInSubDomain // NEW\n          ,\n          expandedNodes: expandedNodes\n        }, subDomain.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-tree-state\",\n        children: [/*#__PURE__*/_jsxDEV(FiFolderPlus, {\n          size: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No SubDomains Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start organizing your \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'domain', \" projects by creating subdomains\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-examples\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Example Structure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-tree\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item\",\n              children: \"\\uD83D\\uDCC2 Machine Learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item nested\",\n              children: \"\\uD83C\\uDFAF Deep Learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item nested\",\n              children: \"\\uD83C\\uDFAF Computer Vision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item\",\n              children: \"\\uD83C\\uDFAF Data Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button large\",\n            onClick: () => handleAddSubDomain(),\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this), \"Create Your First SubDomain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"\\uD83D\\uDCA1 Tip: Start with broad categories, then add specific subcategories as needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(SubDomainModal, {\n      subDomain: editingSubDomain,\n      parent: selectedParent,\n      domain: domain,\n      onClose: () => {\n        setShowAddModal(false);\n        setEditingSubDomain(null);\n        setSelectedParent(null);\n      },\n      onSave: () => {\n        setShowAddModal(false);\n        setEditingSubDomain(null);\n        setSelectedParent(null);\n        fetchDomainAndSubDomains();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 9\n    }, this), showProjectModal && /*#__PURE__*/_jsxDEV(ProjectModal, {\n      subDomain: selectedSubDomainForProject,\n      domain: domain,\n      onClose: () => {\n        setShowProjectModal(false);\n        setSelectedSubDomainForProject(null);\n      },\n      onSave: () => {\n        setShowProjectModal(false);\n        setSelectedSubDomainForProject(null);\n        toast.success('Project created successfully!');\n        fetchDomainAndSubDomains(); // Refresh to update project counts\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 9\n    }, this), showProjectsModal && /*#__PURE__*/_jsxDEV(ProjectsListModal, {\n      subDomain: selectedSubDomainForProjectsView,\n      projects: projectsInSubDomain,\n      loading: projectsLoading,\n      onClose: () => {\n        setShowProjectsModal(false);\n        setSelectedSubDomainForProjectsView(null);\n        setProjectsInSubDomain([]);\n      },\n      onEdit: handleEditProject,\n      onDelete: handleDeleteProject,\n      onArchive: handleArchiveProject,\n      onToggleFeatured: handleToggleProjectFeatured,\n      onAddProject: () => {\n        setShowProjectsModal(false);\n        setSelectedSubDomainForProject(selectedSubDomainForProjectsView);\n        setShowProjectModal(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 9\n    }, this), showProjectEditModal && editingProject && /*#__PURE__*/_jsxDEV(ProjectEditModal, {\n      project: editingProject,\n      onClose: () => {\n        setShowProjectEditModal(false);\n        setEditingProject(null);\n      },\n      onSave: () => {\n        setShowProjectEditModal(false);\n        setEditingProject(null);\n        // Refresh projects list and subdomain data\n        fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n        fetchDomainAndSubDomains();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n\n// UPDATED SubDomain Node Component with View Projects functionality\n_s(SubDomainManagement, \"h/WabeT8E3uxhidDdHFGsO8/F6w=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SubDomainManagement;\nconst SubDomainNode = ({\n  subDomain,\n  level,\n  isExpanded,\n  onToggleExpanded,\n  onEdit,\n  onDelete,\n  onAddChild,\n  onAddProject,\n  onViewProjects,\n  // NEW\n  expandedNodes\n}) => {\n  _s2();\n  const [showMenu, setShowMenu] = useState(false);\n  const hasChildren = subDomain.children && subDomain.children.length > 0;\n  const isLeaf = !hasChildren;\n  const hasProjects = subDomain.projectCount > 0;\n  console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n    title: subDomain.title,\n    level,\n    hasChildren,\n    isLeaf,\n    isExpanded,\n    projectCount: subDomain.projectCount,\n    hasProjects\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `subdomain-node level-${level}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-main\",\n        children: [hasChildren ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"expand-button\",\n          onClick: () => onToggleExpanded(subDomain.id),\n          children: isExpanded ? /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expand-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-icon\",\n          children: isLeaf ? /*#__PURE__*/_jsxDEV(FiTarget, {\n            className: \"leaf-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(FiFolder, {\n            className: \"folder-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"node-title\",\n            children: subDomain.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"node-description\",\n            children: subDomain.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-stats\",\n            children: [hasChildren && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge\",\n              children: [subDomain.children.length, \" sub-domains\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this), hasProjects && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge projects\",\n              children: [subDomain.projectCount, \" projects\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this), isLeaf && !hasProjects && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge leaf\",\n              children: \"Can have projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-actions\",\n        children: [isLeaf && hasProjects && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button view\",\n          onClick: () => onViewProjects(subDomain),\n          title: `View ${subDomain.projectCount} project(s) in \"${subDomain.title}\"`,\n          children: /*#__PURE__*/_jsxDEV(FiList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 13\n        }, this), isLeaf && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button project\",\n          onClick: () => onAddProject(subDomain),\n          title: `Add project to \"${subDomain.title}\"`,\n          children: /*#__PURE__*/_jsxDEV(FiFileText, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button add\",\n          onClick: () => onAddChild(subDomain),\n          title: `Add child subdomain under \"${subDomain.title}\"`,\n          children: /*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowMenu(!showMenu),\n            title: \"More actions\",\n            children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 13\n          }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [isLeaf && hasProjects && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onViewProjects(subDomain);\n                setShowMenu(false);\n              },\n              className: \"primary-option\",\n              children: [/*#__PURE__*/_jsxDEV(FiList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 21\n              }, this), \" View Projects (\", subDomain.projectCount, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 19\n            }, this), isLeaf && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onAddProject(subDomain);\n                setShowMenu(false);\n              },\n              className: \"primary-option\",\n              children: [/*#__PURE__*/_jsxDEV(FiFileText, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 21\n              }, this), \" Add Project\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onEdit(subDomain);\n                setShowMenu(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 19\n              }, this), \" Edit SubDomain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onAddChild(subDomain);\n                setShowMenu(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 19\n              }, this), \" Add Child SubDomain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onDelete(subDomain);\n                setShowMenu(false);\n              },\n              className: \"danger\",\n              children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this), \" Delete SubDomain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this), hasChildren && isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-children\",\n      children: subDomain.children.map(child => /*#__PURE__*/_jsxDEV(SubDomainNode, {\n        subDomain: child,\n        level: level + 1,\n        isExpanded: expandedNodes.has(child.id),\n        onToggleExpanded: onToggleExpanded,\n        onEdit: onEdit,\n        onDelete: onDelete,\n        onAddChild: onAddChild,\n        onAddProject: onAddProject,\n        onViewProjects: onViewProjects // NEW\n        ,\n        expandedNodes: expandedNodes\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 599,\n    columnNumber: 5\n  }, this);\n};\n\n// SubDomain Modal Component (unchanged)\n_s2(SubDomainNode, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c2 = SubDomainNode;\nconst SubDomainModal = ({\n  subDomain,\n  parent,\n  domain,\n  onClose,\n  onSave\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    title: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.title) || '',\n    description: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.description) || ''\n  });\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const requestData = {\n        title: formData.title.trim(),\n        description: formData.description.trim(),\n        domainId: domain.id,\n        parentId: (parent === null || parent === void 0 ? void 0 : parent.id) || null\n      };\n      console.log('💾 SUBDOMAIN SAVE - Request data:', requestData);\n      if (subDomain) {\n        const response = await authService.updateSubDomain(subDomain.id, requestData);\n        toast.success('Sub-domain updated successfully');\n      } else {\n        const response = await authService.createSubDomain(requestData);\n        toast.success('Sub-domain created successfully');\n      }\n      onSave();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('❌ SUBDOMAIN SAVE - Error:', error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to save sub-domain';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getModalTitle = () => {\n    if (subDomain) {\n      return `Edit SubDomain: ${subDomain.title}`;\n    }\n    if (parent) {\n      return `Add SubDomain under: ${parent.title}`;\n    }\n    return `Add Root SubDomain in: ${(domain === null || domain === void 0 ? void 0 : domain.title) || 'Domain'}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: getModalTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"SubDomain Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            placeholder: \"e.g., Machine Learning, Deep Learning\",\n            required: true,\n            minLength: 3,\n            maxLength: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              description: e.target.value\n            })),\n            rows: 3,\n            placeholder: \"Describe what this sub-domain covers...\",\n            maxLength: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 13\n          }, this), \" \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 66\n          }, this), parent && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Parent SubDomain:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 17\n            }, this), \" \", parent.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 13\n          }, this), \" \", parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading || !formData.title.trim(),\n            children: loading ? 'Saving...' : 'Save SubDomain'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 808,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 801,\n    columnNumber: 5\n  }, this);\n};\n\n// Project Creation Modal Component (unchanged)\n_s3(SubDomainModal, \"GK/DCXfCNFb5ohLoW+l6KsTmPCs=\");\n_c3 = SubDomainModal;\nconst ProjectModal = ({\n  subDomain,\n  domain,\n  onClose,\n  onSave\n}) => {\n  _s4();\n  const [formData, setFormData] = useState({\n    title: '',\n    abstract: '',\n    specifications: '',\n    learningOutcomes: '',\n    subDomainId: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.id) || '',\n    isFeatured: false\n  });\n  const [loading, setLoading] = useState(false);\n  console.log('📝 PROJECT MODAL - Props:', {\n    subDomain: subDomain === null || subDomain === void 0 ? void 0 : subDomain.title,\n    domain: domain === null || domain === void 0 ? void 0 : domain.title,\n    formData\n  });\n\n  // Slug generation function\n  const generateSlug = title => {\n    return title.toLowerCase().trim().replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n    .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n    .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // Don't send slug - let backend auto-generate it\n      const projectData = {\n        title: formData.title.trim(),\n        abstract: formData.abstract.trim(),\n        specifications: formData.specifications.trim(),\n        learningOutcomes: formData.learningOutcomes.trim(),\n        subDomainId: formData.subDomainId,\n        isFeatured: formData.isFeatured\n      };\n      console.log('💾 PROJECT SAVE - Starting API call with data:', projectData);\n      console.log('🔗 PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n      const response = await authService.createProject(projectData);\n      console.log('✅ PROJECT CREATE - Response:', response.data);\n      onSave();\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response3$data;\n      console.error('❌ PROJECT SAVE - Error:', error);\n      console.error('❌ PROJECT SAVE - Error response:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n\n      // Show more specific error message if available\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to create project';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Add Project to: \", subDomain === null || subDomain === void 0 ? void 0 : subDomain.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            placeholder: \"Enter project title...\",\n            required: true,\n            minLength: 3,\n            maxLength: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 13\n          }, this), formData.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slug-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Expected URL Slug: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: generateSlug(formData.title)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 43\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"(auto-generated by backend)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 946,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 946,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 13\n          }, this), \" \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 66\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SubDomain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 13\n          }, this), \" \", (subDomain === null || subDomain === void 0 ? void 0 : subDomain.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-note\",\n            children: [/*#__PURE__*/_jsxDEV(FiTarget, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 15\n            }, this), \" This is a leaf subdomain - perfect for projects!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Abstract *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.abstract,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              abstract: e.target.value\n            })),\n            rows: 4,\n            placeholder: \"Brief description of the project...\",\n            required: true,\n            minLength: 10,\n            maxLength: 1000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Specifications *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.specifications,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              specifications: e.target.value\n            })),\n            rows: 6,\n            placeholder: \"Technical specifications and requirements...\",\n            required: true,\n            minLength: 10,\n            maxLength: 5000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Learning Outcomes *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.learningOutcomes,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              learningOutcomes: e.target.value\n            })),\n            rows: 4,\n            placeholder: \"What will students learn from this project...\",\n            required: true,\n            minLength: 10,\n            maxLength: 2000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formData.isFeatured,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                isFeatured: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FiTarget, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 15\n            }, this), \"Featured Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes,\n            children: loading ? 'Creating...' : 'Create Project'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 924,\n    columnNumber: 5\n  }, this);\n};\n\n// NEW: Projects List Modal Component\n_s4(ProjectModal, \"xEzGlE7RlMQaW2g8q8xIHb6RJTM=\");\n_c4 = ProjectModal;\nconst ProjectsListModal = ({\n  subDomain,\n  projects,\n  loading,\n  onClose,\n  onEdit,\n  onDelete,\n  onArchive,\n  onToggleFeatured,\n  onAddProject\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Projects in: \", subDomain === null || subDomain === void 0 ? void 0 : subDomain.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1045,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-list-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"SubDomain:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 18\n              }, this), \" \", subDomain === null || subDomain === void 0 ? void 0 : subDomain.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1053,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Projects:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1054,\n                columnNumber: 18\n              }, this), \" \", projects.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1052,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: onAddProject,\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 15\n            }, this), \"Add New Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1056,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading projects...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1068,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 13\n        }, this) : projects.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-list\",\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(ProjectListItem, {\n            project: project,\n            onEdit: onEdit,\n            onDelete: onDelete,\n            onArchive: onArchive,\n            onToggleFeatured: onToggleFeatured\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-projects-state\",\n          children: [/*#__PURE__*/_jsxDEV(FiFileText, {\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1085,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Projects Yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1086,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This subdomain doesn't have any projects yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: onAddProject,\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1092,\n              columnNumber: 17\n            }, this), \"Add First Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1041,\n    columnNumber: 5\n  }, this);\n};\n\n// NEW: Project List Item Component\n_c5 = ProjectsListModal;\nconst ProjectListItem = ({\n  project,\n  onEdit,\n  onDelete,\n  onArchive,\n  onToggleFeatured\n}) => {\n  _s5();\n  var _project$abstract;\n  const [showMenu, setShowMenu] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `project-list-item ${!project.isActive ? 'archived' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"project-title\",\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-badges\",\n          children: [project.isFeatured && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge featured\",\n            children: [/*#__PURE__*/_jsxDEV(FiStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1121,\n              columnNumber: 17\n            }, this), \" Featured\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 15\n          }, this), !project.isActive && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge archived\",\n            children: \"Archived\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"project-abstract\",\n        children: [(_project$abstract = project.abstract) === null || _project$abstract === void 0 ? void 0 : _project$abstract.substring(0, 150), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 13\n          }, this), \" \", project.viewCount || 0, \" views\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [\"Created: \", new Date(project.createdAt).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [\"Updated: \", new Date(project.updatedAt).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button primary\",\n        onClick: () => onEdit(project),\n        title: \"Edit project\",\n        children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowMenu(!showMenu),\n          title: \"More actions\",\n          children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 11\n        }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onEdit(project);\n              setShowMenu(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 17\n            }, this), \" Edit Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onToggleFeatured(project);\n              setShowMenu(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1173,\n              columnNumber: 17\n            }, this), \" \", project.isFeatured ? 'Remove Featured' : 'Make Featured']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onArchive(project);\n              setShowMenu(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiArchive, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1179,\n              columnNumber: 17\n            }, this), \" \", project.isActive ? 'Archive' : 'Restore']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onDelete(project);\n              setShowMenu(false);\n            },\n            className: \"danger\",\n            children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1185,\n              columnNumber: 17\n            }, this), \" Delete Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1114,\n    columnNumber: 5\n  }, this);\n};\n\n// NEW: Project Edit Modal Component\n_s5(ProjectListItem, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c6 = ProjectListItem;\nconst ProjectEditModal = ({\n  project,\n  onClose,\n  onSave\n}) => {\n  _s6();\n  var _project$subDomain, _project$subDomain$do, _project$subDomain2;\n  const [formData, setFormData] = useState({\n    title: (project === null || project === void 0 ? void 0 : project.title) || '',\n    abstract: (project === null || project === void 0 ? void 0 : project.abstract) || '',\n    specifications: (project === null || project === void 0 ? void 0 : project.specifications) || '',\n    learningOutcomes: (project === null || project === void 0 ? void 0 : project.learningOutcomes) || '',\n    isFeatured: (project === null || project === void 0 ? void 0 : project.isFeatured) || false\n  });\n  const [loading, setLoading] = useState(false);\n  console.log('📝 PROJECT EDIT MODAL - Project:', project.title);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      console.log('💾 PROJECT UPDATE - Starting with data:', formData);\n      await authService.updateProject(project.id, formData);\n      console.log('✅ PROJECT UPDATE - Success');\n      toast.success('Project updated successfully');\n      onSave();\n    } catch (error) {\n      console.error('❌ PROJECT UPDATE - Error:', error);\n      toast.error('Failed to update project');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit Project: \", project.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 13\n          }, this), \" \", ((_project$subDomain = project.subDomain) === null || _project$subDomain === void 0 ? void 0 : (_project$subDomain$do = _project$subDomain.domain) === null || _project$subDomain$do === void 0 ? void 0 : _project$subDomain$do.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 85\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SubDomain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1247,\n            columnNumber: 13\n          }, this), \" \", ((_project$subDomain2 = project.subDomain) === null || _project$subDomain2 === void 0 ? void 0 : _project$subDomain2.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1247,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-note\",\n            children: \"\\uD83D\\uDCA1 To move this project to a different domain/subdomain, contact your administrator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Abstract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.abstract,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              abstract: e.target.value\n            })),\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Specifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.specifications,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              specifications: e.target.value\n            })),\n            rows: 6,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Learning Outcomes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.learningOutcomes,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              learningOutcomes: e.target.value\n            })),\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formData.isFeatured,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                isFeatured: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1285,\n              columnNumber: 15\n            }, this), \"Featured Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading,\n            children: loading ? 'Updating...' : 'Update Project'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1228,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1227,\n    columnNumber: 5\n  }, this);\n};\n_s6(ProjectEditModal, \"HWWjhxv4JT3/Tfbaz4NAG+yYBwQ=\");\n_c7 = ProjectEditModal;\nexport default SubDomainManagement;\n\n// // src/components/domains/SubDomainManagement.js - UPDATED WITH SLUG GENERATION\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiChevronDown,\n//   FiChevronRight,\n//   FiFolder,\n//   FiFolderPlus,\n//   FiFileText,\n//   FiArrowLeft,\n//   FiMoreVertical,\n//   FiMove,\n//   FiTarget\n// } from 'react-icons/fi';\n\n// const SubDomainManagement = () => {\n//   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n//   const { domainId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [domain, setDomain] = useState(null);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingSubDomain, setEditingSubDomain] = useState(null);\n//   const [selectedParent, setSelectedParent] = useState(null);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n//   // NEW: Project creation state\n//   const [showProjectModal, setShowProjectModal] = useState(false);\n//   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n//   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n//     domainId,\n//     domain: domain?.title,\n//     subDomainsCount: subDomains.length,\n//     loading,\n//     selectedParent: selectedParent?.title,\n//     expandedCount: expandedNodes.size,\n//     showProjectModal,\n//     selectedSubDomainForProject: selectedSubDomainForProject?.title\n//   });\n\n//   useEffect(() => {\n//     if (domainId) {\n//       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n//       fetchDomainAndSubDomains();\n//     }\n//   }, [domainId]);\n\n//   const fetchDomainAndSubDomains = async () => {\n//     try {\n//       setLoading(true);\n\n//       console.log('🔍 SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n//       // Get domain details\n//       const domainsResponse = await authService.getDomains();\n//       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n//       let domainData = null;\n//       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n//       if (domains.length > 0) {\n//         domainData = domains.find(d => d.id == domainId);\n//       }\n\n//       if (!domainData) {\n//         domainData = {\n//           id: domainId,\n//           title: `Domain ${domainId}`,\n//           description: 'Domain not found in list',\n//           projectCount: 0\n//         };\n//       }\n\n//       setDomain(domainData);\n\n//       // Get subdomains\n//       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n//       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n//       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n//       setSubDomains(subDomainsData);\n\n//       // Auto-expand first level\n//       if (subDomainsData.length > 0) {\n//         const firstLevelIds = subDomainsData.map(sd => sd.id);\n//         setExpandedNodes(new Set(firstLevelIds));\n//       }\n\n//       // Try hierarchy API as fallback\n//       try {\n//         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n//         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n//         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n//           setSubDomains(hierarchyData.subDomains);\n//           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n//             setDomain(prev => ({ ...prev, ...hierarchyData }));\n//           }\n//         }\n//       } catch (hierarchyError) {\n//         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n//       }\n\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n//       toast.error('Failed to fetch domain information');\n\n//       setDomain({\n//         id: domainId,\n//         title: `Domain ${domainId}`,\n//         description: 'Error loading domain details',\n//         projectCount: 0\n//       });\n//       setSubDomains([]);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleAddSubDomain = (parent = null) => {\n//     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n//     setSelectedParent(parent);\n//     setEditingSubDomain(null);\n//     setShowAddModal(true);\n//   };\n\n//   const handleEditSubDomain = (subDomain) => {\n//     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n//     setSelectedParent(null);\n//     setEditingSubDomain(subDomain);\n//     setShowAddModal(true);\n//   };\n\n//   // NEW: Handle adding project to subdomain\n//   const handleAddProjectToSubDomain = (subDomain) => {\n//     console.log('📝 ADD PROJECT - Starting for subdomain:', subDomain.title);\n//     console.log('📝 ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n\n//     if (subDomain.children && subDomain.children.length > 0) {\n//       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n//       return;\n//     }\n\n//     setSelectedSubDomainForProject(subDomain);\n//     setShowProjectModal(true);\n//   };\n\n//   const handleDeleteSubDomain = async (subDomain) => {\n//     const hasChildren = subDomain.children && subDomain.children.length > 0;\n//     const hasProjects = subDomain.projectCount > 0;\n\n//     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n//     if (hasChildren) {\n//       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n//     }\n//     if (hasProjects) {\n//       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n//     }\n\n//     if (!window.confirm(confirmMessage)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('🗑️ SUBDOMAIN DELETE - Deleting:', subDomain.title);\n//       const response = await authService.deleteSubDomain(subDomain.id);\n//       toast.success('Sub-domain deleted successfully');\n//       fetchDomainAndSubDomains();\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n//       toast.error('Failed to delete sub-domain');\n//     }\n//   };\n\n//   const toggleExpanded = (nodeId) => {\n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading sub-domains...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"subdomain-management\">\n//       {/* Header with Breadcrumb */}\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <div className=\"breadcrumb\">\n//             <button \n//               className=\"breadcrumb-link\"\n//               onClick={() => navigate('/domains')}\n//             >\n//               <FiArrowLeft />\n//               Domains\n//             </button>\n//             <span className=\"breadcrumb-separator\">/</span>\n//             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n//           </div>\n//           <h1>SubDomain Management</h1>\n//           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n//         </div>\n//         <div className=\"header-actions\">\n//           <button \n//             className=\"primary-button\" \n//             onClick={() => handleAddSubDomain()}\n//           >\n//             <FiPlus />\n//             Add Root SubDomain\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Quick Guide */}\n//       <div className=\"quick-guide\">\n//         <h3>How to Build Your SubDomain Hierarchy:</h3>\n//         <div className=\"guide-steps\">\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">1</span>\n//             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">2</span>\n//             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">3</span>\n//             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">4</span>\n//             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domain Info Card */}\n//       {domain && (\n//         <div className=\"domain-info-card\">\n//           <div className=\"domain-icon\">\n//             <FiFolder />\n//           </div>\n//           <div className=\"domain-details\">\n//             <h3>{domain.title}</h3>\n//             <p>{domain.description}</p>\n//             <div className=\"domain-stats\">\n//               <span className=\"stat-item\">\n//                 <strong>{subDomains.length}</strong> root sub-domains\n//               </span>\n//               <span className=\"stat-item\">\n//                 <strong>{domain.projectCount || 0}</strong> total projects\n//               </span>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* SubDomain Tree */}\n//       <div className=\"subdomain-tree-container\">\n//         <div className=\"tree-header\">\n//           <h2>SubDomain Hierarchy</h2>\n//           <div className=\"tree-legend\">\n//             <span className=\"legend-item\">\n//               <FiFolder className=\"folder-icon\" />\n//               Has children\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiTarget className=\"leaf-icon\" />\n//               Leaf (can have projects)\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiFileText className=\"project-icon\" />\n//               Add Project\n//             </span>\n//           </div>\n//         </div>\n\n//         {subDomains.length > 0 ? (\n//           <div className=\"subdomain-tree\">\n//             {subDomains.map((subDomain) => (\n//               <SubDomainNode\n//                 key={subDomain.id}\n//                 subDomain={subDomain}\n//                 level={0}\n//                 isExpanded={expandedNodes.has(subDomain.id)}\n//                 onToggleExpanded={toggleExpanded}\n//                 onEdit={handleEditSubDomain}\n//                 onDelete={handleDeleteSubDomain}\n//                 onAddChild={handleAddSubDomain}\n//                 onAddProject={handleAddProjectToSubDomain}\n//                 expandedNodes={expandedNodes}\n//               />\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"empty-tree-state\">\n//             <FiFolderPlus size={64} />\n//             <h3>No SubDomains Yet</h3>\n//             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n//             <div className=\"empty-state-examples\">\n//               <h4>Example Structure:</h4>\n//               <div className=\"example-tree\">\n//                 <div className=\"example-item\">📂 Machine Learning</div>\n//                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n//                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n//                 <div className=\"example-item\">🎯 Data Science</div>\n//               </div>\n//             </div>\n//             <div className=\"empty-state-actions\">\n//               <button \n//                 className=\"primary-button large\" \n//                 onClick={() => handleAddSubDomain()}\n//               >\n//                 <FiPlus />\n//                 Create Your First SubDomain\n//               </button>\n//               <p className=\"help-text\">\n//                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit SubDomain Modal */}\n//       {showAddModal && (\n//         <SubDomainModal\n//           subDomain={editingSubDomain}\n//           parent={selectedParent}\n//           domain={domain}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//           }}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n\n//       {/* NEW: Project Creation Modal with SLUG GENERATION */}\n//       {showProjectModal && (\n//         <ProjectModal\n//           subDomain={selectedSubDomainForProject}\n//           domain={domain}\n//           onClose={() => {\n//             setShowProjectModal(false);\n//             setSelectedSubDomainForProject(null);\n//           }}\n//           onSave={() => {\n//             setShowProjectModal(false);\n//             setSelectedSubDomainForProject(null);\n//             toast.success('Project created successfully!');\n//             fetchDomainAndSubDomains(); // Refresh to update project counts\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // UPDATED SubDomain Node Component\n// const SubDomainNode = ({ \n//   subDomain, \n//   level, \n//   isExpanded, \n//   onToggleExpanded, \n//   onEdit, \n//   onDelete, \n//   onAddChild,\n//   onAddProject,\n//   expandedNodes \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n//   const hasChildren = subDomain.children && subDomain.children.length > 0;\n//   const isLeaf = !hasChildren;\n\n//   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n//     title: subDomain.title,\n//     level,\n//     hasChildren,\n//     isLeaf,\n//     isExpanded,\n//     projectCount: subDomain.projectCount\n//   });\n\n//   return (\n//     <div className={`subdomain-node level-${level}`}>\n//       <div className=\"node-content\">\n//         <div className=\"node-main\">\n//           {hasChildren ? (\n//             <button \n//               className=\"expand-button\"\n//               onClick={() => onToggleExpanded(subDomain.id)}\n//             >\n//               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n//             </button>\n//           ) : (\n//             <div className=\"expand-placeholder\" />\n//           )}\n\n//           <div className=\"node-icon\">\n//             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n//           </div>\n\n//           <div className=\"node-info\">\n//             <h4 className=\"node-title\">{subDomain.title}</h4>\n//             <p className=\"node-description\">{subDomain.description}</p>\n//             <div className=\"node-stats\">\n//               {hasChildren && (\n//                 <span className=\"stat-badge\">\n//                   {subDomain.children.length} sub-domains\n//                 </span>\n//               )}\n//               {subDomain.projectCount > 0 && (\n//                 <span className=\"stat-badge projects\">\n//                   {subDomain.projectCount} projects\n//                 </span>\n//               )}\n//               {isLeaf && (\n//                 <span className=\"stat-badge leaf\">\n//                   Can have projects\n//                 </span>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"node-actions\">\n//           {isLeaf && (\n//             <button \n//               className=\"action-button project\" \n//               onClick={() => onAddProject(subDomain)}\n//               title={`Add project to \"${subDomain.title}\"`}\n//             >\n//               <FiFileText />\n//             </button>\n//           )}\n\n//           <button \n//             className=\"action-button add\" \n//             onClick={() => onAddChild(subDomain)}\n//             title={`Add child subdomain under \"${subDomain.title}\"`}\n//           >\n//             <FiPlus />\n//           </button>\n\n//           <div className=\"action-menu\">\n//             <button \n//               onClick={() => setShowMenu(!showMenu)}\n//               title=\"More actions\"\n//             >\n//               <FiMoreVertical />\n//             </button>\n//             {showMenu && (\n//               <div className=\"dropdown-menu\">\n//                 {isLeaf && (\n//                   <button \n//                     onClick={() => {\n//                       onAddProject(subDomain);\n//                       setShowMenu(false);\n//                     }}\n//                     className=\"primary-option\"\n//                   >\n//                     <FiFileText /> Add Project\n//                   </button>\n//                 )}\n//                 <button onClick={() => {\n//                   onEdit(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiEdit /> Edit SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onAddChild(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiPlus /> Add Child SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onDelete(subDomain);\n//                   setShowMenu(false);\n//                 }} className=\"danger\">\n//                   <FiTrash2 /> Delete SubDomain\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Children */}\n//       {hasChildren && isExpanded && (\n//         <div className=\"node-children\">\n//           {subDomain.children.map((child) => (\n//             <SubDomainNode\n//               key={child.id}\n//               subDomain={child}\n//               level={level + 1}\n//               isExpanded={expandedNodes.has(child.id)}\n//               onToggleExpanded={onToggleExpanded}\n//               onEdit={onEdit}\n//               onDelete={onDelete}\n//               onAddChild={onAddChild}\n//               onAddProject={onAddProject}\n//               expandedNodes={expandedNodes}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Modal Component (unchanged)\n// const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: subDomain?.title || '',\n//     description: subDomain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       const requestData = {\n//         title: formData.title.trim(),\n//         description: formData.description.trim(),\n//         domainId: domain.id,\n//         parentId: parent?.id || null\n//       };\n\n//       console.log('💾 SUBDOMAIN SAVE - Request data:', requestData);\n\n//       if (subDomain) {\n//         const response = await authService.updateSubDomain(subDomain.id, requestData);\n//         toast.success('Sub-domain updated successfully');\n//       } else {\n//         const response = await authService.createSubDomain(requestData);\n//         toast.success('Sub-domain created successfully');\n//       }\n\n//       onSave();\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n//       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n//       toast.error(errorMessage);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const getModalTitle = () => {\n//     if (subDomain) {\n//       return `Edit SubDomain: ${subDomain.title}`;\n//     }\n//     if (parent) {\n//       return `Add SubDomain under: ${parent.title}`;\n//     }\n//     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{getModalTitle()}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>SubDomain Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"e.g., Machine Learning, Deep Learning\"\n//               required\n//               minLength={3}\n//               maxLength={100}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//               placeholder=\"Describe what this sub-domain covers...\"\n//               maxLength={500}\n//             />\n//           </div>\n\n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             {parent && (\n//               <>\n//                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n//               </>\n//             )}\n//             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title.trim()}\n//             >\n//               {loading ? 'Saving...' : 'Save SubDomain'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // UPDATED: Project Modal Component with SLUG GENERATION\n// const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: '',\n//     abstract: '',\n//     specifications: '',\n//     learningOutcomes: '',\n//     subDomainId: subDomain?.id || '',\n//     isFeatured: false\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('📝 PROJECT MODAL - Props:', {\n//     subDomain: subDomain?.title,\n//     domain: domain?.title,\n//     formData\n//   });\n\n//   // ✅ SLUG GENERATION FUNCTION\n//   const generateSlug = (title) => {\n//     return title\n//       .toLowerCase()\n//       .trim()\n//       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n//       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n//       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n//   };\n\n//   // const handleSubmit = async (e) => {\n//   //   e.preventDefault();\n//   //   setLoading(true);\n\n//   //   try {\n//   //     // ✅ PREPARE DATA WITHOUT SLUG (backend will auto-generate)\n//   //     const projectData = {\n//   //       title: formData.title.trim(),\n//   //       abstract: formData.abstract.trim(),\n//   //       specifications: formData.specifications.trim(),\n//   //       learningOutcomes: formData.learningOutcomes.trim(),\n//   //       subDomainId: formData.subDomainId,\n//   //       isFeatured: formData.isFeatured\n//   //       // ⚡ REMOVED SLUG - backend validation doesn't allow it\n//   //     };\n\n//   //     console.log('💾 PROJECT SAVE - Starting API call with data:', projectData);\n//   //     console.log('🔗 PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n\n//   //     const response = await authService.createProject(projectData);\n//   //     console.log('✅ PROJECT CREATE - Response:', response.data);\n\n//   //     onSave();\n//   //   } catch (error) {\n//   //     console.error('❌ PROJECT SAVE - Error:', error);\n//   //     console.error('❌ PROJECT SAVE - Error response:', error.response?.data);\n\n//   //     // Show more specific error message if available\n//   //     const errorMessage = error.response?.data?.message || 'Failed to create project';\n//   //     toast.error(errorMessage);\n//   //   } finally {\n//   //     setLoading(false);\n//   //   }\n//   // };\n\n//   const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   setLoading(true);\n\n//   try {\n//     // ✅ DON'T SEND SLUG - let backend auto-generate it\n//     const projectData = {\n//       title: formData.title.trim(),\n//       abstract: formData.abstract.trim(),\n//       specifications: formData.specifications.trim(),\n//       learningOutcomes: formData.learningOutcomes.trim(),\n//       subDomainId: formData.subDomainId,\n//       isFeatured: formData.isFeatured\n//       // ⚡ NO SLUG FIELD - backend model hook will generate it\n//     };\n\n//     console.log('💾 PROJECT SAVE - Starting API call with data:', projectData);\n//     console.log('🔗 PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n\n//     const response = await authService.createProject(projectData);\n//     console.log('✅ PROJECT CREATE - Response:', response.data);\n\n//     onSave();\n//   } catch (error) {\n//     console.error('❌ PROJECT SAVE - Error:', error);\n//     console.error('❌ PROJECT SAVE - Error response:', error.response?.data);\n\n//     // Show more specific error message if available\n//     const errorMessage = error.response?.data?.message || 'Failed to create project';\n//     toast.error(errorMessage);\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Add Project to: {subDomain?.title}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Project Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"Enter project title...\"\n//               required\n//               minLength={3}\n//               maxLength={200}\n//             />\n//             {/* ✅ SHOW SLUG PREVIEW (for user reference only) */}\n//             {formData.title && (\n//               <div className=\"slug-preview\">\n//                 <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n//               </div>\n//             )}\n//           </div>\n\n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n//             <span className=\"info-note\">\n//               <FiTarget /> This is a leaf subdomain - perfect for projects!\n//             </span>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Abstract *</label>\n//             <textarea\n//               value={formData.abstract}\n//               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n//               rows={4}\n//               placeholder=\"Brief description of the project...\"\n//               required\n//               minLength={10}\n//               maxLength={1000}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Specifications *</label>\n//             <textarea\n//               value={formData.specifications}\n//               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n//               rows={6}\n//               placeholder=\"Technical specifications and requirements...\"\n//               required\n//               minLength={10}\n//               maxLength={5000}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Learning Outcomes *</label>\n//             <textarea\n//               value={formData.learningOutcomes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n//               rows={4}\n//               placeholder=\"What will students learn from this project...\"\n//               required\n//               minLength={10}\n//               maxLength={2000}\n//             />\n//           </div>\n\n//           <div className=\"form-group checkbox\">\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={formData.isFeatured}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n//               />\n//               <FiTarget />\n//               Featured Project\n//             </label>\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n//             >\n//               {loading ? 'Creating...' : 'Create Project'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SubDomainManagement;\n\n// // // src/components/domains/SubDomainManagement.js - UPDATED WITH SLUG GENERATION\n// // import React, { useState, useEffect } from 'react';\n// // import { useParams, useNavigate } from 'react-router-dom';\n// // import { authService } from '../../services/authService';\n// // import { toast } from 'react-toastify';\n// // import {\n// //   FiPlus,\n// //   FiEdit,\n// //   FiTrash2,\n// //   FiChevronDown,\n// //   FiChevronRight,\n// //   FiFolder,\n// //   FiFolderPlus,\n// //   FiFileText,\n// //   FiArrowLeft,\n// //   FiMoreVertical,\n// //   FiMove,\n// //   FiTarget\n// // } from 'react-icons/fi';\n\n// // const SubDomainManagement = () => {\n// //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// //   const { domainId } = useParams();\n// //   const navigate = useNavigate();\n\n// //   const [domain, setDomain] = useState(null);\n// //   const [subDomains, setSubDomains] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [showAddModal, setShowAddModal] = useState(false);\n// //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// //   const [selectedParent, setSelectedParent] = useState(null);\n// //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// //   // NEW: Project creation state\n// //   const [showProjectModal, setShowProjectModal] = useState(false);\n// //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// //     domainId,\n// //     domain: domain?.title,\n// //     subDomainsCount: subDomains.length,\n// //     loading,\n// //     selectedParent: selectedParent?.title,\n// //     expandedCount: expandedNodes.size,\n// //     showProjectModal,\n// //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// //   });\n\n// //   useEffect(() => {\n// //     if (domainId) {\n// //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// //       fetchDomainAndSubDomains();\n// //     }\n// //   }, [domainId]);\n\n// //   const fetchDomainAndSubDomains = async () => {\n// //     try {\n// //       setLoading(true);\n\n// //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n// //       // Get domain details\n// //       const domainsResponse = await authService.getDomains();\n// //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// //       let domainData = null;\n// //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// //       if (domains.length > 0) {\n// //         domainData = domains.find(d => d.id == domainId);\n// //       }\n\n// //       if (!domainData) {\n// //         domainData = {\n// //           id: domainId,\n// //           title: `Domain ${domainId}`,\n// //           description: 'Domain not found in list',\n// //           projectCount: 0\n// //         };\n// //       }\n\n// //       setDomain(domainData);\n\n// //       // Get subdomains\n// //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// //       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// //       setSubDomains(subDomainsData);\n\n// //       // Auto-expand first level\n// //       if (subDomainsData.length > 0) {\n// //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// //         setExpandedNodes(new Set(firstLevelIds));\n// //       }\n\n// //       // Try hierarchy API as fallback\n// //       try {\n// //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// //           setSubDomains(hierarchyData.subDomains);\n// //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// //           }\n// //         }\n// //       } catch (hierarchyError) {\n// //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// //       }\n\n// //     } catch (error) {\n// //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// //       toast.error('Failed to fetch domain information');\n\n// //       setDomain({\n// //         id: domainId,\n// //         title: `Domain ${domainId}`,\n// //         description: 'Error loading domain details',\n// //         projectCount: 0\n// //       });\n// //       setSubDomains([]);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const handleAddSubDomain = (parent = null) => {\n// //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// //     setSelectedParent(parent);\n// //     setEditingSubDomain(null);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleEditSubDomain = (subDomain) => {\n// //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// //     setSelectedParent(null);\n// //     setEditingSubDomain(subDomain);\n// //     setShowAddModal(true);\n// //   };\n\n// //   // NEW: Handle adding project to subdomain\n// //   const handleAddProjectToSubDomain = (subDomain) => {\n// //     console.log('📝 ADD PROJECT - Starting for subdomain:', subDomain.title);\n// //     console.log('📝 ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n\n// //     if (subDomain.children && subDomain.children.length > 0) {\n// //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// //       return;\n// //     }\n\n// //     setSelectedSubDomainForProject(subDomain);\n// //     setShowProjectModal(true);\n// //   };\n\n// //   const handleDeleteSubDomain = async (subDomain) => {\n// //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //     const hasProjects = subDomain.projectCount > 0;\n\n// //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// //     if (hasChildren) {\n// //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// //     }\n// //     if (hasProjects) {\n// //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// //     }\n\n// //     if (!window.confirm(confirmMessage)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       console.log('🗑️ SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// //       const response = await authService.deleteSubDomain(subDomain.id);\n// //       toast.success('Sub-domain deleted successfully');\n// //       fetchDomainAndSubDomains();\n// //     } catch (error) {\n// //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// //       toast.error('Failed to delete sub-domain');\n// //     }\n// //   };\n\n// //   const toggleExpanded = (nodeId) => {\n// //     const newExpanded = new Set(expandedNodes);\n// //     if (newExpanded.has(nodeId)) {\n// //       newExpanded.delete(nodeId);\n// //     } else {\n// //       newExpanded.add(nodeId);\n// //     }\n// //     setExpandedNodes(newExpanded);\n// //   };\n\n// //   if (loading) {\n// //     return (\n// //       <div className=\"loading-container\">\n// //         <div className=\"loading-spinner\"></div>\n// //         <p>Loading sub-domains...</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"subdomain-management\">\n// //       {/* Header with Breadcrumb */}\n// //       <div className=\"page-header\">\n// //         <div className=\"header-content\">\n// //           <div className=\"breadcrumb\">\n// //             <button \n// //               className=\"breadcrumb-link\"\n// //               onClick={() => navigate('/domains')}\n// //             >\n// //               <FiArrowLeft />\n// //               Domains\n// //             </button>\n// //             <span className=\"breadcrumb-separator\">/</span>\n// //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// //           </div>\n// //           <h1>SubDomain Management</h1>\n// //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// //         </div>\n// //         <div className=\"header-actions\">\n// //           <button \n// //             className=\"primary-button\" \n// //             onClick={() => handleAddSubDomain()}\n// //           >\n// //             <FiPlus />\n// //             Add Root SubDomain\n// //           </button>\n// //         </div>\n// //       </div>\n\n// //       {/* Quick Guide */}\n// //       <div className=\"quick-guide\">\n// //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// //         <div className=\"guide-steps\">\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">1</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">2</span>\n// //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">3</span>\n// //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">4</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Domain Info Card */}\n// //       {domain && (\n// //         <div className=\"domain-info-card\">\n// //           <div className=\"domain-icon\">\n// //             <FiFolder />\n// //           </div>\n// //           <div className=\"domain-details\">\n// //             <h3>{domain.title}</h3>\n// //             <p>{domain.description}</p>\n// //             <div className=\"domain-stats\">\n// //               <span className=\"stat-item\">\n// //                 <strong>{subDomains.length}</strong> root sub-domains\n// //               </span>\n// //               <span className=\"stat-item\">\n// //                 <strong>{domain.projectCount || 0}</strong> total projects\n// //               </span>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       )}\n\n// //       {/* SubDomain Tree */}\n// //       <div className=\"subdomain-tree-container\">\n// //         <div className=\"tree-header\">\n// //           <h2>SubDomain Hierarchy</h2>\n// //           <div className=\"tree-legend\">\n// //             <span className=\"legend-item\">\n// //               <FiFolder className=\"folder-icon\" />\n// //               Has children\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiTarget className=\"leaf-icon\" />\n// //               Leaf (can have projects)\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiFileText className=\"project-icon\" />\n// //               Add Project\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {subDomains.length > 0 ? (\n// //           <div className=\"subdomain-tree\">\n// //             {subDomains.map((subDomain) => (\n// //               <SubDomainNode\n// //                 key={subDomain.id}\n// //                 subDomain={subDomain}\n// //                 level={0}\n// //                 isExpanded={expandedNodes.has(subDomain.id)}\n// //                 onToggleExpanded={toggleExpanded}\n// //                 onEdit={handleEditSubDomain}\n// //                 onDelete={handleDeleteSubDomain}\n// //                 onAddChild={handleAddSubDomain}\n// //                 onAddProject={handleAddProjectToSubDomain}\n// //                 expandedNodes={expandedNodes}\n// //               />\n// //             ))}\n// //           </div>\n// //         ) : (\n// //           <div className=\"empty-tree-state\">\n// //             <FiFolderPlus size={64} />\n// //             <h3>No SubDomains Yet</h3>\n// //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// //             <div className=\"empty-state-examples\">\n// //               <h4>Example Structure:</h4>\n// //               <div className=\"example-tree\">\n// //                 <div className=\"example-item\">📂 Machine Learning</div>\n// //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// //                 <div className=\"example-item\">🎯 Data Science</div>\n// //               </div>\n// //             </div>\n// //             <div className=\"empty-state-actions\">\n// //               <button \n// //                 className=\"primary-button large\" \n// //                 onClick={() => handleAddSubDomain()}\n// //               >\n// //                 <FiPlus />\n// //                 Create Your First SubDomain\n// //               </button>\n// //               <p className=\"help-text\">\n// //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// //               </p>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Add/Edit SubDomain Modal */}\n// //       {showAddModal && (\n// //         <SubDomainModal\n// //           subDomain={editingSubDomain}\n// //           parent={selectedParent}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //             fetchDomainAndSubDomains();\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* NEW: Project Creation Modal with SLUG GENERATION */}\n// //       {showProjectModal && (\n// //         <ProjectModal\n// //           subDomain={selectedSubDomainForProject}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowProjectModal(false);\n// //             setSelectedSubDomainForProject(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowProjectModal(false);\n// //             setSelectedSubDomainForProject(null);\n// //             toast.success('Project created successfully!');\n// //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// //           }}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // UPDATED SubDomain Node Component\n// // const SubDomainNode = ({ \n// //   subDomain, \n// //   level, \n// //   isExpanded, \n// //   onToggleExpanded, \n// //   onEdit, \n// //   onDelete, \n// //   onAddChild,\n// //   onAddProject,\n// //   expandedNodes \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n// //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //   const isLeaf = !hasChildren;\n\n// //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// //     title: subDomain.title,\n// //     level,\n// //     hasChildren,\n// //     isLeaf,\n// //     isExpanded,\n// //     projectCount: subDomain.projectCount\n// //   });\n\n// //   return (\n// //     <div className={`subdomain-node level-${level}`}>\n// //       <div className=\"node-content\">\n// //         <div className=\"node-main\">\n// //           {hasChildren ? (\n// //             <button \n// //               className=\"expand-button\"\n// //               onClick={() => onToggleExpanded(subDomain.id)}\n// //             >\n// //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// //             </button>\n// //           ) : (\n// //             <div className=\"expand-placeholder\" />\n// //           )}\n\n// //           <div className=\"node-icon\">\n// //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// //           </div>\n\n// //           <div className=\"node-info\">\n// //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// //             <p className=\"node-description\">{subDomain.description}</p>\n// //             <div className=\"node-stats\">\n// //               {hasChildren && (\n// //                 <span className=\"stat-badge\">\n// //                   {subDomain.children.length} sub-domains\n// //                 </span>\n// //               )}\n// //               {subDomain.projectCount > 0 && (\n// //                 <span className=\"stat-badge projects\">\n// //                   {subDomain.projectCount} projects\n// //                 </span>\n// //               )}\n// //               {isLeaf && (\n// //                 <span className=\"stat-badge leaf\">\n// //                   Can have projects\n// //                 </span>\n// //               )}\n// //             </div>\n// //           </div>\n// //         </div>\n\n// //         <div className=\"node-actions\">\n// //           {isLeaf && (\n// //             <button \n// //               className=\"action-button project\" \n// //               onClick={() => onAddProject(subDomain)}\n// //               title={`Add project to \"${subDomain.title}\"`}\n// //             >\n// //               <FiFileText />\n// //             </button>\n// //           )}\n\n// //           <button \n// //             className=\"action-button add\" \n// //             onClick={() => onAddChild(subDomain)}\n// //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// //           >\n// //             <FiPlus />\n// //           </button>\n\n// //           <div className=\"action-menu\">\n// //             <button \n// //               onClick={() => setShowMenu(!showMenu)}\n// //               title=\"More actions\"\n// //             >\n// //               <FiMoreVertical />\n// //             </button>\n// //             {showMenu && (\n// //               <div className=\"dropdown-menu\">\n// //                 {isLeaf && (\n// //                   <button \n// //                     onClick={() => {\n// //                       onAddProject(subDomain);\n// //                       setShowMenu(false);\n// //                     }}\n// //                     className=\"primary-option\"\n// //                   >\n// //                     <FiFileText /> Add Project\n// //                   </button>\n// //                 )}\n// //                 <button onClick={() => {\n// //                   onEdit(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiEdit /> Edit SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onAddChild(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiPlus /> Add Child SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onDelete(subDomain);\n// //                   setShowMenu(false);\n// //                 }} className=\"danger\">\n// //                   <FiTrash2 /> Delete SubDomain\n// //                 </button>\n// //               </div>\n// //             )}\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Children */}\n// //       {hasChildren && isExpanded && (\n// //         <div className=\"node-children\">\n// //           {subDomain.children.map((child) => (\n// //             <SubDomainNode\n// //               key={child.id}\n// //               subDomain={child}\n// //               level={level + 1}\n// //               isExpanded={expandedNodes.has(child.id)}\n// //               onToggleExpanded={onToggleExpanded}\n// //               onEdit={onEdit}\n// //               onDelete={onDelete}\n// //               onAddChild={onAddChild}\n// //               onAddProject={onAddProject}\n// //               expandedNodes={expandedNodes}\n// //             />\n// //           ))}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // SubDomain Modal Component (unchanged)\n// // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: subDomain?.title || '',\n// //     description: subDomain?.description || ''\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       const requestData = {\n// //         title: formData.title.trim(),\n// //         description: formData.description.trim(),\n// //         domainId: domain.id,\n// //         parentId: parent?.id || null\n// //       };\n\n// //       console.log('💾 SUBDOMAIN SAVE - Request data:', requestData);\n\n// //       if (subDomain) {\n// //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// //         toast.success('Sub-domain updated successfully');\n// //       } else {\n// //         const response = await authService.createSubDomain(requestData);\n// //         toast.success('Sub-domain created successfully');\n// //       }\n\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// //       toast.error(errorMessage);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const getModalTitle = () => {\n// //     if (subDomain) {\n// //       return `Edit SubDomain: ${subDomain.title}`;\n// //     }\n// //     if (parent) {\n// //       return `Add SubDomain under: ${parent.title}`;\n// //     }\n// //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal\">\n// //         <div className=\"modal-header\">\n// //           <h2>{getModalTitle()}</h2>\n// //           <button onClick={onClose}>×</button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>SubDomain Title *</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// //               required\n// //               minLength={3}\n// //               maxLength={100}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Description (Optional)</label>\n// //             <textarea\n// //               value={formData.description}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// //               rows={3}\n// //               placeholder=\"Describe what this sub-domain covers...\"\n// //               maxLength={500}\n// //             />\n// //           </div>\n\n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             {parent && (\n// //               <>\n// //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// //               </>\n// //             )}\n// //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// //           </div>\n\n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button \n// //               type=\"submit\" \n// //               className=\"primary-button\" \n// //               disabled={loading || !formData.title.trim()}\n// //             >\n// //               {loading ? 'Saving...' : 'Save SubDomain'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // UPDATED: Project Modal Component with SLUG GENERATION\n// // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: '',\n// //     abstract: '',\n// //     specifications: '',\n// //     learningOutcomes: '',\n// //     subDomainId: subDomain?.id || '',\n// //     isFeatured: false\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   console.log('📝 PROJECT MODAL - Props:', {\n// //     subDomain: subDomain?.title,\n// //     domain: domain?.title,\n// //     formData\n// //   });\n\n// //   // ✅ SLUG GENERATION FUNCTION\n// //   const generateSlug = (title) => {\n// //     return title\n// //       .toLowerCase()\n// //       .trim()\n// //       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n// //       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n// //       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       // ✅ GENERATE SLUG FROM TITLE\n// //       const slug = generateSlug(formData.title);\n\n// //       // ✅ PREPARE COMPLETE DATA WITH SLUG\n// //       const projectData = {\n// //         ...formData,\n// //         slug: slug, // ⚡ ADD THE GENERATED SLUG HERE\n// //         title: formData.title.trim(),\n// //         abstract: formData.abstract.trim(),\n// //         specifications: formData.specifications.trim(),\n// //         learningOutcomes: formData.learningOutcomes.trim()\n// //       };\n\n// //       console.log('💾 PROJECT SAVE - Starting API call with data:', projectData);\n// //       console.log('🔗 PROJECT SAVE - Generated slug:', slug);\n\n// //       const response = await authService.createProject(projectData);\n// //       console.log('✅ PROJECT CREATE - Response:', response.data);\n\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('❌ PROJECT SAVE - Error:', error);\n// //       console.error('❌ PROJECT SAVE - Error response:', error.response?.data);\n\n// //       // Show more specific error message if available\n// //       const errorMessage = error.response?.data?.message || 'Failed to create project';\n// //       toast.error(errorMessage);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>Add Project to: {subDomain?.title}</h2>\n// //           <button onClick={onClose}>×</button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>Project Title *</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"Enter project title...\"\n// //               required\n// //               minLength={3}\n// //               maxLength={200}\n// //             />\n// //             {/* ✅ SHOW GENERATED SLUG PREVIEW */}\n// //             {formData.title && (\n// //               <div className=\"slug-preview\">\n// //                 <small>URL Slug: <code>{generateSlug(formData.title)}</code></small>\n// //               </div>\n// //             )}\n// //           </div>\n\n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// //             <span className=\"info-note\">\n// //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// //             </span>\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Abstract *</label>\n// //             <textarea\n// //               value={formData.abstract}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// //               rows={4}\n// //               placeholder=\"Brief description of the project...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={1000}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Specifications *</label>\n// //             <textarea\n// //               value={formData.specifications}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// //               rows={6}\n// //               placeholder=\"Technical specifications and requirements...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={5000}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Learning Outcomes *</label>\n// //             <textarea\n// //               value={formData.learningOutcomes}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// //               rows={4}\n// //               placeholder=\"What will students learn from this project...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={2000}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group checkbox\">\n// //             <label>\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={formData.isFeatured}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// //               />\n// //               <FiTarget />\n// //               Featured Project\n// //             </label>\n// //           </div>\n\n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button \n// //               type=\"submit\" \n// //               className=\"primary-button\" \n// //               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n// //             >\n// //               {loading ? 'Creating...' : 'Create Project'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SubDomainManagement;\n\n// // // // src/components/domains/SubDomainManagement.js - UPDATED WITH ADD PROJECT FEATURE\n// // // import React, { useState, useEffect } from 'react';\n// // // import { useParams, useNavigate } from 'react-router-dom';\n// // // import { authService } from '../../services/authService';\n// // // import { toast } from 'react-toastify';\n// // // import {\n// // //   FiPlus,\n// // //   FiEdit,\n// // //   FiTrash2,\n// // //   FiChevronDown,\n// // //   FiChevronRight,\n// // //   FiFolder,\n// // //   FiFolderPlus,\n// // //   FiFileText,\n// // //   FiArrowLeft,\n// // //   FiMoreVertical,\n// // //   FiMove,\n// // //   FiTarget\n// // // } from 'react-icons/fi';\n\n// // // const SubDomainManagement = () => {\n// // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // //   const { domainId } = useParams();\n// // //   const navigate = useNavigate();\n\n// // //   const [domain, setDomain] = useState(null);\n// // //   const [subDomains, setSubDomains] = useState([]);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [showAddModal, setShowAddModal] = useState(false);\n// // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // //   const [selectedParent, setSelectedParent] = useState(null);\n// // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // //   // NEW: Project creation state\n// // //   const [showProjectModal, setShowProjectModal] = useState(false);\n// // //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // //     domainId,\n// // //     domain: domain?.title,\n// // //     subDomainsCount: subDomains.length,\n// // //     loading,\n// // //     selectedParent: selectedParent?.title,\n// // //     expandedCount: expandedNodes.size,\n// // //     showProjectModal,\n// // //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// // //   });\n\n// // //   useEffect(() => {\n// // //     if (domainId) {\n// // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // //       fetchDomainAndSubDomains();\n// // //     }\n// // //   }, [domainId]);\n\n// // //   const fetchDomainAndSubDomains = async () => {\n// // //     try {\n// // //       setLoading(true);\n\n// // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n// // //       // Get domain details\n// // //       const domainsResponse = await authService.getDomains();\n// // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // //       let domainData = null;\n// // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // //       if (domains.length > 0) {\n// // //         domainData = domains.find(d => d.id == domainId);\n// // //       }\n\n// // //       if (!domainData) {\n// // //         domainData = {\n// // //           id: domainId,\n// // //           title: `Domain ${domainId}`,\n// // //           description: 'Domain not found in list',\n// // //           projectCount: 0\n// // //         };\n// // //       }\n\n// // //       setDomain(domainData);\n\n// // //       // Get subdomains\n// // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // //       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // //       setSubDomains(subDomainsData);\n\n// // //       // Auto-expand first level\n// // //       if (subDomainsData.length > 0) {\n// // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // //         setExpandedNodes(new Set(firstLevelIds));\n// // //       }\n\n// // //       // Try hierarchy API as fallback\n// // //       try {\n// // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // //           setSubDomains(hierarchyData.subDomains);\n// // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // //           }\n// // //         }\n// // //       } catch (hierarchyError) {\n// // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// // //       }\n\n// // //     } catch (error) {\n// // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // //       toast.error('Failed to fetch domain information');\n\n// // //       setDomain({\n// // //         id: domainId,\n// // //         title: `Domain ${domainId}`,\n// // //         description: 'Error loading domain details',\n// // //         projectCount: 0\n// // //       });\n// // //       setSubDomains([]);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const handleAddSubDomain = (parent = null) => {\n// // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// // //     setSelectedParent(parent);\n// // //     setEditingSubDomain(null);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   const handleEditSubDomain = (subDomain) => {\n// // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// // //     setSelectedParent(null);\n// // //     setEditingSubDomain(subDomain);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   // NEW: Handle adding project to subdomain\n// // //   const handleAddProjectToSubDomain = (subDomain) => {\n// // //     console.log('📝 ADD PROJECT - Starting for subdomain:', subDomain.title);\n// // //     console.log('📝 ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n\n// // //     if (subDomain.children && subDomain.children.length > 0) {\n// // //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// // //       return;\n// // //     }\n\n// // //     setSelectedSubDomainForProject(subDomain);\n// // //     setShowProjectModal(true);\n// // //   };\n\n// // //   const handleDeleteSubDomain = async (subDomain) => {\n// // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //     const hasProjects = subDomain.projectCount > 0;\n\n// // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // //     if (hasChildren) {\n// // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // //     }\n// // //     if (hasProjects) {\n// // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // //     }\n\n// // //     if (!window.confirm(confirmMessage)) {\n// // //       return;\n// // //     }\n\n// // //     try {\n// // //       console.log('🗑️ SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// // //       const response = await authService.deleteSubDomain(subDomain.id);\n// // //       toast.success('Sub-domain deleted successfully');\n// // //       fetchDomainAndSubDomains();\n// // //     } catch (error) {\n// // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // //       toast.error('Failed to delete sub-domain');\n// // //     }\n// // //   };\n\n// // //   const toggleExpanded = (nodeId) => {\n// // //     const newExpanded = new Set(expandedNodes);\n// // //     if (newExpanded.has(nodeId)) {\n// // //       newExpanded.delete(nodeId);\n// // //     } else {\n// // //       newExpanded.add(nodeId);\n// // //     }\n// // //     setExpandedNodes(newExpanded);\n// // //   };\n\n// // //   if (loading) {\n// // //     return (\n// // //       <div className=\"loading-container\">\n// // //         <div className=\"loading-spinner\"></div>\n// // //         <p>Loading sub-domains...</p>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <div className=\"subdomain-management\">\n// // //       {/* Header with Breadcrumb */}\n// // //       <div className=\"page-header\">\n// // //         <div className=\"header-content\">\n// // //           <div className=\"breadcrumb\">\n// // //             <button \n// // //               className=\"breadcrumb-link\"\n// // //               onClick={() => navigate('/domains')}\n// // //             >\n// // //               <FiArrowLeft />\n// // //               Domains\n// // //             </button>\n// // //             <span className=\"breadcrumb-separator\">/</span>\n// // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // //           </div>\n// // //           <h1>SubDomain Management</h1>\n// // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // //         </div>\n// // //         <div className=\"header-actions\">\n// // //           <button \n// // //             className=\"primary-button\" \n// // //             onClick={() => handleAddSubDomain()}\n// // //           >\n// // //             <FiPlus />\n// // //             Add Root SubDomain\n// // //           </button>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Quick Guide */}\n// // //       <div className=\"quick-guide\">\n// // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // //         <div className=\"guide-steps\">\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">1</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">2</span>\n// // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">3</span>\n// // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">4</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Domain Info Card */}\n// // //       {domain && (\n// // //         <div className=\"domain-info-card\">\n// // //           <div className=\"domain-icon\">\n// // //             <FiFolder />\n// // //           </div>\n// // //           <div className=\"domain-details\">\n// // //             <h3>{domain.title}</h3>\n// // //             <p>{domain.description}</p>\n// // //             <div className=\"domain-stats\">\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // //               </span>\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // //               </span>\n// // //             </div>\n// // //           </div>\n// // //         </div>\n// // //       )}\n\n// // //       {/* SubDomain Tree */}\n// // //       <div className=\"subdomain-tree-container\">\n// // //         <div className=\"tree-header\">\n// // //           <h2>SubDomain Hierarchy</h2>\n// // //           <div className=\"tree-legend\">\n// // //             <span className=\"legend-item\">\n// // //               <FiFolder className=\"folder-icon\" />\n// // //               Has children\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiTarget className=\"leaf-icon\" />\n// // //               Leaf (can have projects)\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiFileText className=\"project-icon\" />\n// // //               Add Project\n// // //             </span>\n// // //           </div>\n// // //         </div>\n\n// // //         {subDomains.length > 0 ? (\n// // //           <div className=\"subdomain-tree\">\n// // //             {subDomains.map((subDomain) => (\n// // //               <SubDomainNode\n// // //                 key={subDomain.id}\n// // //                 subDomain={subDomain}\n// // //                 level={0}\n// // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // //                 onToggleExpanded={toggleExpanded}\n// // //                 onEdit={handleEditSubDomain}\n// // //                 onDelete={handleDeleteSubDomain}\n// // //                 onAddChild={handleAddSubDomain}\n// // //                 onAddProject={handleAddProjectToSubDomain} // NEW\n// // //                 expandedNodes={expandedNodes}\n// // //               />\n// // //             ))}\n// // //           </div>\n// // //         ) : (\n// // //           <div className=\"empty-tree-state\">\n// // //             <FiFolderPlus size={64} />\n// // //             <h3>No SubDomains Yet</h3>\n// // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // //             <div className=\"empty-state-examples\">\n// // //               <h4>Example Structure:</h4>\n// // //               <div className=\"example-tree\">\n// // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // //               </div>\n// // //             </div>\n// // //             <div className=\"empty-state-actions\">\n// // //               <button \n// // //                 className=\"primary-button large\" \n// // //                 onClick={() => handleAddSubDomain()}\n// // //               >\n// // //                 <FiPlus />\n// // //                 Create Your First SubDomain\n// // //               </button>\n// // //               <p className=\"help-text\">\n// // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // //               </p>\n// // //             </div>\n// // //           </div>\n// // //         )}\n// // //       </div>\n\n// // //       {/* Add/Edit SubDomain Modal */}\n// // //       {showAddModal && (\n// // //         <SubDomainModal\n// // //           subDomain={editingSubDomain}\n// // //           parent={selectedParent}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //             fetchDomainAndSubDomains();\n// // //           }}\n// // //         />\n// // //       )}\n\n// // //       {/* NEW: Project Creation Modal */}\n// // //       {showProjectModal && (\n// // //         <ProjectModal\n// // //           subDomain={selectedSubDomainForProject}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowProjectModal(false);\n// // //             setSelectedSubDomainForProject(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowProjectModal(false);\n// // //             setSelectedSubDomainForProject(null);\n// // //             toast.success('Project created successfully!');\n// // //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// // //           }}\n// // //         />\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // UPDATED SubDomain Node Component\n// // // const SubDomainNode = ({ \n// // //   subDomain, \n// // //   level, \n// // //   isExpanded, \n// // //   onToggleExpanded, \n// // //   onEdit, \n// // //   onDelete, \n// // //   onAddChild,\n// // //   onAddProject, // NEW\n// // //   expandedNodes \n// // // }) => {\n// // //   const [showMenu, setShowMenu] = useState(false);\n// // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //   const isLeaf = !hasChildren;\n\n// // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // //     title: subDomain.title,\n// // //     level,\n// // //     hasChildren,\n// // //     isLeaf,\n// // //     isExpanded,\n// // //     projectCount: subDomain.projectCount\n// // //   });\n\n// // //   return (\n// // //     <div className={`subdomain-node level-${level}`}>\n// // //       <div className=\"node-content\">\n// // //         <div className=\"node-main\">\n// // //           {hasChildren ? (\n// // //             <button \n// // //               className=\"expand-button\"\n// // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // //             >\n// // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // //             </button>\n// // //           ) : (\n// // //             <div className=\"expand-placeholder\" />\n// // //           )}\n\n// // //           <div className=\"node-icon\">\n// // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // //           </div>\n\n// // //           <div className=\"node-info\">\n// // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // //             <p className=\"node-description\">{subDomain.description}</p>\n// // //             <div className=\"node-stats\">\n// // //               {hasChildren && (\n// // //                 <span className=\"stat-badge\">\n// // //                   {subDomain.children.length} sub-domains\n// // //                 </span>\n// // //               )}\n// // //               {subDomain.projectCount > 0 && (\n// // //                 <span className=\"stat-badge projects\">\n// // //                   {subDomain.projectCount} projects\n// // //                 </span>\n// // //               )}\n// // //               {isLeaf && (\n// // //                 <span className=\"stat-badge leaf\">\n// // //                   Can have projects\n// // //                 </span>\n// // //               )}\n// // //             </div>\n// // //           </div>\n// // //         </div>\n\n// // //         <div className=\"node-actions\">\n// // //           {/* NEW: Add Project Button for Leaf Subdomains */}\n// // //           {isLeaf && (\n// // //             <button \n// // //               className=\"action-button project\" \n// // //               onClick={() => onAddProject(subDomain)}\n// // //               title={`Add project to \"${subDomain.title}\"`}\n// // //             >\n// // //               <FiFileText />\n// // //             </button>\n// // //           )}\n\n// // //           <button \n// // //             className=\"action-button add\" \n// // //             onClick={() => onAddChild(subDomain)}\n// // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // //           >\n// // //             <FiPlus />\n// // //           </button>\n\n// // //           <div className=\"action-menu\">\n// // //             <button \n// // //               onClick={() => setShowMenu(!showMenu)}\n// // //               title=\"More actions\"\n// // //             >\n// // //               <FiMoreVertical />\n// // //             </button>\n// // //             {showMenu && (\n// // //               <div className=\"dropdown-menu\">\n// // //                 {/* NEW: Add Project Option for Leaf Subdomains */}\n// // //                 {isLeaf && (\n// // //                   <button \n// // //                     onClick={() => {\n// // //                       onAddProject(subDomain);\n// // //                       setShowMenu(false);\n// // //                     }}\n// // //                     className=\"primary-option\"\n// // //                   >\n// // //                     <FiFileText /> Add Project\n// // //                   </button>\n// // //                 )}\n// // //                 <button onClick={() => {\n// // //                   onEdit(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiEdit /> Edit SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onAddChild(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiPlus /> Add Child SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onDelete(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }} className=\"danger\">\n// // //                   <FiTrash2 /> Delete SubDomain\n// // //                 </button>\n// // //               </div>\n// // //             )}\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Children */}\n// // //       {hasChildren && isExpanded && (\n// // //         <div className=\"node-children\">\n// // //           {subDomain.children.map((child) => (\n// // //             <SubDomainNode\n// // //               key={child.id}\n// // //               subDomain={child}\n// // //               level={level + 1}\n// // //               isExpanded={expandedNodes.has(child.id)}\n// // //               onToggleExpanded={onToggleExpanded}\n// // //               onEdit={onEdit}\n// // //               onDelete={onDelete}\n// // //               onAddChild={onAddChild}\n// // //               onAddProject={onAddProject} // NEW\n// // //               expandedNodes={expandedNodes}\n// // //             />\n// // //           ))}\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // SubDomain Modal Component (unchanged)\n// // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: subDomain?.title || '',\n// // //     description: subDomain?.description || ''\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setLoading(true);\n\n// // //     try {\n// // //       const requestData = {\n// // //         title: formData.title.trim(),\n// // //         description: formData.description.trim(),\n// // //         domainId: domain.id,\n// // //         parentId: parent?.id || null\n// // //       };\n\n// // //       console.log('💾 SUBDOMAIN SAVE - Request data:', requestData);\n\n// // //       if (subDomain) {\n// // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // //         toast.success('Sub-domain updated successfully');\n// // //       } else {\n// // //         const response = await authService.createSubDomain(requestData);\n// // //         toast.success('Sub-domain created successfully');\n// // //       }\n\n// // //       onSave();\n// // //     } catch (error) {\n// // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// // //       toast.error(errorMessage);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const getModalTitle = () => {\n// // //     if (subDomain) {\n// // //       return `Edit SubDomain: ${subDomain.title}`;\n// // //     }\n// // //     if (parent) {\n// // //       return `Add SubDomain under: ${parent.title}`;\n// // //     }\n// // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // //   };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>{getModalTitle()}</h2>\n// // //           <button onClick={onClose}>×</button>\n// // //         </div>\n\n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>SubDomain Title *</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // //               required\n// // //               minLength={3}\n// // //               maxLength={100}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Description (Optional)</label>\n// // //             <textarea\n// // //               value={formData.description}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // //               rows={3}\n// // //               placeholder=\"Describe what this sub-domain covers...\"\n// // //               maxLength={500}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             {parent && (\n// // //               <>\n// // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // //               </>\n// // //             )}\n// // //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// // //           </div>\n\n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button \n// // //               type=\"submit\" \n// // //               className=\"primary-button\" \n// // //               disabled={loading || !formData.title.trim()}\n// // //             >\n// // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // NEW: Project Modal Component for SubDomain context\n// // // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: '',\n// // //     abstract: '',\n// // //     specifications: '',\n// // //     learningOutcomes: '',\n// // //     subDomainId: subDomain?.id || '',\n// // //     isFeatured: false\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   console.log('📝 PROJECT MODAL - Props:', {\n// // //     subDomain: subDomain?.title,\n// // //     domain: domain?.title,\n// // //     formData\n// // //   });\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setLoading(true);\n\n// // //     try {\n// // //       console.log('💾 PROJECT SAVE - Starting API call with data:', formData);\n\n// // //       const response = await authService.createProject(formData);\n// // //       console.log('✅ PROJECT CREATE - Response:', response.data);\n\n// // //       onSave();\n// // //     } catch (error) {\n// // //       console.error('❌ PROJECT SAVE - Error:', error);\n// // //       toast.error('Failed to create project');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal large\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>Add Project to: {subDomain?.title}</h2>\n// // //           <button onClick={onClose}>×</button>\n// // //         </div>\n\n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>Project Title *</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"Enter project title...\"\n// // //               required\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// // //             <span className=\"info-note\">\n// // //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// // //             </span>\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Abstract *</label>\n// // //             <textarea\n// // //               value={formData.abstract}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// // //               rows={4}\n// // //               placeholder=\"Brief description of the project...\"\n// // //               required\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Specifications *</label>\n// // //             <textarea\n// // //               value={formData.specifications}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// // //               rows={6}\n// // //               placeholder=\"Technical specifications and requirements...\"\n// // //               required\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Learning Outcomes *</label>\n// // //             <textarea\n// // //               value={formData.learningOutcomes}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// // //               rows={4}\n// // //               placeholder=\"What will students learn from this project...\"\n// // //               required\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-group checkbox\">\n// // //             <label>\n// // //               <input\n// // //                 type=\"checkbox\"\n// // //                 checked={formData.isFeatured}\n// // //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// // //               />\n// // //               <FiTarget />\n// // //               Featured Project\n// // //             </label>\n// // //           </div>\n\n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button \n// // //               type=\"submit\" \n// // //               className=\"primary-button\" \n// // //               disabled={loading || !formData.title || !formData.abstract}\n// // //             >\n// // //               {loading ? 'Creating...' : 'Create Project'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SubDomainManagement;\n\n// // // // // src/components/domains/SubDomainManagement.js - CORRECTED VERSION\n// // // // import React, { useState, useEffect } from 'react';\n// // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // import { authService } from '../../services/authService';\n// // // // import { toast } from 'react-toastify';\n// // // // import {\n// // // //   FiPlus,\n// // // //   FiEdit,\n// // // //   FiTrash2,\n// // // //   FiChevronDown,\n// // // //   FiChevronRight,\n// // // //   FiFolder,\n// // // //   FiFolderPlus,\n// // // //   FiFileText,\n// // // //   FiArrowLeft,\n// // // //   FiMoreVertical,\n// // // //   FiMove,\n// // // //   FiTarget\n// // // // } from 'react-icons/fi';\n\n// // // // const SubDomainManagement = () => {\n// // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // //   const { domainId } = useParams();\n// // // //   const navigate = useNavigate();\n\n// // // //   const [domain, setDomain] = useState(null);\n// // // //   const [subDomains, setSubDomains] = useState([]);\n// // // //   const [loading, setLoading] = useState(true);\n// // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // //     domainId,\n// // // //     domain: domain?.title,\n// // // //     subDomainsCount: subDomains.length,\n// // // //     loading,\n// // // //     selectedParent: selectedParent?.title,\n// // // //     expandedCount: expandedNodes.size\n// // // //   });\n\n// // // //   useEffect(() => {\n// // // //     if (domainId) {\n// // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // //       fetchDomainAndSubDomains();\n// // // //     }\n// // // //   }, [domainId]);\n\n// // // //   const fetchDomainAndSubDomains = async () => {\n// // // //     try {\n// // // //       setLoading(true);\n\n// // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // //       // ✅ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n// // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains (no params)');\n// // // //       const domainsResponse = await authService.getDomains();\n// // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // //       // Extract specific domain from response\n// // // //       let domainData = null;\n// // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // //       if (domains.length > 0) {\n// // // //         domainData = domains.find(d => d.id == domainId);\n// // // //       }\n\n// // // //       console.log('🎯 SUBDOMAIN FETCH - Found domain:', domainData);\n\n// // // //       // If we don't have domain data, create a placeholder\n// // // //       if (!domainData) {\n// // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // //         domainData = {\n// // // //           id: domainId,\n// // // //           title: `Domain ${domainId}`,\n// // // //           description: 'Domain not found in list',\n// // // //           projectCount: 0\n// // // //         };\n// // // //       }\n\n// // // //       setDomain(domainData);\n\n// // // //       // ✅ CORRECTED: Get subdomains using the correct API\n// // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n// // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // //       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n\n// // // //       setSubDomains(subDomainsData);\n\n// // // //       // Auto-expand first level\n// // // //       if (subDomainsData.length > 0) {\n// // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // //         console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // //       }\n\n// // // //       // ✅ ALTERNATIVE: Try hierarchy API as fallback\n// // // //       try {\n// // // //         console.log('🌐 SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n// // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // //           console.log('🎯 SUBDOMAIN FETCH - Using hierarchy data instead');\n// // // //           setSubDomains(hierarchyData.subDomains);\n\n// // // //           // Update domain info if more complete\n// // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // //           }\n// // // //         }\n// // // //       } catch (hierarchyError) {\n// // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n// // // //       }\n\n// // // //     } catch (error) {\n// // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // //       toast.error('Failed to fetch domain information');\n\n// // // //       // Create fallback domain\n// // // //       setDomain({\n// // // //         id: domainId,\n// // // //         title: `Domain ${domainId}`,\n// // // //         description: 'Error loading domain details',\n// // // //         projectCount: 0\n// // // //       });\n// // // //       setSubDomains([]);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // //     }\n// // // //   };\n\n// // // //   const handleAddSubDomain = (parent = null) => {\n// // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // //     setSelectedParent(parent);\n// // // //     setEditingSubDomain(null);\n// // // //     setShowAddModal(true);\n\n// // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // //       showAddModal: true, \n// // // //       selectedParent: parent?.title,\n// // // //       editingSubDomain: null \n// // // //     });\n// // // //   };\n\n// // // //   const handleEditSubDomain = (subDomain) => {\n// // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // //     setSelectedParent(null);\n// // // //     setEditingSubDomain(subDomain);\n// // // //     setShowAddModal(true);\n// // // //   };\n\n// // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // //     if (hasChildren) {\n// // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // //     }\n// // // //     if (hasProjects) {\n// // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // //     }\n\n// // // //     if (!window.confirm(confirmMessage)) {\n// // // //       return;\n// // // //     }\n\n// // // //     try {\n// // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // //       toast.success('Sub-domain deleted successfully');\n// // // //       fetchDomainAndSubDomains();\n// // // //     } catch (error) {\n// // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // //       toast.error('Failed to delete sub-domain');\n// // // //     }\n// // // //   };\n\n// // // //   const toggleExpanded = (nodeId) => {\n// // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // //     const newExpanded = new Set(expandedNodes);\n// // // //     if (newExpanded.has(nodeId)) {\n// // // //       newExpanded.delete(nodeId);\n// // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // //     } else {\n// // // //       newExpanded.add(nodeId);\n// // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // //     }\n// // // //     setExpandedNodes(newExpanded);\n// // // //   };\n\n// // // //   if (loading) {\n// // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // //     return (\n// // // //       <div className=\"loading-container\">\n// // // //         <div className=\"loading-spinner\"></div>\n// // // //         <p>Loading sub-domains...</p>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // //   return (\n// // // //     <div className=\"subdomain-management\">\n// // // //       {/* Header with Breadcrumb */}\n// // // //       <div className=\"page-header\">\n// // // //         <div className=\"header-content\">\n// // // //           <div className=\"breadcrumb\">\n// // // //             <button \n// // // //               className=\"breadcrumb-link\"\n// // // //               onClick={() => navigate('/domains')}\n// // // //             >\n// // // //               <FiArrowLeft />\n// // // //               Domains\n// // // //             </button>\n// // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // //           </div>\n// // // //           <h1>SubDomain Management</h1>\n// // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // //         </div>\n// // // //         <div className=\"header-actions\">\n// // // //           <button \n// // // //             className=\"primary-button\" \n// // // //             onClick={() => handleAddSubDomain()}\n// // // //           >\n// // // //             <FiPlus />\n// // // //             Add Root SubDomain\n// // // //           </button>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Quick Guide */}\n// // // //       <div className=\"quick-guide\">\n// // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // //         <div className=\"guide-steps\">\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">1</span>\n// // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">2</span>\n// // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">3</span>\n// // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Domain Info Card */}\n// // // //       {domain && (\n// // // //         <div className=\"domain-info-card\">\n// // // //           <div className=\"domain-icon\">\n// // // //             <FiFolder />\n// // // //           </div>\n// // // //           <div className=\"domain-details\">\n// // // //             <h3>{domain.title}</h3>\n// // // //             <p>{domain.description}</p>\n// // // //             <div className=\"domain-stats\">\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // //               </span>\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // //               </span>\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* SubDomain Tree */}\n// // // //       <div className=\"subdomain-tree-container\">\n// // // //         <div className=\"tree-header\">\n// // // //           <h2>SubDomain Hierarchy</h2>\n// // // //           <div className=\"tree-legend\">\n// // // //             <span className=\"legend-item\">\n// // // //               <FiFolder className=\"folder-icon\" />\n// // // //               Has children\n// // // //             </span>\n// // // //             <span className=\"legend-item\">\n// // // //               <FiTarget className=\"leaf-icon\" />\n// // // //               Leaf (can have projects)\n// // // //             </span>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         {subDomains.length > 0 ? (\n// // // //           <div className=\"subdomain-tree\">\n// // // //             {subDomains.map((subDomain) => (\n// // // //               <SubDomainNode\n// // // //                 key={subDomain.id}\n// // // //                 subDomain={subDomain}\n// // // //                 level={0}\n// // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // //                 onToggleExpanded={toggleExpanded}\n// // // //                 onEdit={handleEditSubDomain}\n// // // //                 onDelete={handleDeleteSubDomain}\n// // // //                 onAddChild={handleAddSubDomain}\n// // // //                 expandedNodes={expandedNodes}\n// // // //               />\n// // // //             ))}\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div className=\"empty-tree-state\">\n// // // //             <FiFolderPlus size={64} />\n// // // //             <h3>No SubDomains Yet</h3>\n// // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // //             <div className=\"empty-state-examples\">\n// // // //               <h4>Example Structure:</h4>\n// // // //               <div className=\"example-tree\">\n// // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // //               </div>\n// // // //             </div>\n// // // //             <div className=\"empty-state-actions\">\n// // // //               <button \n// // // //                 className=\"primary-button large\" \n// // // //                 onClick={() => handleAddSubDomain()}\n// // // //               >\n// // // //                 <FiPlus />\n// // // //                 Create Your First SubDomain\n// // // //               </button>\n// // // //               <p className=\"help-text\">\n// // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // //               </p>\n// // // //             </div>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n\n// // // //       {/* Add/Edit Modal */}\n// // // //       {showAddModal && (\n// // // //         <SubDomainModal\n// // // //           subDomain={editingSubDomain}\n// // // //           parent={selectedParent}\n// // // //           domain={domain}\n// // // //           onClose={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //           }}\n// // // //           onSave={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //             fetchDomainAndSubDomains();\n// // // //           }}\n// // // //         />\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Node Component\n// // // // const SubDomainNode = ({ \n// // // //   subDomain, \n// // // //   level, \n// // // //   isExpanded, \n// // // //   onToggleExpanded, \n// // // //   onEdit, \n// // // //   onDelete, \n// // // //   onAddChild,\n// // // //   expandedNodes \n// // // // }) => {\n// // // //   const [showMenu, setShowMenu] = useState(false);\n// // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //   const isLeaf = !hasChildren;\n\n// // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // //     title: subDomain.title,\n// // // //     level,\n// // // //     hasChildren,\n// // // //     isLeaf,\n// // // //     isExpanded,\n// // // //     projectCount: subDomain.projectCount\n// // // //   });\n\n// // // //   return (\n// // // //     <div className={`subdomain-node level-${level}`}>\n// // // //       <div className=\"node-content\">\n// // // //         <div className=\"node-main\">\n// // // //           {hasChildren ? (\n// // // //             <button \n// // // //               className=\"expand-button\"\n// // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // //             >\n// // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // //             </button>\n// // // //           ) : (\n// // // //             <div className=\"expand-placeholder\" />\n// // // //           )}\n\n// // // //           <div className=\"node-icon\">\n// // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // //           </div>\n\n// // // //           <div className=\"node-info\">\n// // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // //             <div className=\"node-stats\">\n// // // //               {hasChildren && (\n// // // //                 <span className=\"stat-badge\">\n// // // //                   {subDomain.children.length} sub-domains\n// // // //                 </span>\n// // // //               )}\n// // // //               {subDomain.projectCount > 0 && (\n// // // //                 <span className=\"stat-badge projects\">\n// // // //                   {subDomain.projectCount} projects\n// // // //                 </span>\n// // // //               )}\n// // // //               {isLeaf && (\n// // // //                 <span className=\"stat-badge leaf\">\n// // // //                   Can have projects\n// // // //                 </span>\n// // // //               )}\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         <div className=\"node-actions\">\n// // // //           <button \n// // // //             className=\"action-button add\" \n// // // //             onClick={() => onAddChild(subDomain)}\n// // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // //           >\n// // // //             <FiPlus />\n// // // //           </button>\n// // // //           <div className=\"action-menu\">\n// // // //             <button \n// // // //               onClick={() => setShowMenu(!showMenu)}\n// // // //               title=\"More actions\"\n// // // //             >\n// // // //               <FiMoreVertical />\n// // // //             </button>\n// // // //             {showMenu && (\n// // // //               <div className=\"dropdown-menu\">\n// // // //                 <button onClick={() => {\n// // // //                   onEdit(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiEdit /> Edit\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onAddChild(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiPlus /> Add Child SubDomain\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onDelete(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }} className=\"danger\">\n// // // //                   <FiTrash2 /> Delete\n// // // //                 </button>\n// // // //               </div>\n// // // //             )}\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Children */}\n// // // //       {hasChildren && isExpanded && (\n// // // //         <div className=\"node-children\">\n// // // //           {subDomain.children.map((child) => (\n// // // //             <SubDomainNode\n// // // //               key={child.id}\n// // // //               subDomain={child}\n// // // //               level={level + 1}\n// // // //               isExpanded={expandedNodes.has(child.id)}\n// // // //               onToggleExpanded={onToggleExpanded}\n// // // //               onEdit={onEdit}\n// // // //               onDelete={onDelete}\n// // // //               onAddChild={onAddChild}\n// // // //               expandedNodes={expandedNodes}\n// // // //             />\n// // // //           ))}\n// // // //         </div>\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Modal Component - CORRECTED VERSION\n// // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     title: subDomain?.title || '',\n// // // //     description: subDomain?.description || ''\n// // // //   });\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // //     isEditing: !!subDomain,\n// // // //     parentTitle: parent?.title,\n// // // //     domainTitle: domain?.title,\n// // // //     formData\n// // // //   });\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     setLoading(true);\n\n// // // //     try {\n// // // //       const requestData = {\n// // // //         title: formData.title.trim(),\n// // // //         description: formData.description.trim(),\n// // // //         domainId: domain.id,\n// // // //         parentId: parent?.id || null\n// // // //       };\n\n// // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // //       if (subDomain) {\n// // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // //         toast.success('Sub-domain updated successfully');\n// // // //       } else {\n// // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // //         const response = await authService.createSubDomain(requestData);\n// // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // //         toast.success('Sub-domain created successfully');\n// // // //       }\n\n// // // //       onSave();\n// // // //     } catch (error) {\n// // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n\n// // // //       const errorMessage = error.response?.data?.message || \n// // // //                           error.response?.data?.error || \n// // // //                           'Failed to save sub-domain';\n// // // //       toast.error(errorMessage);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const getModalTitle = () => {\n// // // //     if (subDomain) {\n// // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // //     }\n// // // //     if (parent) {\n// // // //       return `Add SubDomain under: ${parent.title}`;\n// // // //     }\n// // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // //   };\n\n// // // //   const getLevel = () => {\n// // // //     if (!parent) return 'Root Level';\n// // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"modal-overlay\">\n// // // //       <div className=\"modal\">\n// // // //         <div className=\"modal-header\">\n// // // //           <h2>{getModalTitle()}</h2>\n// // // //           <button onClick={onClose}>×</button>\n// // // //         </div>\n\n// // // //         <form onSubmit={handleSubmit}>\n// // // //           <div className=\"form-group\">\n// // // //             <label>SubDomain Title *</label>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={formData.title}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // //               required\n// // // //               minLength={3}\n// // // //               maxLength={100}\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"form-group\">\n// // // //             <label>Description (Optional)</label>\n// // // //             <textarea\n// // // //               value={formData.description}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // //               rows={3}\n// // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // //               maxLength={500}\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"modal-info\">\n// // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // //             {parent && (\n// // // //               <>\n// // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // //               </>\n// // // //             )}\n// // // //             <strong>Level:</strong> {getLevel()}\n// // // //           </div>\n\n// // // //           <div className=\"modal-actions\">\n// // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // //               Cancel\n// // // //             </button>\n// // // //             <button \n// // // //               type=\"submit\" \n// // // //               className=\"primary-button\" \n// // // //               disabled={loading || !formData.title.trim()}\n// // // //             >\n// // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // //             </button>\n// // // //           </div>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SubDomainManagement;\n\n// // // // // // src/components/domains/SubDomainManagement.js - CORRECTED VERSION\n// // // // // import React, { useState, useEffect } from 'react';\n// // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // import { authService } from '../../services/authService';\n// // // // // import { toast } from 'react-toastify';\n// // // // // import {\n// // // // //   FiPlus,\n// // // // //   FiEdit,\n// // // // //   FiTrash2,\n// // // // //   FiChevronDown,\n// // // // //   FiChevronRight,\n// // // // //   FiFolder,\n// // // // //   FiFolderPlus,\n// // // // //   FiFileText,\n// // // // //   FiArrowLeft,\n// // // // //   FiMoreVertical,\n// // // // //   FiMove,\n// // // // //   FiTarget\n// // // // // } from 'react-icons/fi';\n\n// // // // // const SubDomainManagement = () => {\n// // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // //   const { domainId } = useParams();\n// // // // //   const navigate = useNavigate();\n\n// // // // //   const [domain, setDomain] = useState(null);\n// // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // //   const [loading, setLoading] = useState(true);\n// // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // //     domainId,\n// // // // //     domain: domain?.title,\n// // // // //     subDomainsCount: subDomains.length,\n// // // // //     loading,\n// // // // //     selectedParent: selectedParent?.title,\n// // // // //     expandedCount: expandedNodes.size\n// // // // //   });\n\n// // // // //   useEffect(() => {\n// // // // //     if (domainId) {\n// // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     }\n// // // // //   }, [domainId]);\n\n// // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // //     try {\n// // // // //       setLoading(true);\n\n// // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // //       // ✅ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n// // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains (no params)');\n// // // // //       const domainsResponse = await authService.getDomains();\n// // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // //       // Extract specific domain from response\n// // // // //       let domainData = null;\n// // // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // // //       if (domains.length > 0) {\n// // // // //         domainData = domains.find(d => d.id == domainId);\n// // // // //       }\n\n// // // // //       console.log('🎯 SUBDOMAIN FETCH - Found domain:', domainData);\n\n// // // // //       // If we don't have domain data, create a placeholder\n// // // // //       if (!domainData) {\n// // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // //         domainData = {\n// // // // //           id: domainId,\n// // // // //           title: `Domain ${domainId}`,\n// // // // //           description: 'Domain not found in list',\n// // // // //           projectCount: 0\n// // // // //         };\n// // // // //       }\n\n// // // // //       setDomain(domainData);\n\n// // // // //       // ✅ CORRECTED: Get subdomains using the correct API\n// // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n// // // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // // //       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// // // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n\n// // // // //       setSubDomains(subDomainsData);\n\n// // // // //       // Auto-expand first level\n// // // // //       if (subDomainsData.length > 0) {\n// // // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // //         console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // //       }\n\n// // // // //       // ✅ ALTERNATIVE: Try hierarchy API as fallback\n// // // // //       try {\n// // // // //         console.log('🌐 SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n// // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // // //           console.log('🎯 SUBDOMAIN FETCH - Using hierarchy data instead');\n// // // // //           setSubDomains(hierarchyData.subDomains);\n\n// // // // //           // Update domain info if more complete\n// // // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // // //           }\n// // // // //         }\n// // // // //       } catch (hierarchyError) {\n// // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n// // // // //       }\n\n// // // // //     } catch (error) {\n// // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // //       toast.error('Failed to fetch domain information');\n\n// // // // //       // Create fallback domain\n// // // // //       setDomain({\n// // // // //         id: domainId,\n// // // // //         title: `Domain ${domainId}`,\n// // // // //         description: 'Error loading domain details',\n// // // // //         projectCount: 0\n// // // // //       });\n// // // // //       setSubDomains([]);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // //     setSelectedParent(parent);\n// // // // //     setEditingSubDomain(null);\n// // // // //     setShowAddModal(true);\n\n// // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // //       showAddModal: true, \n// // // // //       selectedParent: parent?.title,\n// // // // //       editingSubDomain: null \n// // // // //     });\n// // // // //   };\n\n// // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // //     setSelectedParent(null);\n// // // // //     setEditingSubDomain(subDomain);\n// // // // //     setShowAddModal(true);\n// // // // //   };\n\n// // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // //     if (hasChildren) {\n// // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // //     }\n// // // // //     if (hasProjects) {\n// // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // //     }\n\n// // // // //     if (!window.confirm(confirmMessage)) {\n// // // // //       return;\n// // // // //     }\n\n// // // // //     try {\n// // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // //       toast.success('Sub-domain deleted successfully');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     } catch (error) {\n// // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // //       toast.error('Failed to delete sub-domain');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const toggleExpanded = (nodeId) => {\n// // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // //     const newExpanded = new Set(expandedNodes);\n// // // // //     if (newExpanded.has(nodeId)) {\n// // // // //       newExpanded.delete(nodeId);\n// // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // //     } else {\n// // // // //       newExpanded.add(nodeId);\n// // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // //     }\n// // // // //     setExpandedNodes(newExpanded);\n// // // // //   };\n\n// // // // //   if (loading) {\n// // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // //     return (\n// // // // //       <div className=\"loading-container\">\n// // // // //         <div className=\"loading-spinner\"></div>\n// // // // //         <p>Loading sub-domains...</p>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // //   return (\n// // // // //     <div className=\"subdomain-management\">\n// // // // //       {/* Header with Breadcrumb */}\n// // // // //       <div className=\"page-header\">\n// // // // //         <div className=\"header-content\">\n// // // // //           <div className=\"breadcrumb\">\n// // // // //             <button \n// // // // //               className=\"breadcrumb-link\"\n// // // // //               onClick={() => navigate('/domains')}\n// // // // //             >\n// // // // //               <FiArrowLeft />\n// // // // //               Domains\n// // // // //             </button>\n// // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // //           </div>\n// // // // //           <h1>SubDomain Management</h1>\n// // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // //         </div>\n// // // // //         <div className=\"header-actions\">\n// // // // //           <button \n// // // // //             className=\"primary-button\" \n// // // // //             onClick={() => handleAddSubDomain()}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //             Add Root SubDomain\n// // // // //           </button>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Quick Guide */}\n// // // // //       <div className=\"quick-guide\">\n// // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // //         <div className=\"guide-steps\">\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">1</span>\n// // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">2</span>\n// // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">3</span>\n// // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Domain Info Card */}\n// // // // //       {domain && (\n// // // // //         <div className=\"domain-info-card\">\n// // // // //           <div className=\"domain-icon\">\n// // // // //             <FiFolder />\n// // // // //           </div>\n// // // // //           <div className=\"domain-details\">\n// // // // //             <h3>{domain.title}</h3>\n// // // // //             <p>{domain.description}</p>\n// // // // //             <div className=\"domain-stats\">\n// // // // //               <span className=\"stat-item\">\n// // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // //               </span>\n// // // // //               <span className=\"stat-item\">\n// // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // //               </span>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {/* SubDomain Tree */}\n// // // // //       <div className=\"subdomain-tree-container\">\n// // // // //         <div className=\"tree-header\">\n// // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // //           <div className=\"tree-legend\">\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiFolder className=\"folder-icon\" />\n// // // // //               Has children\n// // // // //             </span>\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // //               Leaf (can have projects)\n// // // // //             </span>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         {subDomains.length > 0 ? (\n// // // // //           <div className=\"subdomain-tree\">\n// // // // //             {subDomains.map((subDomain) => (\n// // // // //               <SubDomainNode\n// // // // //                 key={subDomain.id}\n// // // // //                 subDomain={subDomain}\n// // // // //                 level={0}\n// // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // //                 onToggleExpanded={toggleExpanded}\n// // // // //                 onEdit={handleEditSubDomain}\n// // // // //                 onDelete={handleDeleteSubDomain}\n// // // // //                 onAddChild={handleAddSubDomain}\n// // // // //                 expandedNodes={expandedNodes}\n// // // // //               />\n// // // // //             ))}\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div className=\"empty-tree-state\">\n// // // // //             <FiFolderPlus size={64} />\n// // // // //             <h3>No SubDomains Yet</h3>\n// // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // //             <div className=\"empty-state-examples\">\n// // // // //               <h4>Example Structure:</h4>\n// // // // //               <div className=\"example-tree\">\n// // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // //               </div>\n// // // // //             </div>\n// // // // //             <div className=\"empty-state-actions\">\n// // // // //               <button \n// // // // //                 className=\"primary-button large\" \n// // // // //                 onClick={() => handleAddSubDomain()}\n// // // // //               >\n// // // // //                 <FiPlus />\n// // // // //                 Create Your First SubDomain\n// // // // //               </button>\n// // // // //               <p className=\"help-text\">\n// // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // //               </p>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n\n// // // // //       {/* Add/Edit Modal */}\n// // // // //       {showAddModal && (\n// // // // //         <SubDomainModal\n// // // // //           subDomain={editingSubDomain}\n// // // // //           parent={selectedParent}\n// // // // //           domain={domain}\n// // // // //           onClose={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //           }}\n// // // // //           onSave={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //             fetchDomainAndSubDomains();\n// // // // //           }}\n// // // // //         />\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Node Component\n// // // // // const SubDomainNode = ({ \n// // // // //   subDomain, \n// // // // //   level, \n// // // // //   isExpanded, \n// // // // //   onToggleExpanded, \n// // // // //   onEdit, \n// // // // //   onDelete, \n// // // // //   onAddChild,\n// // // // //   expandedNodes \n// // // // // }) => {\n// // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //   const isLeaf = !hasChildren;\n\n// // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // //     title: subDomain.title,\n// // // // //     level,\n// // // // //     hasChildren,\n// // // // //     isLeaf,\n// // // // //     isExpanded,\n// // // // //     projectCount: subDomain.projectCount\n// // // // //   });\n\n// // // // //   return (\n// // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // //       <div className=\"node-content\">\n// // // // //         <div className=\"node-main\">\n// // // // //           {hasChildren ? (\n// // // // //             <button \n// // // // //               className=\"expand-button\"\n// // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // //             >\n// // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // //             </button>\n// // // // //           ) : (\n// // // // //             <div className=\"expand-placeholder\" />\n// // // // //           )}\n\n// // // // //           <div className=\"node-icon\">\n// // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // //           </div>\n\n// // // // //           <div className=\"node-info\">\n// // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // //             <div className=\"node-stats\">\n// // // // //               {hasChildren && (\n// // // // //                 <span className=\"stat-badge\">\n// // // // //                   {subDomain.children.length} sub-domains\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {subDomain.projectCount > 0 && (\n// // // // //                 <span className=\"stat-badge projects\">\n// // // // //                   {subDomain.projectCount} projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {isLeaf && (\n// // // // //                 <span className=\"stat-badge leaf\">\n// // // // //                   Can have projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         <div className=\"node-actions\">\n// // // // //           <button \n// // // // //             className=\"action-button add\" \n// // // // //             onClick={() => onAddChild(subDomain)}\n// // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //           </button>\n// // // // //           <div className=\"action-menu\">\n// // // // //             <button \n// // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // //               title=\"More actions\"\n// // // // //             >\n// // // // //               <FiMoreVertical />\n// // // // //             </button>\n// // // // //             {showMenu && (\n// // // // //               <div className=\"dropdown-menu\">\n// // // // //                 <button onClick={() => {\n// // // // //                   onEdit(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }}>\n// // // // //                   <FiEdit /> Edit\n// // // // //                 </button>\n// // // // //                 <button onClick={() => {\n// // // // //                   onAddChild(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }}>\n// // // // //                   <FiPlus /> Add Child SubDomain\n// // // // //                 </button>\n// // // // //                 <button onClick={() => {\n// // // // //                   onDelete(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }} className=\"danger\">\n// // // // //                   <FiTrash2 /> Delete\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Children */}\n// // // // //       {hasChildren && isExpanded && (\n// // // // //         <div className=\"node-children\">\n// // // // //           {subDomain.children.map((child) => (\n// // // // //             <SubDomainNode\n// // // // //               key={child.id}\n// // // // //               subDomain={child}\n// // // // //               level={level + 1}\n// // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // //               onToggleExpanded={onToggleExpanded}\n// // // // //               onEdit={onEdit}\n// // // // //               onDelete={onDelete}\n// // // // //               onAddChild={onAddChild}\n// // // // //               expandedNodes={expandedNodes}\n// // // // //             />\n// // // // //           ))}\n// // // // //         </div>\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Modal Component - CORRECTED VERSION\n// // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // //   const [formData, setFormData] = useState({\n// // // // //     title: subDomain?.title || '',\n// // // // //     description: subDomain?.description || ''\n// // // // //   });\n// // // // //   const [loading, setLoading] = useState(false);\n\n// // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // //     isEditing: !!subDomain,\n// // // // //     parentTitle: parent?.title,\n// // // // //     domainTitle: domain?.title,\n// // // // //     formData\n// // // // //   });\n\n// // // // //   const handleSubmit = async (e) => {\n// // // // //     e.preventDefault();\n// // // // //     setLoading(true);\n\n// // // // //     try {\n// // // // //       const requestData = {\n// // // // //         title: formData.title.trim(),\n// // // // //         description: formData.description.trim(),\n// // // // //         domainId: domain.id,\n// // // // //         parentId: parent?.id || null\n// // // // //       };\n\n// // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // //       if (subDomain) {\n// // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // //         toast.success('Sub-domain updated successfully');\n// // // // //       } else {\n// // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // //         const response = await authService.createSubDomain(requestData);\n// // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // //         toast.success('Sub-domain created successfully');\n// // // // //       }\n\n// // // // //       onSave();\n// // // // //     } catch (error) {\n// // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n\n// // // // //       const errorMessage = error.response?.data?.message || \n// // // // //                           error.response?.data?.error || \n// // // // //                           'Failed to save sub-domain';\n// // // // //       toast.error(errorMessage);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getModalTitle = () => {\n// // // // //     if (subDomain) {\n// // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // //     }\n// // // // //     if (parent) {\n// // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // //     }\n// // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // //   };\n\n// // // // //   const getLevel = () => {\n// // // // //     if (!parent) return 'Root Level';\n// // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"modal-overlay\">\n// // // // //       <div className=\"modal\">\n// // // // //         <div className=\"modal-header\">\n// // // // //           <h2>{getModalTitle()}</h2>\n// // // // //           <button onClick={onClose}>×</button>\n// // // // //         </div>\n\n// // // // //         <form onSubmit={handleSubmit}>\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>SubDomain Title *</label>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={formData.title}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // //               required\n// // // // //               minLength={3}\n// // // // //               maxLength={100}\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Description (Optional)</label>\n// // // // //             <textarea\n// // // // //               value={formData.description}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // //               rows={3}\n// // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // //               maxLength={500}\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"modal-info\">\n// // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // //             {parent && (\n// // // // //               <>\n// // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // //               </>\n// // // // //             )}\n// // // // //             <strong>Level:</strong> {getLevel()}\n// // // // //           </div>\n\n// // // // //           <div className=\"modal-actions\">\n// // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // //               Cancel\n// // // // //             </button>\n// // // // //             <button \n// // // // //               type=\"submit\" \n// // // // //               className=\"primary-button\" \n// // // // //               disabled={loading || !formData.title.trim()}\n// // // // //             >\n// // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </form>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // export default SubDomainManagement;\n\n// // // // // // // src/components/domains/SubDomainManagement.js - FIXED VERSION\n// // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // import { authService } from '../../services/authService';\n// // // // // // import { toast } from 'react-toastify';\n// // // // // // import {\n// // // // // //   FiPlus,\n// // // // // //   FiEdit,\n// // // // // //   FiTrash2,\n// // // // // //   FiChevronDown,\n// // // // // //   FiChevronRight,\n// // // // // //   FiFolder,\n// // // // // //   FiFolderPlus,\n// // // // // //   FiFileText,\n// // // // // //   FiArrowLeft,\n// // // // // //   FiMoreVertical,\n// // // // // //   FiMove,\n// // // // // //   FiTarget\n// // // // // // } from 'react-icons/fi';\n\n// // // // // // const SubDomainManagement = () => {\n// // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // //   const { domainId } = useParams();\n// // // // // //   const navigate = useNavigate();\n\n// // // // // //   const [domain, setDomain] = useState(null);\n// // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // //   const [loading, setLoading] = useState(true);\n// // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // //     domainId,\n// // // // // //     domain: domain?.title,\n// // // // // //     subDomainsCount: subDomains.length,\n// // // // // //     loading,\n// // // // // //     selectedParent: selectedParent?.title,\n// // // // // //     expandedCount: expandedNodes.size\n// // // // // //   });\n\n// // // // // //   useEffect(() => {\n// // // // // //     if (domainId) {\n// // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // //       fetchDomainAndSubDomains();\n// // // // // //     }\n// // // // // //   }, [domainId]);\n\n// // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // //     try {\n// // // // // //       setLoading(true);\n\n// // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // //       // First, let's try to get domain details\n// // // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // //       // Extract domain from response\n// // // // // //       let domainData = null;\n// // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // //       }\n\n// // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // // // //       // If we don't have domain data, create a placeholder\n// // // // // //       if (!domainData) {\n// // // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // //         domainData = {\n// // // // // //           id: domainId,\n// // // // // //           title: `Domain ${domainId}`,\n// // // // // //           description: 'Loading domain details...',\n// // // // // //           projectCount: 0\n// // // // // //         };\n// // // // // //       }\n\n// // // // // //       setDomain(domainData);\n\n// // // // // //       // Try to get hierarchy if domain exists\n// // // // // //       try {\n// // // // // //         console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // //         console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // //         // Auto-expand first level\n// // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // //           console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // //         }\n// // // // // //       } catch (hierarchyError) {\n// // // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // //         setSubDomains([]);\n// // // // // //       }\n\n// // // // // //     } catch (error) {\n// // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // //       // Create fallback domain\n// // // // // //       setDomain({\n// // // // // //         id: domainId,\n// // // // // //         title: `Domain ${domainId}`,\n// // // // // //         description: 'Error loading domain details',\n// // // // // //         projectCount: 0\n// // // // // //       });\n// // // // // //       setSubDomains([]);\n// // // // // //     } finally {\n// // // // // //       setLoading(false);\n// // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // //     setSelectedParent(parent);\n// // // // // //     setEditingSubDomain(null);\n// // // // // //     setShowAddModal(true);\n\n// // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // //       showAddModal: true, \n// // // // // //       selectedParent: parent?.title,\n// // // // // //       editingSubDomain: null \n// // // // // //     });\n// // // // // //   };\n\n// // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // //     setSelectedParent(null);\n// // // // // //     setEditingSubDomain(subDomain);\n// // // // // //     setShowAddModal(true);\n// // // // // //   };\n\n// // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // //     if (hasChildren) {\n// // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // //     }\n// // // // // //     if (hasProjects) {\n// // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // //     }\n\n// // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // //       return;\n// // // // // //     }\n\n// // // // // //     try {\n// // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // //       fetchDomainAndSubDomains();\n// // // // // //     } catch (error) {\n// // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // //       newExpanded.delete(nodeId);\n// // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // //     } else {\n// // // // // //       newExpanded.add(nodeId);\n// // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // //     }\n// // // // // //     setExpandedNodes(newExpanded);\n// // // // // //   };\n\n// // // // // //   if (loading) {\n// // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // //     return (\n// // // // // //       <div className=\"loading-container\">\n// // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // //         <p>Loading sub-domains...</p>\n// // // // // //       </div>\n// // // // // //     );\n// // // // // //   }\n\n// // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // //   return (\n// // // // // //     <div className=\"subdomain-management\">\n// // // // // //       {/* Header with Breadcrumb */}\n// // // // // //       <div className=\"page-header\">\n// // // // // //         <div className=\"header-content\">\n// // // // // //           <div className=\"breadcrumb\">\n// // // // // //             <button \n// // // // // //               className=\"breadcrumb-link\"\n// // // // // //               onClick={() => navigate('/domains')}\n// // // // // //             >\n// // // // // //               <FiArrowLeft />\n// // // // // //               Domains\n// // // // // //             </button>\n// // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // //           </div>\n// // // // // //           <h1>SubDomain Management</h1>\n// // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // //         </div>\n// // // // // //         <div className=\"header-actions\">\n// // // // // //           <button \n// // // // // //             className=\"primary-button\" \n// // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // //           >\n// // // // // //             <FiPlus />\n// // // // // //             Add Root SubDomain\n// // // // // //           </button>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Quick Guide */}\n// // // // // //       <div className=\"quick-guide\">\n// // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // //         <div className=\"guide-steps\">\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">1</span>\n// // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // //           </div>\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">2</span>\n// // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // //           </div>\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">3</span>\n// // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Domain Info Card */}\n// // // // // //       {domain && (\n// // // // // //         <div className=\"domain-info-card\">\n// // // // // //           <div className=\"domain-icon\">\n// // // // // //             <FiFolder />\n// // // // // //           </div>\n// // // // // //           <div className=\"domain-details\">\n// // // // // //             <h3>{domain.title}</h3>\n// // // // // //             <p>{domain.description}</p>\n// // // // // //             <div className=\"domain-stats\">\n// // // // // //               <span className=\"stat-item\">\n// // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // //               </span>\n// // // // // //               <span className=\"stat-item\">\n// // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // //               </span>\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       )}\n\n// // // // // //       {/* SubDomain Tree */}\n// // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // //         <div className=\"tree-header\">\n// // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // //           <div className=\"tree-legend\">\n// // // // // //             <span className=\"legend-item\">\n// // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // //               Has children\n// // // // // //             </span>\n// // // // // //             <span className=\"legend-item\">\n// // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // //               Leaf (can have projects)\n// // // // // //             </span>\n// // // // // //           </div>\n// // // // // //         </div>\n\n// // // // // //         {subDomains.length > 0 ? (\n// // // // // //           <div className=\"subdomain-tree\">\n// // // // // //             {subDomains.map((subDomain) => (\n// // // // // //               <SubDomainNode\n// // // // // //                 key={subDomain.id}\n// // // // // //                 subDomain={subDomain}\n// // // // // //                 level={0}\n// // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // //                 onEdit={handleEditSubDomain}\n// // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // //                 expandedNodes={expandedNodes}\n// // // // // //               />\n// // // // // //             ))}\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div className=\"empty-tree-state\">\n// // // // // //             <FiFolderPlus size={64} />\n// // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // //             <div className=\"empty-state-examples\">\n// // // // // //               <h4>Example Structure:</h4>\n// // // // // //               <div className=\"example-tree\">\n// // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // //               </div>\n// // // // // //             </div>\n// // // // // //             <div className=\"empty-state-actions\">\n// // // // // //               <button \n// // // // // //                 className=\"primary-button large\" \n// // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // //               >\n// // // // // //                 <FiPlus />\n// // // // // //                 Create Your First SubDomain\n// // // // // //               </button>\n// // // // // //               <p className=\"help-text\">\n// // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // //               </p>\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n\n// // // // // //       {/* Add/Edit Modal */}\n// // // // // //       {showAddModal && (\n// // // // // //         <SubDomainModal\n// // // // // //           subDomain={editingSubDomain}\n// // // // // //           parent={selectedParent}\n// // // // // //           domain={domain}\n// // // // // //           onClose={() => {\n// // // // // //             setShowAddModal(false);\n// // // // // //             setEditingSubDomain(null);\n// // // // // //             setSelectedParent(null);\n// // // // // //           }}\n// // // // // //           onSave={() => {\n// // // // // //             setShowAddModal(false);\n// // // // // //             setEditingSubDomain(null);\n// // // // // //             setSelectedParent(null);\n// // // // // //             fetchDomainAndSubDomains();\n// // // // // //           }}\n// // // // // //         />\n// // // // // //       )}\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // // SubDomain Node Component\n// // // // // // const SubDomainNode = ({ \n// // // // // //   subDomain, \n// // // // // //   level, \n// // // // // //   isExpanded, \n// // // // // //   onToggleExpanded, \n// // // // // //   onEdit, \n// // // // // //   onDelete, \n// // // // // //   onAddChild,\n// // // // // //   expandedNodes \n// // // // // // }) => {\n// // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // //   const isLeaf = !hasChildren;\n\n// // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // //     title: subDomain.title,\n// // // // // //     level,\n// // // // // //     hasChildren,\n// // // // // //     isLeaf,\n// // // // // //     isExpanded,\n// // // // // //     projectCount: subDomain.projectCount\n// // // // // //   });\n\n// // // // // //   return (\n// // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // //       <div className=\"node-content\">\n// // // // // //         <div className=\"node-main\">\n// // // // // //           {hasChildren ? (\n// // // // // //             <button \n// // // // // //               className=\"expand-button\"\n// // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // //             >\n// // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // //             </button>\n// // // // // //           ) : (\n// // // // // //             <div className=\"expand-placeholder\" />\n// // // // // //           )}\n\n// // // // // //           <div className=\"node-icon\">\n// // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // //           </div>\n\n// // // // // //           <div className=\"node-info\">\n// // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // //             <div className=\"node-stats\">\n// // // // // //               {hasChildren && (\n// // // // // //                 <span className=\"stat-badge\">\n// // // // // //                   {subDomain.children.length} sub-domains\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //               {subDomain.projectCount > 0 && (\n// // // // // //                 <span className=\"stat-badge projects\">\n// // // // // //                   {subDomain.projectCount} projects\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //               {isLeaf && (\n// // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // //                   Can have projects\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         </div>\n\n// // // // // //         <div className=\"node-actions\">\n// // // // // //           <button \n// // // // // //             className=\"action-button add\" \n// // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // //           >\n// // // // // //             <FiPlus />\n// // // // // //           </button>\n// // // // // //           <div className=\"action-menu\">\n// // // // // //             <button \n// // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // //               title=\"More actions\"\n// // // // // //             >\n// // // // // //               <FiMoreVertical />\n// // // // // //             </button>\n// // // // // //             {showMenu && (\n// // // // // //               <div className=\"dropdown-menu\">\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onEdit(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }}>\n// // // // // //                   <FiEdit /> Edit\n// // // // // //                 </button>\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onAddChild(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }}>\n// // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // //                 </button>\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onDelete(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }} className=\"danger\">\n// // // // // //                   <FiTrash2 /> Delete\n// // // // // //                 </button>\n// // // // // //               </div>\n// // // // // //             )}\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Children */}\n// // // // // //       {hasChildren && isExpanded && (\n// // // // // //         <div className=\"node-children\">\n// // // // // //           {subDomain.children.map((child) => (\n// // // // // //             <SubDomainNode\n// // // // // //               key={child.id}\n// // // // // //               subDomain={child}\n// // // // // //               level={level + 1}\n// // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // //               onEdit={onEdit}\n// // // // // //               onDelete={onDelete}\n// // // // // //               onAddChild={onAddChild}\n// // // // // //               expandedNodes={expandedNodes}\n// // // // // //             />\n// // // // // //           ))}\n// // // // // //         </div>\n// // // // // //       )}\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // // SubDomain Modal Component - FIXED VERSION\n// // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // //   const [formData, setFormData] = useState({\n// // // // // //     title: subDomain?.title || '',\n// // // // // //     description: subDomain?.description || ''\n// // // // // //   });\n// // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // //     isEditing: !!subDomain,\n// // // // // //     parentTitle: parent?.title,\n// // // // // //     domainTitle: domain?.title,\n// // // // // //     formData\n// // // // // //   });\n\n// // // // // //   // Enhanced slug generation with better validation\n// // // // // //   const generateSlug = (title) => {\n// // // // // //     if (!title || title.trim() === '') {\n// // // // // //       return '';\n// // // // // //     }\n\n// // // // // //     let slug = title\n// // // // // //       .toLowerCase()\n// // // // // //       .trim()\n// // // // // //       .replace(/[^a-z0-9\\s-]/g, '') // Remove special chars except spaces and hyphens\n// // // // // //       .replace(/\\s+/g, '-')         // Replace spaces with hyphens\n// // // // // //       .replace(/-+/g, '-')          // Remove consecutive hyphens\n// // // // // //       .replace(/^-|-$/g, '');       // Remove leading/trailing hyphens\n\n// // // // // //     // Ensure minimum length - if too short, add timestamp\n// // // // // //     if (slug.length < 3) {\n// // // // // //       slug = slug + '-' + Date.now().toString().slice(-4);\n// // // // // //     }\n\n// // // // // //     // Ensure maximum length\n// // // // // //     if (slug.length > 50) {\n// // // // // //       slug = slug.substring(0, 50).replace(/-$/, '');\n// // // // // //     }\n\n// // // // // //     return slug;\n// // // // // //   };\n\n// // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // //   const handleSubmit = async (e) => {\n// // // // // //     e.preventDefault();\n// // // // // //     setLoading(true);\n\n// // // // // //     try {\n// // // // // //       // Generate slug from title\n// // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // //       // Validate slug\n// // // // // //       if (!slug || slug.length < 3) {\n// // // // // //         toast.error('Title must generate a valid slug (at least 3 characters)');\n// // // // // //         setLoading(false);\n// // // // // //         return;\n// // // // // //       }\n\n// // // // // //       const requestData = {\n// // // // // //         title: formData.title.trim(),\n// // // // // //         description: formData.description.trim(),\n\n// // // // // //         domainId: domain.id,\n// // // // // //         parentId: parent?.id || null\n// // // // // //       };\n\n// // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // //       console.log('🔍 SUBDOMAIN SAVE - Generated slug:', slug, 'Length:', slug.length);\n// // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // //       if (subDomain) {\n// // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // //       } else {\n// // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // //         toast.success('Sub-domain created successfully');\n// // // // // //       }\n\n// // // // // //       onSave();\n// // // // // //     } catch (error) {\n// // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n\n// // // // // //       // Better error handling\n// // // // // //       const errorMessage = error.response?.data?.message || \n// // // // // //                           error.response?.data?.error || \n// // // // // //                           'Failed to save sub-domain';\n// // // // // //       toast.error(errorMessage);\n// // // // // //     } finally {\n// // // // // //       setLoading(false);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const getModalTitle = () => {\n// // // // // //     if (subDomain) {\n// // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // //     }\n// // // // // //     if (parent) {\n// // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // //     }\n// // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // //   };\n\n// // // // // //   const getLevel = () => {\n// // // // // //     if (!parent) return 'Root Level';\n// // // // // //     // This is a simplified level calculation\n// // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <div className=\"modal-overlay\">\n// // // // // //       <div className=\"modal\">\n// // // // // //         <div className=\"modal-header\">\n// // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // //           <button onClick={onClose}>×</button>\n// // // // // //         </div>\n\n// // // // // //         <form onSubmit={handleSubmit}>\n// // // // // //           <div className=\"form-group\">\n// // // // // //             <label>SubDomain Title *</label>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={formData.title}\n// // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // //               required\n// // // // // //               minLength={3}\n// // // // // //               maxLength={100}\n// // // // // //             />\n// // // // // //             {formData.title && (\n// // // // // //               <div className=\"slug-preview\">\n// // // // // //                 <small>\n// // // // // //                   URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code>\n// // // // // //                   {slugPreview && slugPreview.length < 3 && (\n// // // // // //                     <span style={{color: 'red'}}> (Too short - needs at least 3 chars)</span>\n// // // // // //                   )}\n// // // // // //                 </small>\n// // // // // //               </div>\n// // // // // //             )}\n// // // // // //           </div>\n\n// // // // // //           <div className=\"form-group\">\n// // // // // //             <label>Description (Optional)</label>\n// // // // // //             <textarea\n// // // // // //               value={formData.description}\n// // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // //               rows={3}\n// // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // //               maxLength={500}\n// // // // // //             />\n// // // // // //           </div>\n\n// // // // // //           <div className=\"modal-info\">\n// // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // //             {parent && (\n// // // // // //               <>\n// // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // //               </>\n// // // // // //             )}\n// // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // //           </div>\n\n// // // // // //           <div className=\"modal-actions\">\n// // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // //               Cancel\n// // // // // //             </button>\n// // // // // //             <button \n// // // // // //               type=\"submit\" \n// // // // // //               className=\"primary-button\" \n// // // // // //               disabled={loading || !formData.title.trim() || slugPreview.length < 3}\n// // // // // //             >\n// // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // //             </button>\n// // // // // //           </div>\n// // // // // //         </form>\n// // // // // //       </div>\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // export default SubDomainManagement;\n\n// // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // import { authService } from '../../services/authService';\n// // // // // // // import { toast } from 'react-toastify';\n// // // // // // // import {\n// // // // // // //   FiPlus,\n// // // // // // //   FiEdit,\n// // // // // // //   FiTrash2,\n// // // // // // //   FiChevronDown,\n// // // // // // //   FiChevronRight,\n// // // // // // //   FiFolder,\n// // // // // // //   FiFolderPlus,\n// // // // // // //   FiFileText,\n// // // // // // //   FiArrowLeft,\n// // // // // // //   FiMoreVertical,\n// // // // // // //   FiMove,\n// // // // // // //   FiTarget\n// // // // // // // } from 'react-icons/fi';\n\n// // // // // // // const SubDomainManagement = () => {\n// // // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // //   const { domainId } = useParams();\n// // // // // // //   const navigate = useNavigate();\n\n// // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // //     domainId,\n// // // // // // //     domain: domain?.title,\n// // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // //     loading,\n// // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // //     expandedCount: expandedNodes.size\n// // // // // // //   });\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     if (domainId) {\n// // // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // //       fetchDomainAndSubDomains();\n// // // // // // //     }\n// // // // // // //   }, [domainId]);\n\n// // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // //     try {\n// // // // // // //       setLoading(true);\n\n// // // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // //       // First, let's try to get domain details\n// // // // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // // //       // Extract domain from response\n// // // // // // //       let domainData = null;\n// // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // //       }\n\n// // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // //       if (!domainData) {\n// // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // //         domainData = {\n// // // // // // //           id: domainId,\n// // // // // // //           title: `Domain ${domainId}`,\n// // // // // // //           description: 'Loading domain details...',\n// // // // // // //           projectCount: 0\n// // // // // // //         };\n// // // // // // //       }\n\n// // // // // // //       setDomain(domainData);\n\n// // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // //       try {\n// // // // // // //         console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // //         console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // //         // Auto-expand first level\n// // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // //           console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // //         }\n// // // // // // //       } catch (hierarchyError) {\n// // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // //         setSubDomains([]);\n// // // // // // //       }\n\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // // //       // Create fallback domain\n// // // // // // //       setDomain({\n// // // // // // //         id: domainId,\n// // // // // // //         title: `Domain ${domainId}`,\n// // // // // // //         description: 'Error loading domain details',\n// // // // // // //         projectCount: 0\n// // // // // // //       });\n// // // // // // //       setSubDomains([]);\n// // // // // // //     } finally {\n// // // // // // //       setLoading(false);\n// // // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // //     setSelectedParent(parent);\n// // // // // // //     setEditingSubDomain(null);\n// // // // // // //     setShowAddModal(true);\n\n// // // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // //       showAddModal: true, \n// // // // // // //       selectedParent: parent?.title,\n// // // // // // //       editingSubDomain: null \n// // // // // // //     });\n// // // // // // //   };\n\n// // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // //     setSelectedParent(null);\n// // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // //     setShowAddModal(true);\n// // // // // // //   };\n\n// // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // //     if (hasChildren) {\n// // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // //     }\n// // // // // // //     if (hasProjects) {\n// // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // //     }\n\n// // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // //       return;\n// // // // // // //     }\n\n// // // // // // //     try {\n// // // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // //       fetchDomainAndSubDomains();\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // //       newExpanded.delete(nodeId);\n// // // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // //     } else {\n// // // // // // //       newExpanded.add(nodeId);\n// // // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // //     }\n// // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // //   };\n\n// // // // // // //   if (loading) {\n// // // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // //     return (\n// // // // // // //       <div className=\"loading-container\">\n// // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // //       </div>\n// // // // // // //     );\n// // // // // // //   }\n\n// // // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // //   return (\n// // // // // // //     <div className=\"subdomain-management\">\n// // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // //       <div className=\"page-header\">\n// // // // // // //         <div className=\"header-content\">\n// // // // // // //           <div className=\"breadcrumb\">\n// // // // // // //             <button \n// // // // // // //               className=\"breadcrumb-link\"\n// // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // //             >\n// // // // // // //               <FiArrowLeft />\n// // // // // // //               Domains\n// // // // // // //             </button>\n// // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // //           </div>\n// // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // //         </div>\n// // // // // // //         <div className=\"header-actions\">\n// // // // // // //           <button \n// // // // // // //             className=\"primary-button\" \n// // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // //           >\n// // // // // // //             <FiPlus />\n// // // // // // //             Add Root SubDomain\n// // // // // // //           </button>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Quick Guide */}\n// // // // // // //       <div className=\"quick-guide\">\n// // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // //         <div className=\"guide-steps\">\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // //           </div>\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // //           </div>\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Domain Info Card */}\n// // // // // // //       {domain && (\n// // // // // // //         <div className=\"domain-info-card\">\n// // // // // // //           <div className=\"domain-icon\">\n// // // // // // //             <FiFolder />\n// // // // // // //           </div>\n// // // // // // //           <div className=\"domain-details\">\n// // // // // // //             <h3>{domain.title}</h3>\n// // // // // // //             <p>{domain.description}</p>\n// // // // // // //             <div className=\"domain-stats\">\n// // // // // // //               <span className=\"stat-item\">\n// // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // //               </span>\n// // // // // // //               <span className=\"stat-item\">\n// // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // //               </span>\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       )}\n\n// // // // // // //       {/* SubDomain Tree */}\n// // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // //         <div className=\"tree-header\">\n// // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // //           <div className=\"tree-legend\">\n// // // // // // //             <span className=\"legend-item\">\n// // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // //               Has children\n// // // // // // //             </span>\n// // // // // // //             <span className=\"legend-item\">\n// // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // //               Leaf (can have projects)\n// // // // // // //             </span>\n// // // // // // //           </div>\n// // // // // // //         </div>\n\n// // // // // // //         {subDomains.length > 0 ? (\n// // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // //               <SubDomainNode\n// // // // // // //                 key={subDomain.id}\n// // // // // // //                 subDomain={subDomain}\n// // // // // // //                 level={0}\n// // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // //               />\n// // // // // // //             ))}\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // //             <FiFolderPlus size={64} />\n// // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // //               <h4>Example Structure:</h4>\n// // // // // // //               <div className=\"example-tree\">\n// // // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // // //               </div>\n// // // // // // //             </div>\n// // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // //               <button \n// // // // // // //                 className=\"primary-button large\" \n// // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // //               >\n// // // // // // //                 <FiPlus />\n// // // // // // //                 Create Your First SubDomain\n// // // // // // //               </button>\n// // // // // // //               <p className=\"help-text\">\n// // // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // //               </p>\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n\n// // // // // // //       {/* Add/Edit Modal */}\n// // // // // // //       {showAddModal && (\n// // // // // // //         <SubDomainModal\n// // // // // // //           subDomain={editingSubDomain}\n// // // // // // //           parent={selectedParent}\n// // // // // // //           domain={domain}\n// // // // // // //           onClose={() => {\n// // // // // // //             setShowAddModal(false);\n// // // // // // //             setEditingSubDomain(null);\n// // // // // // //             setSelectedParent(null);\n// // // // // // //           }}\n// // // // // // //           onSave={() => {\n// // // // // // //             setShowAddModal(false);\n// // // // // // //             setEditingSubDomain(null);\n// // // // // // //             setSelectedParent(null);\n// // // // // // //             fetchDomainAndSubDomains();\n// // // // // // //           }}\n// // // // // // //         />\n// // // // // // //       )}\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // // SubDomain Node Component\n// // // // // // // const SubDomainNode = ({ \n// // // // // // //   subDomain, \n// // // // // // //   level, \n// // // // // // //   isExpanded, \n// // // // // // //   onToggleExpanded, \n// // // // // // //   onEdit, \n// // // // // // //   onDelete, \n// // // // // // //   onAddChild,\n// // // // // // //   expandedNodes \n// // // // // // // }) => {\n// // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // // //     title: subDomain.title,\n// // // // // // //     level,\n// // // // // // //     hasChildren,\n// // // // // // //     isLeaf,\n// // // // // // //     isExpanded,\n// // // // // // //     projectCount: subDomain.projectCount\n// // // // // // //   });\n\n// // // // // // //   return (\n// // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // //       <div className=\"node-content\">\n// // // // // // //         <div className=\"node-main\">\n// // // // // // //           {hasChildren ? (\n// // // // // // //             <button \n// // // // // // //               className=\"expand-button\"\n// // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // //             >\n// // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // //             </button>\n// // // // // // //           ) : (\n// // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // //           )}\n\n// // // // // // //           <div className=\"node-icon\">\n// // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // //           </div>\n\n// // // // // // //           <div className=\"node-info\">\n// // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // //             <div className=\"node-stats\">\n// // // // // // //               {hasChildren && (\n// // // // // // //                 <span className=\"stat-badge\">\n// // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // //                   {subDomain.projectCount} projects\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //               {isLeaf && (\n// // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // //                   Can have projects\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         </div>\n\n// // // // // // //         <div className=\"node-actions\">\n// // // // // // //           <button \n// // // // // // //             className=\"action-button add\" \n// // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // //           >\n// // // // // // //             <FiPlus />\n// // // // // // //           </button>\n// // // // // // //           <div className=\"action-menu\">\n// // // // // // //             <button \n// // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // //               title=\"More actions\"\n// // // // // // //             >\n// // // // // // //               <FiMoreVertical />\n// // // // // // //             </button>\n// // // // // // //             {showMenu && (\n// // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onEdit(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }}>\n// // // // // // //                   <FiEdit /> Edit\n// // // // // // //                 </button>\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onAddChild(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }}>\n// // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // //                 </button>\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onDelete(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }} className=\"danger\">\n// // // // // // //                   <FiTrash2 /> Delete\n// // // // // // //                 </button>\n// // // // // // //               </div>\n// // // // // // //             )}\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Children */}\n// // // // // // //       {hasChildren && isExpanded && (\n// // // // // // //         <div className=\"node-children\">\n// // // // // // //           {subDomain.children.map((child) => (\n// // // // // // //             <SubDomainNode\n// // // // // // //               key={child.id}\n// // // // // // //               subDomain={child}\n// // // // // // //               level={level + 1}\n// // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // //               onEdit={onEdit}\n// // // // // // //               onDelete={onDelete}\n// // // // // // //               onAddChild={onAddChild}\n// // // // // // //               expandedNodes={expandedNodes}\n// // // // // // //             />\n// // // // // // //           ))}\n// // // // // // //         </div>\n// // // // // // //       )}\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // // SubDomain Modal Component\n// // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // //   const [formData, setFormData] = useState({\n// // // // // // //     title: subDomain?.title || '',\n// // // // // // //     description: subDomain?.description || ''\n// // // // // // //   });\n// // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // // //     isEditing: !!subDomain,\n// // // // // // //     parentTitle: parent?.title,\n// // // // // // //     domainTitle: domain?.title,\n// // // // // // //     formData\n// // // // // // //   });\n\n// // // // // // //   // Generate slug preview\n// // // // // // //   const generateSlug = (title) => {\n// // // // // // //     return title\n// // // // // // //       .toLowerCase()\n// // // // // // //       .replace(/[^a-z0-9]/g, '-')\n// // // // // // //       .replace(/-+/g, '-')\n// // // // // // //       .replace(/^-|-$/g, '');\n// // // // // // //   };\n\n// // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // //   const handleSubmit = async (e) => {\n// // // // // // //     e.preventDefault();\n// // // // // // //     setLoading(true);\n\n// // // // // // //     try {\n// // // // // // //       // Generate slug from title\n// // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // //       const requestData = {\n// // // // // // //         ...formData,\n// // // // // // //         // slug: slug,\n// // // // // // //         domainId: domain.id,\n// // // // // // //         parentId: parent?.id || null\n// // // // // // //       };\n\n// // // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // //       console.log('📋 SUBDOMAIN SAVE - Generated slug:', slug);\n// // // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // //       if (subDomain) {\n// // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // //       } else {\n// // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // //       }\n\n// // // // // // //       onSave();\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // //     } finally {\n// // // // // // //       setLoading(false);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const getModalTitle = () => {\n// // // // // // //     if (subDomain) {\n// // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // //     }\n// // // // // // //     if (parent) {\n// // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // //     }\n// // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // //   };\n\n// // // // // // //   const getLevel = () => {\n// // // // // // //     if (!parent) return 'Root Level';\n// // // // // // //     // This is a simplified level calculation\n// // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <div className=\"modal-overlay\">\n// // // // // // //       <div className=\"modal\">\n// // // // // // //         <div className=\"modal-header\">\n// // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // //           <button onClick={onClose}>×</button>\n// // // // // // //         </div>\n\n// // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // //           <div className=\"form-group\">\n// // // // // // //             <label>SubDomain Title</label>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={formData.title}\n// // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // //               required\n// // // // // // //             />\n// // // // // // //             {formData.title && (\n// // // // // // //               <div className=\"slug-preview\">\n// // // // // // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // // // // // //               </div>\n// // // // // // //             )}\n// // // // // // //           </div>\n\n// // // // // // //           <div className=\"form-group\">\n// // // // // // //             <label>Description (Optional)</label>\n// // // // // // //             <textarea\n// // // // // // //               value={formData.description}\n// // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // //               rows={3}\n// // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // //             />\n// // // // // // //           </div>\n\n// // // // // // //           <div className=\"modal-info\">\n// // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // //             {parent && (\n// // // // // // //               <>\n// // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // //               </>\n// // // // // // //             )}\n// // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // //           </div>\n\n// // // // // // //           <div className=\"modal-actions\">\n// // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // //               Cancel\n// // // // // // //             </button>\n// // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // //             </button>\n// // // // // // //           </div>\n// // // // // // //         </form>\n// // // // // // //       </div>\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // export default SubDomainManagement;\n\n// // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // import {\n// // // // // // // //   FiPlus,\n// // // // // // // //   FiEdit,\n// // // // // // // //   FiTrash2,\n// // // // // // // //   FiChevronDown,\n// // // // // // // //   FiChevronRight,\n// // // // // // // //   FiFolder,\n// // // // // // // //   FiFolderPlus,\n// // // // // // // //   FiFileText,\n// // // // // // // //   FiArrowLeft,\n// // // // // // // //   FiMoreVertical,\n// // // // // // // //   FiMove,\n// // // // // // // //   FiTarget\n// // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // const SubDomainManagement = () => {\n// // // // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // // //   const { domainId } = useParams();\n// // // // // // // //   const navigate = useNavigate();\n\n// // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // //     domainId,\n// // // // // // // //     domain: domain?.title,\n// // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // //     loading,\n// // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // //   });\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     if (domainId) {\n// // // // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // //     }\n// // // // // // // //   }, [domainId]);\n\n// // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // //     try {\n// // // // // // // //       setLoading(true);\n\n// // // // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // // //       // First, let's try to get domain details\n// // // // // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // // // //       // Extract domain from response\n// // // // // // // //       let domainData = null;\n// // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // //       }\n\n// // // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // //       if (!domainData) {\n// // // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // //         domainData = {\n// // // // // // // //           id: domainId,\n// // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // //           description: 'Loading domain details...',\n// // // // // // // //           projectCount: 0\n// // // // // // // //         };\n// // // // // // // //       }\n\n// // // // // // // //       setDomain(domainData);\n\n// // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // //       try {\n// // // // // // // //         console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // //         console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // // //         // Auto-expand first level\n// // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // //           console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // //         }\n// // // // // // // //       } catch (hierarchyError) {\n// // // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // //         setSubDomains([]);\n// // // // // // // //       }\n\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // // // //       // Create fallback domain\n// // // // // // // //       setDomain({\n// // // // // // // //         id: domainId,\n// // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // //         description: 'Error loading domain details',\n// // // // // // // //         projectCount: 0\n// // // // // // // //       });\n// // // // // // // //       setSubDomains([]);\n// // // // // // // //     } finally {\n// // // // // // // //       setLoading(false);\n// // // // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // // //     setSelectedParent(parent);\n// // // // // // // //     setEditingSubDomain(null);\n// // // // // // // //     setShowAddModal(true);\n\n// // // // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // //       showAddModal: true, \n// // // // // // // //       selectedParent: parent?.title,\n// // // // // // // //       editingSubDomain: null \n// // // // // // // //     });\n// // // // // // // //   };\n\n// // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // // //     setSelectedParent(null);\n// // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // //     setShowAddModal(true);\n// // // // // // // //   };\n\n// // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // //     if (hasChildren) {\n// // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // //     }\n// // // // // // // //     if (hasProjects) {\n// // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // //     }\n\n// // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // //       return;\n// // // // // // // //     }\n\n// // // // // // // //     try {\n// // // // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // //     } else {\n// // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // //     }\n// // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // //   };\n\n// // // // // // // //   if (loading) {\n// // // // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // // //     return (\n// // // // // // // //       <div className=\"loading-container\">\n// // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // //       </div>\n// // // // // // // //     );\n// // // // // // // //   }\n\n// // // // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // //   return (\n// // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // //       <div className=\"page-header\">\n// // // // // // // //         <div className=\"header-content\">\n// // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // //             <button \n// // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // //             >\n// // // // // // // //               <FiArrowLeft />\n// // // // // // // //               Domains\n// // // // // // // //             </button>\n// // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // //           </div>\n// // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // //         </div>\n// // // // // // // //         <div className=\"header-actions\">\n// // // // // // // //           <button \n// // // // // // // //             className=\"primary-button\" \n// // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // //           >\n// // // // // // // //             <FiPlus />\n// // // // // // // //             Add Root SubDomain\n// // // // // // // //           </button>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Quick Guide */}\n// // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Domain Info Card */}\n// // // // // // // //       {domain && (\n// // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // //             <FiFolder />\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"domain-details\">\n// // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // //             <p>{domain.description}</p>\n// // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // //               <span className=\"stat-item\">\n// // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // //               </span>\n// // // // // // // //               <span className=\"stat-item\">\n// // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // //               </span>\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       )}\n\n// // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // //         <div className=\"tree-header\">\n// // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // //             <span className=\"legend-item\">\n// // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // //               Has children\n// // // // // // // //             </span>\n// // // // // // // //             <span className=\"legend-item\">\n// // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // //               Leaf (can have projects)\n// // // // // // // //             </span>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n\n// // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // //               <SubDomainNode\n// // // // // // // //                 key={subDomain.id}\n// // // // // // // //                 subDomain={subDomain}\n// // // // // // // //                 level={0}\n// // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // //               />\n// // // // // // // //             ))}\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // //               <div className=\"example-tree\">\n// // // // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // // // //               </div>\n// // // // // // // //             </div>\n// // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // //               <button \n// // // // // // // //                 className=\"primary-button large\" \n// // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // //               >\n// // // // // // // //                 <FiPlus />\n// // // // // // // //                 Create Your First SubDomain\n// // // // // // // //               </button>\n// // // // // // // //               <p className=\"help-text\">\n// // // // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // //               </p>\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // //       {showAddModal && (\n// // // // // // // //         <SubDomainModal\n// // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // //           parent={selectedParent}\n// // // // // // // //           domain={domain}\n// // // // // // // //           onClose={() => {\n// // // // // // // //             setShowAddModal(false);\n// // // // // // // //             setEditingSubDomain(null);\n// // // // // // // //             setSelectedParent(null);\n// // // // // // // //           }}\n// // // // // // // //           onSave={() => {\n// // // // // // // //             setShowAddModal(false);\n// // // // // // // //             setEditingSubDomain(null);\n// // // // // // // //             setSelectedParent(null);\n// // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // //           }}\n// // // // // // // //         />\n// // // // // // // //       )}\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // // SubDomain Node Component\n// // // // // // // // const SubDomainNode = ({ \n// // // // // // // //   subDomain, \n// // // // // // // //   level, \n// // // // // // // //   isExpanded, \n// // // // // // // //   onToggleExpanded, \n// // // // // // // //   onEdit, \n// // // // // // // //   onDelete, \n// // // // // // // //   onAddChild,\n// // // // // // // //   expandedNodes \n// // // // // // // // }) => {\n// // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // // // //     title: subDomain.title,\n// // // // // // // //     level,\n// // // // // // // //     hasChildren,\n// // // // // // // //     isLeaf,\n// // // // // // // //     isExpanded,\n// // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // //   });\n\n// // // // // // // //   return (\n// // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // //       <div className=\"node-content\">\n// // // // // // // //         <div className=\"node-main\">\n// // // // // // // //           {hasChildren ? (\n// // // // // // // //             <button \n// // // // // // // //               className=\"expand-button\"\n// // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // //             >\n// // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // //             </button>\n// // // // // // // //           ) : (\n// // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // //           )}\n\n// // // // // // // //           <div className=\"node-icon\">\n// // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // //           </div>\n\n// // // // // // // //           <div className=\"node-info\">\n// // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // //             <div className=\"node-stats\">\n// // // // // // // //               {hasChildren && (\n// // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //               {isLeaf && (\n// // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // //                   Can have projects\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n\n// // // // // // // //         <div className=\"node-actions\">\n// // // // // // // //           <button \n// // // // // // // //             className=\"action-button add\" \n// // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // //           >\n// // // // // // // //             <FiPlus />\n// // // // // // // //           </button>\n// // // // // // // //           <div className=\"action-menu\">\n// // // // // // // //             <button \n// // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // //               title=\"More actions\"\n// // // // // // // //             >\n// // // // // // // //               <FiMoreVertical />\n// // // // // // // //             </button>\n// // // // // // // //             {showMenu && (\n// // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onEdit(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }}>\n// // // // // // // //                   <FiEdit /> Edit\n// // // // // // // //                 </button>\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onAddChild(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }}>\n// // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // //                 </button>\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onDelete(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }} className=\"danger\">\n// // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // //                 </button>\n// // // // // // // //               </div>\n// // // // // // // //             )}\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Children */}\n// // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // //         <div className=\"node-children\">\n// // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // //             <SubDomainNode\n// // // // // // // //               key={child.id}\n// // // // // // // //               subDomain={child}\n// // // // // // // //               level={level + 1}\n// // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // //               onEdit={onEdit}\n// // // // // // // //               onDelete={onDelete}\n// // // // // // // //               onAddChild={onAddChild}\n// // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // //             />\n// // // // // // // //           ))}\n// // // // // // // //         </div>\n// // // // // // // //       )}\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // // SubDomain Modal Component\n// // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // //     title: subDomain?.title || '',\n// // // // // // // //     description: subDomain?.description || ''\n// // // // // // // //   });\n// // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // // // //     isEditing: !!subDomain,\n// // // // // // // //     parentTitle: parent?.title,\n// // // // // // // //     domainTitle: domain?.title,\n// // // // // // // //     formData\n// // // // // // // //   });\n\n// // // // // // // //   // Generate slug preview\n// // // // // // // //   const generateSlug = (title) => {\n// // // // // // // //     return title\n// // // // // // // //       .toLowerCase()\n// // // // // // // //       .replace(/[^a-z0-9]/g, '-')\n// // // // // // // //       .replace(/-+/g, '-')\n// // // // // // // //       .replace(/^-|-$/g, '');\n// // // // // // // //   };\n\n// // // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // //     e.preventDefault();\n// // // // // // // //     setLoading(true);\n\n// // // // // // // //     try {\n// // // // // // // //       // Generate slug from title\n// // // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // // //       const requestData = {\n// // // // // // // //         ...formData,\n// // // // // // // //         slug: slug,\n// // // // // // // //         domainId: domain.id,\n// // // // // // // //         parentId: parent?.id || null\n// // // // // // // //       };\n\n// // // // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Generated slug:', slug);\n// // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // //       if (subDomain) {\n// // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // //       } else {\n// // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // //       }\n\n// // // // // // // //       onSave();\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // //     } finally {\n// // // // // // // //       setLoading(false);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const getModalTitle = () => {\n// // // // // // // //     if (subDomain) {\n// // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // //     }\n// // // // // // // //     if (parent) {\n// // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // //     }\n// // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // //   };\n\n// // // // // // // //   const getLevel = () => {\n// // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // //     // This is a simplified level calculation\n// // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // //       <div className=\"modal\">\n// // // // // // // //         <div className=\"modal-header\">\n// // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // //           <button onClick={onClose}>×</button>\n// // // // // // // //         </div>\n\n// // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // //           <div className=\"form-group\">\n// // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={formData.title}\n// // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // //               required\n// // // // // // // //             />\n// // // // // // // //             {formData.title && (\n// // // // // // // //               <div className=\"slug-preview\">\n// // // // // // // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // // // // // // //               </div>\n// // // // // // // //             )}\n// // // // // // // //           </div>\n\n// // // // // // // //           <div className=\"form-group\">\n// // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // //             <textarea\n// // // // // // // //               value={formData.description}\n// // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // //               rows={3}\n// // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // //             />\n// // // // // // // //           </div>\n\n// // // // // // // //           <div className=\"modal-info\">\n// // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // //             {parent && (\n// // // // // // // //               <>\n// // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // //               </>\n// // // // // // // //             )}\n// // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // //           </div>\n\n// // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // //               Cancel\n// // // // // // // //             </button>\n// // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // //             </button>\n// // // // // // // //           </div>\n// // // // // // // //         </form>\n// // // // // // // //       </div>\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // export default SubDomainManagement;\n\n// // // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // import {\n// // // // // // // // //   FiPlus,\n// // // // // // // // //   FiEdit,\n// // // // // // // // //   FiTrash2,\n// // // // // // // // //   FiChevronDown,\n// // // // // // // // //   FiChevronRight,\n// // // // // // // // //   FiFolder,\n// // // // // // // // //   FiFolderPlus,\n// // // // // // // // //   FiFileText,\n// // // // // // // // //   FiArrowLeft,\n// // // // // // // // //   FiMoreVertical,\n// // // // // // // // //   FiMove,\n// // // // // // // // //   FiTarget\n// // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // //   const navigate = useNavigate();\n\n// // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // //     domainId,\n// // // // // // // // //     domain: domain?.title,\n// // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // //     loading,\n// // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // //   });\n\n// // // // // // // // //   useEffect(() => {\n// // // // // // // // //     if (domainId) {\n// // // // // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // //     }\n// // // // // // // // //   }, [domainId]);\n\n// // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // //     try {\n// // // // // // // // //       setLoading(true);\n\n// // // // // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // // // //       // First, let's try to get domain details\n// // // // // // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // // // // //       // Extract domain from response\n// // // // // // // // //       let domainData = null;\n// // // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // // //       }\n\n// // // // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // // //       if (!domainData) {\n// // // // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // // //         domainData = {\n// // // // // // // // //           id: domainId,\n// // // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // // //           description: 'Loading domain details...',\n// // // // // // // // //           projectCount: 0\n// // // // // // // // //         };\n// // // // // // // // //       }\n\n// // // // // // // // //       setDomain(domainData);\n\n// // // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // // //       try {\n// // // // // // // // //         console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // // //         console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // // // //         // Auto-expand first level\n// // // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // //           console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // //         }\n// // // // // // // // //       } catch (hierarchyError) {\n// // // // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // // //         setSubDomains([]);\n// // // // // // // // //       }\n\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // // // // //       // Create fallback domain\n// // // // // // // // //       setDomain({\n// // // // // // // // //         id: domainId,\n// // // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // // //         description: 'Error loading domain details',\n// // // // // // // // //         projectCount: 0\n// // // // // // // // //       });\n// // // // // // // // //       setSubDomains([]);\n// // // // // // // // //     } finally {\n// // // // // // // // //       setLoading(false);\n// // // // // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // //     setShowAddModal(true);\n\n// // // // // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // //       showAddModal: true, \n// // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // //       editingSubDomain: null \n// // // // // // // // //     });\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // // // //     setSelectedParent(null);\n// // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // //     setShowAddModal(true);\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // //     if (hasChildren) {\n// // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // //     }\n// // // // // // // // //     if (hasProjects) {\n// // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // //     }\n\n// // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // //       return;\n// // // // // // // // //     }\n\n// // // // // // // // //     try {\n// // // // // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // //     } else {\n// // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // //     }\n// // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // //   };\n\n// // // // // // // // //   if (loading) {\n// // // // // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // // // //     return (\n// // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // //       </div>\n// // // // // // // // //     );\n// // // // // // // // //   }\n\n// // // // // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // //             <button \n// // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // //             >\n// // // // // // // // //               <FiArrowLeft />\n// // // // // // // // //               Domains\n// // // // // // // // //             </button>\n// // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // // //         </div>\n// // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // //           <button \n// // // // // // // // //             className=\"primary-button\" \n// // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // //           >\n// // // // // // // // //             <FiPlus />\n// // // // // // // // //             Add Root SubDomain\n// // // // // // // // //           </button>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // //       {domain && (\n// // // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // // //             <FiFolder />\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"domain-details\">\n// // // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // // //             <p>{domain.description}</p>\n// // // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // //               </span>\n// // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // //               </span>\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       )}\n\n// // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // //               Has children\n// // // // // // // // //             </span>\n// // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // //               Leaf (can have projects)\n// // // // // // // // //             </span>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n\n// // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // //               <SubDomainNode\n// // // // // // // // //                 key={subDomain.id}\n// // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // //                 level={0}\n// // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // //               />\n// // // // // // // // //             ))}\n// // // // // // // // //           </div>\n// // // // // // // // //         ) : (\n// // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // // // // //               </div>\n// // // // // // // // //             </div>\n// // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // //               <button \n// // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // //               >\n// // // // // // // // //                 <FiPlus />\n// // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // //               </button>\n// // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // //               </p>\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         )}\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // //       {showAddModal && (\n// // // // // // // // //         <SubDomainModal\n// // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // //           parent={selectedParent}\n// // // // // // // // //           domain={domain}\n// // // // // // // // //           onClose={() => {\n// // // // // // // // //             setShowAddModal(false);\n// // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // //             setSelectedParent(null);\n// // // // // // // // //           }}\n// // // // // // // // //           onSave={() => {\n// // // // // // // // //             setShowAddModal(false);\n// // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // //             setSelectedParent(null);\n// // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // //           }}\n// // // // // // // // //         />\n// // // // // // // // //       )}\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // // SubDomain Node Component\n// // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // //   subDomain, \n// // // // // // // // //   level, \n// // // // // // // // //   isExpanded, \n// // // // // // // // //   onToggleExpanded, \n// // // // // // // // //   onEdit, \n// // // // // // // // //   onDelete, \n// // // // // // // // //   onAddChild,\n// // // // // // // // //   expandedNodes \n// // // // // // // // // }) => {\n// // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // //     title: subDomain.title,\n// // // // // // // // //     level,\n// // // // // // // // //     hasChildren,\n// // // // // // // // //     isLeaf,\n// // // // // // // // //     isExpanded,\n// // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // //   });\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // //           {hasChildren ? (\n// // // // // // // // //             <button \n// // // // // // // // //               className=\"expand-button\"\n// // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // //             >\n// // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // //             </button>\n// // // // // // // // //           ) : (\n// // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // //           )}\n\n// // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // //           </div>\n\n// // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // //               {hasChildren && (\n// // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //               {isLeaf && (\n// // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // //                   Can have projects\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n\n// // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // //           <button \n// // // // // // // // //             className=\"action-button add\" \n// // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // //           >\n// // // // // // // // //             <FiPlus />\n// // // // // // // // //           </button>\n// // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // //             <button \n// // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // //               title=\"More actions\"\n// // // // // // // // //             >\n// // // // // // // // //               <FiMoreVertical />\n// // // // // // // // //             </button>\n// // // // // // // // //             {showMenu && (\n// // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onEdit(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }}>\n// // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // //                 </button>\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onAddChild(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }}>\n// // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // //                 </button>\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onDelete(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }} className=\"danger\">\n// // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // //                 </button>\n// // // // // // // // //               </div>\n// // // // // // // // //             )}\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Children */}\n// // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // //             <SubDomainNode\n// // // // // // // // //               key={child.id}\n// // // // // // // // //               subDomain={child}\n// // // // // // // // //               level={level + 1}\n// // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // //               onEdit={onEdit}\n// // // // // // // // //               onDelete={onDelete}\n// // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // //             />\n// // // // // // // // //           ))}\n// // // // // // // // //         </div>\n// // // // // // // // //       )}\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // //   });\n// // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // //     formData\n// // // // // // // // //   });\n\n// // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // //     e.preventDefault();\n// // // // // // // // //     setLoading(true);\n\n// // // // // // // // //     try {\n// // // // // // // // //       const requestData = {\n// // // // // // // // //         ...formData,\n// // // // // // // // //         domainId: domain.id,\n// // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // //       };\n\n// // // // // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // //       if (subDomain) {\n// // // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // //       } else {\n// // // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // //       }\n\n// // // // // // // // //       onSave();\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // //     } finally {\n// // // // // // // // //       setLoading(false);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // //     if (subDomain) {\n// // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // //     }\n// // // // // // // // //     if (parent) {\n// // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // //     }\n// // // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // // //   };\n\n// // // // // // // // //   const getLevel = () => {\n// // // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // // //     // This is a simplified level calculation\n// // // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // // //   };\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // //       <div className=\"modal\">\n// // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // //           <button onClick={onClose}>×</button>\n// // // // // // // // //         </div>\n\n// // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={formData.title}\n// // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // //               required\n// // // // // // // // //             />\n// // // // // // // // //           </div>\n\n// // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // //             <textarea\n// // // // // // // // //               value={formData.description}\n// // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // //               rows={3}\n// // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // //             />\n// // // // // // // // //           </div>\n\n// // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // // //             {parent && (\n// // // // // // // // //               <>\n// // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // //               </>\n// // // // // // // // //             )}\n// // // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // // //           </div>\n\n// // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // //               Cancel\n// // // // // // // // //             </button>\n// // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // //             </button>\n// // // // // // // // //           </div>\n// // // // // // // // //         </form>\n// // // // // // // // //       </div>\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // export default SubDomainManagement;\n\n// // // // // // // // // // // src/components/domains/SubDomainManagement.js - NEW FILE\n// // // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // // import {\n// // // // // // // // // //   FiPlus,\n// // // // // // // // // //   FiEdit,\n// // // // // // // // // //   FiTrash2,\n// // // // // // // // // //   FiChevronDown,\n// // // // // // // // // //   FiChevronRight,\n// // // // // // // // // //   FiFolder,\n// // // // // // // // // //   FiFolderPlus,\n// // // // // // // // // //   FiFileText,\n// // // // // // // // // //   FiArrowLeft,\n// // // // // // // // // //   FiMoreVertical,\n// // // // // // // // // //   FiMove,\n// // // // // // // // // //   FiTarget\n// // // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // // //   const navigate = useNavigate();\n\n// // // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // // //     domainId,\n// // // // // // // // // //     domain: domain?.title,\n// // // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // // //     loading,\n// // // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // // //   });\n\n// // // // // // // // // //   useEffect(() => {\n// // // // // // // // // //     if (domainId) {\n// // // // // // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // //     }\n// // // // // // // // // //   }, [domainId]);\n\n// // // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       setLoading(true);\n\n// // // // // // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // // // // //       // Fetch domain details and hierarchy\n// // // // // // // // // //       const [domainResponse, hierarchyResponse] = await Promise.all([\n// // // // // // // // // //         authService.getDomains({ id: domainId }),\n// // // // // // // // // //         authService.getDomainHierarchy(domainId)\n// // // // // // // // // //       ]);\n\n// // // // // // // // // //       console.log('✅ SUBDOMAIN FETCH - Domain response:', domainResponse.data);\n// // // // // // // // // //       console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // // // // //       const domainData = domainResponse.data?.domains?.[0] || \n// // // // // // // // // //                         domainResponse.data?.data?.domains?.[0] || \n// // // // // // // // // //                         domainResponse.data;\n\n// // // // // // // // // //       const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n\n// // // // // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n// // // // // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy:', hierarchyData);\n\n// // // // // // // // // //       setDomain(domainData);\n// // // // // // // // // //       setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // // // // //       // Auto-expand first level\n// // // // // // // // // //       if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // // //         const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // // //         console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // // //       }\n\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // // //       toast.error('Failed to fetch sub-domains');\n// // // // // // // // // //     } finally {\n// // // // // // // // // //       setLoading(false);\n// // // // // // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // // //     setShowAddModal(true);\n\n// // // // // // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // // //       showAddModal: true, \n// // // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // // //       editingSubDomain: null \n// // // // // // // // // //     });\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // // // // //     setSelectedParent(null);\n// // // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // // //     setShowAddModal(true);\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // // //     if (hasChildren) {\n// // // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // // //     }\n// // // // // // // // // //     if (hasProjects) {\n// // // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // // //     }\n\n// // // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // // //       return;\n// // // // // // // // // //     }\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // // //     } else {\n// // // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // // //     }\n// // // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const isLeafNode = (subDomain) => {\n// // // // // // // // // //     return !subDomain.children || subDomain.children.length === 0;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const getNodeLevel = (subDomain, level = 0) => {\n// // // // // // // // // //     return level;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   if (loading) {\n// // // // // // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // // // // //     return (\n// // // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     );\n// // // // // // // // // //   }\n\n// // // // // // // // // //   if (!domain) {\n// // // // // // // // // //     console.log('❌ SUBDOMAIN MANAGEMENT - Domain not found');\n\n// // // // // // // // // //     return (\n// // // // // // // // // //       <div className=\"empty-state\">\n// // // // // // // // // //         <h3>Domain not found</h3>\n// // // // // // // // // //         <p>The requested domain could not be loaded.</p>\n// // // // // // // // // //         <button \n// // // // // // // // // //           className=\"primary-button\" \n// // // // // // // // // //           onClick={() => navigate('/domains')}\n// // // // // // // // // //         >\n// // // // // // // // // //           <FiArrowLeft />\n// // // // // // // // // //           Back to Domains\n// // // // // // // // // //         </button>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     );\n// // // // // // // // // //   }\n\n// // // // // // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // // //             <button \n// // // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // // //             >\n// // // // // // // // // //               <FiArrowLeft />\n// // // // // // // // // //               Domains\n// // // // // // // // // //             </button>\n// // // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // // //             <span className=\"breadcrumb-current\">{domain.title}</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // // //           <p>Manage the hierarchical structure of {domain.title}</p>\n// // // // // // // // // //         </div>\n// // // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // // //           <button \n// // // // // // // // // //             className=\"primary-button\" \n// // // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // // //           >\n// // // // // // // // // //             <FiPlus />\n// // // // // // // // // //             Add Root SubDomain\n// // // // // // // // // //           </button>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // // //         <h3>How to Add SubDomains:</h3>\n// // // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // // //       <div className=\"domain-info-card\">\n// // // // // // // // // //         <div className=\"domain-icon\">\n// // // // // // // // // //           <FiFolder />\n// // // // // // // // // //         </div>\n// // // // // // // // // //         <div className=\"domain-details\">\n// // // // // // // // // //           <h3>{domain.title}</h3>\n// // // // // // // // // //           <p>{domain.description}</p>\n// // // // // // // // // //           <div className=\"domain-stats\">\n// // // // // // // // // //             <span className=\"stat-item\">\n// // // // // // // // // //               <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // // //             </span>\n// // // // // // // // // //             <span className=\"stat-item\">\n// // // // // // // // // //               <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // // //             </span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // // //               Has children\n// // // // // // // // // //             </span>\n// // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // // //               Leaf (can have projects)\n// // // // // // // // // //             </span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n\n// // // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // // //               <SubDomainNode\n// // // // // // // // // //                 key={subDomain.id}\n// // // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // // //                 level={0}\n// // // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // // //               />\n// // // // // // // // // //             ))}\n// // // // // // // // // //           </div>\n// // // // // // // // // //         ) : (\n// // // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // // //             <p>Start organizing your {domain.title} projects by creating subdomains</p>\n// // // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             </div>\n// // // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // // //               <button \n// // // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // // //               >\n// // // // // // // // // //                 <FiPlus />\n// // // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // // //               </button>\n// // // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // // //               </p>\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         )}\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // // //       {showAddModal && (\n// // // // // // // // // //         <SubDomainModal\n// // // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // // //           parent={selectedParent}\n// // // // // // // // // //           domain={domain}\n// // // // // // // // // //           onClose={() => {\n// // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // //           }}\n// // // // // // // // // //           onSave={() => {\n// // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // // //           }}\n// // // // // // // // // //         />\n// // // // // // // // // //       )}\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // SubDomain Node Component\n// // // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // // //   subDomain, \n// // // // // // // // // //   level, \n// // // // // // // // // //   isExpanded, \n// // // // // // // // // //   onToggleExpanded, \n// // // // // // // // // //   onEdit, \n// // // // // // // // // //   onDelete, \n// // // // // // // // // //   onAddChild,\n// // // // // // // // // //   expandedNodes \n// // // // // // // // // // }) => {\n// // // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // // //     title: subDomain.title,\n// // // // // // // // // //     level,\n// // // // // // // // // //     hasChildren,\n// // // // // // // // // //     isLeaf,\n// // // // // // // // // //     isExpanded,\n// // // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // // //   });\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // // //           {hasChildren ? (\n// // // // // // // // // //             <button \n// // // // // // // // // //               className=\"expand-button\"\n// // // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // // //             >\n// // // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // // //             </button>\n// // // // // // // // // //           ) : (\n// // // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // // //           )}\n\n// // // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // // //           </div>\n\n// // // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // // //               {hasChildren && (\n// // // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //               {isLeaf && (\n// // // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // // //                   Can have projects\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n\n// // // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // // //           <button \n// // // // // // // // // //             className=\"action-button add\" \n// // // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // // //           >\n// // // // // // // // // //             <FiPlus />\n// // // // // // // // // //           </button>\n// // // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // // //             <button \n// // // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // // //               title=\"More actions\"\n// // // // // // // // // //             >\n// // // // // // // // // //               <FiMoreVertical />\n// // // // // // // // // //             </button>\n// // // // // // // // // //             {showMenu && (\n// // // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // // //                 <button onClick={() => onEdit(subDomain)}>\n// // // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // // //                 </button>\n// // // // // // // // // //                 <button onClick={() => onAddChild(subDomain)}>\n// // // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // // //                 </button>\n// // // // // // // // // //                 <button onClick={() => onDelete(subDomain)} className=\"danger\">\n// // // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // // //                 </button>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             )}\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Children */}\n// // // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // // //             <SubDomainNode\n// // // // // // // // // //               key={child.id}\n// // // // // // // // // //               subDomain={child}\n// // // // // // // // // //               level={level + 1}\n// // // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // // //               onEdit={onEdit}\n// // // // // // // // // //               onDelete={onDelete}\n// // // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // // //             />\n// // // // // // // // // //           ))}\n// // // // // // // // // //         </div>\n// // // // // // // // // //       )}\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // // //   });\n// // // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // // //     formData\n// // // // // // // // // //   });\n\n// // // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // // //     e.preventDefault();\n// // // // // // // // // //     setLoading(true);\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       const requestData = {\n// // // // // // // // // //         ...formData,\n// // // // // // // // // //         domainId: domain.id,\n// // // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // // //       };\n\n// // // // // // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // // //       if (subDomain) {\n// // // // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // // //       } else {\n// // // // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // // //       }\n\n// // // // // // // // // //       onSave();\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // // //     } finally {\n// // // // // // // // // //       setLoading(false);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // // //     if (subDomain) {\n// // // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // // //     }\n// // // // // // // // // //     if (parent) {\n// // // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // // //     }\n// // // // // // // // // //     return `Add Root SubDomain in: ${domain.title}`;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // // //       <div className=\"modal\">\n// // // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // // //           <button onClick={onClose}>×</button>\n// // // // // // // // // //         </div>\n\n// // // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={formData.title}\n// // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // // //               required\n// // // // // // // // // //             />\n// // // // // // // // // //           </div>\n\n// // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // // //             <textarea\n// // // // // // // // // //               value={formData.description}\n// // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // // //               rows={3}\n// // // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // // //             />\n// // // // // // // // // //           </div>\n\n// // // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // // //             <strong>Domain:</strong> {domain.title}<br />\n// // // // // // // // // //             {parent && (\n// // // // // // // // // //               <>\n// // // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // // //               </>\n// // // // // // // // // //             )}\n// // // // // // // // // //             <strong>Level:</strong> {parent ? `Level ${getLevel(parent) + 1}` : 'Root Level'}\n// // // // // // // // // //           </div>\n\n// // // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // // //               Cancel\n// // // // // // // // // //             </button>\n// // // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // // //             </button>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </form>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // Helper function to get level\n// // // // // // // // // // const getLevel = (subDomain, level = 0) => {\n// // // // // // // // // //   // This would need to be calculated based on the hierarchy\n// // // // // // // // // //   return level + 1;\n// // // // // // // // // // };\n\n// // // // // // // // // // export default SubDomainManagement;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"SubDomainManagement\");\n$RefreshReg$(_c2, \"SubDomainNode\");\n$RefreshReg$(_c3, \"SubDomainModal\");\n$RefreshReg$(_c4, \"ProjectModal\");\n$RefreshReg$(_c5, \"ProjectsListModal\");\n$RefreshReg$(_c6, \"ProjectListItem\");\n$RefreshReg$(_c7, \"ProjectEditModal\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","authService","toast","FiPlus","FiEdit","FiTrash2","FiChevronDown","FiChevronRight","FiFolder","FiFolderPlus","FiFileText","FiArrowLeft","FiMoreVertical","FiMove","FiTarget","FiEye","FiStar","FiArchive","FiList","FiX","jsxDEV","_jsxDEV","Fragment","_Fragment","SubDomainManagement","_s","console","log","domainId","navigate","domain","setDomain","subDomains","setSubDomains","loading","setLoading","showAddModal","setShowAddModal","editingSubDomain","setEditingSubDomain","selectedParent","setSelectedParent","expandedNodes","setExpandedNodes","Set","showProjectModal","setShowProjectModal","selectedSubDomainForProject","setSelectedSubDomainForProject","showProjectsModal","setShowProjectsModal","selectedSubDomainForProjectsView","setSelectedSubDomainForProjectsView","projectsInSubDomain","setProjectsInSubDomain","editingProject","setEditingProject","showProjectEditModal","setShowProjectEditModal","projectsLoading","setProjectsLoading","title","subDomainsCount","length","expandedCount","size","projectsInSubDomainCount","fetchDomainAndSubDomains","_domainsResponse$data","_domainsResponse$data2","_domainsResponse$data3","_subDomainsResponse$d","_subDomainsResponse$d2","_subDomainsResponse$d3","domainsResponse","getDomains","data","domainData","domains","find","d","id","description","projectCount","subDomainsResponse","getSubDomains","subDomainsData","firstLevelIds","map","sd","_hierarchyResponse$da","hierarchyResponse","getDomainHierarchy","hierarchyData","includes","prev","hierarchyError","error","handleAddSubDomain","parent","handleEditSubDomain","subDomain","handleAddProjectToSubDomain","children","handleViewProjectsInSubDomain","info","fetchProjectsInSubDomain","subDomainId","_response$data","response","getProjects","limit","projects","handleEditProject","project","handleDeleteProject","window","confirm","deleteProject","success","handleArchiveProject","isArchiving","isActive","action","archiveProject","archive","reason","handleToggleProjectFeatured","updateProject","isFeatured","handleDeleteSubDomain","hasChildren","hasProjects","confirmMessage","deleteSubDomain","toggleExpanded","nodeId","newExpanded","has","delete","add","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SubDomainNode","level","isExpanded","onToggleExpanded","onEdit","onDelete","onAddChild","onAddProject","onViewProjects","SubDomainModal","onClose","onSave","ProjectModal","ProjectsListModal","onArchive","onToggleFeatured","ProjectEditModal","_c","_s2","showMenu","setShowMenu","isLeaf","child","_c2","_s3","formData","setFormData","handleSubmit","e","preventDefault","requestData","trim","parentId","updateSubDomain","createSubDomain","_error$response","_error$response$data","errorMessage","message","getModalTitle","onSubmit","type","value","onChange","target","placeholder","required","minLength","maxLength","rows","disabled","_c3","_s4","abstract","specifications","learningOutcomes","generateSlug","toLowerCase","replace","projectData","createProject","_error$response2","_error$response3","_error$response3$data","checked","_c4","ProjectListItem","_c5","_s5","_project$abstract","substring","viewCount","Date","createdAt","toLocaleDateString","updatedAt","_c6","_s6","_project$subDomain","_project$subDomain$do","_project$subDomain2","_c7","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/SubDomainManagement.js"],"sourcesContent":["// src/components/domains/SubDomainManagement.js - ENHANCED WITH PROJECT VIEW/EDIT/DELETE\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport {\n  FiPlus,\n  FiEdit,\n  FiTrash2,\n  FiChevronDown,\n  FiChevronRight,\n  FiFolder,\n  FiFolderPlus,\n  FiFileText,\n  FiArrowLeft,\n  FiMoreVertical,\n  FiMove,\n  FiTarget,\n  FiEye,\n  FiStar,\n  FiArchive,\n  FiList,\n  FiX\n} from 'react-icons/fi';\n\nconst SubDomainManagement = () => {\n  console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n  const { domainId } = useParams();\n  const navigate = useNavigate();\n  \n  const [domain, setDomain] = useState(null);\n  const [subDomains, setSubDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSubDomain, setEditingSubDomain] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n  // Project creation state\n  const [showProjectModal, setShowProjectModal] = useState(false);\n  const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n  // NEW: Project management states\n  const [showProjectsModal, setShowProjectsModal] = useState(false);\n  const [selectedSubDomainForProjectsView, setSelectedSubDomainForProjectsView] = useState(null);\n  const [projectsInSubDomain, setProjectsInSubDomain] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showProjectEditModal, setShowProjectEditModal] = useState(false);\n  const [projectsLoading, setProjectsLoading] = useState(false);\n\n  console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n    domainId,\n    domain: domain?.title,\n    subDomainsCount: subDomains.length,\n    loading,\n    selectedParent: selectedParent?.title,\n    expandedCount: expandedNodes.size,\n    showProjectModal,\n    selectedSubDomainForProject: selectedSubDomainForProject?.title,\n    // NEW states\n    showProjectsModal,\n    selectedSubDomainForProjectsView: selectedSubDomainForProjectsView?.title,\n    projectsInSubDomainCount: projectsInSubDomain.length,\n    editingProject: editingProject?.title\n  });\n\n  useEffect(() => {\n    if (domainId) {\n      console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n      fetchDomainAndSubDomains();\n    }\n  }, [domainId]);\n\n  const fetchDomainAndSubDomains = async () => {\n    try {\n      setLoading(true);\n      \n      console.log('🔍 SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n      // Get domain details\n      const domainsResponse = await authService.getDomains();\n      console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n      let domainData = null;\n      const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n      if (domains.length > 0) {\n        domainData = domains.find(d => d.id == domainId);\n      }\n      \n      if (!domainData) {\n        domainData = {\n          id: domainId,\n          title: `Domain ${domainId}`,\n          description: 'Domain not found in list',\n          projectCount: 0\n        };\n      }\n      \n      setDomain(domainData);\n      \n      // Get subdomains\n      const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n      console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n      const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n      setSubDomains(subDomainsData);\n      \n      // Auto-expand first level\n      if (subDomainsData.length > 0) {\n        const firstLevelIds = subDomainsData.map(sd => sd.id);\n        setExpandedNodes(new Set(firstLevelIds));\n      }\n      \n      // Try hierarchy API as fallback\n      try {\n        const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n        const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n        if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n          setSubDomains(hierarchyData.subDomains);\n          if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n            setDomain(prev => ({ ...prev, ...hierarchyData }));\n          }\n        }\n      } catch (hierarchyError) {\n        console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n      }\n      \n    } catch (error) {\n      console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n      toast.error('Failed to fetch domain information');\n      \n      setDomain({\n        id: domainId,\n        title: `Domain ${domainId}`,\n        description: 'Error loading domain details',\n        projectCount: 0\n      });\n      setSubDomains([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddSubDomain = (parent = null) => {\n    console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n    setSelectedParent(parent);\n    setEditingSubDomain(null);\n    setShowAddModal(true);\n  };\n\n  const handleEditSubDomain = (subDomain) => {\n    console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n    setSelectedParent(null);\n    setEditingSubDomain(subDomain);\n    setShowAddModal(true);\n  };\n\n  // Handle adding project to subdomain\n  const handleAddProjectToSubDomain = (subDomain) => {\n    console.log('📝 ADD PROJECT - Starting for subdomain:', subDomain.title);\n    console.log('📝 ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n    if (subDomain.children && subDomain.children.length > 0) {\n      toast.error('Projects can only be added to leaf sub-domains (those without children)');\n      return;\n    }\n    \n    setSelectedSubDomainForProject(subDomain);\n    setShowProjectModal(true);\n  };\n\n  // NEW: Handle viewing projects in subdomain\n  const handleViewProjectsInSubDomain = async (subDomain) => {\n    console.log('👁️ VIEW PROJECTS - Starting for subdomain:', subDomain.title);\n    \n    if (subDomain.children && subDomain.children.length > 0) {\n      toast.error('Only leaf sub-domains have projects to view');\n      return;\n    }\n    \n    if (!subDomain.projectCount || subDomain.projectCount === 0) {\n      toast.info('This sub-domain has no projects yet');\n      return;\n    }\n    \n    setSelectedSubDomainForProjectsView(subDomain);\n    await fetchProjectsInSubDomain(subDomain.id);\n    setShowProjectsModal(true);\n  };\n\n  // NEW: Fetch projects for a specific subdomain\n  const fetchProjectsInSubDomain = async (subDomainId) => {\n    try {\n      setProjectsLoading(true);\n      console.log('📡 FETCH PROJECTS - For subdomain:', subDomainId);\n      \n      const response = await authService.getProjects({ \n        subDomainId: subDomainId,\n        limit: 100 // Get all projects for this subdomain\n      });\n      \n      console.log('✅ FETCH PROJECTS - Response:', response.data);\n      const projects = response.data?.projects || [];\n      setProjectsInSubDomain(projects);\n      \n    } catch (error) {\n      console.error('❌ FETCH PROJECTS - Error:', error);\n      toast.error('Failed to fetch projects');\n      setProjectsInSubDomain([]);\n    } finally {\n      setProjectsLoading(false);\n    }\n  };\n\n  // NEW: Handle editing a project\n  const handleEditProject = (project) => {\n    console.log('✏️ EDIT PROJECT - Starting for:', project.title);\n    setEditingProject(project);\n    setShowProjectEditModal(true);\n  };\n\n  // NEW: Handle deleting a project\n  const handleDeleteProject = async (project) => {\n    console.log('🗑️ DELETE PROJECT - Requesting deletion:', project.title);\n    \n    if (!window.confirm(`Are you sure you want to delete the project \"${project.title}\"?`)) {\n      console.log('❌ DELETE PROJECT - Cancelled by user');\n      return;\n    }\n\n    try {\n      console.log('📡 DELETE PROJECT - API call for:', project.id);\n      await authService.deleteProject(project.id);\n      console.log('✅ DELETE PROJECT - Success');\n      toast.success('Project deleted successfully');\n      \n      // Refresh projects list and subdomain data\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      await fetchDomainAndSubDomains(); // Refresh to update project counts\n      \n    } catch (error) {\n      console.error('❌ DELETE PROJECT - Error:', error);\n      toast.error('Failed to delete project');\n    }\n  };\n\n  // NEW: Handle archiving a project\n  const handleArchiveProject = async (project) => {\n    const isArchiving = project.isActive;\n    const action = isArchiving ? 'archive' : 'restore';\n    \n    console.log('📁 ARCHIVE PROJECT - Action:', action, 'for:', project.title);\n    \n    if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n      return;\n    }\n\n    try {\n      await authService.archiveProject(project.id, {\n        archive: isArchiving,\n        reason: `${action} via subdomain management`\n      });\n      console.log('✅ ARCHIVE PROJECT - Success');\n      toast.success(`Project ${action}d successfully`);\n      \n      // Refresh projects list\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n    } catch (error) {\n      console.error('❌ ARCHIVE PROJECT - Error:', error);\n      toast.error(`Failed to ${action} project`);\n    }\n  };\n\n  // NEW: Handle toggling featured status\n  const handleToggleProjectFeatured = async (project) => {\n    console.log('⭐ TOGGLE FEATURED - For project:', project.title);\n    \n    try {\n      await authService.updateProject(project.id, {\n        isFeatured: !project.isFeatured\n      });\n      console.log('✅ TOGGLE FEATURED - Success');\n      toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n      \n      // Refresh projects list\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n    } catch (error) {\n      console.error('❌ TOGGLE FEATURED - Error:', error);\n      toast.error('Failed to update featured status');\n    }\n  };\n\n  const handleDeleteSubDomain = async (subDomain) => {\n    const hasChildren = subDomain.children && subDomain.children.length > 0;\n    const hasProjects = subDomain.projectCount > 0;\n    \n    let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n    if (hasChildren) {\n      confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n    }\n    if (hasProjects) {\n      confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n    }\n    \n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n\n    try {\n      console.log('🗑️ SUBDOMAIN DELETE - Deleting:', subDomain.title);\n      const response = await authService.deleteSubDomain(subDomain.id);\n      toast.success('Sub-domain deleted successfully');\n      fetchDomainAndSubDomains();\n    } catch (error) {\n      console.error('❌ SUBDOMAIN DELETE - Error:', error);\n      toast.error('Failed to delete sub-domain');\n    }\n  };\n\n  const toggleExpanded = (nodeId) => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading sub-domains...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"subdomain-management\">\n      {/* Header with Breadcrumb */}\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <div className=\"breadcrumb\">\n            <button \n              className=\"breadcrumb-link\"\n              onClick={() => navigate('/domains')}\n            >\n              <FiArrowLeft />\n              Domains\n            </button>\n            <span className=\"breadcrumb-separator\">/</span>\n            <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n          </div>\n          <h1>SubDomain Management</h1>\n          <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            className=\"primary-button\" \n            onClick={() => handleAddSubDomain()}\n          >\n            <FiPlus />\n            Add Root SubDomain\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Guide */}\n      <div className=\"quick-guide\">\n        <h3>How to Build Your SubDomain Hierarchy:</h3>\n        <div className=\"guide-steps\">\n          <div className=\"guide-step\">\n            <span className=\"step-number\">1</span>\n            <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">2</span>\n            <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">3</span>\n            <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">4</span>\n            <span className=\"step-text\">Click <strong>\"Add Project\"</strong> or <strong>\"View Projects\"</strong> on leaf subdomains</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Domain Info Card */}\n      {domain && (\n        <div className=\"domain-info-card\">\n          <div className=\"domain-icon\">\n            <FiFolder />\n          </div>\n          <div className=\"domain-details\">\n            <h3>{domain.title}</h3>\n            <p>{domain.description}</p>\n            <div className=\"domain-stats\">\n              <span className=\"stat-item\">\n                <strong>{subDomains.length}</strong> root sub-domains\n              </span>\n              <span className=\"stat-item\">\n                <strong>{domain.projectCount || 0}</strong> total projects\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* SubDomain Tree */}\n      <div className=\"subdomain-tree-container\">\n        <div className=\"tree-header\">\n          <h2>SubDomain Hierarchy</h2>\n          <div className=\"tree-legend\">\n            <span className=\"legend-item\">\n              <FiFolder className=\"folder-icon\" />\n              Has children\n            </span>\n            <span className=\"legend-item\">\n              <FiTarget className=\"leaf-icon\" />\n              Leaf (can have projects)\n            </span>\n            <span className=\"legend-item\">\n              <FiFileText className=\"project-icon\" />\n              Add Project\n            </span>\n            <span className=\"legend-item\">\n              <FiList className=\"view-icon\" />\n              View Projects\n            </span>\n          </div>\n        </div>\n\n        {subDomains.length > 0 ? (\n          <div className=\"subdomain-tree\">\n            {subDomains.map((subDomain) => (\n              <SubDomainNode\n                key={subDomain.id}\n                subDomain={subDomain}\n                level={0}\n                isExpanded={expandedNodes.has(subDomain.id)}\n                onToggleExpanded={toggleExpanded}\n                onEdit={handleEditSubDomain}\n                onDelete={handleDeleteSubDomain}\n                onAddChild={handleAddSubDomain}\n                onAddProject={handleAddProjectToSubDomain}\n                onViewProjects={handleViewProjectsInSubDomain} // NEW\n                expandedNodes={expandedNodes}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"empty-tree-state\">\n            <FiFolderPlus size={64} />\n            <h3>No SubDomains Yet</h3>\n            <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n            <div className=\"empty-state-examples\">\n              <h4>Example Structure:</h4>\n              <div className=\"example-tree\">\n                <div className=\"example-item\">📂 Machine Learning</div>\n                <div className=\"example-item nested\">🎯 Deep Learning</div>\n                <div className=\"example-item nested\">🎯 Computer Vision</div>\n                <div className=\"example-item\">🎯 Data Science</div>\n              </div>\n            </div>\n            <div className=\"empty-state-actions\">\n              <button \n                className=\"primary-button large\" \n                onClick={() => handleAddSubDomain()}\n              >\n                <FiPlus />\n                Create Your First SubDomain\n              </button>\n              <p className=\"help-text\">\n                💡 Tip: Start with broad categories, then add specific subcategories as needed\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add/Edit SubDomain Modal */}\n      {showAddModal && (\n        <SubDomainModal\n          subDomain={editingSubDomain}\n          parent={selectedParent}\n          domain={domain}\n          onClose={() => {\n            setShowAddModal(false);\n            setEditingSubDomain(null);\n            setSelectedParent(null);\n          }}\n          onSave={() => {\n            setShowAddModal(false);\n            setEditingSubDomain(null);\n            setSelectedParent(null);\n            fetchDomainAndSubDomains();\n          }}\n        />\n      )}\n\n      {/* Project Creation Modal */}\n      {showProjectModal && (\n        <ProjectModal\n          subDomain={selectedSubDomainForProject}\n          domain={domain}\n          onClose={() => {\n            setShowProjectModal(false);\n            setSelectedSubDomainForProject(null);\n          }}\n          onSave={() => {\n            setShowProjectModal(false);\n            setSelectedSubDomainForProject(null);\n            toast.success('Project created successfully!');\n            fetchDomainAndSubDomains(); // Refresh to update project counts\n          }}\n        />\n      )}\n\n      {/* NEW: Projects List Modal */}\n      {showProjectsModal && (\n        <ProjectsListModal\n          subDomain={selectedSubDomainForProjectsView}\n          projects={projectsInSubDomain}\n          loading={projectsLoading}\n          onClose={() => {\n            setShowProjectsModal(false);\n            setSelectedSubDomainForProjectsView(null);\n            setProjectsInSubDomain([]);\n          }}\n          onEdit={handleEditProject}\n          onDelete={handleDeleteProject}\n          onArchive={handleArchiveProject}\n          onToggleFeatured={handleToggleProjectFeatured}\n          onAddProject={() => {\n            setShowProjectsModal(false);\n            setSelectedSubDomainForProject(selectedSubDomainForProjectsView);\n            setShowProjectModal(true);\n          }}\n        />\n      )}\n\n      {/* NEW: Project Edit Modal */}\n      {showProjectEditModal && editingProject && (\n        <ProjectEditModal\n          project={editingProject}\n          onClose={() => {\n            setShowProjectEditModal(false);\n            setEditingProject(null);\n          }}\n          onSave={() => {\n            setShowProjectEditModal(false);\n            setEditingProject(null);\n            // Refresh projects list and subdomain data\n            fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n            fetchDomainAndSubDomains();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\n// UPDATED SubDomain Node Component with View Projects functionality\nconst SubDomainNode = ({ \n  subDomain, \n  level, \n  isExpanded, \n  onToggleExpanded, \n  onEdit, \n  onDelete, \n  onAddChild,\n  onAddProject,\n  onViewProjects, // NEW\n  expandedNodes \n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const hasChildren = subDomain.children && subDomain.children.length > 0;\n  const isLeaf = !hasChildren;\n  const hasProjects = subDomain.projectCount > 0;\n\n  console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n    title: subDomain.title,\n    level,\n    hasChildren,\n    isLeaf,\n    isExpanded,\n    projectCount: subDomain.projectCount,\n    hasProjects\n  });\n\n  return (\n    <div className={`subdomain-node level-${level}`}>\n      <div className=\"node-content\">\n        <div className=\"node-main\">\n          {hasChildren ? (\n            <button \n              className=\"expand-button\"\n              onClick={() => onToggleExpanded(subDomain.id)}\n            >\n              {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n            </button>\n          ) : (\n            <div className=\"expand-placeholder\" />\n          )}\n          \n          <div className=\"node-icon\">\n            {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n          </div>\n          \n          <div className=\"node-info\">\n            <h4 className=\"node-title\">{subDomain.title}</h4>\n            <p className=\"node-description\">{subDomain.description}</p>\n            <div className=\"node-stats\">\n              {hasChildren && (\n                <span className=\"stat-badge\">\n                  {subDomain.children.length} sub-domains\n                </span>\n              )}\n              {hasProjects && (\n                <span className=\"stat-badge projects\">\n                  {subDomain.projectCount} projects\n                </span>\n              )}\n              {isLeaf && !hasProjects && (\n                <span className=\"stat-badge leaf\">\n                  Can have projects\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"node-actions\">\n          {/* NEW: View Projects button for leaf nodes with projects */}\n          {isLeaf && hasProjects && (\n            <button \n              className=\"action-button view\" \n              onClick={() => onViewProjects(subDomain)}\n              title={`View ${subDomain.projectCount} project(s) in \"${subDomain.title}\"`}\n            >\n              <FiList />\n            </button>\n          )}\n          \n          {isLeaf && (\n            <button \n              className=\"action-button project\" \n              onClick={() => onAddProject(subDomain)}\n              title={`Add project to \"${subDomain.title}\"`}\n            >\n              <FiFileText />\n            </button>\n          )}\n          \n          <button \n            className=\"action-button add\" \n            onClick={() => onAddChild(subDomain)}\n            title={`Add child subdomain under \"${subDomain.title}\"`}\n          >\n            <FiPlus />\n          </button>\n          \n          <div className=\"action-menu\">\n            <button \n              onClick={() => setShowMenu(!showMenu)}\n              title=\"More actions\"\n            >\n              <FiMoreVertical />\n            </button>\n            {showMenu && (\n              <div className=\"dropdown-menu\">\n                {/* NEW: View Projects option */}\n                {isLeaf && hasProjects && (\n                  <button \n                    onClick={() => {\n                      onViewProjects(subDomain);\n                      setShowMenu(false);\n                    }}\n                    className=\"primary-option\"\n                  >\n                    <FiList /> View Projects ({subDomain.projectCount})\n                  </button>\n                )}\n                {isLeaf && (\n                  <button \n                    onClick={() => {\n                      onAddProject(subDomain);\n                      setShowMenu(false);\n                    }}\n                    className=\"primary-option\"\n                  >\n                    <FiFileText /> Add Project\n                  </button>\n                )}\n                <button onClick={() => {\n                  onEdit(subDomain);\n                  setShowMenu(false);\n                }}>\n                  <FiEdit /> Edit SubDomain\n                </button>\n                <button onClick={() => {\n                  onAddChild(subDomain);\n                  setShowMenu(false);\n                }}>\n                  <FiPlus /> Add Child SubDomain\n                </button>\n                <button onClick={() => {\n                  onDelete(subDomain);\n                  setShowMenu(false);\n                }} className=\"danger\">\n                  <FiTrash2 /> Delete SubDomain\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* Children */}\n      {hasChildren && isExpanded && (\n        <div className=\"node-children\">\n          {subDomain.children.map((child) => (\n            <SubDomainNode\n              key={child.id}\n              subDomain={child}\n              level={level + 1}\n              isExpanded={expandedNodes.has(child.id)}\n              onToggleExpanded={onToggleExpanded}\n              onEdit={onEdit}\n              onDelete={onDelete}\n              onAddChild={onAddChild}\n              onAddProject={onAddProject}\n              onViewProjects={onViewProjects} // NEW\n              expandedNodes={expandedNodes}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// SubDomain Modal Component (unchanged)\nconst SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: subDomain?.title || '',\n    description: subDomain?.description || ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const requestData = {\n        title: formData.title.trim(),\n        description: formData.description.trim(),\n        domainId: domain.id,\n        parentId: parent?.id || null\n      };\n\n      console.log('💾 SUBDOMAIN SAVE - Request data:', requestData);\n\n      if (subDomain) {\n        const response = await authService.updateSubDomain(subDomain.id, requestData);\n        toast.success('Sub-domain updated successfully');\n      } else {\n        const response = await authService.createSubDomain(requestData);\n        toast.success('Sub-domain created successfully');\n      }\n\n      onSave();\n    } catch (error) {\n      console.error('❌ SUBDOMAIN SAVE - Error:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getModalTitle = () => {\n    if (subDomain) {\n      return `Edit SubDomain: ${subDomain.title}`;\n    }\n    if (parent) {\n      return `Add SubDomain under: ${parent.title}`;\n    }\n    return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <h2>{getModalTitle()}</h2>\n          <button onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>SubDomain Title *</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              placeholder=\"e.g., Machine Learning, Deep Learning\"\n              required\n              minLength={3}\n              maxLength={100}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Description (Optional)</label>\n            <textarea\n              value={formData.description}\n              onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              rows={3}\n              placeholder=\"Describe what this sub-domain covers...\"\n              maxLength={500}\n            />\n          </div>\n          \n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n            {parent && (\n              <>\n                <strong>Parent SubDomain:</strong> {parent.title}<br />\n              </>\n            )}\n            <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              className=\"primary-button\" \n              disabled={loading || !formData.title.trim()}\n            >\n              {loading ? 'Saving...' : 'Save SubDomain'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Project Creation Modal Component (unchanged)\nconst ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    abstract: '',\n    specifications: '',\n    learningOutcomes: '',\n    subDomainId: subDomain?.id || '',\n    isFeatured: false\n  });\n  const [loading, setLoading] = useState(false);\n\n  console.log('📝 PROJECT MODAL - Props:', {\n    subDomain: subDomain?.title,\n    domain: domain?.title,\n    formData\n  });\n\n  // Slug generation function\n  const generateSlug = (title) => {\n    return title\n      .toLowerCase()\n      .trim()\n      .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n      .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n      .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      // Don't send slug - let backend auto-generate it\n      const projectData = {\n        title: formData.title.trim(),\n        abstract: formData.abstract.trim(),\n        specifications: formData.specifications.trim(),\n        learningOutcomes: formData.learningOutcomes.trim(),\n        subDomainId: formData.subDomainId,\n        isFeatured: formData.isFeatured\n      };\n\n      console.log('💾 PROJECT SAVE - Starting API call with data:', projectData);\n      console.log('🔗 PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n      \n      const response = await authService.createProject(projectData);\n      console.log('✅ PROJECT CREATE - Response:', response.data);\n      \n      onSave();\n    } catch (error) {\n      console.error('❌ PROJECT SAVE - Error:', error);\n      console.error('❌ PROJECT SAVE - Error response:', error.response?.data);\n      \n      // Show more specific error message if available\n      const errorMessage = error.response?.data?.message || 'Failed to create project';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Add Project to: {subDomain?.title}</h2>\n          <button onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Project Title *</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              placeholder=\"Enter project title...\"\n              required\n              minLength={3}\n              maxLength={200}\n            />\n            {/* Show slug preview (for user reference only) */}\n            {formData.title && (\n              <div className=\"slug-preview\">\n                <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n            <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n            <span className=\"info-note\">\n              <FiTarget /> This is a leaf subdomain - perfect for projects!\n            </span>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Abstract *</label>\n            <textarea\n              value={formData.abstract}\n              onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n              rows={4}\n              placeholder=\"Brief description of the project...\"\n              required\n              minLength={10}\n              maxLength={1000}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Specifications *</label>\n            <textarea\n              value={formData.specifications}\n              onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n              rows={6}\n              placeholder=\"Technical specifications and requirements...\"\n              required\n              minLength={10}\n              maxLength={5000}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Learning Outcomes *</label>\n            <textarea\n              value={formData.learningOutcomes}\n              onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n              rows={4}\n              placeholder=\"What will students learn from this project...\"\n              required\n              minLength={10}\n              maxLength={2000}\n            />\n          </div>\n          \n          <div className=\"form-group checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={formData.isFeatured}\n                onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n              />\n              <FiTarget />\n              Featured Project\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              className=\"primary-button\" \n              disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n            >\n              {loading ? 'Creating...' : 'Create Project'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// NEW: Projects List Modal Component\nconst ProjectsListModal = ({ \n  subDomain, \n  projects, \n  loading, \n  onClose, \n  onEdit, \n  onDelete, \n  onArchive, \n  onToggleFeatured,\n  onAddProject \n}) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Projects in: {subDomain?.title}</h2>\n          <button onClick={onClose}>\n            <FiX />\n          </button>\n        </div>\n        \n        <div className=\"projects-list-content\">\n          <div className=\"projects-list-header\">\n            <div className=\"list-info\">\n              <p><strong>SubDomain:</strong> {subDomain?.title}</p>\n              <p><strong>Total Projects:</strong> {projects.length}</p>\n            </div>\n            <button \n              className=\"primary-button\" \n              onClick={onAddProject}\n            >\n              <FiPlus />\n              Add New Project\n            </button>\n          </div>\n          \n          {loading ? (\n            <div className=\"loading-container\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading projects...</p>\n            </div>\n          ) : projects.length > 0 ? (\n            <div className=\"projects-list\">\n              {projects.map((project) => (\n                <ProjectListItem\n                  key={project.id}\n                  project={project}\n                  onEdit={onEdit}\n                  onDelete={onDelete}\n                  onArchive={onArchive}\n                  onToggleFeatured={onToggleFeatured}\n                />\n              ))}\n            </div>\n          ) : (\n            <div className=\"empty-projects-state\">\n              <FiFileText size={48} />\n              <h3>No Projects Yet</h3>\n              <p>This subdomain doesn't have any projects yet.</p>\n              <button \n                className=\"primary-button\" \n                onClick={onAddProject}\n              >\n                <FiPlus />\n                Add First Project\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// NEW: Project List Item Component\nconst ProjectListItem = ({ \n  project, \n  onEdit, \n  onDelete, \n  onArchive, \n  onToggleFeatured \n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <div className={`project-list-item ${!project.isActive ? 'archived' : ''}`}>\n      <div className=\"project-info\">\n        <div className=\"project-title-section\">\n          <h4 className=\"project-title\">{project.title}</h4>\n          <div className=\"project-badges\">\n            {project.isFeatured && (\n              <span className=\"badge featured\">\n                <FiStar /> Featured\n              </span>\n            )}\n            {!project.isActive && (\n              <span className=\"badge archived\">Archived</span>\n            )}\n          </div>\n        </div>\n        <p className=\"project-abstract\">\n          {project.abstract?.substring(0, 150)}...\n        </p>\n        <div className=\"project-stats\">\n          <span className=\"stat\">\n            <FiEye /> {project.viewCount || 0} views\n          </span>\n          <span className=\"stat\">\n            Created: {new Date(project.createdAt).toLocaleDateString()}\n          </span>\n          <span className=\"stat\">\n            Updated: {new Date(project.updatedAt).toLocaleDateString()}\n          </span>\n        </div>\n      </div>\n      \n      <div className=\"project-actions\">\n        <button \n          className=\"action-button primary\" \n          onClick={() => onEdit(project)}\n          title=\"Edit project\"\n        >\n          <FiEdit />\n        </button>\n        \n        <div className=\"action-menu\">\n          <button \n            onClick={() => setShowMenu(!showMenu)}\n            title=\"More actions\"\n          >\n            <FiMoreVertical />\n          </button>\n          {showMenu && (\n            <div className=\"dropdown-menu\">\n              <button onClick={() => {\n                onEdit(project);\n                setShowMenu(false);\n              }}>\n                <FiEdit /> Edit Project\n              </button>\n              <button onClick={() => {\n                onToggleFeatured(project);\n                setShowMenu(false);\n              }}>\n                <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n              </button>\n              <button onClick={() => {\n                onArchive(project);\n                setShowMenu(false);\n              }}>\n                <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n              </button>\n              <button onClick={() => {\n                onDelete(project);\n                setShowMenu(false);\n              }} className=\"danger\">\n                <FiTrash2 /> Delete Project\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// NEW: Project Edit Modal Component\nconst ProjectEditModal = ({ project, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: project?.title || '',\n    abstract: project?.abstract || '',\n    specifications: project?.specifications || '',\n    learningOutcomes: project?.learningOutcomes || '',\n    isFeatured: project?.isFeatured || false\n  });\n  const [loading, setLoading] = useState(false);\n\n  console.log('📝 PROJECT EDIT MODAL - Project:', project.title);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      console.log('💾 PROJECT UPDATE - Starting with data:', formData);\n      await authService.updateProject(project.id, formData);\n      console.log('✅ PROJECT UPDATE - Success');\n      toast.success('Project updated successfully');\n      onSave();\n    } catch (error) {\n      console.error('❌ PROJECT UPDATE - Error:', error);\n      toast.error('Failed to update project');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Edit Project: {project.title}</h2>\n          <button onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Project Title</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {project.subDomain?.domain?.title || 'Unknown'}<br />\n            <strong>SubDomain:</strong> {project.subDomain?.title || 'Unknown'}<br />\n            <span className=\"info-note\">\n              💡 To move this project to a different domain/subdomain, contact your administrator\n            </span>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Abstract</label>\n            <textarea\n              value={formData.abstract}\n              onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n              rows={4}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Specifications</label>\n            <textarea\n              value={formData.specifications}\n              onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n              rows={6}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Learning Outcomes</label>\n            <textarea\n              value={formData.learningOutcomes}\n              onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n              rows={4}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={formData.isFeatured}\n                onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n              />\n              Featured Project\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n              {loading ? 'Updating...' : 'Update Project'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SubDomainManagement;\n\n\n// // src/components/domains/SubDomainManagement.js - UPDATED WITH SLUG GENERATION\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiChevronDown,\n//   FiChevronRight,\n//   FiFolder,\n//   FiFolderPlus,\n//   FiFileText,\n//   FiArrowLeft,\n//   FiMoreVertical,\n//   FiMove,\n//   FiTarget\n// } from 'react-icons/fi';\n\n// const SubDomainManagement = () => {\n//   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n//   const { domainId } = useParams();\n//   const navigate = useNavigate();\n  \n//   const [domain, setDomain] = useState(null);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingSubDomain, setEditingSubDomain] = useState(null);\n//   const [selectedParent, setSelectedParent] = useState(null);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n//   // NEW: Project creation state\n//   const [showProjectModal, setShowProjectModal] = useState(false);\n//   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n//   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n//     domainId,\n//     domain: domain?.title,\n//     subDomainsCount: subDomains.length,\n//     loading,\n//     selectedParent: selectedParent?.title,\n//     expandedCount: expandedNodes.size,\n//     showProjectModal,\n//     selectedSubDomainForProject: selectedSubDomainForProject?.title\n//   });\n\n//   useEffect(() => {\n//     if (domainId) {\n//       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n//       fetchDomainAndSubDomains();\n//     }\n//   }, [domainId]);\n\n//   const fetchDomainAndSubDomains = async () => {\n//     try {\n//       setLoading(true);\n      \n//       console.log('🔍 SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n//       // Get domain details\n//       const domainsResponse = await authService.getDomains();\n//       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n//       let domainData = null;\n//       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n//       if (domains.length > 0) {\n//         domainData = domains.find(d => d.id == domainId);\n//       }\n      \n//       if (!domainData) {\n//         domainData = {\n//           id: domainId,\n//           title: `Domain ${domainId}`,\n//           description: 'Domain not found in list',\n//           projectCount: 0\n//         };\n//       }\n      \n//       setDomain(domainData);\n      \n//       // Get subdomains\n//       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n//       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n//       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n//       setSubDomains(subDomainsData);\n      \n//       // Auto-expand first level\n//       if (subDomainsData.length > 0) {\n//         const firstLevelIds = subDomainsData.map(sd => sd.id);\n//         setExpandedNodes(new Set(firstLevelIds));\n//       }\n      \n//       // Try hierarchy API as fallback\n//       try {\n//         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n//         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n//         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n//           setSubDomains(hierarchyData.subDomains);\n//           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n//             setDomain(prev => ({ ...prev, ...hierarchyData }));\n//           }\n//         }\n//       } catch (hierarchyError) {\n//         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n//       }\n      \n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n//       toast.error('Failed to fetch domain information');\n      \n//       setDomain({\n//         id: domainId,\n//         title: `Domain ${domainId}`,\n//         description: 'Error loading domain details',\n//         projectCount: 0\n//       });\n//       setSubDomains([]);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleAddSubDomain = (parent = null) => {\n//     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n//     setSelectedParent(parent);\n//     setEditingSubDomain(null);\n//     setShowAddModal(true);\n//   };\n\n//   const handleEditSubDomain = (subDomain) => {\n//     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n//     setSelectedParent(null);\n//     setEditingSubDomain(subDomain);\n//     setShowAddModal(true);\n//   };\n\n//   // NEW: Handle adding project to subdomain\n//   const handleAddProjectToSubDomain = (subDomain) => {\n//     console.log('📝 ADD PROJECT - Starting for subdomain:', subDomain.title);\n//     console.log('📝 ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n//     if (subDomain.children && subDomain.children.length > 0) {\n//       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n//       return;\n//     }\n    \n//     setSelectedSubDomainForProject(subDomain);\n//     setShowProjectModal(true);\n//   };\n\n//   const handleDeleteSubDomain = async (subDomain) => {\n//     const hasChildren = subDomain.children && subDomain.children.length > 0;\n//     const hasProjects = subDomain.projectCount > 0;\n    \n//     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n//     if (hasChildren) {\n//       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n//     }\n//     if (hasProjects) {\n//       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n//     }\n    \n//     if (!window.confirm(confirmMessage)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('🗑️ SUBDOMAIN DELETE - Deleting:', subDomain.title);\n//       const response = await authService.deleteSubDomain(subDomain.id);\n//       toast.success('Sub-domain deleted successfully');\n//       fetchDomainAndSubDomains();\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n//       toast.error('Failed to delete sub-domain');\n//     }\n//   };\n\n//   const toggleExpanded = (nodeId) => {\n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading sub-domains...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"subdomain-management\">\n//       {/* Header with Breadcrumb */}\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <div className=\"breadcrumb\">\n//             <button \n//               className=\"breadcrumb-link\"\n//               onClick={() => navigate('/domains')}\n//             >\n//               <FiArrowLeft />\n//               Domains\n//             </button>\n//             <span className=\"breadcrumb-separator\">/</span>\n//             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n//           </div>\n//           <h1>SubDomain Management</h1>\n//           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n//         </div>\n//         <div className=\"header-actions\">\n//           <button \n//             className=\"primary-button\" \n//             onClick={() => handleAddSubDomain()}\n//           >\n//             <FiPlus />\n//             Add Root SubDomain\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Quick Guide */}\n//       <div className=\"quick-guide\">\n//         <h3>How to Build Your SubDomain Hierarchy:</h3>\n//         <div className=\"guide-steps\">\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">1</span>\n//             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">2</span>\n//             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">3</span>\n//             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">4</span>\n//             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domain Info Card */}\n//       {domain && (\n//         <div className=\"domain-info-card\">\n//           <div className=\"domain-icon\">\n//             <FiFolder />\n//           </div>\n//           <div className=\"domain-details\">\n//             <h3>{domain.title}</h3>\n//             <p>{domain.description}</p>\n//             <div className=\"domain-stats\">\n//               <span className=\"stat-item\">\n//                 <strong>{subDomains.length}</strong> root sub-domains\n//               </span>\n//               <span className=\"stat-item\">\n//                 <strong>{domain.projectCount || 0}</strong> total projects\n//               </span>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* SubDomain Tree */}\n//       <div className=\"subdomain-tree-container\">\n//         <div className=\"tree-header\">\n//           <h2>SubDomain Hierarchy</h2>\n//           <div className=\"tree-legend\">\n//             <span className=\"legend-item\">\n//               <FiFolder className=\"folder-icon\" />\n//               Has children\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiTarget className=\"leaf-icon\" />\n//               Leaf (can have projects)\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiFileText className=\"project-icon\" />\n//               Add Project\n//             </span>\n//           </div>\n//         </div>\n\n//         {subDomains.length > 0 ? (\n//           <div className=\"subdomain-tree\">\n//             {subDomains.map((subDomain) => (\n//               <SubDomainNode\n//                 key={subDomain.id}\n//                 subDomain={subDomain}\n//                 level={0}\n//                 isExpanded={expandedNodes.has(subDomain.id)}\n//                 onToggleExpanded={toggleExpanded}\n//                 onEdit={handleEditSubDomain}\n//                 onDelete={handleDeleteSubDomain}\n//                 onAddChild={handleAddSubDomain}\n//                 onAddProject={handleAddProjectToSubDomain}\n//                 expandedNodes={expandedNodes}\n//               />\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"empty-tree-state\">\n//             <FiFolderPlus size={64} />\n//             <h3>No SubDomains Yet</h3>\n//             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n//             <div className=\"empty-state-examples\">\n//               <h4>Example Structure:</h4>\n//               <div className=\"example-tree\">\n//                 <div className=\"example-item\">📂 Machine Learning</div>\n//                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n//                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n//                 <div className=\"example-item\">🎯 Data Science</div>\n//               </div>\n//             </div>\n//             <div className=\"empty-state-actions\">\n//               <button \n//                 className=\"primary-button large\" \n//                 onClick={() => handleAddSubDomain()}\n//               >\n//                 <FiPlus />\n//                 Create Your First SubDomain\n//               </button>\n//               <p className=\"help-text\">\n//                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit SubDomain Modal */}\n//       {showAddModal && (\n//         <SubDomainModal\n//           subDomain={editingSubDomain}\n//           parent={selectedParent}\n//           domain={domain}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//           }}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n\n//       {/* NEW: Project Creation Modal with SLUG GENERATION */}\n//       {showProjectModal && (\n//         <ProjectModal\n//           subDomain={selectedSubDomainForProject}\n//           domain={domain}\n//           onClose={() => {\n//             setShowProjectModal(false);\n//             setSelectedSubDomainForProject(null);\n//           }}\n//           onSave={() => {\n//             setShowProjectModal(false);\n//             setSelectedSubDomainForProject(null);\n//             toast.success('Project created successfully!');\n//             fetchDomainAndSubDomains(); // Refresh to update project counts\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // UPDATED SubDomain Node Component\n// const SubDomainNode = ({ \n//   subDomain, \n//   level, \n//   isExpanded, \n//   onToggleExpanded, \n//   onEdit, \n//   onDelete, \n//   onAddChild,\n//   onAddProject,\n//   expandedNodes \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n//   const hasChildren = subDomain.children && subDomain.children.length > 0;\n//   const isLeaf = !hasChildren;\n\n//   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n//     title: subDomain.title,\n//     level,\n//     hasChildren,\n//     isLeaf,\n//     isExpanded,\n//     projectCount: subDomain.projectCount\n//   });\n\n//   return (\n//     <div className={`subdomain-node level-${level}`}>\n//       <div className=\"node-content\">\n//         <div className=\"node-main\">\n//           {hasChildren ? (\n//             <button \n//               className=\"expand-button\"\n//               onClick={() => onToggleExpanded(subDomain.id)}\n//             >\n//               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n//             </button>\n//           ) : (\n//             <div className=\"expand-placeholder\" />\n//           )}\n          \n//           <div className=\"node-icon\">\n//             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n//           </div>\n          \n//           <div className=\"node-info\">\n//             <h4 className=\"node-title\">{subDomain.title}</h4>\n//             <p className=\"node-description\">{subDomain.description}</p>\n//             <div className=\"node-stats\">\n//               {hasChildren && (\n//                 <span className=\"stat-badge\">\n//                   {subDomain.children.length} sub-domains\n//                 </span>\n//               )}\n//               {subDomain.projectCount > 0 && (\n//                 <span className=\"stat-badge projects\">\n//                   {subDomain.projectCount} projects\n//                 </span>\n//               )}\n//               {isLeaf && (\n//                 <span className=\"stat-badge leaf\">\n//                   Can have projects\n//                 </span>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n        \n//         <div className=\"node-actions\">\n//           {isLeaf && (\n//             <button \n//               className=\"action-button project\" \n//               onClick={() => onAddProject(subDomain)}\n//               title={`Add project to \"${subDomain.title}\"`}\n//             >\n//               <FiFileText />\n//             </button>\n//           )}\n          \n//           <button \n//             className=\"action-button add\" \n//             onClick={() => onAddChild(subDomain)}\n//             title={`Add child subdomain under \"${subDomain.title}\"`}\n//           >\n//             <FiPlus />\n//           </button>\n          \n//           <div className=\"action-menu\">\n//             <button \n//               onClick={() => setShowMenu(!showMenu)}\n//               title=\"More actions\"\n//             >\n//               <FiMoreVertical />\n//             </button>\n//             {showMenu && (\n//               <div className=\"dropdown-menu\">\n//                 {isLeaf && (\n//                   <button \n//                     onClick={() => {\n//                       onAddProject(subDomain);\n//                       setShowMenu(false);\n//                     }}\n//                     className=\"primary-option\"\n//                   >\n//                     <FiFileText /> Add Project\n//                   </button>\n//                 )}\n//                 <button onClick={() => {\n//                   onEdit(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiEdit /> Edit SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onAddChild(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiPlus /> Add Child SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onDelete(subDomain);\n//                   setShowMenu(false);\n//                 }} className=\"danger\">\n//                   <FiTrash2 /> Delete SubDomain\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n      \n//       {/* Children */}\n//       {hasChildren && isExpanded && (\n//         <div className=\"node-children\">\n//           {subDomain.children.map((child) => (\n//             <SubDomainNode\n//               key={child.id}\n//               subDomain={child}\n//               level={level + 1}\n//               isExpanded={expandedNodes.has(child.id)}\n//               onToggleExpanded={onToggleExpanded}\n//               onEdit={onEdit}\n//               onDelete={onDelete}\n//               onAddChild={onAddChild}\n//               onAddProject={onAddProject}\n//               expandedNodes={expandedNodes}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Modal Component (unchanged)\n// const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: subDomain?.title || '',\n//     description: subDomain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       const requestData = {\n//         title: formData.title.trim(),\n//         description: formData.description.trim(),\n//         domainId: domain.id,\n//         parentId: parent?.id || null\n//       };\n\n//       console.log('💾 SUBDOMAIN SAVE - Request data:', requestData);\n\n//       if (subDomain) {\n//         const response = await authService.updateSubDomain(subDomain.id, requestData);\n//         toast.success('Sub-domain updated successfully');\n//       } else {\n//         const response = await authService.createSubDomain(requestData);\n//         toast.success('Sub-domain created successfully');\n//       }\n\n//       onSave();\n//     } catch (error) {\n//       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n//       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n//       toast.error(errorMessage);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const getModalTitle = () => {\n//     if (subDomain) {\n//       return `Edit SubDomain: ${subDomain.title}`;\n//     }\n//     if (parent) {\n//       return `Add SubDomain under: ${parent.title}`;\n//     }\n//     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{getModalTitle()}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>SubDomain Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"e.g., Machine Learning, Deep Learning\"\n//               required\n//               minLength={3}\n//               maxLength={100}\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//               placeholder=\"Describe what this sub-domain covers...\"\n//               maxLength={500}\n//             />\n//           </div>\n          \n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             {parent && (\n//               <>\n//                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n//               </>\n//             )}\n//             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title.trim()}\n//             >\n//               {loading ? 'Saving...' : 'Save SubDomain'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // UPDATED: Project Modal Component with SLUG GENERATION\n// const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: '',\n//     abstract: '',\n//     specifications: '',\n//     learningOutcomes: '',\n//     subDomainId: subDomain?.id || '',\n//     isFeatured: false\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('📝 PROJECT MODAL - Props:', {\n//     subDomain: subDomain?.title,\n//     domain: domain?.title,\n//     formData\n//   });\n\n//   // ✅ SLUG GENERATION FUNCTION\n//   const generateSlug = (title) => {\n//     return title\n//       .toLowerCase()\n//       .trim()\n//       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n//       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n//       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n//   };\n\n//   // const handleSubmit = async (e) => {\n//   //   e.preventDefault();\n//   //   setLoading(true);\n\n//   //   try {\n//   //     // ✅ PREPARE DATA WITHOUT SLUG (backend will auto-generate)\n//   //     const projectData = {\n//   //       title: formData.title.trim(),\n//   //       abstract: formData.abstract.trim(),\n//   //       specifications: formData.specifications.trim(),\n//   //       learningOutcomes: formData.learningOutcomes.trim(),\n//   //       subDomainId: formData.subDomainId,\n//   //       isFeatured: formData.isFeatured\n//   //       // ⚡ REMOVED SLUG - backend validation doesn't allow it\n//   //     };\n\n//   //     console.log('💾 PROJECT SAVE - Starting API call with data:', projectData);\n//   //     console.log('🔗 PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n      \n//   //     const response = await authService.createProject(projectData);\n//   //     console.log('✅ PROJECT CREATE - Response:', response.data);\n      \n//   //     onSave();\n//   //   } catch (error) {\n//   //     console.error('❌ PROJECT SAVE - Error:', error);\n//   //     console.error('❌ PROJECT SAVE - Error response:', error.response?.data);\n      \n//   //     // Show more specific error message if available\n//   //     const errorMessage = error.response?.data?.message || 'Failed to create project';\n//   //     toast.error(errorMessage);\n//   //   } finally {\n//   //     setLoading(false);\n//   //   }\n//   // };\n\n\n//   const handleSubmit = async (e) => {\n//   e.preventDefault();\n//   setLoading(true);\n\n//   try {\n//     // ✅ DON'T SEND SLUG - let backend auto-generate it\n//     const projectData = {\n//       title: formData.title.trim(),\n//       abstract: formData.abstract.trim(),\n//       specifications: formData.specifications.trim(),\n//       learningOutcomes: formData.learningOutcomes.trim(),\n//       subDomainId: formData.subDomainId,\n//       isFeatured: formData.isFeatured\n//       // ⚡ NO SLUG FIELD - backend model hook will generate it\n//     };\n\n//     console.log('💾 PROJECT SAVE - Starting API call with data:', projectData);\n//     console.log('🔗 PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n    \n//     const response = await authService.createProject(projectData);\n//     console.log('✅ PROJECT CREATE - Response:', response.data);\n    \n//     onSave();\n//   } catch (error) {\n//     console.error('❌ PROJECT SAVE - Error:', error);\n//     console.error('❌ PROJECT SAVE - Error response:', error.response?.data);\n    \n//     // Show more specific error message if available\n//     const errorMessage = error.response?.data?.message || 'Failed to create project';\n//     toast.error(errorMessage);\n//   } finally {\n//     setLoading(false);\n//   }\n// };\n\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Add Project to: {subDomain?.title}</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Project Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"Enter project title...\"\n//               required\n//               minLength={3}\n//               maxLength={200}\n//             />\n//             {/* ✅ SHOW SLUG PREVIEW (for user reference only) */}\n//             {formData.title && (\n//               <div className=\"slug-preview\">\n//                 <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n//               </div>\n//             )}\n//           </div>\n          \n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n//             <span className=\"info-note\">\n//               <FiTarget /> This is a leaf subdomain - perfect for projects!\n//             </span>\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Abstract *</label>\n//             <textarea\n//               value={formData.abstract}\n//               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n//               rows={4}\n//               placeholder=\"Brief description of the project...\"\n//               required\n//               minLength={10}\n//               maxLength={1000}\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Specifications *</label>\n//             <textarea\n//               value={formData.specifications}\n//               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n//               rows={6}\n//               placeholder=\"Technical specifications and requirements...\"\n//               required\n//               minLength={10}\n//               maxLength={5000}\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Learning Outcomes *</label>\n//             <textarea\n//               value={formData.learningOutcomes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n//               rows={4}\n//               placeholder=\"What will students learn from this project...\"\n//               required\n//               minLength={10}\n//               maxLength={2000}\n//             />\n//           </div>\n          \n//           <div className=\"form-group checkbox\">\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={formData.isFeatured}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n//               />\n//               <FiTarget />\n//               Featured Project\n//             </label>\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n//             >\n//               {loading ? 'Creating...' : 'Create Project'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SubDomainManagement;\n\n\n// // // src/components/domains/SubDomainManagement.js - UPDATED WITH SLUG GENERATION\n// // import React, { useState, useEffect } from 'react';\n// // import { useParams, useNavigate } from 'react-router-dom';\n// // import { authService } from '../../services/authService';\n// // import { toast } from 'react-toastify';\n// // import {\n// //   FiPlus,\n// //   FiEdit,\n// //   FiTrash2,\n// //   FiChevronDown,\n// //   FiChevronRight,\n// //   FiFolder,\n// //   FiFolderPlus,\n// //   FiFileText,\n// //   FiArrowLeft,\n// //   FiMoreVertical,\n// //   FiMove,\n// //   FiTarget\n// // } from 'react-icons/fi';\n\n// // const SubDomainManagement = () => {\n// //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// //   const { domainId } = useParams();\n// //   const navigate = useNavigate();\n  \n// //   const [domain, setDomain] = useState(null);\n// //   const [subDomains, setSubDomains] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [showAddModal, setShowAddModal] = useState(false);\n// //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// //   const [selectedParent, setSelectedParent] = useState(null);\n// //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// //   // NEW: Project creation state\n// //   const [showProjectModal, setShowProjectModal] = useState(false);\n// //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// //     domainId,\n// //     domain: domain?.title,\n// //     subDomainsCount: subDomains.length,\n// //     loading,\n// //     selectedParent: selectedParent?.title,\n// //     expandedCount: expandedNodes.size,\n// //     showProjectModal,\n// //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// //   });\n\n// //   useEffect(() => {\n// //     if (domainId) {\n// //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// //       fetchDomainAndSubDomains();\n// //     }\n// //   }, [domainId]);\n\n// //   const fetchDomainAndSubDomains = async () => {\n// //     try {\n// //       setLoading(true);\n      \n// //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n// //       // Get domain details\n// //       const domainsResponse = await authService.getDomains();\n// //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// //       let domainData = null;\n// //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// //       if (domains.length > 0) {\n// //         domainData = domains.find(d => d.id == domainId);\n// //       }\n      \n// //       if (!domainData) {\n// //         domainData = {\n// //           id: domainId,\n// //           title: `Domain ${domainId}`,\n// //           description: 'Domain not found in list',\n// //           projectCount: 0\n// //         };\n// //       }\n      \n// //       setDomain(domainData);\n      \n// //       // Get subdomains\n// //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// //       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// //       setSubDomains(subDomainsData);\n      \n// //       // Auto-expand first level\n// //       if (subDomainsData.length > 0) {\n// //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// //         setExpandedNodes(new Set(firstLevelIds));\n// //       }\n      \n// //       // Try hierarchy API as fallback\n// //       try {\n// //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// //           setSubDomains(hierarchyData.subDomains);\n// //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// //           }\n// //         }\n// //       } catch (hierarchyError) {\n// //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// //       }\n      \n// //     } catch (error) {\n// //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// //       toast.error('Failed to fetch domain information');\n      \n// //       setDomain({\n// //         id: domainId,\n// //         title: `Domain ${domainId}`,\n// //         description: 'Error loading domain details',\n// //         projectCount: 0\n// //       });\n// //       setSubDomains([]);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const handleAddSubDomain = (parent = null) => {\n// //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// //     setSelectedParent(parent);\n// //     setEditingSubDomain(null);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleEditSubDomain = (subDomain) => {\n// //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// //     setSelectedParent(null);\n// //     setEditingSubDomain(subDomain);\n// //     setShowAddModal(true);\n// //   };\n\n// //   // NEW: Handle adding project to subdomain\n// //   const handleAddProjectToSubDomain = (subDomain) => {\n// //     console.log('📝 ADD PROJECT - Starting for subdomain:', subDomain.title);\n// //     console.log('📝 ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n// //     if (subDomain.children && subDomain.children.length > 0) {\n// //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// //       return;\n// //     }\n    \n// //     setSelectedSubDomainForProject(subDomain);\n// //     setShowProjectModal(true);\n// //   };\n\n// //   const handleDeleteSubDomain = async (subDomain) => {\n// //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //     const hasProjects = subDomain.projectCount > 0;\n    \n// //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// //     if (hasChildren) {\n// //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// //     }\n// //     if (hasProjects) {\n// //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// //     }\n    \n// //     if (!window.confirm(confirmMessage)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       console.log('🗑️ SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// //       const response = await authService.deleteSubDomain(subDomain.id);\n// //       toast.success('Sub-domain deleted successfully');\n// //       fetchDomainAndSubDomains();\n// //     } catch (error) {\n// //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// //       toast.error('Failed to delete sub-domain');\n// //     }\n// //   };\n\n// //   const toggleExpanded = (nodeId) => {\n// //     const newExpanded = new Set(expandedNodes);\n// //     if (newExpanded.has(nodeId)) {\n// //       newExpanded.delete(nodeId);\n// //     } else {\n// //       newExpanded.add(nodeId);\n// //     }\n// //     setExpandedNodes(newExpanded);\n// //   };\n\n// //   if (loading) {\n// //     return (\n// //       <div className=\"loading-container\">\n// //         <div className=\"loading-spinner\"></div>\n// //         <p>Loading sub-domains...</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"subdomain-management\">\n// //       {/* Header with Breadcrumb */}\n// //       <div className=\"page-header\">\n// //         <div className=\"header-content\">\n// //           <div className=\"breadcrumb\">\n// //             <button \n// //               className=\"breadcrumb-link\"\n// //               onClick={() => navigate('/domains')}\n// //             >\n// //               <FiArrowLeft />\n// //               Domains\n// //             </button>\n// //             <span className=\"breadcrumb-separator\">/</span>\n// //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// //           </div>\n// //           <h1>SubDomain Management</h1>\n// //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// //         </div>\n// //         <div className=\"header-actions\">\n// //           <button \n// //             className=\"primary-button\" \n// //             onClick={() => handleAddSubDomain()}\n// //           >\n// //             <FiPlus />\n// //             Add Root SubDomain\n// //           </button>\n// //         </div>\n// //       </div>\n\n// //       {/* Quick Guide */}\n// //       <div className=\"quick-guide\">\n// //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// //         <div className=\"guide-steps\">\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">1</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">2</span>\n// //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">3</span>\n// //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">4</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Domain Info Card */}\n// //       {domain && (\n// //         <div className=\"domain-info-card\">\n// //           <div className=\"domain-icon\">\n// //             <FiFolder />\n// //           </div>\n// //           <div className=\"domain-details\">\n// //             <h3>{domain.title}</h3>\n// //             <p>{domain.description}</p>\n// //             <div className=\"domain-stats\">\n// //               <span className=\"stat-item\">\n// //                 <strong>{subDomains.length}</strong> root sub-domains\n// //               </span>\n// //               <span className=\"stat-item\">\n// //                 <strong>{domain.projectCount || 0}</strong> total projects\n// //               </span>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       )}\n\n// //       {/* SubDomain Tree */}\n// //       <div className=\"subdomain-tree-container\">\n// //         <div className=\"tree-header\">\n// //           <h2>SubDomain Hierarchy</h2>\n// //           <div className=\"tree-legend\">\n// //             <span className=\"legend-item\">\n// //               <FiFolder className=\"folder-icon\" />\n// //               Has children\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiTarget className=\"leaf-icon\" />\n// //               Leaf (can have projects)\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiFileText className=\"project-icon\" />\n// //               Add Project\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {subDomains.length > 0 ? (\n// //           <div className=\"subdomain-tree\">\n// //             {subDomains.map((subDomain) => (\n// //               <SubDomainNode\n// //                 key={subDomain.id}\n// //                 subDomain={subDomain}\n// //                 level={0}\n// //                 isExpanded={expandedNodes.has(subDomain.id)}\n// //                 onToggleExpanded={toggleExpanded}\n// //                 onEdit={handleEditSubDomain}\n// //                 onDelete={handleDeleteSubDomain}\n// //                 onAddChild={handleAddSubDomain}\n// //                 onAddProject={handleAddProjectToSubDomain}\n// //                 expandedNodes={expandedNodes}\n// //               />\n// //             ))}\n// //           </div>\n// //         ) : (\n// //           <div className=\"empty-tree-state\">\n// //             <FiFolderPlus size={64} />\n// //             <h3>No SubDomains Yet</h3>\n// //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// //             <div className=\"empty-state-examples\">\n// //               <h4>Example Structure:</h4>\n// //               <div className=\"example-tree\">\n// //                 <div className=\"example-item\">📂 Machine Learning</div>\n// //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// //                 <div className=\"example-item\">🎯 Data Science</div>\n// //               </div>\n// //             </div>\n// //             <div className=\"empty-state-actions\">\n// //               <button \n// //                 className=\"primary-button large\" \n// //                 onClick={() => handleAddSubDomain()}\n// //               >\n// //                 <FiPlus />\n// //                 Create Your First SubDomain\n// //               </button>\n// //               <p className=\"help-text\">\n// //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// //               </p>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Add/Edit SubDomain Modal */}\n// //       {showAddModal && (\n// //         <SubDomainModal\n// //           subDomain={editingSubDomain}\n// //           parent={selectedParent}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //             fetchDomainAndSubDomains();\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* NEW: Project Creation Modal with SLUG GENERATION */}\n// //       {showProjectModal && (\n// //         <ProjectModal\n// //           subDomain={selectedSubDomainForProject}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowProjectModal(false);\n// //             setSelectedSubDomainForProject(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowProjectModal(false);\n// //             setSelectedSubDomainForProject(null);\n// //             toast.success('Project created successfully!');\n// //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// //           }}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // UPDATED SubDomain Node Component\n// // const SubDomainNode = ({ \n// //   subDomain, \n// //   level, \n// //   isExpanded, \n// //   onToggleExpanded, \n// //   onEdit, \n// //   onDelete, \n// //   onAddChild,\n// //   onAddProject,\n// //   expandedNodes \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n// //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //   const isLeaf = !hasChildren;\n\n// //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// //     title: subDomain.title,\n// //     level,\n// //     hasChildren,\n// //     isLeaf,\n// //     isExpanded,\n// //     projectCount: subDomain.projectCount\n// //   });\n\n// //   return (\n// //     <div className={`subdomain-node level-${level}`}>\n// //       <div className=\"node-content\">\n// //         <div className=\"node-main\">\n// //           {hasChildren ? (\n// //             <button \n// //               className=\"expand-button\"\n// //               onClick={() => onToggleExpanded(subDomain.id)}\n// //             >\n// //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// //             </button>\n// //           ) : (\n// //             <div className=\"expand-placeholder\" />\n// //           )}\n          \n// //           <div className=\"node-icon\">\n// //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// //           </div>\n          \n// //           <div className=\"node-info\">\n// //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// //             <p className=\"node-description\">{subDomain.description}</p>\n// //             <div className=\"node-stats\">\n// //               {hasChildren && (\n// //                 <span className=\"stat-badge\">\n// //                   {subDomain.children.length} sub-domains\n// //                 </span>\n// //               )}\n// //               {subDomain.projectCount > 0 && (\n// //                 <span className=\"stat-badge projects\">\n// //                   {subDomain.projectCount} projects\n// //                 </span>\n// //               )}\n// //               {isLeaf && (\n// //                 <span className=\"stat-badge leaf\">\n// //                   Can have projects\n// //                 </span>\n// //               )}\n// //             </div>\n// //           </div>\n// //         </div>\n        \n// //         <div className=\"node-actions\">\n// //           {isLeaf && (\n// //             <button \n// //               className=\"action-button project\" \n// //               onClick={() => onAddProject(subDomain)}\n// //               title={`Add project to \"${subDomain.title}\"`}\n// //             >\n// //               <FiFileText />\n// //             </button>\n// //           )}\n          \n// //           <button \n// //             className=\"action-button add\" \n// //             onClick={() => onAddChild(subDomain)}\n// //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// //           >\n// //             <FiPlus />\n// //           </button>\n          \n// //           <div className=\"action-menu\">\n// //             <button \n// //               onClick={() => setShowMenu(!showMenu)}\n// //               title=\"More actions\"\n// //             >\n// //               <FiMoreVertical />\n// //             </button>\n// //             {showMenu && (\n// //               <div className=\"dropdown-menu\">\n// //                 {isLeaf && (\n// //                   <button \n// //                     onClick={() => {\n// //                       onAddProject(subDomain);\n// //                       setShowMenu(false);\n// //                     }}\n// //                     className=\"primary-option\"\n// //                   >\n// //                     <FiFileText /> Add Project\n// //                   </button>\n// //                 )}\n// //                 <button onClick={() => {\n// //                   onEdit(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiEdit /> Edit SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onAddChild(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiPlus /> Add Child SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onDelete(subDomain);\n// //                   setShowMenu(false);\n// //                 }} className=\"danger\">\n// //                   <FiTrash2 /> Delete SubDomain\n// //                 </button>\n// //               </div>\n// //             )}\n// //           </div>\n// //         </div>\n// //       </div>\n      \n// //       {/* Children */}\n// //       {hasChildren && isExpanded && (\n// //         <div className=\"node-children\">\n// //           {subDomain.children.map((child) => (\n// //             <SubDomainNode\n// //               key={child.id}\n// //               subDomain={child}\n// //               level={level + 1}\n// //               isExpanded={expandedNodes.has(child.id)}\n// //               onToggleExpanded={onToggleExpanded}\n// //               onEdit={onEdit}\n// //               onDelete={onDelete}\n// //               onAddChild={onAddChild}\n// //               onAddProject={onAddProject}\n// //               expandedNodes={expandedNodes}\n// //             />\n// //           ))}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // SubDomain Modal Component (unchanged)\n// // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: subDomain?.title || '',\n// //     description: subDomain?.description || ''\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       const requestData = {\n// //         title: formData.title.trim(),\n// //         description: formData.description.trim(),\n// //         domainId: domain.id,\n// //         parentId: parent?.id || null\n// //       };\n\n// //       console.log('💾 SUBDOMAIN SAVE - Request data:', requestData);\n\n// //       if (subDomain) {\n// //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// //         toast.success('Sub-domain updated successfully');\n// //       } else {\n// //         const response = await authService.createSubDomain(requestData);\n// //         toast.success('Sub-domain created successfully');\n// //       }\n\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// //       toast.error(errorMessage);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const getModalTitle = () => {\n// //     if (subDomain) {\n// //       return `Edit SubDomain: ${subDomain.title}`;\n// //     }\n// //     if (parent) {\n// //       return `Add SubDomain under: ${parent.title}`;\n// //     }\n// //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal\">\n// //         <div className=\"modal-header\">\n// //           <h2>{getModalTitle()}</h2>\n// //           <button onClick={onClose}>×</button>\n// //         </div>\n        \n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>SubDomain Title *</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// //               required\n// //               minLength={3}\n// //               maxLength={100}\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Description (Optional)</label>\n// //             <textarea\n// //               value={formData.description}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// //               rows={3}\n// //               placeholder=\"Describe what this sub-domain covers...\"\n// //               maxLength={500}\n// //             />\n// //           </div>\n          \n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             {parent && (\n// //               <>\n// //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// //               </>\n// //             )}\n// //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// //           </div>\n          \n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button \n// //               type=\"submit\" \n// //               className=\"primary-button\" \n// //               disabled={loading || !formData.title.trim()}\n// //             >\n// //               {loading ? 'Saving...' : 'Save SubDomain'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // UPDATED: Project Modal Component with SLUG GENERATION\n// // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: '',\n// //     abstract: '',\n// //     specifications: '',\n// //     learningOutcomes: '',\n// //     subDomainId: subDomain?.id || '',\n// //     isFeatured: false\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   console.log('📝 PROJECT MODAL - Props:', {\n// //     subDomain: subDomain?.title,\n// //     domain: domain?.title,\n// //     formData\n// //   });\n\n// //   // ✅ SLUG GENERATION FUNCTION\n// //   const generateSlug = (title) => {\n// //     return title\n// //       .toLowerCase()\n// //       .trim()\n// //       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n// //       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n// //       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       // ✅ GENERATE SLUG FROM TITLE\n// //       const slug = generateSlug(formData.title);\n      \n// //       // ✅ PREPARE COMPLETE DATA WITH SLUG\n// //       const projectData = {\n// //         ...formData,\n// //         slug: slug, // ⚡ ADD THE GENERATED SLUG HERE\n// //         title: formData.title.trim(),\n// //         abstract: formData.abstract.trim(),\n// //         specifications: formData.specifications.trim(),\n// //         learningOutcomes: formData.learningOutcomes.trim()\n// //       };\n\n// //       console.log('💾 PROJECT SAVE - Starting API call with data:', projectData);\n// //       console.log('🔗 PROJECT SAVE - Generated slug:', slug);\n      \n// //       const response = await authService.createProject(projectData);\n// //       console.log('✅ PROJECT CREATE - Response:', response.data);\n      \n// //       onSave();\n// //     } catch (error) {\n// //       console.error('❌ PROJECT SAVE - Error:', error);\n// //       console.error('❌ PROJECT SAVE - Error response:', error.response?.data);\n      \n// //       // Show more specific error message if available\n// //       const errorMessage = error.response?.data?.message || 'Failed to create project';\n// //       toast.error(errorMessage);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>Add Project to: {subDomain?.title}</h2>\n// //           <button onClick={onClose}>×</button>\n// //         </div>\n        \n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>Project Title *</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"Enter project title...\"\n// //               required\n// //               minLength={3}\n// //               maxLength={200}\n// //             />\n// //             {/* ✅ SHOW GENERATED SLUG PREVIEW */}\n// //             {formData.title && (\n// //               <div className=\"slug-preview\">\n// //                 <small>URL Slug: <code>{generateSlug(formData.title)}</code></small>\n// //               </div>\n// //             )}\n// //           </div>\n          \n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// //             <span className=\"info-note\">\n// //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// //             </span>\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Abstract *</label>\n// //             <textarea\n// //               value={formData.abstract}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// //               rows={4}\n// //               placeholder=\"Brief description of the project...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={1000}\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Specifications *</label>\n// //             <textarea\n// //               value={formData.specifications}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// //               rows={6}\n// //               placeholder=\"Technical specifications and requirements...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={5000}\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Learning Outcomes *</label>\n// //             <textarea\n// //               value={formData.learningOutcomes}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// //               rows={4}\n// //               placeholder=\"What will students learn from this project...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={2000}\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group checkbox\">\n// //             <label>\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={formData.isFeatured}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// //               />\n// //               <FiTarget />\n// //               Featured Project\n// //             </label>\n// //           </div>\n          \n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button \n// //               type=\"submit\" \n// //               className=\"primary-button\" \n// //               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n// //             >\n// //               {loading ? 'Creating...' : 'Create Project'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SubDomainManagement;\n\n\n\n// // // // src/components/domains/SubDomainManagement.js - UPDATED WITH ADD PROJECT FEATURE\n// // // import React, { useState, useEffect } from 'react';\n// // // import { useParams, useNavigate } from 'react-router-dom';\n// // // import { authService } from '../../services/authService';\n// // // import { toast } from 'react-toastify';\n// // // import {\n// // //   FiPlus,\n// // //   FiEdit,\n// // //   FiTrash2,\n// // //   FiChevronDown,\n// // //   FiChevronRight,\n// // //   FiFolder,\n// // //   FiFolderPlus,\n// // //   FiFileText,\n// // //   FiArrowLeft,\n// // //   FiMoreVertical,\n// // //   FiMove,\n// // //   FiTarget\n// // // } from 'react-icons/fi';\n\n// // // const SubDomainManagement = () => {\n// // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // //   const { domainId } = useParams();\n// // //   const navigate = useNavigate();\n  \n// // //   const [domain, setDomain] = useState(null);\n// // //   const [subDomains, setSubDomains] = useState([]);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [showAddModal, setShowAddModal] = useState(false);\n// // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // //   const [selectedParent, setSelectedParent] = useState(null);\n// // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // //   // NEW: Project creation state\n// // //   const [showProjectModal, setShowProjectModal] = useState(false);\n// // //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // //     domainId,\n// // //     domain: domain?.title,\n// // //     subDomainsCount: subDomains.length,\n// // //     loading,\n// // //     selectedParent: selectedParent?.title,\n// // //     expandedCount: expandedNodes.size,\n// // //     showProjectModal,\n// // //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// // //   });\n\n// // //   useEffect(() => {\n// // //     if (domainId) {\n// // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // //       fetchDomainAndSubDomains();\n// // //     }\n// // //   }, [domainId]);\n\n// // //   const fetchDomainAndSubDomains = async () => {\n// // //     try {\n// // //       setLoading(true);\n      \n// // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n// // //       // Get domain details\n// // //       const domainsResponse = await authService.getDomains();\n// // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // //       let domainData = null;\n// // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // //       if (domains.length > 0) {\n// // //         domainData = domains.find(d => d.id == domainId);\n// // //       }\n      \n// // //       if (!domainData) {\n// // //         domainData = {\n// // //           id: domainId,\n// // //           title: `Domain ${domainId}`,\n// // //           description: 'Domain not found in list',\n// // //           projectCount: 0\n// // //         };\n// // //       }\n      \n// // //       setDomain(domainData);\n      \n// // //       // Get subdomains\n// // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // //       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // //       setSubDomains(subDomainsData);\n      \n// // //       // Auto-expand first level\n// // //       if (subDomainsData.length > 0) {\n// // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // //         setExpandedNodes(new Set(firstLevelIds));\n// // //       }\n      \n// // //       // Try hierarchy API as fallback\n// // //       try {\n// // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // //           setSubDomains(hierarchyData.subDomains);\n// // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // //           }\n// // //         }\n// // //       } catch (hierarchyError) {\n// // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// // //       }\n      \n// // //     } catch (error) {\n// // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // //       toast.error('Failed to fetch domain information');\n      \n// // //       setDomain({\n// // //         id: domainId,\n// // //         title: `Domain ${domainId}`,\n// // //         description: 'Error loading domain details',\n// // //         projectCount: 0\n// // //       });\n// // //       setSubDomains([]);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const handleAddSubDomain = (parent = null) => {\n// // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// // //     setSelectedParent(parent);\n// // //     setEditingSubDomain(null);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   const handleEditSubDomain = (subDomain) => {\n// // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// // //     setSelectedParent(null);\n// // //     setEditingSubDomain(subDomain);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   // NEW: Handle adding project to subdomain\n// // //   const handleAddProjectToSubDomain = (subDomain) => {\n// // //     console.log('📝 ADD PROJECT - Starting for subdomain:', subDomain.title);\n// // //     console.log('📝 ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n// // //     if (subDomain.children && subDomain.children.length > 0) {\n// // //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// // //       return;\n// // //     }\n    \n// // //     setSelectedSubDomainForProject(subDomain);\n// // //     setShowProjectModal(true);\n// // //   };\n\n// // //   const handleDeleteSubDomain = async (subDomain) => {\n// // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // //     if (hasChildren) {\n// // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // //     }\n// // //     if (hasProjects) {\n// // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // //     }\n    \n// // //     if (!window.confirm(confirmMessage)) {\n// // //       return;\n// // //     }\n\n// // //     try {\n// // //       console.log('🗑️ SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// // //       const response = await authService.deleteSubDomain(subDomain.id);\n// // //       toast.success('Sub-domain deleted successfully');\n// // //       fetchDomainAndSubDomains();\n// // //     } catch (error) {\n// // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // //       toast.error('Failed to delete sub-domain');\n// // //     }\n// // //   };\n\n// // //   const toggleExpanded = (nodeId) => {\n// // //     const newExpanded = new Set(expandedNodes);\n// // //     if (newExpanded.has(nodeId)) {\n// // //       newExpanded.delete(nodeId);\n// // //     } else {\n// // //       newExpanded.add(nodeId);\n// // //     }\n// // //     setExpandedNodes(newExpanded);\n// // //   };\n\n// // //   if (loading) {\n// // //     return (\n// // //       <div className=\"loading-container\">\n// // //         <div className=\"loading-spinner\"></div>\n// // //         <p>Loading sub-domains...</p>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <div className=\"subdomain-management\">\n// // //       {/* Header with Breadcrumb */}\n// // //       <div className=\"page-header\">\n// // //         <div className=\"header-content\">\n// // //           <div className=\"breadcrumb\">\n// // //             <button \n// // //               className=\"breadcrumb-link\"\n// // //               onClick={() => navigate('/domains')}\n// // //             >\n// // //               <FiArrowLeft />\n// // //               Domains\n// // //             </button>\n// // //             <span className=\"breadcrumb-separator\">/</span>\n// // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // //           </div>\n// // //           <h1>SubDomain Management</h1>\n// // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // //         </div>\n// // //         <div className=\"header-actions\">\n// // //           <button \n// // //             className=\"primary-button\" \n// // //             onClick={() => handleAddSubDomain()}\n// // //           >\n// // //             <FiPlus />\n// // //             Add Root SubDomain\n// // //           </button>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Quick Guide */}\n// // //       <div className=\"quick-guide\">\n// // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // //         <div className=\"guide-steps\">\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">1</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">2</span>\n// // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">3</span>\n// // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">4</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Domain Info Card */}\n// // //       {domain && (\n// // //         <div className=\"domain-info-card\">\n// // //           <div className=\"domain-icon\">\n// // //             <FiFolder />\n// // //           </div>\n// // //           <div className=\"domain-details\">\n// // //             <h3>{domain.title}</h3>\n// // //             <p>{domain.description}</p>\n// // //             <div className=\"domain-stats\">\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // //               </span>\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // //               </span>\n// // //             </div>\n// // //           </div>\n// // //         </div>\n// // //       )}\n\n// // //       {/* SubDomain Tree */}\n// // //       <div className=\"subdomain-tree-container\">\n// // //         <div className=\"tree-header\">\n// // //           <h2>SubDomain Hierarchy</h2>\n// // //           <div className=\"tree-legend\">\n// // //             <span className=\"legend-item\">\n// // //               <FiFolder className=\"folder-icon\" />\n// // //               Has children\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiTarget className=\"leaf-icon\" />\n// // //               Leaf (can have projects)\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiFileText className=\"project-icon\" />\n// // //               Add Project\n// // //             </span>\n// // //           </div>\n// // //         </div>\n\n// // //         {subDomains.length > 0 ? (\n// // //           <div className=\"subdomain-tree\">\n// // //             {subDomains.map((subDomain) => (\n// // //               <SubDomainNode\n// // //                 key={subDomain.id}\n// // //                 subDomain={subDomain}\n// // //                 level={0}\n// // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // //                 onToggleExpanded={toggleExpanded}\n// // //                 onEdit={handleEditSubDomain}\n// // //                 onDelete={handleDeleteSubDomain}\n// // //                 onAddChild={handleAddSubDomain}\n// // //                 onAddProject={handleAddProjectToSubDomain} // NEW\n// // //                 expandedNodes={expandedNodes}\n// // //               />\n// // //             ))}\n// // //           </div>\n// // //         ) : (\n// // //           <div className=\"empty-tree-state\">\n// // //             <FiFolderPlus size={64} />\n// // //             <h3>No SubDomains Yet</h3>\n// // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // //             <div className=\"empty-state-examples\">\n// // //               <h4>Example Structure:</h4>\n// // //               <div className=\"example-tree\">\n// // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // //               </div>\n// // //             </div>\n// // //             <div className=\"empty-state-actions\">\n// // //               <button \n// // //                 className=\"primary-button large\" \n// // //                 onClick={() => handleAddSubDomain()}\n// // //               >\n// // //                 <FiPlus />\n// // //                 Create Your First SubDomain\n// // //               </button>\n// // //               <p className=\"help-text\">\n// // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // //               </p>\n// // //             </div>\n// // //           </div>\n// // //         )}\n// // //       </div>\n\n// // //       {/* Add/Edit SubDomain Modal */}\n// // //       {showAddModal && (\n// // //         <SubDomainModal\n// // //           subDomain={editingSubDomain}\n// // //           parent={selectedParent}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //             fetchDomainAndSubDomains();\n// // //           }}\n// // //         />\n// // //       )}\n\n// // //       {/* NEW: Project Creation Modal */}\n// // //       {showProjectModal && (\n// // //         <ProjectModal\n// // //           subDomain={selectedSubDomainForProject}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowProjectModal(false);\n// // //             setSelectedSubDomainForProject(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowProjectModal(false);\n// // //             setSelectedSubDomainForProject(null);\n// // //             toast.success('Project created successfully!');\n// // //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// // //           }}\n// // //         />\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // UPDATED SubDomain Node Component\n// // // const SubDomainNode = ({ \n// // //   subDomain, \n// // //   level, \n// // //   isExpanded, \n// // //   onToggleExpanded, \n// // //   onEdit, \n// // //   onDelete, \n// // //   onAddChild,\n// // //   onAddProject, // NEW\n// // //   expandedNodes \n// // // }) => {\n// // //   const [showMenu, setShowMenu] = useState(false);\n// // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //   const isLeaf = !hasChildren;\n\n// // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // //     title: subDomain.title,\n// // //     level,\n// // //     hasChildren,\n// // //     isLeaf,\n// // //     isExpanded,\n// // //     projectCount: subDomain.projectCount\n// // //   });\n\n// // //   return (\n// // //     <div className={`subdomain-node level-${level}`}>\n// // //       <div className=\"node-content\">\n// // //         <div className=\"node-main\">\n// // //           {hasChildren ? (\n// // //             <button \n// // //               className=\"expand-button\"\n// // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // //             >\n// // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // //             </button>\n// // //           ) : (\n// // //             <div className=\"expand-placeholder\" />\n// // //           )}\n          \n// // //           <div className=\"node-icon\">\n// // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // //           </div>\n          \n// // //           <div className=\"node-info\">\n// // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // //             <p className=\"node-description\">{subDomain.description}</p>\n// // //             <div className=\"node-stats\">\n// // //               {hasChildren && (\n// // //                 <span className=\"stat-badge\">\n// // //                   {subDomain.children.length} sub-domains\n// // //                 </span>\n// // //               )}\n// // //               {subDomain.projectCount > 0 && (\n// // //                 <span className=\"stat-badge projects\">\n// // //                   {subDomain.projectCount} projects\n// // //                 </span>\n// // //               )}\n// // //               {isLeaf && (\n// // //                 <span className=\"stat-badge leaf\">\n// // //                   Can have projects\n// // //                 </span>\n// // //               )}\n// // //             </div>\n// // //           </div>\n// // //         </div>\n        \n// // //         <div className=\"node-actions\">\n// // //           {/* NEW: Add Project Button for Leaf Subdomains */}\n// // //           {isLeaf && (\n// // //             <button \n// // //               className=\"action-button project\" \n// // //               onClick={() => onAddProject(subDomain)}\n// // //               title={`Add project to \"${subDomain.title}\"`}\n// // //             >\n// // //               <FiFileText />\n// // //             </button>\n// // //           )}\n          \n// // //           <button \n// // //             className=\"action-button add\" \n// // //             onClick={() => onAddChild(subDomain)}\n// // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // //           >\n// // //             <FiPlus />\n// // //           </button>\n          \n// // //           <div className=\"action-menu\">\n// // //             <button \n// // //               onClick={() => setShowMenu(!showMenu)}\n// // //               title=\"More actions\"\n// // //             >\n// // //               <FiMoreVertical />\n// // //             </button>\n// // //             {showMenu && (\n// // //               <div className=\"dropdown-menu\">\n// // //                 {/* NEW: Add Project Option for Leaf Subdomains */}\n// // //                 {isLeaf && (\n// // //                   <button \n// // //                     onClick={() => {\n// // //                       onAddProject(subDomain);\n// // //                       setShowMenu(false);\n// // //                     }}\n// // //                     className=\"primary-option\"\n// // //                   >\n// // //                     <FiFileText /> Add Project\n// // //                   </button>\n// // //                 )}\n// // //                 <button onClick={() => {\n// // //                   onEdit(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiEdit /> Edit SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onAddChild(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiPlus /> Add Child SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onDelete(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }} className=\"danger\">\n// // //                   <FiTrash2 /> Delete SubDomain\n// // //                 </button>\n// // //               </div>\n// // //             )}\n// // //           </div>\n// // //         </div>\n// // //       </div>\n      \n// // //       {/* Children */}\n// // //       {hasChildren && isExpanded && (\n// // //         <div className=\"node-children\">\n// // //           {subDomain.children.map((child) => (\n// // //             <SubDomainNode\n// // //               key={child.id}\n// // //               subDomain={child}\n// // //               level={level + 1}\n// // //               isExpanded={expandedNodes.has(child.id)}\n// // //               onToggleExpanded={onToggleExpanded}\n// // //               onEdit={onEdit}\n// // //               onDelete={onDelete}\n// // //               onAddChild={onAddChild}\n// // //               onAddProject={onAddProject} // NEW\n// // //               expandedNodes={expandedNodes}\n// // //             />\n// // //           ))}\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // SubDomain Modal Component (unchanged)\n// // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: subDomain?.title || '',\n// // //     description: subDomain?.description || ''\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setLoading(true);\n\n// // //     try {\n// // //       const requestData = {\n// // //         title: formData.title.trim(),\n// // //         description: formData.description.trim(),\n// // //         domainId: domain.id,\n// // //         parentId: parent?.id || null\n// // //       };\n\n// // //       console.log('💾 SUBDOMAIN SAVE - Request data:', requestData);\n\n// // //       if (subDomain) {\n// // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // //         toast.success('Sub-domain updated successfully');\n// // //       } else {\n// // //         const response = await authService.createSubDomain(requestData);\n// // //         toast.success('Sub-domain created successfully');\n// // //       }\n\n// // //       onSave();\n// // //     } catch (error) {\n// // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// // //       toast.error(errorMessage);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const getModalTitle = () => {\n// // //     if (subDomain) {\n// // //       return `Edit SubDomain: ${subDomain.title}`;\n// // //     }\n// // //     if (parent) {\n// // //       return `Add SubDomain under: ${parent.title}`;\n// // //     }\n// // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // //   };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>{getModalTitle()}</h2>\n// // //           <button onClick={onClose}>×</button>\n// // //         </div>\n        \n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>SubDomain Title *</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // //               required\n// // //               minLength={3}\n// // //               maxLength={100}\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Description (Optional)</label>\n// // //             <textarea\n// // //               value={formData.description}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // //               rows={3}\n// // //               placeholder=\"Describe what this sub-domain covers...\"\n// // //               maxLength={500}\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             {parent && (\n// // //               <>\n// // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // //               </>\n// // //             )}\n// // //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// // //           </div>\n          \n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button \n// // //               type=\"submit\" \n// // //               className=\"primary-button\" \n// // //               disabled={loading || !formData.title.trim()}\n// // //             >\n// // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // NEW: Project Modal Component for SubDomain context\n// // // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: '',\n// // //     abstract: '',\n// // //     specifications: '',\n// // //     learningOutcomes: '',\n// // //     subDomainId: subDomain?.id || '',\n// // //     isFeatured: false\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   console.log('📝 PROJECT MODAL - Props:', {\n// // //     subDomain: subDomain?.title,\n// // //     domain: domain?.title,\n// // //     formData\n// // //   });\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setLoading(true);\n\n// // //     try {\n// // //       console.log('💾 PROJECT SAVE - Starting API call with data:', formData);\n      \n// // //       const response = await authService.createProject(formData);\n// // //       console.log('✅ PROJECT CREATE - Response:', response.data);\n      \n// // //       onSave();\n// // //     } catch (error) {\n// // //       console.error('❌ PROJECT SAVE - Error:', error);\n// // //       toast.error('Failed to create project');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal large\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>Add Project to: {subDomain?.title}</h2>\n// // //           <button onClick={onClose}>×</button>\n// // //         </div>\n        \n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>Project Title *</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"Enter project title...\"\n// // //               required\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// // //             <span className=\"info-note\">\n// // //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// // //             </span>\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Abstract *</label>\n// // //             <textarea\n// // //               value={formData.abstract}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// // //               rows={4}\n// // //               placeholder=\"Brief description of the project...\"\n// // //               required\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Specifications *</label>\n// // //             <textarea\n// // //               value={formData.specifications}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// // //               rows={6}\n// // //               placeholder=\"Technical specifications and requirements...\"\n// // //               required\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Learning Outcomes *</label>\n// // //             <textarea\n// // //               value={formData.learningOutcomes}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// // //               rows={4}\n// // //               placeholder=\"What will students learn from this project...\"\n// // //               required\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"form-group checkbox\">\n// // //             <label>\n// // //               <input\n// // //                 type=\"checkbox\"\n// // //                 checked={formData.isFeatured}\n// // //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// // //               />\n// // //               <FiTarget />\n// // //               Featured Project\n// // //             </label>\n// // //           </div>\n          \n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button \n// // //               type=\"submit\" \n// // //               className=\"primary-button\" \n// // //               disabled={loading || !formData.title || !formData.abstract}\n// // //             >\n// // //               {loading ? 'Creating...' : 'Create Project'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SubDomainManagement;\n\n\n// // // // // src/components/domains/SubDomainManagement.js - CORRECTED VERSION\n// // // // import React, { useState, useEffect } from 'react';\n// // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // import { authService } from '../../services/authService';\n// // // // import { toast } from 'react-toastify';\n// // // // import {\n// // // //   FiPlus,\n// // // //   FiEdit,\n// // // //   FiTrash2,\n// // // //   FiChevronDown,\n// // // //   FiChevronRight,\n// // // //   FiFolder,\n// // // //   FiFolderPlus,\n// // // //   FiFileText,\n// // // //   FiArrowLeft,\n// // // //   FiMoreVertical,\n// // // //   FiMove,\n// // // //   FiTarget\n// // // // } from 'react-icons/fi';\n\n// // // // const SubDomainManagement = () => {\n// // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // //   const { domainId } = useParams();\n// // // //   const navigate = useNavigate();\n  \n// // // //   const [domain, setDomain] = useState(null);\n// // // //   const [subDomains, setSubDomains] = useState([]);\n// // // //   const [loading, setLoading] = useState(true);\n// // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // //     domainId,\n// // // //     domain: domain?.title,\n// // // //     subDomainsCount: subDomains.length,\n// // // //     loading,\n// // // //     selectedParent: selectedParent?.title,\n// // // //     expandedCount: expandedNodes.size\n// // // //   });\n\n// // // //   useEffect(() => {\n// // // //     if (domainId) {\n// // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // //       fetchDomainAndSubDomains();\n// // // //     }\n// // // //   }, [domainId]);\n\n// // // //   const fetchDomainAndSubDomains = async () => {\n// // // //     try {\n// // // //       setLoading(true);\n      \n// // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // //       // ✅ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n// // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains (no params)');\n// // // //       const domainsResponse = await authService.getDomains();\n// // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // //       // Extract specific domain from response\n// // // //       let domainData = null;\n// // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // //       if (domains.length > 0) {\n// // // //         domainData = domains.find(d => d.id == domainId);\n// // // //       }\n      \n// // // //       console.log('🎯 SUBDOMAIN FETCH - Found domain:', domainData);\n      \n// // // //       // If we don't have domain data, create a placeholder\n// // // //       if (!domainData) {\n// // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // //         domainData = {\n// // // //           id: domainId,\n// // // //           title: `Domain ${domainId}`,\n// // // //           description: 'Domain not found in list',\n// // // //           projectCount: 0\n// // // //         };\n// // // //       }\n      \n// // // //       setDomain(domainData);\n      \n// // // //       // ✅ CORRECTED: Get subdomains using the correct API\n// // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n// // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // //       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n      \n// // // //       setSubDomains(subDomainsData);\n      \n// // // //       // Auto-expand first level\n// // // //       if (subDomainsData.length > 0) {\n// // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // //         console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // //       }\n      \n// // // //       // ✅ ALTERNATIVE: Try hierarchy API as fallback\n// // // //       try {\n// // // //         console.log('🌐 SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n// // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // //           console.log('🎯 SUBDOMAIN FETCH - Using hierarchy data instead');\n// // // //           setSubDomains(hierarchyData.subDomains);\n          \n// // // //           // Update domain info if more complete\n// // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // //           }\n// // // //         }\n// // // //       } catch (hierarchyError) {\n// // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n// // // //       }\n      \n// // // //     } catch (error) {\n// // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // //       toast.error('Failed to fetch domain information');\n      \n// // // //       // Create fallback domain\n// // // //       setDomain({\n// // // //         id: domainId,\n// // // //         title: `Domain ${domainId}`,\n// // // //         description: 'Error loading domain details',\n// // // //         projectCount: 0\n// // // //       });\n// // // //       setSubDomains([]);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // //     }\n// // // //   };\n\n// // // //   const handleAddSubDomain = (parent = null) => {\n// // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // //     setSelectedParent(parent);\n// // // //     setEditingSubDomain(null);\n// // // //     setShowAddModal(true);\n    \n// // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // //       showAddModal: true, \n// // // //       selectedParent: parent?.title,\n// // // //       editingSubDomain: null \n// // // //     });\n// // // //   };\n\n// // // //   const handleEditSubDomain = (subDomain) => {\n// // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // //     setSelectedParent(null);\n// // // //     setEditingSubDomain(subDomain);\n// // // //     setShowAddModal(true);\n// // // //   };\n\n// // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // //     if (hasChildren) {\n// // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // //     }\n// // // //     if (hasProjects) {\n// // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // //     }\n    \n// // // //     if (!window.confirm(confirmMessage)) {\n// // // //       return;\n// // // //     }\n\n// // // //     try {\n// // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // //       toast.success('Sub-domain deleted successfully');\n// // // //       fetchDomainAndSubDomains();\n// // // //     } catch (error) {\n// // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // //       toast.error('Failed to delete sub-domain');\n// // // //     }\n// // // //   };\n\n// // // //   const toggleExpanded = (nodeId) => {\n// // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // //     const newExpanded = new Set(expandedNodes);\n// // // //     if (newExpanded.has(nodeId)) {\n// // // //       newExpanded.delete(nodeId);\n// // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // //     } else {\n// // // //       newExpanded.add(nodeId);\n// // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // //     }\n// // // //     setExpandedNodes(newExpanded);\n// // // //   };\n\n// // // //   if (loading) {\n// // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // //     return (\n// // // //       <div className=\"loading-container\">\n// // // //         <div className=\"loading-spinner\"></div>\n// // // //         <p>Loading sub-domains...</p>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // //   return (\n// // // //     <div className=\"subdomain-management\">\n// // // //       {/* Header with Breadcrumb */}\n// // // //       <div className=\"page-header\">\n// // // //         <div className=\"header-content\">\n// // // //           <div className=\"breadcrumb\">\n// // // //             <button \n// // // //               className=\"breadcrumb-link\"\n// // // //               onClick={() => navigate('/domains')}\n// // // //             >\n// // // //               <FiArrowLeft />\n// // // //               Domains\n// // // //             </button>\n// // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // //           </div>\n// // // //           <h1>SubDomain Management</h1>\n// // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // //         </div>\n// // // //         <div className=\"header-actions\">\n// // // //           <button \n// // // //             className=\"primary-button\" \n// // // //             onClick={() => handleAddSubDomain()}\n// // // //           >\n// // // //             <FiPlus />\n// // // //             Add Root SubDomain\n// // // //           </button>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Quick Guide */}\n// // // //       <div className=\"quick-guide\">\n// // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // //         <div className=\"guide-steps\">\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">1</span>\n// // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">2</span>\n// // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">3</span>\n// // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Domain Info Card */}\n// // // //       {domain && (\n// // // //         <div className=\"domain-info-card\">\n// // // //           <div className=\"domain-icon\">\n// // // //             <FiFolder />\n// // // //           </div>\n// // // //           <div className=\"domain-details\">\n// // // //             <h3>{domain.title}</h3>\n// // // //             <p>{domain.description}</p>\n// // // //             <div className=\"domain-stats\">\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // //               </span>\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // //               </span>\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* SubDomain Tree */}\n// // // //       <div className=\"subdomain-tree-container\">\n// // // //         <div className=\"tree-header\">\n// // // //           <h2>SubDomain Hierarchy</h2>\n// // // //           <div className=\"tree-legend\">\n// // // //             <span className=\"legend-item\">\n// // // //               <FiFolder className=\"folder-icon\" />\n// // // //               Has children\n// // // //             </span>\n// // // //             <span className=\"legend-item\">\n// // // //               <FiTarget className=\"leaf-icon\" />\n// // // //               Leaf (can have projects)\n// // // //             </span>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         {subDomains.length > 0 ? (\n// // // //           <div className=\"subdomain-tree\">\n// // // //             {subDomains.map((subDomain) => (\n// // // //               <SubDomainNode\n// // // //                 key={subDomain.id}\n// // // //                 subDomain={subDomain}\n// // // //                 level={0}\n// // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // //                 onToggleExpanded={toggleExpanded}\n// // // //                 onEdit={handleEditSubDomain}\n// // // //                 onDelete={handleDeleteSubDomain}\n// // // //                 onAddChild={handleAddSubDomain}\n// // // //                 expandedNodes={expandedNodes}\n// // // //               />\n// // // //             ))}\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div className=\"empty-tree-state\">\n// // // //             <FiFolderPlus size={64} />\n// // // //             <h3>No SubDomains Yet</h3>\n// // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // //             <div className=\"empty-state-examples\">\n// // // //               <h4>Example Structure:</h4>\n// // // //               <div className=\"example-tree\">\n// // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // //               </div>\n// // // //             </div>\n// // // //             <div className=\"empty-state-actions\">\n// // // //               <button \n// // // //                 className=\"primary-button large\" \n// // // //                 onClick={() => handleAddSubDomain()}\n// // // //               >\n// // // //                 <FiPlus />\n// // // //                 Create Your First SubDomain\n// // // //               </button>\n// // // //               <p className=\"help-text\">\n// // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // //               </p>\n// // // //             </div>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n\n// // // //       {/* Add/Edit Modal */}\n// // // //       {showAddModal && (\n// // // //         <SubDomainModal\n// // // //           subDomain={editingSubDomain}\n// // // //           parent={selectedParent}\n// // // //           domain={domain}\n// // // //           onClose={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //           }}\n// // // //           onSave={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //             fetchDomainAndSubDomains();\n// // // //           }}\n// // // //         />\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Node Component\n// // // // const SubDomainNode = ({ \n// // // //   subDomain, \n// // // //   level, \n// // // //   isExpanded, \n// // // //   onToggleExpanded, \n// // // //   onEdit, \n// // // //   onDelete, \n// // // //   onAddChild,\n// // // //   expandedNodes \n// // // // }) => {\n// // // //   const [showMenu, setShowMenu] = useState(false);\n// // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //   const isLeaf = !hasChildren;\n\n// // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // //     title: subDomain.title,\n// // // //     level,\n// // // //     hasChildren,\n// // // //     isLeaf,\n// // // //     isExpanded,\n// // // //     projectCount: subDomain.projectCount\n// // // //   });\n\n// // // //   return (\n// // // //     <div className={`subdomain-node level-${level}`}>\n// // // //       <div className=\"node-content\">\n// // // //         <div className=\"node-main\">\n// // // //           {hasChildren ? (\n// // // //             <button \n// // // //               className=\"expand-button\"\n// // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // //             >\n// // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // //             </button>\n// // // //           ) : (\n// // // //             <div className=\"expand-placeholder\" />\n// // // //           )}\n          \n// // // //           <div className=\"node-icon\">\n// // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // //           </div>\n          \n// // // //           <div className=\"node-info\">\n// // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // //             <div className=\"node-stats\">\n// // // //               {hasChildren && (\n// // // //                 <span className=\"stat-badge\">\n// // // //                   {subDomain.children.length} sub-domains\n// // // //                 </span>\n// // // //               )}\n// // // //               {subDomain.projectCount > 0 && (\n// // // //                 <span className=\"stat-badge projects\">\n// // // //                   {subDomain.projectCount} projects\n// // // //                 </span>\n// // // //               )}\n// // // //               {isLeaf && (\n// // // //                 <span className=\"stat-badge leaf\">\n// // // //                   Can have projects\n// // // //                 </span>\n// // // //               )}\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n        \n// // // //         <div className=\"node-actions\">\n// // // //           <button \n// // // //             className=\"action-button add\" \n// // // //             onClick={() => onAddChild(subDomain)}\n// // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // //           >\n// // // //             <FiPlus />\n// // // //           </button>\n// // // //           <div className=\"action-menu\">\n// // // //             <button \n// // // //               onClick={() => setShowMenu(!showMenu)}\n// // // //               title=\"More actions\"\n// // // //             >\n// // // //               <FiMoreVertical />\n// // // //             </button>\n// // // //             {showMenu && (\n// // // //               <div className=\"dropdown-menu\">\n// // // //                 <button onClick={() => {\n// // // //                   onEdit(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiEdit /> Edit\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onAddChild(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiPlus /> Add Child SubDomain\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onDelete(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }} className=\"danger\">\n// // // //                   <FiTrash2 /> Delete\n// // // //                 </button>\n// // // //               </div>\n// // // //             )}\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n      \n// // // //       {/* Children */}\n// // // //       {hasChildren && isExpanded && (\n// // // //         <div className=\"node-children\">\n// // // //           {subDomain.children.map((child) => (\n// // // //             <SubDomainNode\n// // // //               key={child.id}\n// // // //               subDomain={child}\n// // // //               level={level + 1}\n// // // //               isExpanded={expandedNodes.has(child.id)}\n// // // //               onToggleExpanded={onToggleExpanded}\n// // // //               onEdit={onEdit}\n// // // //               onDelete={onDelete}\n// // // //               onAddChild={onAddChild}\n// // // //               expandedNodes={expandedNodes}\n// // // //             />\n// // // //           ))}\n// // // //         </div>\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Modal Component - CORRECTED VERSION\n// // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     title: subDomain?.title || '',\n// // // //     description: subDomain?.description || ''\n// // // //   });\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // //     isEditing: !!subDomain,\n// // // //     parentTitle: parent?.title,\n// // // //     domainTitle: domain?.title,\n// // // //     formData\n// // // //   });\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     setLoading(true);\n\n// // // //     try {\n// // // //       const requestData = {\n// // // //         title: formData.title.trim(),\n// // // //         description: formData.description.trim(),\n// // // //         domainId: domain.id,\n// // // //         parentId: parent?.id || null\n// // // //       };\n\n// // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // //       if (subDomain) {\n// // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // //         toast.success('Sub-domain updated successfully');\n// // // //       } else {\n// // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // //         const response = await authService.createSubDomain(requestData);\n// // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // //         toast.success('Sub-domain created successfully');\n// // // //       }\n\n// // // //       onSave();\n// // // //     } catch (error) {\n// // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n      \n// // // //       const errorMessage = error.response?.data?.message || \n// // // //                           error.response?.data?.error || \n// // // //                           'Failed to save sub-domain';\n// // // //       toast.error(errorMessage);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const getModalTitle = () => {\n// // // //     if (subDomain) {\n// // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // //     }\n// // // //     if (parent) {\n// // // //       return `Add SubDomain under: ${parent.title}`;\n// // // //     }\n// // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // //   };\n\n// // // //   const getLevel = () => {\n// // // //     if (!parent) return 'Root Level';\n// // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"modal-overlay\">\n// // // //       <div className=\"modal\">\n// // // //         <div className=\"modal-header\">\n// // // //           <h2>{getModalTitle()}</h2>\n// // // //           <button onClick={onClose}>×</button>\n// // // //         </div>\n        \n// // // //         <form onSubmit={handleSubmit}>\n// // // //           <div className=\"form-group\">\n// // // //             <label>SubDomain Title *</label>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={formData.title}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // //               required\n// // // //               minLength={3}\n// // // //               maxLength={100}\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"form-group\">\n// // // //             <label>Description (Optional)</label>\n// // // //             <textarea\n// // // //               value={formData.description}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // //               rows={3}\n// // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // //               maxLength={500}\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"modal-info\">\n// // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // //             {parent && (\n// // // //               <>\n// // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // //               </>\n// // // //             )}\n// // // //             <strong>Level:</strong> {getLevel()}\n// // // //           </div>\n          \n// // // //           <div className=\"modal-actions\">\n// // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // //               Cancel\n// // // //             </button>\n// // // //             <button \n// // // //               type=\"submit\" \n// // // //               className=\"primary-button\" \n// // // //               disabled={loading || !formData.title.trim()}\n// // // //             >\n// // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // //             </button>\n// // // //           </div>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SubDomainManagement;\n\n\n\n\n\n\n\n// // // // // // src/components/domains/SubDomainManagement.js - CORRECTED VERSION\n// // // // // import React, { useState, useEffect } from 'react';\n// // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // import { authService } from '../../services/authService';\n// // // // // import { toast } from 'react-toastify';\n// // // // // import {\n// // // // //   FiPlus,\n// // // // //   FiEdit,\n// // // // //   FiTrash2,\n// // // // //   FiChevronDown,\n// // // // //   FiChevronRight,\n// // // // //   FiFolder,\n// // // // //   FiFolderPlus,\n// // // // //   FiFileText,\n// // // // //   FiArrowLeft,\n// // // // //   FiMoreVertical,\n// // // // //   FiMove,\n// // // // //   FiTarget\n// // // // // } from 'react-icons/fi';\n\n// // // // // const SubDomainManagement = () => {\n// // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // //   const { domainId } = useParams();\n// // // // //   const navigate = useNavigate();\n  \n// // // // //   const [domain, setDomain] = useState(null);\n// // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // //   const [loading, setLoading] = useState(true);\n// // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // //     domainId,\n// // // // //     domain: domain?.title,\n// // // // //     subDomainsCount: subDomains.length,\n// // // // //     loading,\n// // // // //     selectedParent: selectedParent?.title,\n// // // // //     expandedCount: expandedNodes.size\n// // // // //   });\n\n// // // // //   useEffect(() => {\n// // // // //     if (domainId) {\n// // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     }\n// // // // //   }, [domainId]);\n\n// // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // //     try {\n// // // // //       setLoading(true);\n      \n// // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // //       // ✅ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n// // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains (no params)');\n// // // // //       const domainsResponse = await authService.getDomains();\n// // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // //       // Extract specific domain from response\n// // // // //       let domainData = null;\n// // // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // // //       if (domains.length > 0) {\n// // // // //         domainData = domains.find(d => d.id == domainId);\n// // // // //       }\n      \n// // // // //       console.log('🎯 SUBDOMAIN FETCH - Found domain:', domainData);\n      \n// // // // //       // If we don't have domain data, create a placeholder\n// // // // //       if (!domainData) {\n// // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // //         domainData = {\n// // // // //           id: domainId,\n// // // // //           title: `Domain ${domainId}`,\n// // // // //           description: 'Domain not found in list',\n// // // // //           projectCount: 0\n// // // // //         };\n// // // // //       }\n      \n// // // // //       setDomain(domainData);\n      \n// // // // //       // ✅ CORRECTED: Get subdomains using the correct API\n// // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n// // // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // // //       console.log('✅ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// // // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n      \n// // // // //       setSubDomains(subDomainsData);\n      \n// // // // //       // Auto-expand first level\n// // // // //       if (subDomainsData.length > 0) {\n// // // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // //         console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // //       }\n      \n// // // // //       // ✅ ALTERNATIVE: Try hierarchy API as fallback\n// // // // //       try {\n// // // // //         console.log('🌐 SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n// // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // // //           console.log('🎯 SUBDOMAIN FETCH - Using hierarchy data instead');\n// // // // //           setSubDomains(hierarchyData.subDomains);\n          \n// // // // //           // Update domain info if more complete\n// // // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // // //           }\n// // // // //         }\n// // // // //       } catch (hierarchyError) {\n// // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n// // // // //       }\n      \n// // // // //     } catch (error) {\n// // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // //       // Create fallback domain\n// // // // //       setDomain({\n// // // // //         id: domainId,\n// // // // //         title: `Domain ${domainId}`,\n// // // // //         description: 'Error loading domain details',\n// // // // //         projectCount: 0\n// // // // //       });\n// // // // //       setSubDomains([]);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // //     setSelectedParent(parent);\n// // // // //     setEditingSubDomain(null);\n// // // // //     setShowAddModal(true);\n    \n// // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // //       showAddModal: true, \n// // // // //       selectedParent: parent?.title,\n// // // // //       editingSubDomain: null \n// // // // //     });\n// // // // //   };\n\n// // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // //     setSelectedParent(null);\n// // // // //     setEditingSubDomain(subDomain);\n// // // // //     setShowAddModal(true);\n// // // // //   };\n\n// // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // //     if (hasChildren) {\n// // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // //     }\n// // // // //     if (hasProjects) {\n// // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // //     }\n    \n// // // // //     if (!window.confirm(confirmMessage)) {\n// // // // //       return;\n// // // // //     }\n\n// // // // //     try {\n// // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // //       toast.success('Sub-domain deleted successfully');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     } catch (error) {\n// // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // //       toast.error('Failed to delete sub-domain');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const toggleExpanded = (nodeId) => {\n// // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // //     const newExpanded = new Set(expandedNodes);\n// // // // //     if (newExpanded.has(nodeId)) {\n// // // // //       newExpanded.delete(nodeId);\n// // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // //     } else {\n// // // // //       newExpanded.add(nodeId);\n// // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // //     }\n// // // // //     setExpandedNodes(newExpanded);\n// // // // //   };\n\n// // // // //   if (loading) {\n// // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // //     return (\n// // // // //       <div className=\"loading-container\">\n// // // // //         <div className=\"loading-spinner\"></div>\n// // // // //         <p>Loading sub-domains...</p>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // //   return (\n// // // // //     <div className=\"subdomain-management\">\n// // // // //       {/* Header with Breadcrumb */}\n// // // // //       <div className=\"page-header\">\n// // // // //         <div className=\"header-content\">\n// // // // //           <div className=\"breadcrumb\">\n// // // // //             <button \n// // // // //               className=\"breadcrumb-link\"\n// // // // //               onClick={() => navigate('/domains')}\n// // // // //             >\n// // // // //               <FiArrowLeft />\n// // // // //               Domains\n// // // // //             </button>\n// // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // //           </div>\n// // // // //           <h1>SubDomain Management</h1>\n// // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // //         </div>\n// // // // //         <div className=\"header-actions\">\n// // // // //           <button \n// // // // //             className=\"primary-button\" \n// // // // //             onClick={() => handleAddSubDomain()}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //             Add Root SubDomain\n// // // // //           </button>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Quick Guide */}\n// // // // //       <div className=\"quick-guide\">\n// // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // //         <div className=\"guide-steps\">\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">1</span>\n// // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">2</span>\n// // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">3</span>\n// // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Domain Info Card */}\n// // // // //       {domain && (\n// // // // //         <div className=\"domain-info-card\">\n// // // // //           <div className=\"domain-icon\">\n// // // // //             <FiFolder />\n// // // // //           </div>\n// // // // //           <div className=\"domain-details\">\n// // // // //             <h3>{domain.title}</h3>\n// // // // //             <p>{domain.description}</p>\n// // // // //             <div className=\"domain-stats\">\n// // // // //               <span className=\"stat-item\">\n// // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // //               </span>\n// // // // //               <span className=\"stat-item\">\n// // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // //               </span>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {/* SubDomain Tree */}\n// // // // //       <div className=\"subdomain-tree-container\">\n// // // // //         <div className=\"tree-header\">\n// // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // //           <div className=\"tree-legend\">\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiFolder className=\"folder-icon\" />\n// // // // //               Has children\n// // // // //             </span>\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // //               Leaf (can have projects)\n// // // // //             </span>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         {subDomains.length > 0 ? (\n// // // // //           <div className=\"subdomain-tree\">\n// // // // //             {subDomains.map((subDomain) => (\n// // // // //               <SubDomainNode\n// // // // //                 key={subDomain.id}\n// // // // //                 subDomain={subDomain}\n// // // // //                 level={0}\n// // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // //                 onToggleExpanded={toggleExpanded}\n// // // // //                 onEdit={handleEditSubDomain}\n// // // // //                 onDelete={handleDeleteSubDomain}\n// // // // //                 onAddChild={handleAddSubDomain}\n// // // // //                 expandedNodes={expandedNodes}\n// // // // //               />\n// // // // //             ))}\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div className=\"empty-tree-state\">\n// // // // //             <FiFolderPlus size={64} />\n// // // // //             <h3>No SubDomains Yet</h3>\n// // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // //             <div className=\"empty-state-examples\">\n// // // // //               <h4>Example Structure:</h4>\n// // // // //               <div className=\"example-tree\">\n// // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // //               </div>\n// // // // //             </div>\n// // // // //             <div className=\"empty-state-actions\">\n// // // // //               <button \n// // // // //                 className=\"primary-button large\" \n// // // // //                 onClick={() => handleAddSubDomain()}\n// // // // //               >\n// // // // //                 <FiPlus />\n// // // // //                 Create Your First SubDomain\n// // // // //               </button>\n// // // // //               <p className=\"help-text\">\n// // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // //               </p>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n\n// // // // //       {/* Add/Edit Modal */}\n// // // // //       {showAddModal && (\n// // // // //         <SubDomainModal\n// // // // //           subDomain={editingSubDomain}\n// // // // //           parent={selectedParent}\n// // // // //           domain={domain}\n// // // // //           onClose={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //           }}\n// // // // //           onSave={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //             fetchDomainAndSubDomains();\n// // // // //           }}\n// // // // //         />\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Node Component\n// // // // // const SubDomainNode = ({ \n// // // // //   subDomain, \n// // // // //   level, \n// // // // //   isExpanded, \n// // // // //   onToggleExpanded, \n// // // // //   onEdit, \n// // // // //   onDelete, \n// // // // //   onAddChild,\n// // // // //   expandedNodes \n// // // // // }) => {\n// // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //   const isLeaf = !hasChildren;\n\n// // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // //     title: subDomain.title,\n// // // // //     level,\n// // // // //     hasChildren,\n// // // // //     isLeaf,\n// // // // //     isExpanded,\n// // // // //     projectCount: subDomain.projectCount\n// // // // //   });\n\n// // // // //   return (\n// // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // //       <div className=\"node-content\">\n// // // // //         <div className=\"node-main\">\n// // // // //           {hasChildren ? (\n// // // // //             <button \n// // // // //               className=\"expand-button\"\n// // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // //             >\n// // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // //             </button>\n// // // // //           ) : (\n// // // // //             <div className=\"expand-placeholder\" />\n// // // // //           )}\n          \n// // // // //           <div className=\"node-icon\">\n// // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // //           </div>\n          \n// // // // //           <div className=\"node-info\">\n// // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // //             <div className=\"node-stats\">\n// // // // //               {hasChildren && (\n// // // // //                 <span className=\"stat-badge\">\n// // // // //                   {subDomain.children.length} sub-domains\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {subDomain.projectCount > 0 && (\n// // // // //                 <span className=\"stat-badge projects\">\n// // // // //                   {subDomain.projectCount} projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {isLeaf && (\n// // // // //                 <span className=\"stat-badge leaf\">\n// // // // //                   Can have projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n        \n// // // // //         <div className=\"node-actions\">\n// // // // //           <button \n// // // // //             className=\"action-button add\" \n// // // // //             onClick={() => onAddChild(subDomain)}\n// // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //           </button>\n// // // // //           <div className=\"action-menu\">\n// // // // //             <button \n// // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // //               title=\"More actions\"\n// // // // //             >\n// // // // //               <FiMoreVertical />\n// // // // //             </button>\n// // // // //             {showMenu && (\n// // // // //               <div className=\"dropdown-menu\">\n// // // // //                 <button onClick={() => {\n// // // // //                   onEdit(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }}>\n// // // // //                   <FiEdit /> Edit\n// // // // //                 </button>\n// // // // //                 <button onClick={() => {\n// // // // //                   onAddChild(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }}>\n// // // // //                   <FiPlus /> Add Child SubDomain\n// // // // //                 </button>\n// // // // //                 <button onClick={() => {\n// // // // //                   onDelete(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }} className=\"danger\">\n// // // // //                   <FiTrash2 /> Delete\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n      \n// // // // //       {/* Children */}\n// // // // //       {hasChildren && isExpanded && (\n// // // // //         <div className=\"node-children\">\n// // // // //           {subDomain.children.map((child) => (\n// // // // //             <SubDomainNode\n// // // // //               key={child.id}\n// // // // //               subDomain={child}\n// // // // //               level={level + 1}\n// // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // //               onToggleExpanded={onToggleExpanded}\n// // // // //               onEdit={onEdit}\n// // // // //               onDelete={onDelete}\n// // // // //               onAddChild={onAddChild}\n// // // // //               expandedNodes={expandedNodes}\n// // // // //             />\n// // // // //           ))}\n// // // // //         </div>\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Modal Component - CORRECTED VERSION\n// // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // //   const [formData, setFormData] = useState({\n// // // // //     title: subDomain?.title || '',\n// // // // //     description: subDomain?.description || ''\n// // // // //   });\n// // // // //   const [loading, setLoading] = useState(false);\n\n// // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // //     isEditing: !!subDomain,\n// // // // //     parentTitle: parent?.title,\n// // // // //     domainTitle: domain?.title,\n// // // // //     formData\n// // // // //   });\n\n// // // // //   const handleSubmit = async (e) => {\n// // // // //     e.preventDefault();\n// // // // //     setLoading(true);\n\n// // // // //     try {\n// // // // //       const requestData = {\n// // // // //         title: formData.title.trim(),\n// // // // //         description: formData.description.trim(),\n// // // // //         domainId: domain.id,\n// // // // //         parentId: parent?.id || null\n// // // // //       };\n\n// // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // //       if (subDomain) {\n// // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // //         toast.success('Sub-domain updated successfully');\n// // // // //       } else {\n// // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // //         const response = await authService.createSubDomain(requestData);\n// // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // //         toast.success('Sub-domain created successfully');\n// // // // //       }\n\n// // // // //       onSave();\n// // // // //     } catch (error) {\n// // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n      \n// // // // //       const errorMessage = error.response?.data?.message || \n// // // // //                           error.response?.data?.error || \n// // // // //                           'Failed to save sub-domain';\n// // // // //       toast.error(errorMessage);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getModalTitle = () => {\n// // // // //     if (subDomain) {\n// // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // //     }\n// // // // //     if (parent) {\n// // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // //     }\n// // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // //   };\n\n// // // // //   const getLevel = () => {\n// // // // //     if (!parent) return 'Root Level';\n// // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"modal-overlay\">\n// // // // //       <div className=\"modal\">\n// // // // //         <div className=\"modal-header\">\n// // // // //           <h2>{getModalTitle()}</h2>\n// // // // //           <button onClick={onClose}>×</button>\n// // // // //         </div>\n        \n// // // // //         <form onSubmit={handleSubmit}>\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>SubDomain Title *</label>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={formData.title}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // //               required\n// // // // //               minLength={3}\n// // // // //               maxLength={100}\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Description (Optional)</label>\n// // // // //             <textarea\n// // // // //               value={formData.description}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // //               rows={3}\n// // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // //               maxLength={500}\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"modal-info\">\n// // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // //             {parent && (\n// // // // //               <>\n// // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // //               </>\n// // // // //             )}\n// // // // //             <strong>Level:</strong> {getLevel()}\n// // // // //           </div>\n          \n// // // // //           <div className=\"modal-actions\">\n// // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // //               Cancel\n// // // // //             </button>\n// // // // //             <button \n// // // // //               type=\"submit\" \n// // // // //               className=\"primary-button\" \n// // // // //               disabled={loading || !formData.title.trim()}\n// // // // //             >\n// // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </form>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // export default SubDomainManagement;\n\n\n// // // // // // // src/components/domains/SubDomainManagement.js - FIXED VERSION\n// // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // import { authService } from '../../services/authService';\n// // // // // // import { toast } from 'react-toastify';\n// // // // // // import {\n// // // // // //   FiPlus,\n// // // // // //   FiEdit,\n// // // // // //   FiTrash2,\n// // // // // //   FiChevronDown,\n// // // // // //   FiChevronRight,\n// // // // // //   FiFolder,\n// // // // // //   FiFolderPlus,\n// // // // // //   FiFileText,\n// // // // // //   FiArrowLeft,\n// // // // // //   FiMoreVertical,\n// // // // // //   FiMove,\n// // // // // //   FiTarget\n// // // // // // } from 'react-icons/fi';\n\n// // // // // // const SubDomainManagement = () => {\n// // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // //   const { domainId } = useParams();\n// // // // // //   const navigate = useNavigate();\n  \n// // // // // //   const [domain, setDomain] = useState(null);\n// // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // //   const [loading, setLoading] = useState(true);\n// // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // //     domainId,\n// // // // // //     domain: domain?.title,\n// // // // // //     subDomainsCount: subDomains.length,\n// // // // // //     loading,\n// // // // // //     selectedParent: selectedParent?.title,\n// // // // // //     expandedCount: expandedNodes.size\n// // // // // //   });\n\n// // // // // //   useEffect(() => {\n// // // // // //     if (domainId) {\n// // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // //       fetchDomainAndSubDomains();\n// // // // // //     }\n// // // // // //   }, [domainId]);\n\n// // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // //     try {\n// // // // // //       setLoading(true);\n      \n// // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // //       // First, let's try to get domain details\n// // // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // //       // Extract domain from response\n// // // // // //       let domainData = null;\n// // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // //       }\n      \n// // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // // // //       // If we don't have domain data, create a placeholder\n// // // // // //       if (!domainData) {\n// // // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // //         domainData = {\n// // // // // //           id: domainId,\n// // // // // //           title: `Domain ${domainId}`,\n// // // // // //           description: 'Loading domain details...',\n// // // // // //           projectCount: 0\n// // // // // //         };\n// // // // // //       }\n      \n// // // // // //       setDomain(domainData);\n      \n// // // // // //       // Try to get hierarchy if domain exists\n// // // // // //       try {\n// // // // // //         console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // //         console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // // // //         // Auto-expand first level\n// // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // //           console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // //         }\n// // // // // //       } catch (hierarchyError) {\n// // // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // //         setSubDomains([]);\n// // // // // //       }\n      \n// // // // // //     } catch (error) {\n// // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // //       // Create fallback domain\n// // // // // //       setDomain({\n// // // // // //         id: domainId,\n// // // // // //         title: `Domain ${domainId}`,\n// // // // // //         description: 'Error loading domain details',\n// // // // // //         projectCount: 0\n// // // // // //       });\n// // // // // //       setSubDomains([]);\n// // // // // //     } finally {\n// // // // // //       setLoading(false);\n// // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // //     setSelectedParent(parent);\n// // // // // //     setEditingSubDomain(null);\n// // // // // //     setShowAddModal(true);\n    \n// // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // //       showAddModal: true, \n// // // // // //       selectedParent: parent?.title,\n// // // // // //       editingSubDomain: null \n// // // // // //     });\n// // // // // //   };\n\n// // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // //     setSelectedParent(null);\n// // // // // //     setEditingSubDomain(subDomain);\n// // // // // //     setShowAddModal(true);\n// // // // // //   };\n\n// // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // //     if (hasChildren) {\n// // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // //     }\n// // // // // //     if (hasProjects) {\n// // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // //     }\n    \n// // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // //       return;\n// // // // // //     }\n\n// // // // // //     try {\n// // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // //       fetchDomainAndSubDomains();\n// // // // // //     } catch (error) {\n// // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // //       newExpanded.delete(nodeId);\n// // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // //     } else {\n// // // // // //       newExpanded.add(nodeId);\n// // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // //     }\n// // // // // //     setExpandedNodes(newExpanded);\n// // // // // //   };\n\n// // // // // //   if (loading) {\n// // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // //     return (\n// // // // // //       <div className=\"loading-container\">\n// // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // //         <p>Loading sub-domains...</p>\n// // // // // //       </div>\n// // // // // //     );\n// // // // // //   }\n\n// // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // //   return (\n// // // // // //     <div className=\"subdomain-management\">\n// // // // // //       {/* Header with Breadcrumb */}\n// // // // // //       <div className=\"page-header\">\n// // // // // //         <div className=\"header-content\">\n// // // // // //           <div className=\"breadcrumb\">\n// // // // // //             <button \n// // // // // //               className=\"breadcrumb-link\"\n// // // // // //               onClick={() => navigate('/domains')}\n// // // // // //             >\n// // // // // //               <FiArrowLeft />\n// // // // // //               Domains\n// // // // // //             </button>\n// // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // //           </div>\n// // // // // //           <h1>SubDomain Management</h1>\n// // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // //         </div>\n// // // // // //         <div className=\"header-actions\">\n// // // // // //           <button \n// // // // // //             className=\"primary-button\" \n// // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // //           >\n// // // // // //             <FiPlus />\n// // // // // //             Add Root SubDomain\n// // // // // //           </button>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Quick Guide */}\n// // // // // //       <div className=\"quick-guide\">\n// // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // //         <div className=\"guide-steps\">\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">1</span>\n// // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // //           </div>\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">2</span>\n// // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // //           </div>\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">3</span>\n// // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Domain Info Card */}\n// // // // // //       {domain && (\n// // // // // //         <div className=\"domain-info-card\">\n// // // // // //           <div className=\"domain-icon\">\n// // // // // //             <FiFolder />\n// // // // // //           </div>\n// // // // // //           <div className=\"domain-details\">\n// // // // // //             <h3>{domain.title}</h3>\n// // // // // //             <p>{domain.description}</p>\n// // // // // //             <div className=\"domain-stats\">\n// // // // // //               <span className=\"stat-item\">\n// // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // //               </span>\n// // // // // //               <span className=\"stat-item\">\n// // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // //               </span>\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       )}\n\n// // // // // //       {/* SubDomain Tree */}\n// // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // //         <div className=\"tree-header\">\n// // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // //           <div className=\"tree-legend\">\n// // // // // //             <span className=\"legend-item\">\n// // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // //               Has children\n// // // // // //             </span>\n// // // // // //             <span className=\"legend-item\">\n// // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // //               Leaf (can have projects)\n// // // // // //             </span>\n// // // // // //           </div>\n// // // // // //         </div>\n\n// // // // // //         {subDomains.length > 0 ? (\n// // // // // //           <div className=\"subdomain-tree\">\n// // // // // //             {subDomains.map((subDomain) => (\n// // // // // //               <SubDomainNode\n// // // // // //                 key={subDomain.id}\n// // // // // //                 subDomain={subDomain}\n// // // // // //                 level={0}\n// // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // //                 onEdit={handleEditSubDomain}\n// // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // //                 expandedNodes={expandedNodes}\n// // // // // //               />\n// // // // // //             ))}\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div className=\"empty-tree-state\">\n// // // // // //             <FiFolderPlus size={64} />\n// // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // //             <div className=\"empty-state-examples\">\n// // // // // //               <h4>Example Structure:</h4>\n// // // // // //               <div className=\"example-tree\">\n// // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // //               </div>\n// // // // // //             </div>\n// // // // // //             <div className=\"empty-state-actions\">\n// // // // // //               <button \n// // // // // //                 className=\"primary-button large\" \n// // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // //               >\n// // // // // //                 <FiPlus />\n// // // // // //                 Create Your First SubDomain\n// // // // // //               </button>\n// // // // // //               <p className=\"help-text\">\n// // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // //               </p>\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n\n// // // // // //       {/* Add/Edit Modal */}\n// // // // // //       {showAddModal && (\n// // // // // //         <SubDomainModal\n// // // // // //           subDomain={editingSubDomain}\n// // // // // //           parent={selectedParent}\n// // // // // //           domain={domain}\n// // // // // //           onClose={() => {\n// // // // // //             setShowAddModal(false);\n// // // // // //             setEditingSubDomain(null);\n// // // // // //             setSelectedParent(null);\n// // // // // //           }}\n// // // // // //           onSave={() => {\n// // // // // //             setShowAddModal(false);\n// // // // // //             setEditingSubDomain(null);\n// // // // // //             setSelectedParent(null);\n// // // // // //             fetchDomainAndSubDomains();\n// // // // // //           }}\n// // // // // //         />\n// // // // // //       )}\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // // SubDomain Node Component\n// // // // // // const SubDomainNode = ({ \n// // // // // //   subDomain, \n// // // // // //   level, \n// // // // // //   isExpanded, \n// // // // // //   onToggleExpanded, \n// // // // // //   onEdit, \n// // // // // //   onDelete, \n// // // // // //   onAddChild,\n// // // // // //   expandedNodes \n// // // // // // }) => {\n// // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // //   const isLeaf = !hasChildren;\n\n// // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // //     title: subDomain.title,\n// // // // // //     level,\n// // // // // //     hasChildren,\n// // // // // //     isLeaf,\n// // // // // //     isExpanded,\n// // // // // //     projectCount: subDomain.projectCount\n// // // // // //   });\n\n// // // // // //   return (\n// // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // //       <div className=\"node-content\">\n// // // // // //         <div className=\"node-main\">\n// // // // // //           {hasChildren ? (\n// // // // // //             <button \n// // // // // //               className=\"expand-button\"\n// // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // //             >\n// // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // //             </button>\n// // // // // //           ) : (\n// // // // // //             <div className=\"expand-placeholder\" />\n// // // // // //           )}\n          \n// // // // // //           <div className=\"node-icon\">\n// // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // //           </div>\n          \n// // // // // //           <div className=\"node-info\">\n// // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // //             <div className=\"node-stats\">\n// // // // // //               {hasChildren && (\n// // // // // //                 <span className=\"stat-badge\">\n// // // // // //                   {subDomain.children.length} sub-domains\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //               {subDomain.projectCount > 0 && (\n// // // // // //                 <span className=\"stat-badge projects\">\n// // // // // //                   {subDomain.projectCount} projects\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //               {isLeaf && (\n// // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // //                   Can have projects\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         </div>\n        \n// // // // // //         <div className=\"node-actions\">\n// // // // // //           <button \n// // // // // //             className=\"action-button add\" \n// // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // //           >\n// // // // // //             <FiPlus />\n// // // // // //           </button>\n// // // // // //           <div className=\"action-menu\">\n// // // // // //             <button \n// // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // //               title=\"More actions\"\n// // // // // //             >\n// // // // // //               <FiMoreVertical />\n// // // // // //             </button>\n// // // // // //             {showMenu && (\n// // // // // //               <div className=\"dropdown-menu\">\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onEdit(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }}>\n// // // // // //                   <FiEdit /> Edit\n// // // // // //                 </button>\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onAddChild(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }}>\n// // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // //                 </button>\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onDelete(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }} className=\"danger\">\n// // // // // //                   <FiTrash2 /> Delete\n// // // // // //                 </button>\n// // // // // //               </div>\n// // // // // //             )}\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       </div>\n      \n// // // // // //       {/* Children */}\n// // // // // //       {hasChildren && isExpanded && (\n// // // // // //         <div className=\"node-children\">\n// // // // // //           {subDomain.children.map((child) => (\n// // // // // //             <SubDomainNode\n// // // // // //               key={child.id}\n// // // // // //               subDomain={child}\n// // // // // //               level={level + 1}\n// // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // //               onEdit={onEdit}\n// // // // // //               onDelete={onDelete}\n// // // // // //               onAddChild={onAddChild}\n// // // // // //               expandedNodes={expandedNodes}\n// // // // // //             />\n// // // // // //           ))}\n// // // // // //         </div>\n// // // // // //       )}\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // // SubDomain Modal Component - FIXED VERSION\n// // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // //   const [formData, setFormData] = useState({\n// // // // // //     title: subDomain?.title || '',\n// // // // // //     description: subDomain?.description || ''\n// // // // // //   });\n// // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // //     isEditing: !!subDomain,\n// // // // // //     parentTitle: parent?.title,\n// // // // // //     domainTitle: domain?.title,\n// // // // // //     formData\n// // // // // //   });\n\n// // // // // //   // Enhanced slug generation with better validation\n// // // // // //   const generateSlug = (title) => {\n// // // // // //     if (!title || title.trim() === '') {\n// // // // // //       return '';\n// // // // // //     }\n    \n// // // // // //     let slug = title\n// // // // // //       .toLowerCase()\n// // // // // //       .trim()\n// // // // // //       .replace(/[^a-z0-9\\s-]/g, '') // Remove special chars except spaces and hyphens\n// // // // // //       .replace(/\\s+/g, '-')         // Replace spaces with hyphens\n// // // // // //       .replace(/-+/g, '-')          // Remove consecutive hyphens\n// // // // // //       .replace(/^-|-$/g, '');       // Remove leading/trailing hyphens\n    \n// // // // // //     // Ensure minimum length - if too short, add timestamp\n// // // // // //     if (slug.length < 3) {\n// // // // // //       slug = slug + '-' + Date.now().toString().slice(-4);\n// // // // // //     }\n    \n// // // // // //     // Ensure maximum length\n// // // // // //     if (slug.length > 50) {\n// // // // // //       slug = slug.substring(0, 50).replace(/-$/, '');\n// // // // // //     }\n    \n// // // // // //     return slug;\n// // // // // //   };\n\n// // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // //   const handleSubmit = async (e) => {\n// // // // // //     e.preventDefault();\n// // // // // //     setLoading(true);\n\n// // // // // //     try {\n// // // // // //       // Generate slug from title\n// // // // // //       const slug = generateSlug(formData.title);\n      \n// // // // // //       // Validate slug\n// // // // // //       if (!slug || slug.length < 3) {\n// // // // // //         toast.error('Title must generate a valid slug (at least 3 characters)');\n// // // // // //         setLoading(false);\n// // // // // //         return;\n// // // // // //       }\n\n// // // // // //       const requestData = {\n// // // // // //         title: formData.title.trim(),\n// // // // // //         description: formData.description.trim(),\n       \n// // // // // //         domainId: domain.id,\n// // // // // //         parentId: parent?.id || null\n// // // // // //       };\n\n// // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // //       console.log('🔍 SUBDOMAIN SAVE - Generated slug:', slug, 'Length:', slug.length);\n// // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // //       if (subDomain) {\n// // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // //       } else {\n// // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // //         toast.success('Sub-domain created successfully');\n// // // // // //       }\n\n// // // // // //       onSave();\n// // // // // //     } catch (error) {\n// // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n      \n// // // // // //       // Better error handling\n// // // // // //       const errorMessage = error.response?.data?.message || \n// // // // // //                           error.response?.data?.error || \n// // // // // //                           'Failed to save sub-domain';\n// // // // // //       toast.error(errorMessage);\n// // // // // //     } finally {\n// // // // // //       setLoading(false);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const getModalTitle = () => {\n// // // // // //     if (subDomain) {\n// // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // //     }\n// // // // // //     if (parent) {\n// // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // //     }\n// // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // //   };\n\n// // // // // //   const getLevel = () => {\n// // // // // //     if (!parent) return 'Root Level';\n// // // // // //     // This is a simplified level calculation\n// // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <div className=\"modal-overlay\">\n// // // // // //       <div className=\"modal\">\n// // // // // //         <div className=\"modal-header\">\n// // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // //           <button onClick={onClose}>×</button>\n// // // // // //         </div>\n        \n// // // // // //         <form onSubmit={handleSubmit}>\n// // // // // //           <div className=\"form-group\">\n// // // // // //             <label>SubDomain Title *</label>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={formData.title}\n// // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // //               required\n// // // // // //               minLength={3}\n// // // // // //               maxLength={100}\n// // // // // //             />\n// // // // // //             {formData.title && (\n// // // // // //               <div className=\"slug-preview\">\n// // // // // //                 <small>\n// // // // // //                   URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code>\n// // // // // //                   {slugPreview && slugPreview.length < 3 && (\n// // // // // //                     <span style={{color: 'red'}}> (Too short - needs at least 3 chars)</span>\n// // // // // //                   )}\n// // // // // //                 </small>\n// // // // // //               </div>\n// // // // // //             )}\n// // // // // //           </div>\n          \n// // // // // //           <div className=\"form-group\">\n// // // // // //             <label>Description (Optional)</label>\n// // // // // //             <textarea\n// // // // // //               value={formData.description}\n// // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // //               rows={3}\n// // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // //               maxLength={500}\n// // // // // //             />\n// // // // // //           </div>\n          \n// // // // // //           <div className=\"modal-info\">\n// // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // //             {parent && (\n// // // // // //               <>\n// // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // //               </>\n// // // // // //             )}\n// // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // //           </div>\n          \n// // // // // //           <div className=\"modal-actions\">\n// // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // //               Cancel\n// // // // // //             </button>\n// // // // // //             <button \n// // // // // //               type=\"submit\" \n// // // // // //               className=\"primary-button\" \n// // // // // //               disabled={loading || !formData.title.trim() || slugPreview.length < 3}\n// // // // // //             >\n// // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // //             </button>\n// // // // // //           </div>\n// // // // // //         </form>\n// // // // // //       </div>\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // export default SubDomainManagement;\n\n\n// // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // import { authService } from '../../services/authService';\n// // // // // // // import { toast } from 'react-toastify';\n// // // // // // // import {\n// // // // // // //   FiPlus,\n// // // // // // //   FiEdit,\n// // // // // // //   FiTrash2,\n// // // // // // //   FiChevronDown,\n// // // // // // //   FiChevronRight,\n// // // // // // //   FiFolder,\n// // // // // // //   FiFolderPlus,\n// // // // // // //   FiFileText,\n// // // // // // //   FiArrowLeft,\n// // // // // // //   FiMoreVertical,\n// // // // // // //   FiMove,\n// // // // // // //   FiTarget\n// // // // // // // } from 'react-icons/fi';\n\n// // // // // // // const SubDomainManagement = () => {\n// // // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // //   const { domainId } = useParams();\n// // // // // // //   const navigate = useNavigate();\n  \n// // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // //     domainId,\n// // // // // // //     domain: domain?.title,\n// // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // //     loading,\n// // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // //     expandedCount: expandedNodes.size\n// // // // // // //   });\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     if (domainId) {\n// // // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // //       fetchDomainAndSubDomains();\n// // // // // // //     }\n// // // // // // //   }, [domainId]);\n\n// // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // //     try {\n// // // // // // //       setLoading(true);\n      \n// // // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // //       // First, let's try to get domain details\n// // // // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // // //       // Extract domain from response\n// // // // // // //       let domainData = null;\n// // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // //       }\n      \n// // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // //       if (!domainData) {\n// // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // //         domainData = {\n// // // // // // //           id: domainId,\n// // // // // // //           title: `Domain ${domainId}`,\n// // // // // // //           description: 'Loading domain details...',\n// // // // // // //           projectCount: 0\n// // // // // // //         };\n// // // // // // //       }\n      \n// // // // // // //       setDomain(domainData);\n      \n// // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // //       try {\n// // // // // // //         console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // //         console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // // // // //         // Auto-expand first level\n// // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // //           console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // //         }\n// // // // // // //       } catch (hierarchyError) {\n// // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // //         setSubDomains([]);\n// // // // // // //       }\n      \n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // // //       // Create fallback domain\n// // // // // // //       setDomain({\n// // // // // // //         id: domainId,\n// // // // // // //         title: `Domain ${domainId}`,\n// // // // // // //         description: 'Error loading domain details',\n// // // // // // //         projectCount: 0\n// // // // // // //       });\n// // // // // // //       setSubDomains([]);\n// // // // // // //     } finally {\n// // // // // // //       setLoading(false);\n// // // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // //     setSelectedParent(parent);\n// // // // // // //     setEditingSubDomain(null);\n// // // // // // //     setShowAddModal(true);\n    \n// // // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // //       showAddModal: true, \n// // // // // // //       selectedParent: parent?.title,\n// // // // // // //       editingSubDomain: null \n// // // // // // //     });\n// // // // // // //   };\n\n// // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // //     setSelectedParent(null);\n// // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // //     setShowAddModal(true);\n// // // // // // //   };\n\n// // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // //     if (hasChildren) {\n// // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // //     }\n// // // // // // //     if (hasProjects) {\n// // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // //     }\n    \n// // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // //       return;\n// // // // // // //     }\n\n// // // // // // //     try {\n// // // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // //       fetchDomainAndSubDomains();\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // //       newExpanded.delete(nodeId);\n// // // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // //     } else {\n// // // // // // //       newExpanded.add(nodeId);\n// // // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // //     }\n// // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // //   };\n\n// // // // // // //   if (loading) {\n// // // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // //     return (\n// // // // // // //       <div className=\"loading-container\">\n// // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // //       </div>\n// // // // // // //     );\n// // // // // // //   }\n\n// // // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // //   return (\n// // // // // // //     <div className=\"subdomain-management\">\n// // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // //       <div className=\"page-header\">\n// // // // // // //         <div className=\"header-content\">\n// // // // // // //           <div className=\"breadcrumb\">\n// // // // // // //             <button \n// // // // // // //               className=\"breadcrumb-link\"\n// // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // //             >\n// // // // // // //               <FiArrowLeft />\n// // // // // // //               Domains\n// // // // // // //             </button>\n// // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // //           </div>\n// // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // //         </div>\n// // // // // // //         <div className=\"header-actions\">\n// // // // // // //           <button \n// // // // // // //             className=\"primary-button\" \n// // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // //           >\n// // // // // // //             <FiPlus />\n// // // // // // //             Add Root SubDomain\n// // // // // // //           </button>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Quick Guide */}\n// // // // // // //       <div className=\"quick-guide\">\n// // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // //         <div className=\"guide-steps\">\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // //           </div>\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // //           </div>\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Domain Info Card */}\n// // // // // // //       {domain && (\n// // // // // // //         <div className=\"domain-info-card\">\n// // // // // // //           <div className=\"domain-icon\">\n// // // // // // //             <FiFolder />\n// // // // // // //           </div>\n// // // // // // //           <div className=\"domain-details\">\n// // // // // // //             <h3>{domain.title}</h3>\n// // // // // // //             <p>{domain.description}</p>\n// // // // // // //             <div className=\"domain-stats\">\n// // // // // // //               <span className=\"stat-item\">\n// // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // //               </span>\n// // // // // // //               <span className=\"stat-item\">\n// // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // //               </span>\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       )}\n\n// // // // // // //       {/* SubDomain Tree */}\n// // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // //         <div className=\"tree-header\">\n// // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // //           <div className=\"tree-legend\">\n// // // // // // //             <span className=\"legend-item\">\n// // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // //               Has children\n// // // // // // //             </span>\n// // // // // // //             <span className=\"legend-item\">\n// // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // //               Leaf (can have projects)\n// // // // // // //             </span>\n// // // // // // //           </div>\n// // // // // // //         </div>\n\n// // // // // // //         {subDomains.length > 0 ? (\n// // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // //               <SubDomainNode\n// // // // // // //                 key={subDomain.id}\n// // // // // // //                 subDomain={subDomain}\n// // // // // // //                 level={0}\n// // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // //               />\n// // // // // // //             ))}\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // //             <FiFolderPlus size={64} />\n// // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // //               <h4>Example Structure:</h4>\n// // // // // // //               <div className=\"example-tree\">\n// // // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // // //               </div>\n// // // // // // //             </div>\n// // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // //               <button \n// // // // // // //                 className=\"primary-button large\" \n// // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // //               >\n// // // // // // //                 <FiPlus />\n// // // // // // //                 Create Your First SubDomain\n// // // // // // //               </button>\n// // // // // // //               <p className=\"help-text\">\n// // // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // //               </p>\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n\n// // // // // // //       {/* Add/Edit Modal */}\n// // // // // // //       {showAddModal && (\n// // // // // // //         <SubDomainModal\n// // // // // // //           subDomain={editingSubDomain}\n// // // // // // //           parent={selectedParent}\n// // // // // // //           domain={domain}\n// // // // // // //           onClose={() => {\n// // // // // // //             setShowAddModal(false);\n// // // // // // //             setEditingSubDomain(null);\n// // // // // // //             setSelectedParent(null);\n// // // // // // //           }}\n// // // // // // //           onSave={() => {\n// // // // // // //             setShowAddModal(false);\n// // // // // // //             setEditingSubDomain(null);\n// // // // // // //             setSelectedParent(null);\n// // // // // // //             fetchDomainAndSubDomains();\n// // // // // // //           }}\n// // // // // // //         />\n// // // // // // //       )}\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // // SubDomain Node Component\n// // // // // // // const SubDomainNode = ({ \n// // // // // // //   subDomain, \n// // // // // // //   level, \n// // // // // // //   isExpanded, \n// // // // // // //   onToggleExpanded, \n// // // // // // //   onEdit, \n// // // // // // //   onDelete, \n// // // // // // //   onAddChild,\n// // // // // // //   expandedNodes \n// // // // // // // }) => {\n// // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // // //     title: subDomain.title,\n// // // // // // //     level,\n// // // // // // //     hasChildren,\n// // // // // // //     isLeaf,\n// // // // // // //     isExpanded,\n// // // // // // //     projectCount: subDomain.projectCount\n// // // // // // //   });\n\n// // // // // // //   return (\n// // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // //       <div className=\"node-content\">\n// // // // // // //         <div className=\"node-main\">\n// // // // // // //           {hasChildren ? (\n// // // // // // //             <button \n// // // // // // //               className=\"expand-button\"\n// // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // //             >\n// // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // //             </button>\n// // // // // // //           ) : (\n// // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // //           )}\n          \n// // // // // // //           <div className=\"node-icon\">\n// // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // //           </div>\n          \n// // // // // // //           <div className=\"node-info\">\n// // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // //             <div className=\"node-stats\">\n// // // // // // //               {hasChildren && (\n// // // // // // //                 <span className=\"stat-badge\">\n// // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // //                   {subDomain.projectCount} projects\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //               {isLeaf && (\n// // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // //                   Can have projects\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         </div>\n        \n// // // // // // //         <div className=\"node-actions\">\n// // // // // // //           <button \n// // // // // // //             className=\"action-button add\" \n// // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // //           >\n// // // // // // //             <FiPlus />\n// // // // // // //           </button>\n// // // // // // //           <div className=\"action-menu\">\n// // // // // // //             <button \n// // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // //               title=\"More actions\"\n// // // // // // //             >\n// // // // // // //               <FiMoreVertical />\n// // // // // // //             </button>\n// // // // // // //             {showMenu && (\n// // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onEdit(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }}>\n// // // // // // //                   <FiEdit /> Edit\n// // // // // // //                 </button>\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onAddChild(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }}>\n// // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // //                 </button>\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onDelete(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }} className=\"danger\">\n// // // // // // //                   <FiTrash2 /> Delete\n// // // // // // //                 </button>\n// // // // // // //               </div>\n// // // // // // //             )}\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       </div>\n      \n// // // // // // //       {/* Children */}\n// // // // // // //       {hasChildren && isExpanded && (\n// // // // // // //         <div className=\"node-children\">\n// // // // // // //           {subDomain.children.map((child) => (\n// // // // // // //             <SubDomainNode\n// // // // // // //               key={child.id}\n// // // // // // //               subDomain={child}\n// // // // // // //               level={level + 1}\n// // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // //               onEdit={onEdit}\n// // // // // // //               onDelete={onDelete}\n// // // // // // //               onAddChild={onAddChild}\n// // // // // // //               expandedNodes={expandedNodes}\n// // // // // // //             />\n// // // // // // //           ))}\n// // // // // // //         </div>\n// // // // // // //       )}\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // // SubDomain Modal Component\n// // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // //   const [formData, setFormData] = useState({\n// // // // // // //     title: subDomain?.title || '',\n// // // // // // //     description: subDomain?.description || ''\n// // // // // // //   });\n// // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // // //     isEditing: !!subDomain,\n// // // // // // //     parentTitle: parent?.title,\n// // // // // // //     domainTitle: domain?.title,\n// // // // // // //     formData\n// // // // // // //   });\n\n// // // // // // //   // Generate slug preview\n// // // // // // //   const generateSlug = (title) => {\n// // // // // // //     return title\n// // // // // // //       .toLowerCase()\n// // // // // // //       .replace(/[^a-z0-9]/g, '-')\n// // // // // // //       .replace(/-+/g, '-')\n// // // // // // //       .replace(/^-|-$/g, '');\n// // // // // // //   };\n\n// // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // //   const handleSubmit = async (e) => {\n// // // // // // //     e.preventDefault();\n// // // // // // //     setLoading(true);\n\n// // // // // // //     try {\n// // // // // // //       // Generate slug from title\n// // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // //       const requestData = {\n// // // // // // //         ...formData,\n// // // // // // //         // slug: slug,\n// // // // // // //         domainId: domain.id,\n// // // // // // //         parentId: parent?.id || null\n// // // // // // //       };\n\n// // // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // //       console.log('📋 SUBDOMAIN SAVE - Generated slug:', slug);\n// // // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // //       if (subDomain) {\n// // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // //       } else {\n// // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // //       }\n\n// // // // // // //       onSave();\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // //     } finally {\n// // // // // // //       setLoading(false);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const getModalTitle = () => {\n// // // // // // //     if (subDomain) {\n// // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // //     }\n// // // // // // //     if (parent) {\n// // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // //     }\n// // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // //   };\n\n// // // // // // //   const getLevel = () => {\n// // // // // // //     if (!parent) return 'Root Level';\n// // // // // // //     // This is a simplified level calculation\n// // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <div className=\"modal-overlay\">\n// // // // // // //       <div className=\"modal\">\n// // // // // // //         <div className=\"modal-header\">\n// // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // //           <button onClick={onClose}>×</button>\n// // // // // // //         </div>\n        \n// // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // //           <div className=\"form-group\">\n// // // // // // //             <label>SubDomain Title</label>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={formData.title}\n// // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // //               required\n// // // // // // //             />\n// // // // // // //             {formData.title && (\n// // // // // // //               <div className=\"slug-preview\">\n// // // // // // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // // // // // //               </div>\n// // // // // // //             )}\n// // // // // // //           </div>\n          \n// // // // // // //           <div className=\"form-group\">\n// // // // // // //             <label>Description (Optional)</label>\n// // // // // // //             <textarea\n// // // // // // //               value={formData.description}\n// // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // //               rows={3}\n// // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // //             />\n// // // // // // //           </div>\n          \n// // // // // // //           <div className=\"modal-info\">\n// // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // //             {parent && (\n// // // // // // //               <>\n// // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // //               </>\n// // // // // // //             )}\n// // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // //           </div>\n          \n// // // // // // //           <div className=\"modal-actions\">\n// // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // //               Cancel\n// // // // // // //             </button>\n// // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // //             </button>\n// // // // // // //           </div>\n// // // // // // //         </form>\n// // // // // // //       </div>\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // export default SubDomainManagement;\n\n\n\n// // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // import {\n// // // // // // // //   FiPlus,\n// // // // // // // //   FiEdit,\n// // // // // // // //   FiTrash2,\n// // // // // // // //   FiChevronDown,\n// // // // // // // //   FiChevronRight,\n// // // // // // // //   FiFolder,\n// // // // // // // //   FiFolderPlus,\n// // // // // // // //   FiFileText,\n// // // // // // // //   FiArrowLeft,\n// // // // // // // //   FiMoreVertical,\n// // // // // // // //   FiMove,\n// // // // // // // //   FiTarget\n// // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // const SubDomainManagement = () => {\n// // // // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // // //   const { domainId } = useParams();\n// // // // // // // //   const navigate = useNavigate();\n  \n// // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // //     domainId,\n// // // // // // // //     domain: domain?.title,\n// // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // //     loading,\n// // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // //   });\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     if (domainId) {\n// // // // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // //     }\n// // // // // // // //   }, [domainId]);\n\n// // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // //     try {\n// // // // // // // //       setLoading(true);\n      \n// // // // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // // //       // First, let's try to get domain details\n// // // // // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // // // //       // Extract domain from response\n// // // // // // // //       let domainData = null;\n// // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // //       }\n      \n// // // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // //       if (!domainData) {\n// // // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // //         domainData = {\n// // // // // // // //           id: domainId,\n// // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // //           description: 'Loading domain details...',\n// // // // // // // //           projectCount: 0\n// // // // // // // //         };\n// // // // // // // //       }\n      \n// // // // // // // //       setDomain(domainData);\n      \n// // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // //       try {\n// // // // // // // //         console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // //         console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // // // // // //         // Auto-expand first level\n// // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // //           console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // //         }\n// // // // // // // //       } catch (hierarchyError) {\n// // // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // //         setSubDomains([]);\n// // // // // // // //       }\n      \n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // // // //       // Create fallback domain\n// // // // // // // //       setDomain({\n// // // // // // // //         id: domainId,\n// // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // //         description: 'Error loading domain details',\n// // // // // // // //         projectCount: 0\n// // // // // // // //       });\n// // // // // // // //       setSubDomains([]);\n// // // // // // // //     } finally {\n// // // // // // // //       setLoading(false);\n// // // // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // // //     setSelectedParent(parent);\n// // // // // // // //     setEditingSubDomain(null);\n// // // // // // // //     setShowAddModal(true);\n    \n// // // // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // //       showAddModal: true, \n// // // // // // // //       selectedParent: parent?.title,\n// // // // // // // //       editingSubDomain: null \n// // // // // // // //     });\n// // // // // // // //   };\n\n// // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // // //     setSelectedParent(null);\n// // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // //     setShowAddModal(true);\n// // // // // // // //   };\n\n// // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // //     if (hasChildren) {\n// // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // //     }\n// // // // // // // //     if (hasProjects) {\n// // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // //     }\n    \n// // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // //       return;\n// // // // // // // //     }\n\n// // // // // // // //     try {\n// // // // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // //     } else {\n// // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // //     }\n// // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // //   };\n\n// // // // // // // //   if (loading) {\n// // // // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // // //     return (\n// // // // // // // //       <div className=\"loading-container\">\n// // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // //       </div>\n// // // // // // // //     );\n// // // // // // // //   }\n\n// // // // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // //   return (\n// // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // //       <div className=\"page-header\">\n// // // // // // // //         <div className=\"header-content\">\n// // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // //             <button \n// // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // //             >\n// // // // // // // //               <FiArrowLeft />\n// // // // // // // //               Domains\n// // // // // // // //             </button>\n// // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // //           </div>\n// // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // //         </div>\n// // // // // // // //         <div className=\"header-actions\">\n// // // // // // // //           <button \n// // // // // // // //             className=\"primary-button\" \n// // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // //           >\n// // // // // // // //             <FiPlus />\n// // // // // // // //             Add Root SubDomain\n// // // // // // // //           </button>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Quick Guide */}\n// // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Domain Info Card */}\n// // // // // // // //       {domain && (\n// // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // //             <FiFolder />\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"domain-details\">\n// // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // //             <p>{domain.description}</p>\n// // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // //               <span className=\"stat-item\">\n// // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // //               </span>\n// // // // // // // //               <span className=\"stat-item\">\n// // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // //               </span>\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       )}\n\n// // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // //         <div className=\"tree-header\">\n// // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // //             <span className=\"legend-item\">\n// // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // //               Has children\n// // // // // // // //             </span>\n// // // // // // // //             <span className=\"legend-item\">\n// // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // //               Leaf (can have projects)\n// // // // // // // //             </span>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n\n// // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // //               <SubDomainNode\n// // // // // // // //                 key={subDomain.id}\n// // // // // // // //                 subDomain={subDomain}\n// // // // // // // //                 level={0}\n// // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // //               />\n// // // // // // // //             ))}\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // //               <div className=\"example-tree\">\n// // // // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // // // //               </div>\n// // // // // // // //             </div>\n// // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // //               <button \n// // // // // // // //                 className=\"primary-button large\" \n// // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // //               >\n// // // // // // // //                 <FiPlus />\n// // // // // // // //                 Create Your First SubDomain\n// // // // // // // //               </button>\n// // // // // // // //               <p className=\"help-text\">\n// // // // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // //               </p>\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // //       {showAddModal && (\n// // // // // // // //         <SubDomainModal\n// // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // //           parent={selectedParent}\n// // // // // // // //           domain={domain}\n// // // // // // // //           onClose={() => {\n// // // // // // // //             setShowAddModal(false);\n// // // // // // // //             setEditingSubDomain(null);\n// // // // // // // //             setSelectedParent(null);\n// // // // // // // //           }}\n// // // // // // // //           onSave={() => {\n// // // // // // // //             setShowAddModal(false);\n// // // // // // // //             setEditingSubDomain(null);\n// // // // // // // //             setSelectedParent(null);\n// // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // //           }}\n// // // // // // // //         />\n// // // // // // // //       )}\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // // SubDomain Node Component\n// // // // // // // // const SubDomainNode = ({ \n// // // // // // // //   subDomain, \n// // // // // // // //   level, \n// // // // // // // //   isExpanded, \n// // // // // // // //   onToggleExpanded, \n// // // // // // // //   onEdit, \n// // // // // // // //   onDelete, \n// // // // // // // //   onAddChild,\n// // // // // // // //   expandedNodes \n// // // // // // // // }) => {\n// // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // // // //     title: subDomain.title,\n// // // // // // // //     level,\n// // // // // // // //     hasChildren,\n// // // // // // // //     isLeaf,\n// // // // // // // //     isExpanded,\n// // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // //   });\n\n// // // // // // // //   return (\n// // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // //       <div className=\"node-content\">\n// // // // // // // //         <div className=\"node-main\">\n// // // // // // // //           {hasChildren ? (\n// // // // // // // //             <button \n// // // // // // // //               className=\"expand-button\"\n// // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // //             >\n// // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // //             </button>\n// // // // // // // //           ) : (\n// // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // //           )}\n          \n// // // // // // // //           <div className=\"node-icon\">\n// // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // //           </div>\n          \n// // // // // // // //           <div className=\"node-info\">\n// // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // //             <div className=\"node-stats\">\n// // // // // // // //               {hasChildren && (\n// // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //               {isLeaf && (\n// // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // //                   Can have projects\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n        \n// // // // // // // //         <div className=\"node-actions\">\n// // // // // // // //           <button \n// // // // // // // //             className=\"action-button add\" \n// // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // //           >\n// // // // // // // //             <FiPlus />\n// // // // // // // //           </button>\n// // // // // // // //           <div className=\"action-menu\">\n// // // // // // // //             <button \n// // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // //               title=\"More actions\"\n// // // // // // // //             >\n// // // // // // // //               <FiMoreVertical />\n// // // // // // // //             </button>\n// // // // // // // //             {showMenu && (\n// // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onEdit(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }}>\n// // // // // // // //                   <FiEdit /> Edit\n// // // // // // // //                 </button>\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onAddChild(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }}>\n// // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // //                 </button>\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onDelete(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }} className=\"danger\">\n// // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // //                 </button>\n// // // // // // // //               </div>\n// // // // // // // //             )}\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n      \n// // // // // // // //       {/* Children */}\n// // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // //         <div className=\"node-children\">\n// // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // //             <SubDomainNode\n// // // // // // // //               key={child.id}\n// // // // // // // //               subDomain={child}\n// // // // // // // //               level={level + 1}\n// // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // //               onEdit={onEdit}\n// // // // // // // //               onDelete={onDelete}\n// // // // // // // //               onAddChild={onAddChild}\n// // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // //             />\n// // // // // // // //           ))}\n// // // // // // // //         </div>\n// // // // // // // //       )}\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // // SubDomain Modal Component\n// // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // //     title: subDomain?.title || '',\n// // // // // // // //     description: subDomain?.description || ''\n// // // // // // // //   });\n// // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // // // //     isEditing: !!subDomain,\n// // // // // // // //     parentTitle: parent?.title,\n// // // // // // // //     domainTitle: domain?.title,\n// // // // // // // //     formData\n// // // // // // // //   });\n\n// // // // // // // //   // Generate slug preview\n// // // // // // // //   const generateSlug = (title) => {\n// // // // // // // //     return title\n// // // // // // // //       .toLowerCase()\n// // // // // // // //       .replace(/[^a-z0-9]/g, '-')\n// // // // // // // //       .replace(/-+/g, '-')\n// // // // // // // //       .replace(/^-|-$/g, '');\n// // // // // // // //   };\n\n// // // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // //     e.preventDefault();\n// // // // // // // //     setLoading(true);\n\n// // // // // // // //     try {\n// // // // // // // //       // Generate slug from title\n// // // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // // //       const requestData = {\n// // // // // // // //         ...formData,\n// // // // // // // //         slug: slug,\n// // // // // // // //         domainId: domain.id,\n// // // // // // // //         parentId: parent?.id || null\n// // // // // // // //       };\n\n// // // // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Generated slug:', slug);\n// // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // //       if (subDomain) {\n// // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // //       } else {\n// // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // //       }\n\n// // // // // // // //       onSave();\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // //     } finally {\n// // // // // // // //       setLoading(false);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const getModalTitle = () => {\n// // // // // // // //     if (subDomain) {\n// // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // //     }\n// // // // // // // //     if (parent) {\n// // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // //     }\n// // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // //   };\n\n// // // // // // // //   const getLevel = () => {\n// // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // //     // This is a simplified level calculation\n// // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // //       <div className=\"modal\">\n// // // // // // // //         <div className=\"modal-header\">\n// // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // //           <button onClick={onClose}>×</button>\n// // // // // // // //         </div>\n        \n// // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // //           <div className=\"form-group\">\n// // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={formData.title}\n// // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // //               required\n// // // // // // // //             />\n// // // // // // // //             {formData.title && (\n// // // // // // // //               <div className=\"slug-preview\">\n// // // // // // // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // // // // // // //               </div>\n// // // // // // // //             )}\n// // // // // // // //           </div>\n          \n// // // // // // // //           <div className=\"form-group\">\n// // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // //             <textarea\n// // // // // // // //               value={formData.description}\n// // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // //               rows={3}\n// // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // //             />\n// // // // // // // //           </div>\n          \n// // // // // // // //           <div className=\"modal-info\">\n// // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // //             {parent && (\n// // // // // // // //               <>\n// // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // //               </>\n// // // // // // // //             )}\n// // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // //           </div>\n          \n// // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // //               Cancel\n// // // // // // // //             </button>\n// // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // //             </button>\n// // // // // // // //           </div>\n// // // // // // // //         </form>\n// // // // // // // //       </div>\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // export default SubDomainManagement;\n\n\n// // // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // import {\n// // // // // // // // //   FiPlus,\n// // // // // // // // //   FiEdit,\n// // // // // // // // //   FiTrash2,\n// // // // // // // // //   FiChevronDown,\n// // // // // // // // //   FiChevronRight,\n// // // // // // // // //   FiFolder,\n// // // // // // // // //   FiFolderPlus,\n// // // // // // // // //   FiFileText,\n// // // // // // // // //   FiArrowLeft,\n// // // // // // // // //   FiMoreVertical,\n// // // // // // // // //   FiMove,\n// // // // // // // // //   FiTarget\n// // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // //   const navigate = useNavigate();\n  \n// // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // //     domainId,\n// // // // // // // // //     domain: domain?.title,\n// // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // //     loading,\n// // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // //   });\n\n// // // // // // // // //   useEffect(() => {\n// // // // // // // // //     if (domainId) {\n// // // // // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // //     }\n// // // // // // // // //   }, [domainId]);\n\n// // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // //     try {\n// // // // // // // // //       setLoading(true);\n      \n// // // // // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // // // //       // First, let's try to get domain details\n// // // // // // // // //       console.log('🌐 SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // // //       console.log('✅ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // // // // //       // Extract domain from response\n// // // // // // // // //       let domainData = null;\n// // // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // // //       }\n      \n// // // // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // // //       if (!domainData) {\n// // // // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // // //         domainData = {\n// // // // // // // // //           id: domainId,\n// // // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // // //           description: 'Loading domain details...',\n// // // // // // // // //           projectCount: 0\n// // // // // // // // //         };\n// // // // // // // // //       }\n      \n// // // // // // // // //       setDomain(domainData);\n      \n// // // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // // //       try {\n// // // // // // // // //         console.log('🌐 SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // // //         console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // // //         console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // // // // // // //         // Auto-expand first level\n// // // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // //           console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // //         }\n// // // // // // // // //       } catch (hierarchyError) {\n// // // // // // // // //         console.log('⚠️ SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // // //         setSubDomains([]);\n// // // // // // // // //       }\n      \n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // // // // //       // Create fallback domain\n// // // // // // // // //       setDomain({\n// // // // // // // // //         id: domainId,\n// // // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // // //         description: 'Error loading domain details',\n// // // // // // // // //         projectCount: 0\n// // // // // // // // //       });\n// // // // // // // // //       setSubDomains([]);\n// // // // // // // // //     } finally {\n// // // // // // // // //       setLoading(false);\n// // // // // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // //     setShowAddModal(true);\n    \n// // // // // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // //       showAddModal: true, \n// // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // //       editingSubDomain: null \n// // // // // // // // //     });\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // // // //     setSelectedParent(null);\n// // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // //     setShowAddModal(true);\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // //     if (hasChildren) {\n// // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // //     }\n// // // // // // // // //     if (hasProjects) {\n// // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // //     }\n    \n// // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // //       return;\n// // // // // // // // //     }\n\n// // // // // // // // //     try {\n// // // // // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // //     } else {\n// // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // //     }\n// // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // //   };\n\n// // // // // // // // //   if (loading) {\n// // // // // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // // // //     return (\n// // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // //       </div>\n// // // // // // // // //     );\n// // // // // // // // //   }\n\n// // // // // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // //             <button \n// // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // //             >\n// // // // // // // // //               <FiArrowLeft />\n// // // // // // // // //               Domains\n// // // // // // // // //             </button>\n// // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // // //         </div>\n// // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // //           <button \n// // // // // // // // //             className=\"primary-button\" \n// // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // //           >\n// // // // // // // // //             <FiPlus />\n// // // // // // // // //             Add Root SubDomain\n// // // // // // // // //           </button>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // //       {domain && (\n// // // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // // //             <FiFolder />\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"domain-details\">\n// // // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // // //             <p>{domain.description}</p>\n// // // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // //               </span>\n// // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // //               </span>\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       )}\n\n// // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // //               Has children\n// // // // // // // // //             </span>\n// // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // //               Leaf (can have projects)\n// // // // // // // // //             </span>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n\n// // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // //               <SubDomainNode\n// // // // // // // // //                 key={subDomain.id}\n// // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // //                 level={0}\n// // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // //               />\n// // // // // // // // //             ))}\n// // // // // // // // //           </div>\n// // // // // // // // //         ) : (\n// // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // // // // //               </div>\n// // // // // // // // //             </div>\n// // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // //               <button \n// // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // //               >\n// // // // // // // // //                 <FiPlus />\n// // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // //               </button>\n// // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // //               </p>\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         )}\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // //       {showAddModal && (\n// // // // // // // // //         <SubDomainModal\n// // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // //           parent={selectedParent}\n// // // // // // // // //           domain={domain}\n// // // // // // // // //           onClose={() => {\n// // // // // // // // //             setShowAddModal(false);\n// // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // //             setSelectedParent(null);\n// // // // // // // // //           }}\n// // // // // // // // //           onSave={() => {\n// // // // // // // // //             setShowAddModal(false);\n// // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // //             setSelectedParent(null);\n// // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // //           }}\n// // // // // // // // //         />\n// // // // // // // // //       )}\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // // SubDomain Node Component\n// // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // //   subDomain, \n// // // // // // // // //   level, \n// // // // // // // // //   isExpanded, \n// // // // // // // // //   onToggleExpanded, \n// // // // // // // // //   onEdit, \n// // // // // // // // //   onDelete, \n// // // // // // // // //   onAddChild,\n// // // // // // // // //   expandedNodes \n// // // // // // // // // }) => {\n// // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // //     title: subDomain.title,\n// // // // // // // // //     level,\n// // // // // // // // //     hasChildren,\n// // // // // // // // //     isLeaf,\n// // // // // // // // //     isExpanded,\n// // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // //   });\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // //           {hasChildren ? (\n// // // // // // // // //             <button \n// // // // // // // // //               className=\"expand-button\"\n// // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // //             >\n// // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // //             </button>\n// // // // // // // // //           ) : (\n// // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // //           )}\n          \n// // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // //           </div>\n          \n// // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // //               {hasChildren && (\n// // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //               {isLeaf && (\n// // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // //                   Can have projects\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n        \n// // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // //           <button \n// // // // // // // // //             className=\"action-button add\" \n// // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // //           >\n// // // // // // // // //             <FiPlus />\n// // // // // // // // //           </button>\n// // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // //             <button \n// // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // //               title=\"More actions\"\n// // // // // // // // //             >\n// // // // // // // // //               <FiMoreVertical />\n// // // // // // // // //             </button>\n// // // // // // // // //             {showMenu && (\n// // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onEdit(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }}>\n// // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // //                 </button>\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onAddChild(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }}>\n// // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // //                 </button>\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onDelete(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }} className=\"danger\">\n// // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // //                 </button>\n// // // // // // // // //               </div>\n// // // // // // // // //             )}\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n      \n// // // // // // // // //       {/* Children */}\n// // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // //             <SubDomainNode\n// // // // // // // // //               key={child.id}\n// // // // // // // // //               subDomain={child}\n// // // // // // // // //               level={level + 1}\n// // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // //               onEdit={onEdit}\n// // // // // // // // //               onDelete={onDelete}\n// // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // //             />\n// // // // // // // // //           ))}\n// // // // // // // // //         </div>\n// // // // // // // // //       )}\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // //   });\n// // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // //     formData\n// // // // // // // // //   });\n\n// // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // //     e.preventDefault();\n// // // // // // // // //     setLoading(true);\n\n// // // // // // // // //     try {\n// // // // // // // // //       const requestData = {\n// // // // // // // // //         ...formData,\n// // // // // // // // //         domainId: domain.id,\n// // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // //       };\n\n// // // // // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // //       if (subDomain) {\n// // // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // //       } else {\n// // // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // //       }\n\n// // // // // // // // //       onSave();\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // //     } finally {\n// // // // // // // // //       setLoading(false);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // //     if (subDomain) {\n// // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // //     }\n// // // // // // // // //     if (parent) {\n// // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // //     }\n// // // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // // //   };\n\n// // // // // // // // //   const getLevel = () => {\n// // // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // // //     // This is a simplified level calculation\n// // // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // // //   };\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // //       <div className=\"modal\">\n// // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // //           <button onClick={onClose}>×</button>\n// // // // // // // // //         </div>\n        \n// // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={formData.title}\n// // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // //               required\n// // // // // // // // //             />\n// // // // // // // // //           </div>\n          \n// // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // //             <textarea\n// // // // // // // // //               value={formData.description}\n// // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // //               rows={3}\n// // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // //             />\n// // // // // // // // //           </div>\n          \n// // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // // //             {parent && (\n// // // // // // // // //               <>\n// // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // //               </>\n// // // // // // // // //             )}\n// // // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // // //           </div>\n          \n// // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // //               Cancel\n// // // // // // // // //             </button>\n// // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // //             </button>\n// // // // // // // // //           </div>\n// // // // // // // // //         </form>\n// // // // // // // // //       </div>\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // export default SubDomainManagement;\n\n\n// // // // // // // // // // // src/components/domains/SubDomainManagement.js - NEW FILE\n// // // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // // import {\n// // // // // // // // // //   FiPlus,\n// // // // // // // // // //   FiEdit,\n// // // // // // // // // //   FiTrash2,\n// // // // // // // // // //   FiChevronDown,\n// // // // // // // // // //   FiChevronRight,\n// // // // // // // // // //   FiFolder,\n// // // // // // // // // //   FiFolderPlus,\n// // // // // // // // // //   FiFileText,\n// // // // // // // // // //   FiArrowLeft,\n// // // // // // // // // //   FiMoreVertical,\n// // // // // // // // // //   FiMove,\n// // // // // // // // // //   FiTarget\n// // // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // // //   console.log('🚀 SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // // //   const navigate = useNavigate();\n  \n// // // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // // //   console.log('📊 SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // // //     domainId,\n// // // // // // // // // //     domain: domain?.title,\n// // // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // // //     loading,\n// // // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // // //   });\n\n// // // // // // // // // //   useEffect(() => {\n// // // // // // // // // //     if (domainId) {\n// // // // // // // // // //       console.log('🔄 SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // //     }\n// // // // // // // // // //   }, [domainId]);\n\n// // // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       setLoading(true);\n      \n// // // // // // // // // //       console.log('🔍 SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // // //       console.log('📋 SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // // // // //       // Fetch domain details and hierarchy\n// // // // // // // // // //       const [domainResponse, hierarchyResponse] = await Promise.all([\n// // // // // // // // // //         authService.getDomains({ id: domainId }),\n// // // // // // // // // //         authService.getDomainHierarchy(domainId)\n// // // // // // // // // //       ]);\n      \n// // // // // // // // // //       console.log('✅ SUBDOMAIN FETCH - Domain response:', domainResponse.data);\n// // // // // // // // // //       console.log('✅ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n      \n// // // // // // // // // //       const domainData = domainResponse.data?.domains?.[0] || \n// // // // // // // // // //                         domainResponse.data?.data?.domains?.[0] || \n// // // // // // // // // //                         domainResponse.data;\n      \n// // // // // // // // // //       const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n      \n// // // // // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted domain:', domainData);\n// // // // // // // // // //       console.log('🎯 SUBDOMAIN FETCH - Extracted hierarchy:', hierarchyData);\n      \n// // // // // // // // // //       setDomain(domainData);\n// // // // // // // // // //       setSubDomains(hierarchyData?.subDomains || []);\n      \n// // // // // // // // // //       // Auto-expand first level\n// // // // // // // // // //       if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // // //         const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // // //         console.log('🌳 SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // // //       }\n      \n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // // //       console.error('❌ SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // // //       toast.error('Failed to fetch sub-domains');\n// // // // // // // // // //     } finally {\n// // // // // // // // // //       setLoading(false);\n// // // // // // // // // //       console.log('🏁 SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // // //     console.log('➕ SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // // //     setShowAddModal(true);\n    \n// // // // // // // // // //     console.log('📊 SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // // //       showAddModal: true, \n// // // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // // //       editingSubDomain: null \n// // // // // // // // // //     });\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // // //     console.log('✏️ SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // // //     console.log('📋 SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // // // // //     setSelectedParent(null);\n// // // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // // //     setShowAddModal(true);\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // // //     if (hasChildren) {\n// // // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // // //     }\n// // // // // // // // // //     if (hasProjects) {\n// // // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // // //     }\n    \n// // // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // // //       return;\n// // // // // // // // // //     }\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       console.log('🗑️ SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // // //       console.log('📋 SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // // // // //       console.log('✅ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('❌ SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // // //     console.log('🔄 SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // // //       console.log('📊 SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // // //     } else {\n// // // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // // //       console.log('📊 SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // // //     }\n// // // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const isLeafNode = (subDomain) => {\n// // // // // // // // // //     return !subDomain.children || subDomain.children.length === 0;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const getNodeLevel = (subDomain, level = 0) => {\n// // // // // // // // // //     return level;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   if (loading) {\n// // // // // // // // // //     console.log('⏳ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // // // // //     return (\n// // // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     );\n// // // // // // // // // //   }\n\n// // // // // // // // // //   if (!domain) {\n// // // // // // // // // //     console.log('❌ SUBDOMAIN MANAGEMENT - Domain not found');\n    \n// // // // // // // // // //     return (\n// // // // // // // // // //       <div className=\"empty-state\">\n// // // // // // // // // //         <h3>Domain not found</h3>\n// // // // // // // // // //         <p>The requested domain could not be loaded.</p>\n// // // // // // // // // //         <button \n// // // // // // // // // //           className=\"primary-button\" \n// // // // // // // // // //           onClick={() => navigate('/domains')}\n// // // // // // // // // //         >\n// // // // // // // // // //           <FiArrowLeft />\n// // // // // // // // // //           Back to Domains\n// // // // // // // // // //         </button>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     );\n// // // // // // // // // //   }\n\n// // // // // // // // // //   console.log('🎨 SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // // //             <button \n// // // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // // //             >\n// // // // // // // // // //               <FiArrowLeft />\n// // // // // // // // // //               Domains\n// // // // // // // // // //             </button>\n// // // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // // //             <span className=\"breadcrumb-current\">{domain.title}</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // // //           <p>Manage the hierarchical structure of {domain.title}</p>\n// // // // // // // // // //         </div>\n// // // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // // //           <button \n// // // // // // // // // //             className=\"primary-button\" \n// // // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // // //           >\n// // // // // // // // // //             <FiPlus />\n// // // // // // // // // //             Add Root SubDomain\n// // // // // // // // // //           </button>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // // //         <h3>How to Add SubDomains:</h3>\n// // // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // // //       <div className=\"domain-info-card\">\n// // // // // // // // // //         <div className=\"domain-icon\">\n// // // // // // // // // //           <FiFolder />\n// // // // // // // // // //         </div>\n// // // // // // // // // //         <div className=\"domain-details\">\n// // // // // // // // // //           <h3>{domain.title}</h3>\n// // // // // // // // // //           <p>{domain.description}</p>\n// // // // // // // // // //           <div className=\"domain-stats\">\n// // // // // // // // // //             <span className=\"stat-item\">\n// // // // // // // // // //               <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // // //             </span>\n// // // // // // // // // //             <span className=\"stat-item\">\n// // // // // // // // // //               <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // // //             </span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // // //               Has children\n// // // // // // // // // //             </span>\n// // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // // //               Leaf (can have projects)\n// // // // // // // // // //             </span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n\n// // // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // // //               <SubDomainNode\n// // // // // // // // // //                 key={subDomain.id}\n// // // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // // //                 level={0}\n// // // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // // //               />\n// // // // // // // // // //             ))}\n// // // // // // // // // //           </div>\n// // // // // // // // // //         ) : (\n// // // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // // //             <p>Start organizing your {domain.title} projects by creating subdomains</p>\n// // // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // // //                 <div className=\"example-item\">📂 Machine Learning</div>\n// // // // // // // // // //                 <div className=\"example-item nested\">🎯 Deep Learning</div>\n// // // // // // // // // //                 <div className=\"example-item nested\">🎯 Computer Vision</div>\n// // // // // // // // // //                 <div className=\"example-item\">🎯 Data Science</div>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             </div>\n// // // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // // //               <button \n// // // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // // //               >\n// // // // // // // // // //                 <FiPlus />\n// // // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // // //               </button>\n// // // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // // //                 💡 Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // // //               </p>\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         )}\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // // //       {showAddModal && (\n// // // // // // // // // //         <SubDomainModal\n// // // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // // //           parent={selectedParent}\n// // // // // // // // // //           domain={domain}\n// // // // // // // // // //           onClose={() => {\n// // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // //           }}\n// // // // // // // // // //           onSave={() => {\n// // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // // //           }}\n// // // // // // // // // //         />\n// // // // // // // // // //       )}\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // SubDomain Node Component\n// // // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // // //   subDomain, \n// // // // // // // // // //   level, \n// // // // // // // // // //   isExpanded, \n// // // // // // // // // //   onToggleExpanded, \n// // // // // // // // // //   onEdit, \n// // // // // // // // // //   onDelete, \n// // // // // // // // // //   onAddChild,\n// // // // // // // // // //   expandedNodes \n// // // // // // // // // // }) => {\n// // // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // // //   console.log('🌳 SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // // //     title: subDomain.title,\n// // // // // // // // // //     level,\n// // // // // // // // // //     hasChildren,\n// // // // // // // // // //     isLeaf,\n// // // // // // // // // //     isExpanded,\n// // // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // // //   });\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // // //           {hasChildren ? (\n// // // // // // // // // //             <button \n// // // // // // // // // //               className=\"expand-button\"\n// // // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // // //             >\n// // // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // // //             </button>\n// // // // // // // // // //           ) : (\n// // // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // // //           )}\n          \n// // // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // // //           </div>\n          \n// // // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // // //               {hasChildren && (\n// // // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //               {isLeaf && (\n// // // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // // //                   Can have projects\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n        \n// // // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // // //           <button \n// // // // // // // // // //             className=\"action-button add\" \n// // // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // // //           >\n// // // // // // // // // //             <FiPlus />\n// // // // // // // // // //           </button>\n// // // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // // //             <button \n// // // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // // //               title=\"More actions\"\n// // // // // // // // // //             >\n// // // // // // // // // //               <FiMoreVertical />\n// // // // // // // // // //             </button>\n// // // // // // // // // //             {showMenu && (\n// // // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // // //                 <button onClick={() => onEdit(subDomain)}>\n// // // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // // //                 </button>\n// // // // // // // // // //                 <button onClick={() => onAddChild(subDomain)}>\n// // // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // // //                 </button>\n// // // // // // // // // //                 <button onClick={() => onDelete(subDomain)} className=\"danger\">\n// // // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // // //                 </button>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             )}\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n      \n// // // // // // // // // //       {/* Children */}\n// // // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // // //             <SubDomainNode\n// // // // // // // // // //               key={child.id}\n// // // // // // // // // //               subDomain={child}\n// // // // // // // // // //               level={level + 1}\n// // // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // // //               onEdit={onEdit}\n// // // // // // // // // //               onDelete={onDelete}\n// // // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // // //             />\n// // // // // // // // // //           ))}\n// // // // // // // // // //         </div>\n// // // // // // // // // //       )}\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // // //   });\n// // // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // // //   console.log('📝 SUBDOMAIN MODAL - Props:', {\n// // // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // // //     formData\n// // // // // // // // // //   });\n\n// // // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // // //     e.preventDefault();\n// // // // // // // // // //     setLoading(true);\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       const requestData = {\n// // // // // // // // // //         ...formData,\n// // // // // // // // // //         domainId: domain.id,\n// // // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // // //       };\n\n// // // // // // // // // //       console.log('💾 SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // // //       console.log('📋 SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // // //       if (subDomain) {\n// // // // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // // //         console.log('✅ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // // //       } else {\n// // // // // // // // // //         console.log('🌐 SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // // //         console.log('✅ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // // //       }\n\n// // // // // // // // // //       onSave();\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('❌ SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // // //     } finally {\n// // // // // // // // // //       setLoading(false);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // // //     if (subDomain) {\n// // // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // // //     }\n// // // // // // // // // //     if (parent) {\n// // // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // // //     }\n// // // // // // // // // //     return `Add Root SubDomain in: ${domain.title}`;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // // //       <div className=\"modal\">\n// // // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // // //           <button onClick={onClose}>×</button>\n// // // // // // // // // //         </div>\n        \n// // // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={formData.title}\n// // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // // //               required\n// // // // // // // // // //             />\n// // // // // // // // // //           </div>\n          \n// // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // // //             <textarea\n// // // // // // // // // //               value={formData.description}\n// // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // // //               rows={3}\n// // // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // // //             />\n// // // // // // // // // //           </div>\n          \n// // // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // // //             <strong>Domain:</strong> {domain.title}<br />\n// // // // // // // // // //             {parent && (\n// // // // // // // // // //               <>\n// // // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // // //               </>\n// // // // // // // // // //             )}\n// // // // // // // // // //             <strong>Level:</strong> {parent ? `Level ${getLevel(parent) + 1}` : 'Root Level'}\n// // // // // // // // // //           </div>\n          \n// // // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // // //               Cancel\n// // // // // // // // // //             </button>\n// // // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // // //             </button>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </form>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // Helper function to get level\n// // // // // // // // // // const getLevel = (subDomain, level = 0) => {\n// // // // // // // // // //   // This would need to be calculated based on the hierarchy\n// // // // // // // // // //   return level + 1;\n// // // // // // // // // // };\n\n// // // // // // // // // // export default SubDomainManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}