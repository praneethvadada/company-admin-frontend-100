{"ast":null,"code":"import api from './api';\nexport const authService = {\n  // Login user\n  login: credentials => {\n    console.log('🔐 authService.login: Making login API call');\n    return api.post('/auth/login', credentials);\n  },\n  // Register new user\n  signup: userData => {\n    console.log('📝 authService.signup: Making signup API call');\n    console.log('�� Signup data (authService):', {\n      ...userData,\n      password: '***',\n      confirmPassword: '***'\n    });\n    return api.post('/auth/signup', userData);\n  },\n  // Verify token validity\n  verifyToken: () => {\n    console.log('🔍 authService.verifyToken: Verifying token validity');\n    return api.get('/auth/verify');\n  },\n  // Forgot password - send reset email\n  forgotPassword: email => {\n    console.log('🔑 authService.forgotPassword: Making forgot password API call');\n    return api.post('/auth/forgot-password', {\n      email\n    });\n  },\n  // Reset password with token\n  resetPassword: resetData => {\n    console.log('🔄 authService.resetPassword: Making reset password API call');\n    return api.post('/auth/reset-password', resetData);\n  },\n  // Change password (authenticated user)\n  changePassword: passwordData => {\n    console.log('🔐 authService.changePassword: Making change password API call');\n    return api.post('/auth/change-password', passwordData);\n  },\n  // Logout user\n  logout: () => {\n    console.log('🚪 authService.logout: Making logout API call');\n    return api.post('/auth/logout');\n  },\n  // Set auth token in headers\n  setAuthToken: token => {\n    console.log('🔑 authService.setAuthToken: Setting auth token in API headers');\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  // Remove auth token from headers\n  removeAuthToken: () => {\n    console.log('🗑️ authService.removeAuthToken: Removing auth token from API headers');\n    delete api.defaults.headers.common['Authorization'];\n  },\n  // Dashboard API calls\n  getDashboardStats: () => {\n    console.log('📊 authService.getDashboardStats: Making dashboard stats API call');\n    return api.get('/admin/dashboard/stats');\n  },\n  // Domain management\n  getDomains: () => {\n    console.log('📁 authService.getDomains: Making get domains API call');\n    return api.get('/admin/domains');\n  },\n  // Project management\n  getProjects: () => {\n    console.log('📋 authService.getProjects: Making get projects API call');\n    return api.get('/admin/projects');\n  },\n  // Leads management\n  getLeads: () => {\n    console.log('👥 authService.getLeads: Making get leads API call');\n    return api.get('/admin/leads');\n  }\n};","map":{"version":3,"names":["api","authService","login","credentials","console","log","post","signup","userData","password","confirmPassword","verifyToken","get","forgotPassword","email","resetPassword","resetData","changePassword","passwordData","logout","setAuthToken","token","defaults","headers","common","removeAuthToken","getDashboardStats","getDomains","getProjects","getLeads"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/services/authService.js"],"sourcesContent":["import api from './api';\n\nexport const authService = {\n  // Login user\n  login: (credentials) => {\n    console.log('🔐 authService.login: Making login API call');\n    return api.post('/auth/login', credentials);\n  },\n\n  // Register new user\n  signup: (userData) => {\n    console.log('📝 authService.signup: Making signup API call');\n    console.log('�� Signup data (authService):', {\n      ...userData,\n      password: '***',\n      confirmPassword: '***'\n    });\n    return api.post('/auth/signup', userData);\n  },\n\n  // Verify token validity\n  verifyToken: () => {\n    console.log('🔍 authService.verifyToken: Verifying token validity');\n    return api.get('/auth/verify');\n  },\n\n  // Forgot password - send reset email\n  forgotPassword: (email) => {\n    console.log('🔑 authService.forgotPassword: Making forgot password API call');\n    return api.post('/auth/forgot-password', { email });\n  },\n\n  // Reset password with token\n  resetPassword: (resetData) => {\n    console.log('🔄 authService.resetPassword: Making reset password API call');\n    return api.post('/auth/reset-password', resetData);\n  },\n\n  // Change password (authenticated user)\n  changePassword: (passwordData) => {\n    console.log('🔐 authService.changePassword: Making change password API call');\n    return api.post('/auth/change-password', passwordData);\n  },\n\n  // Logout user\n  logout: () => {\n    console.log('🚪 authService.logout: Making logout API call');\n    return api.post('/auth/logout');\n  },\n\n  // Set auth token in headers\n  setAuthToken: (token) => {\n    console.log('🔑 authService.setAuthToken: Setting auth token in API headers');\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n\n  // Remove auth token from headers\n  removeAuthToken: () => {\n    console.log('🗑️ authService.removeAuthToken: Removing auth token from API headers');\n    delete api.defaults.headers.common['Authorization'];\n  },\n\n  // Dashboard API calls\n  getDashboardStats: () => {\n    console.log('📊 authService.getDashboardStats: Making dashboard stats API call');\n    return api.get('/admin/dashboard/stats');\n  },\n\n  // Domain management\n  getDomains: () => {\n    console.log('📁 authService.getDomains: Making get domains API call');\n    return api.get('/admin/domains');\n  },\n\n  // Project management\n  getProjects: () => {\n    console.log('📋 authService.getProjects: Making get projects API call');\n    return api.get('/admin/projects');\n  },\n\n  // Leads management\n  getLeads: () => {\n    console.log('👥 authService.getLeads: Making get leads API call');\n    return api.get('/admin/leads');\n  }\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,KAAK,EAAGC,WAAW,IAAK;IACtBC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1D,OAAOL,GAAG,CAACM,IAAI,CAAC,aAAa,EAAEH,WAAW,CAAC;EAC7C,CAAC;EAED;EACAI,MAAM,EAAGC,QAAQ,IAAK;IACpBJ,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC5DD,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;MAC3C,GAAGG,QAAQ;MACXC,QAAQ,EAAE,KAAK;MACfC,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOV,GAAG,CAACM,IAAI,CAAC,cAAc,EAAEE,QAAQ,CAAC;EAC3C,CAAC;EAED;EACAG,WAAW,EAAEA,CAAA,KAAM;IACjBP,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;IACnE,OAAOL,GAAG,CAACY,GAAG,CAAC,cAAc,CAAC;EAChC,CAAC;EAED;EACAC,cAAc,EAAGC,KAAK,IAAK;IACzBV,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;IAC7E,OAAOL,GAAG,CAACM,IAAI,CAAC,uBAAuB,EAAE;MAAEQ;IAAM,CAAC,CAAC;EACrD,CAAC;EAED;EACAC,aAAa,EAAGC,SAAS,IAAK;IAC5BZ,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;IAC3E,OAAOL,GAAG,CAACM,IAAI,CAAC,sBAAsB,EAAEU,SAAS,CAAC;EACpD,CAAC;EAED;EACAC,cAAc,EAAGC,YAAY,IAAK;IAChCd,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;IAC7E,OAAOL,GAAG,CAACM,IAAI,CAAC,uBAAuB,EAAEY,YAAY,CAAC;EACxD,CAAC;EAED;EACAC,MAAM,EAAEA,CAAA,KAAM;IACZf,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC5D,OAAOL,GAAG,CAACM,IAAI,CAAC,cAAc,CAAC;EACjC,CAAC;EAED;EACAc,YAAY,EAAGC,KAAK,IAAK;IACvBjB,OAAO,CAACC,GAAG,CAAC,gEAAgE,CAAC;IAC7EL,GAAG,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EAClE,CAAC;EAED;EACAI,eAAe,EAAEA,CAAA,KAAM;IACrBrB,OAAO,CAACC,GAAG,CAAC,uEAAuE,CAAC;IACpF,OAAOL,GAAG,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;EACrD,CAAC;EAED;EACAE,iBAAiB,EAAEA,CAAA,KAAM;IACvBtB,OAAO,CAACC,GAAG,CAAC,mEAAmE,CAAC;IAChF,OAAOL,GAAG,CAACY,GAAG,CAAC,wBAAwB,CAAC;EAC1C,CAAC;EAED;EACAe,UAAU,EAAEA,CAAA,KAAM;IAChBvB,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;IACrE,OAAOL,GAAG,CAACY,GAAG,CAAC,gBAAgB,CAAC;EAClC,CAAC;EAED;EACAgB,WAAW,EAAEA,CAAA,KAAM;IACjBxB,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;IACvE,OAAOL,GAAG,CAACY,GAAG,CAAC,iBAAiB,CAAC;EACnC,CAAC;EAED;EACAiB,QAAQ,EAAEA,CAAA,KAAM;IACdzB,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;IACjE,OAAOL,GAAG,CAACY,GAAG,CAAC,cAAc,CAAC;EAChC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}