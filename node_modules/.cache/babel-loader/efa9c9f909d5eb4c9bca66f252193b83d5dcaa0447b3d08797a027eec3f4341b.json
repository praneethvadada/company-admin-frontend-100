{"ast":null,"code":"// src/services/api.js - CREATE THIS FILE\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://192.168.108.229:5001/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`üåê API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  // Token is already set in headers via authService.setAuthToken()\n  return config;\n}, error => {\n  console.error('üåê API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  var _response$config$meth;\n  console.log(`‚úÖ API Response: ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url} - ${response.status}`);\n  return response;\n}, error => {\n  var _error$config, _error$config$method, _error$config2, _error$response, _error$response2, _error$response3, _error$response4;\n  console.error(`‚ùå API Error: ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : (_error$config$method = _error$config.method) === null || _error$config$method === void 0 ? void 0 : _error$config$method.toUpperCase()} ${(_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url} - ${(_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status}`, {\n    status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    message: error.message\n  });\n\n  // Handle 401 unauthorized errors\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n    console.log('üö™ Unauthorized access detected, redirecting to login...');\n    // Don't auto-redirect here, let the authService handle it\n  }\n  return Promise.reject(error);\n});\nexport default api;\n\n// import axios from 'axios';\n// import { cookieUtils } from '../utils/cookieUtils';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://192.168.108.229:5001/api';\n\n// console.log('üåê API Base URL:', API_BASE_URL);\n\n// const api = axios.create({\n//   baseURL: API_BASE_URL,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   timeout: 10000, // 10 seconds timeout\n// });\n\n// // Request interceptor to add auth token and log requests\n// api.interceptors.request.use(\n//   (config) => {\n//     console.log('üì§ API Request:', {\n//       method: config.method?.toUpperCase(),\n//       url: config.url,\n//       baseURL: config.baseURL,\n//       fullURL: `${config.baseURL}${config.url}`,\n//       headers: config.headers,\n//       data: config.data\n//     });\n\n//     // Get token from cookies\n//     const token = cookieUtils.getToken();\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token}`;\n//       console.log('üîë Added Authorization header from cookies');\n//     } else {\n//       console.log('‚ö†Ô∏è No auth token found in cookies');\n//     }\n\n//     return config;\n//   },\n//   (error) => {\n//     console.error('‚ùå API Request Error:', error);\n//     return Promise.reject(error);\n//   }\n// );\n\n// // Response interceptor to handle auth errors and log responses\n// api.interceptors.response.use(\n//   (response) => {\n//     console.log('üì• API Response Success:', {\n//       status: response.status,\n//       statusText: response.statusText,\n//       url: response.config.url,\n//       headers: response.headers,\n//       data: response.data,\n//       dataType: typeof response.data,\n//       dataKeys: typeof response.data === 'object' ? Object.keys(response.data) : 'Not an object'\n//     });\n//     return response;\n//   },\n//   (error) => {\n//     console.error('‚ùå API Response Error:', {\n//       status: error.response?.status,\n//       statusText: error.response?.statusText,\n//       url: error.config?.url,\n//       message: error.message,\n//       data: error.response?.data\n//     });\n\n//     if (error.response?.status === 401) {\n//       console.log('üö® 401 Unauthorized - Clearing auth data and redirecting to login');\n//       cookieUtils.clearAuth();\n\n//       // Only redirect if not already on login page\n//       if (window.location.pathname !== '/login') {\n//         window.location.href = '/login';\n//       }\n//     }\n\n//     return Promise.reject(error);\n//   }\n// );\n\n// export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_response$config$meth","status","_error$config","_error$config$method","_error$config2","_error$response","_error$response2","_error$response3","_error$response4","data","message"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/services/api.js"],"sourcesContent":["// src/services/api.js - CREATE THIS FILE\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://192.168.108.229:5001/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    console.log(`üåê API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    // Token is already set in headers via authService.setAuthToken()\n    return config;\n  },\n  (error) => {\n    console.error('üåê API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`‚úÖ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} - ${response.status}`);\n    return response;\n  },\n  (error) => {\n    console.error(`‚ùå API Error: ${error.config?.method?.toUpperCase()} ${error.config?.url} - ${error.response?.status}`, {\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message\n    });\n    \n    // Handle 401 unauthorized errors\n    if (error.response?.status === 401) {\n      console.log('üö™ Unauthorized access detected, redirecting to login...');\n      // Don't auto-redirect here, let the authService handle it\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n\n\n// import axios from 'axios';\n// import { cookieUtils } from '../utils/cookieUtils';\n\n// const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://192.168.108.229:5001/api';\n\n// console.log('üåê API Base URL:', API_BASE_URL);\n\n// const api = axios.create({\n//   baseURL: API_BASE_URL,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   timeout: 10000, // 10 seconds timeout\n// });\n\n// // Request interceptor to add auth token and log requests\n// api.interceptors.request.use(\n//   (config) => {\n//     console.log('üì§ API Request:', {\n//       method: config.method?.toUpperCase(),\n//       url: config.url,\n//       baseURL: config.baseURL,\n//       fullURL: `${config.baseURL}${config.url}`,\n//       headers: config.headers,\n//       data: config.data\n//     });\n    \n//     // Get token from cookies\n//     const token = cookieUtils.getToken();\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token}`;\n//       console.log('üîë Added Authorization header from cookies');\n//     } else {\n//       console.log('‚ö†Ô∏è No auth token found in cookies');\n//     }\n    \n//     return config;\n//   },\n//   (error) => {\n//     console.error('‚ùå API Request Error:', error);\n//     return Promise.reject(error);\n//   }\n// );\n\n// // Response interceptor to handle auth errors and log responses\n// api.interceptors.response.use(\n//   (response) => {\n//     console.log('üì• API Response Success:', {\n//       status: response.status,\n//       statusText: response.statusText,\n//       url: response.config.url,\n//       headers: response.headers,\n//       data: response.data,\n//       dataType: typeof response.data,\n//       dataKeys: typeof response.data === 'object' ? Object.keys(response.data) : 'Not an object'\n//     });\n//     return response;\n//   },\n//   (error) => {\n//     console.error('‚ùå API Response Error:', {\n//       status: error.response?.status,\n//       statusText: error.response?.statusText,\n//       url: error.config?.url,\n//       message: error.message,\n//       data: error.response?.data\n//     });\n    \n//     if (error.response?.status === 401) {\n//       console.log('üö® 401 Unauthorized - Clearing auth data and redirecting to login');\n//       cookieUtils.clearAuth();\n      \n//       // Only redirect if not already on login page\n//       if (window.location.pathname !== '/login') {\n//         window.location.href = '/login';\n//       }\n//     }\n    \n//     return Promise.reject(error);\n//   }\n// );\n\n// export default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}