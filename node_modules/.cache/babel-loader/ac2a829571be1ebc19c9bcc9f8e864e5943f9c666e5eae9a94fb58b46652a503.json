{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/internships/ManageBranches.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\n// src/components/internships/ManageBranches.js - REAL API INTEGRATION\n\nimport React, { useState, useEffect } from 'react';\nimport { FiPlus, FiEdit, FiTrash2, FiSettings, FiBookOpen, FiUsers, FiSearch, FiGrid, FiList } from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport Modal from '../common/Modal';\nimport ConfirmationModal from '../common/ConfirmationModal';\nimport { branchService } from '../../services/branchService';\nimport './ManageBranches.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageBranches = () => {\n  _s();\n  const [branches, setBranches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [editingBranch, setEditingBranch] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [branchToDelete, setBranchToDelete] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [viewMode, setViewMode] = useState('grid');\n  const [selectedBranch, setSelectedBranch] = useState(null);\n  const [showDomainModal, setShowDomainModal] = useState(false);\n  const [showInternshipModal, setShowInternshipModal] = useState(false);\n  useEffect(() => {\n    fetchBranches();\n  }, []);\n\n  // const fetchBranches = async () => {\n  //   try {\n  //     setLoading(true);\n  //     console.log('🔄 Fetching branches from API...');\n\n  //     const response = await branchService.getAllBranches();\n  //     console.log('✅ API Response:', response);\n\n  //     // Handle different response structures\n  //     const branchesData = response.data?.data || response.data || [];\n\n  //     if (Array.isArray(branchesData)) {\n  //       setBranches(branchesData);\n  //       toast.success(`Loaded ${branchesData.length} branches successfully!`);\n  //     } else {\n  //       console.warn('⚠️ Invalid response format:', response);\n  //       setBranches([]);\n  //       toast.warning('No branches found');\n  //     }\n  //   } catch (error) {\n  //     console.error('❌ Error fetching branches:', error);\n\n  //     if (error.response?.status === 401) {\n  //       toast.error('Authentication required. Please login again.');\n  //     } else if (error.response?.status === 500) {\n  //       toast.error('Server error. Please check if the backend is running.');\n  //     } else {\n  //       toast.error('Failed to fetch branches. Please try again.');\n  //     }\n\n  //     setBranches([]);\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  // src/components/internships/ManageBranches.js - FIXED RESPONSE PARSING\n\n  // Replace the fetchBranches function in your ManageBranches.js with this:\n\n  const fetchBranches = async () => {\n    try {\n      var _response$data, _response$data$data, _response$data2, _response$data3;\n      setLoading(true);\n      console.log('🔄 Fetching branches from API...');\n      const response = await branchService.getAllBranches();\n      console.log('✅ API Response:', response);\n\n      // ✅ FIXED: Correct data extraction from response\n      // Your API returns: { success: true, data: { branches: [...], pagination: {...} } }\n      // So we need to access response.data.data.branches\n\n      let branchesData = [];\n\n      // Handle different possible response structures\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.branches) {\n        // Standard API response: response.data.data.branches\n        branchesData = response.data.data.branches;\n        console.log('✅ Using response.data.data.branches:', branchesData);\n      } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.branches) {\n        // Alternative structure: response.data.branches\n        branchesData = response.data.branches;\n        console.log('✅ Using response.data.branches:', branchesData);\n      } else if (Array.isArray((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data)) {\n        // Direct array in data: response.data.data\n        branchesData = response.data.data;\n        console.log('✅ Using response.data.data (array):', branchesData);\n      } else if (Array.isArray(response.data)) {\n        // Direct array: response.data\n        branchesData = response.data;\n        console.log('✅ Using response.data (array):', branchesData);\n      } else {\n        console.warn('⚠️ Unexpected response structure:', response.data);\n        branchesData = [];\n      }\n      if (Array.isArray(branchesData) && branchesData.length > 0) {\n        setBranches(branchesData);\n        toast.success(`Loaded ${branchesData.length} branches successfully!`);\n        console.log('✅ Branches set successfully:', branchesData);\n      } else {\n        console.warn('⚠️ No branches found in response');\n        setBranches([]);\n        toast.warning('No branches found');\n      }\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('❌ Error fetching branches:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        toast.error('Authentication required. Please login again.');\n      } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 500) {\n        toast.error('Server error. Please check if the backend is running.');\n      } else {\n        toast.error('Failed to fetch branches. Please try again.');\n      }\n      setBranches([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveBranch = async branchData => {\n    try {\n      console.log('💾 Saving branch:', branchData);\n      if (editingBranch) {\n        await branchService.updateBranch(editingBranch.id, branchData);\n        toast.success('Branch updated successfully');\n      } else {\n        await branchService.createBranch(branchData);\n        toast.success('Branch created successfully');\n      }\n      setShowModal(false);\n      setEditingBranch(null);\n      fetchBranches(); // Refresh the list\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('❌ Error saving branch:', error);\n      if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error('Failed to save branch');\n      }\n    }\n  };\n  const handleDeleteBranch = async () => {\n    try {\n      console.log('🗑️ Deleting branch:', branchToDelete);\n      await branchService.deleteBranch(branchToDelete.id);\n      toast.success('Branch deleted successfully');\n      setShowDeleteModal(false);\n      setBranchToDelete(null);\n      fetchBranches(); // Refresh the list\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('❌ Error deleting branch:', error);\n      if ((_error$response4 = error.response) !== null && _error$response4 !== void 0 && (_error$response4$data = _error$response4.data) !== null && _error$response4$data !== void 0 && _error$response4$data.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error('Failed to delete branch');\n      }\n    }\n  };\n\n  // Safe filtering with array check\n  const filteredBranches = Array.isArray(branches) ? branches.filter(branch => {\n    var _branch$name, _branch$code;\n    return ((_branch$name = branch.name) === null || _branch$name === void 0 ? void 0 : _branch$name.toLowerCase().includes(searchTerm.toLowerCase())) || ((_branch$code = branch.code) === null || _branch$code === void 0 ? void 0 : _branch$code.toLowerCase().includes(searchTerm.toLowerCase()));\n  }) : [];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading branches...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-branches\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Manage Branches\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Manage academic branches and their associated domains\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => {\n          setEditingBranch(null);\n          setShowModal(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), \" Add Branch\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: [/*#__PURE__*/_jsxDEV(FiSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search branches...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-btn ${viewMode === 'grid' ? 'active' : ''}`,\n          onClick: () => setViewMode('grid'),\n          children: /*#__PURE__*/_jsxDEV(FiGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-btn ${viewMode === 'list' ? 'active' : ''}`,\n          onClick: () => setViewMode('list'),\n          children: /*#__PURE__*/_jsxDEV(FiList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `branches-container ${viewMode}`,\n      children: filteredBranches.map(branch => /*#__PURE__*/_jsxDEV(BranchCard, {\n        branch: branch,\n        viewMode: viewMode,\n        onEdit: branch => {\n          setEditingBranch(branch);\n          setShowModal(true);\n        },\n        onDelete: branch => {\n          setBranchToDelete(branch);\n          setShowDeleteModal(true);\n        },\n        onManageDomains: branch => {\n          setSelectedBranch(branch);\n          setShowDomainModal(true);\n        },\n        onManageInternships: branch => {\n          setSelectedBranch(branch);\n          setShowInternshipModal(true);\n        }\n      }, branch.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), filteredBranches.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-state\",\n      children: [/*#__PURE__*/_jsxDEV(FiBookOpen, {\n        size: 48\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No branches found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Get started by creating your first branch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => {\n          setEditingBranch(null);\n          setShowModal(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), \" Add Branch\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(BranchModal, {\n      branch: editingBranch,\n      onClose: () => {\n        setShowModal(false);\n        setEditingBranch(null);\n      },\n      onSave: handleSaveBranch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), showDeleteModal && /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      title: \"Delete Branch\",\n      message: `Are you sure you want to delete \"${branchToDelete === null || branchToDelete === void 0 ? void 0 : branchToDelete.name}\"? This action cannot be undone.`,\n      onConfirm: handleDeleteBranch,\n      onCancel: () => {\n        setShowDeleteModal(false);\n        setBranchToDelete(null);\n      },\n      confirmText: \"Delete\",\n      cancelText: \"Cancel\",\n      type: \"danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this), showDomainModal && selectedBranch && /*#__PURE__*/_jsxDEV(DomainManagementModal, {\n      branch: selectedBranch,\n      onClose: () => {\n        setShowDomainModal(false);\n        setSelectedBranch(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), showInternshipModal && selectedBranch && /*#__PURE__*/_jsxDEV(DirectInternshipModal, {\n      branch: selectedBranch,\n      onClose: () => {\n        setShowInternshipModal(false);\n        setSelectedBranch(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n\n// Branch Card Component (same as before)\n_s(ManageBranches, \"tD2w9WY4y15tJL4Gt9w2IcpFvMI=\");\n_c = ManageBranches;\nconst BranchCard = ({\n  branch,\n  viewMode,\n  onEdit,\n  onDelete,\n  onManageDomains,\n  onManageInternships\n}) => {\n  _s2();\n  const [showMenu, setShowMenu] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `branch-card ${viewMode}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"branch-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"branch-icon\",\n        children: /*#__PURE__*/_jsxDEV(FiBookOpen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"branch-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"branch-name\",\n          children: branch.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"branch-code\",\n          children: branch.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), branch.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"branch-description\",\n          children: branch.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"branch-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowMenu(!showMenu),\n          children: /*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onManageDomains(branch);\n              setShowMenu(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), \" Manage Domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onManageInternships(branch);\n              setShowMenu(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiUsers, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this), \" Direct Internships\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onEdit(branch);\n              setShowMenu(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), \" Edit Branch\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              onDelete(branch);\n              setShowMenu(false);\n            },\n            className: \"danger\",\n            children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), \" Delete Branch\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"branch-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: branch.domainCount || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Domains\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: branch.internshipCount || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Internships\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value\",\n          children: branch.totalLearners || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"Learners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status ${branch.isActive ? 'active' : 'inactive'}`,\n          children: branch.isActive ? 'Active' : 'Inactive'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"branch-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-outline\",\n        onClick: () => onManageDomains(branch),\n        children: [/*#__PURE__*/_jsxDEV(FiGrid, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), \" Domains\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-outline\",\n        onClick: () => onManageInternships(branch),\n        children: [/*#__PURE__*/_jsxDEV(FiUsers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), \" Internships\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n};\n\n// Branch Modal Component (same as before)\n_s2(BranchCard, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c2 = BranchCard;\nconst BranchModal = ({\n  branch,\n  onClose,\n  onSave\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    name: (branch === null || branch === void 0 ? void 0 : branch.name) || '',\n    code: (branch === null || branch === void 0 ? void 0 : branch.code) || '',\n    description: (branch === null || branch === void 0 ? void 0 : branch.description) || '',\n    isActive: (branch === null || branch === void 0 ? void 0 : branch.isActive) !== undefined ? branch.isActive : true,\n    sortOrder: (branch === null || branch === void 0 ? void 0 : branch.sortOrder) || 0\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const validate = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'Branch name is required';\n    } else if (formData.name.length < 2) {\n      newErrors.name = 'Branch name must be at least 2 characters';\n    }\n    if (!formData.code.trim()) {\n      newErrors.code = 'Branch code is required';\n    } else if (formData.code.length < 2) {\n      newErrors.code = 'Branch code must be at least 2 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validate()) return;\n    setLoading(true);\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving branch:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: branch ? 'Edit Branch' : 'Add Branch',\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"branch-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Branch Name *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          placeholder: \"e.g., Computer Science & Engineering\",\n          className: errors.name ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Branch Code *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.code,\n          onChange: e => setFormData({\n            ...formData,\n            code: e.target.value.toUpperCase()\n          }),\n          placeholder: \"e.g., CSE\",\n          className: errors.code ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), errors.code && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: formData.description,\n          onChange: e => setFormData({\n            ...formData,\n            description: e.target.value\n          }),\n          placeholder: \"Brief description of the branch\",\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sort Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: formData.sortOrder,\n          onChange: e => setFormData({\n            ...formData,\n            sortOrder: parseInt(e.target.value) || 0\n          }),\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.isActive,\n            onChange: e => setFormData({\n              ...formData,\n              isActive: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), \"Active\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: loading ? 'Saving...' : branch ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n};\n\n// ✅ REAL DOMAIN MANAGEMENT MODAL WITH API INTEGRATION\n_s3(BranchModal, \"e+fuPgTaLCoWR2+2xhxSN1v2WoE=\");\n_c3 = BranchModal;\nconst DomainManagementModal = ({\n  branch,\n  onClose\n}) => {\n  _s4();\n  const [domains, setDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showDomainModal, setShowDomainModal] = useState(false);\n  const [editingDomain, setEditingDomain] = useState(null);\n  useEffect(() => {\n    fetchDomains();\n  }, [branch.id]);\n  const fetchDomains = async () => {\n    try {\n      var _response$data4;\n      setLoading(true);\n      console.log('🔄 Fetching domains for branch:', branch.id);\n      const response = await branchService.getDomainsByBranch(branch.id);\n      console.log('✅ Domains API Response:', response);\n      const domainsData = ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.data) || response.data || [];\n      setDomains(Array.isArray(domainsData) ? domainsData : []);\n    } catch (error) {\n      var _error$response5;\n      console.error('❌ Error fetching domains:', error);\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 404) {\n        setDomains([]); // No domains found is okay\n      } else {\n        toast.error('Failed to fetch domains');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveDomain = async domainData => {\n    try {\n      const dataWithBranch = {\n        ...domainData,\n        branchId: branch.id\n      };\n      console.log('💾 Saving domain:', dataWithBranch);\n      if (editingDomain) {\n        await branchService.updateDomain(editingDomain.id, dataWithBranch);\n        toast.success('Domain updated successfully');\n      } else {\n        await branchService.createDomain(dataWithBranch);\n        toast.success('Domain created successfully');\n      }\n      setShowDomainModal(false);\n      setEditingDomain(null);\n      fetchDomains(); // Refresh the list\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error('❌ Error saving domain:', error);\n      if ((_error$response6 = error.response) !== null && _error$response6 !== void 0 && (_error$response6$data = _error$response6.data) !== null && _error$response6$data !== void 0 && _error$response6$data.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error('Failed to save domain');\n      }\n    }\n  };\n  const handleDeleteDomain = async domain => {\n    if (window.confirm(`Are you sure you want to delete \"${domain.name}\"?`)) {\n      try {\n        console.log('🗑️ Deleting domain:', domain);\n        await branchService.deleteDomain(domain.id);\n        toast.success('Domain deleted successfully');\n        fetchDomains(); // Refresh the list\n      } catch (error) {\n        var _error$response7, _error$response7$data;\n        console.error('❌ Error deleting domain:', error);\n        if ((_error$response7 = error.response) !== null && _error$response7 !== void 0 && (_error$response7$data = _error$response7.data) !== null && _error$response7$data !== void 0 && _error$response7$data.message) {\n          toast.error(error.response.data.message);\n        } else {\n          toast.error('Failed to delete domain');\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `Manage Domains - ${branch.name}`,\n    onClose: onClose,\n    size: \"large\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-management\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Domains under \", branch.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => {\n            setEditingDomain(null);\n            setShowDomainModal(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), \" Add Domain\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading domains...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domains-grid\",\n        children: [domains.map(domain => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"domain-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"domain-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: domain.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"domain-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-outline\",\n                onClick: () => {\n                  setEditingDomain(domain);\n                  setShowDomainModal(true);\n                },\n                children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-danger\",\n                onClick: () => handleDeleteDomain(domain),\n                children: /*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 17\n          }, this), domain.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"domain-description\",\n            children: domain.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"domain-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat\",\n              children: [domain.internshipCount || 0, \" Internships\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `status ${domain.isActive ? 'active' : 'inactive'}`,\n              children: domain.isActive ? 'Active' : 'Inactive'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 17\n          }, this)]\n        }, domain.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 15\n        }, this)), domains.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(FiGrid, {\n            size: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No domains found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => {\n              setEditingDomain(null);\n              setShowDomainModal(true);\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 19\n            }, this), \" Add First Domain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 11\n      }, this), showDomainModal && /*#__PURE__*/_jsxDEV(DomainModal, {\n        domain: editingDomain,\n        branch: branch,\n        onClose: () => {\n          setShowDomainModal(false);\n          setEditingDomain(null);\n        },\n        onSave: handleSaveDomain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 640,\n    columnNumber: 5\n  }, this);\n};\n\n// Domain Modal Component\n_s4(DomainManagementModal, \"PjtEWxIpu386tgv6O/zbFrZ0kA0=\");\n_c4 = DomainManagementModal;\nconst DomainModal = ({\n  domain,\n  branch,\n  onClose,\n  onSave\n}) => {\n  _s5();\n  const [formData, setFormData] = useState({\n    name: (domain === null || domain === void 0 ? void 0 : domain.name) || '',\n    description: (domain === null || domain === void 0 ? void 0 : domain.description) || '',\n    isActive: (domain === null || domain === void 0 ? void 0 : domain.isActive) !== undefined ? domain.isActive : true,\n    sortOrder: (domain === null || domain === void 0 ? void 0 : domain.sortOrder) || 0\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const validate = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'Domain name is required';\n    } else if (formData.name.length < 2) {\n      newErrors.name = 'Domain name must be at least 2 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validate()) return;\n    setLoading(true);\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving domain:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: domain ? 'Edit Domain' : 'Add Domain',\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"domain-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Domain Name *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          placeholder: \"e.g., Artificial Intelligence & Machine Learning\",\n          className: errors.name ? 'error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-text\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: formData.description,\n          onChange: e => setFormData({\n            ...formData,\n            description: e.target.value\n          }),\n          placeholder: \"Brief description of the domain\",\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sort Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: formData.sortOrder,\n          onChange: e => setFormData({\n            ...formData,\n            sortOrder: parseInt(e.target.value) || 0\n          }),\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.isActive,\n            onChange: e => setFormData({\n              ...formData,\n              isActive: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this), \"Active\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: loading ? 'Saving...' : domain ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 780,\n    columnNumber: 5\n  }, this);\n};\n\n// Placeholder for Direct Internship Modal\n_s5(DomainModal, \"6GEkEk+00N+aMqnwUDSw8MHlVvQ=\");\n_c5 = DomainModal;\nconst DirectInternshipModal = ({\n  branch,\n  onClose\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `Direct Internships - ${branch.name}`,\n    onClose: onClose,\n    size: \"large\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coming-soon\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDE80 Coming Soon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Direct internship management will be available here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You'll be able to add internships directly to \", branch.name, \" without requiring domains.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 841,\n    columnNumber: 5\n  }, this);\n};\n_c6 = DirectInternshipModal;\nexport default ManageBranches;\n\n// // src/components/internships/ManageBranches.js - FIXED VERSION\n// import React, { useState, useEffect } from 'react';\n// import { \n//   FiPlus, \n//   FiEdit, \n//   FiTrash2, \n//   FiSettings, \n//   FiBookOpen,\n//   FiUsers,\n//   FiSearch,\n//   FiGrid,\n//   FiList\n// } from 'react-icons/fi';\n// import { toast } from 'react-toastify';\n// import Modal from '../common/Modal';\n// import ConfirmationModal from '../common/ConfirmationModal';\n// // import { branchService } from '../../services/branchService'; // Commented out for now\n// import './ManageBranches.css';\n\n// const ManageBranches = () => {\n//   const [branches, setBranches] = useState([]); // ✅ Ensure it's always an array\n//   const [loading, setLoading] = useState(true);\n//   const [showModal, setShowModal] = useState(false);\n//   const [editingBranch, setEditingBranch] = useState(null);\n//   const [showDeleteModal, setShowDeleteModal] = useState(false);\n//   const [branchToDelete, setBranchToDelete] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [viewMode, setViewMode] = useState('grid');\n//   const [selectedBranch, setSelectedBranch] = useState(null);\n//   const [showDomainModal, setShowDomainModal] = useState(false);\n//   const [showInternshipModal, setShowInternshipModal] = useState(false);\n\n//   useEffect(() => {\n//     fetchBranches();\n//   }, []);\n\n//   const fetchBranches = async () => {\n//     try {\n//       setLoading(true);\n\n//       // ✅ TEMPORARY: Mock data for testing (replace with real API call later)\n//       const mockBranches = [\n//         {\n//           id: 1,\n//           name: 'Computer Science & Engineering',\n//           code: 'CSE',\n//           description: 'Computer Science and Engineering branch focusing on software development and technology.',\n//           isActive: true,\n//           domainCount: 5,\n//           internshipCount: 12,\n//           totalLearners: 150\n//         },\n//         {\n//           id: 2,\n//           name: 'Electronics & Communication Engineering',\n//           code: 'ECE',\n//           description: 'Electronics and Communication Engineering branch.',\n//           isActive: true,\n//           domainCount: 3,\n//           internshipCount: 8,\n//           totalLearners: 95\n//         },\n//         {\n//           id: 3,\n//           name: 'Mechanical Engineering',\n//           code: 'MECH',\n//           description: 'Mechanical Engineering branch.',\n//           isActive: true,\n//           domainCount: 2,\n//           internshipCount: 5,\n//           totalLearners: 60\n//         }\n//       ];\n\n//       // Simulate API delay\n//       setTimeout(() => {\n//         setBranches(mockBranches);\n//         setLoading(false);\n//         toast.success('Branches loaded successfully!');\n//       }, 1000);\n\n//       // ✅ FUTURE: Uncomment this when branchService is ready\n//       // const response = await branchService.getAllBranches();\n//       // setBranches(Array.isArray(response.data) ? response.data : []);\n\n//     } catch (error) {\n//       console.error('Error fetching branches:', error);\n//       toast.error('Failed to fetch branches');\n//       setBranches([]); // ✅ Ensure it's always an array on error\n//     } finally {\n//       setTimeout(() => setLoading(false), 1000); // Ensure loading stops\n//     }\n//   };\n\n//   const handleSaveBranch = async (branchData) => {\n//     try {\n//       if (editingBranch) {\n//         // ✅ TEMPORARY: Mock update\n//         setBranches(prev => prev.map(branch => \n//           branch.id === editingBranch.id \n//             ? { ...branch, ...branchData }\n//             : branch\n//         ));\n//         toast.success('Branch updated successfully');\n\n//         // ✅ FUTURE: Uncomment when API is ready\n//         // await branchService.updateBranch(editingBranch.id, branchData);\n//       } else {\n//         // ✅ TEMPORARY: Mock create\n//         const newBranch = {\n//           id: Date.now(), // Temporary ID\n//           ...branchData,\n//           domainCount: 0,\n//           internshipCount: 0,\n//           totalLearners: 0\n//         };\n//         setBranches(prev => [...prev, newBranch]);\n//         toast.success('Branch created successfully');\n\n//         // ✅ FUTURE: Uncomment when API is ready\n//         // await branchService.createBranch(branchData);\n//       }\n\n//       setShowModal(false);\n//       setEditingBranch(null);\n//       // fetchBranches(); // Re-fetch when using real API\n//     } catch (error) {\n//       console.error('Error saving branch:', error);\n//       toast.error('Failed to save branch');\n//     }\n//   };\n\n//   const handleDeleteBranch = async () => {\n//     try {\n//       // ✅ TEMPORARY: Mock delete\n//       setBranches(prev => prev.filter(branch => branch.id !== branchToDelete.id));\n//       toast.success('Branch deleted successfully');\n\n//       // ✅ FUTURE: Uncomment when API is ready\n//       // await branchService.deleteBranch(branchToDelete.id);\n\n//       setShowDeleteModal(false);\n//       setBranchToDelete(null);\n//       // fetchBranches(); // Re-fetch when using real API\n//     } catch (error) {\n//       console.error('Error deleting branch:', error);\n//       toast.error('Failed to delete branch');\n//     }\n//   };\n\n//   // ✅ SAFE FILTERING: Ensure branches is always an array\n//   const filteredBranches = Array.isArray(branches) ? branches.filter(branch =>\n//     branch.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     branch.code.toLowerCase().includes(searchTerm.toLowerCase())\n//   ) : [];\n\n//   if (loading) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading branches...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"manage-branches\">\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <h1>Manage Branches</h1>\n//           <p>Manage academic branches and their associated domains</p>\n//         </div>\n//         <button \n//           className=\"btn btn-primary\"\n//           onClick={() => {\n//             setEditingBranch(null);\n//             setShowModal(true);\n//           }}\n//         >\n//           <FiPlus /> Add Branch\n//         </button>\n//       </div>\n\n//       <div className=\"page-controls\">\n//         <div className=\"search-controls\">\n//           <div className=\"search-box\">\n//             <FiSearch />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search branches...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"view-controls\">\n//           <button\n//             className={`view-btn ${viewMode === 'grid' ? 'active' : ''}`}\n//             onClick={() => setViewMode('grid')}\n//           >\n//             <FiGrid />\n//           </button>\n//           <button\n//             className={`view-btn ${viewMode === 'list' ? 'active' : ''}`}\n//             onClick={() => setViewMode('list')}\n//           >\n//             <FiList />\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className={`branches-container ${viewMode}`}>\n//         {filteredBranches.map(branch => (\n//           <BranchCard\n//             key={branch.id}\n//             branch={branch}\n//             viewMode={viewMode}\n//             onEdit={(branch) => {\n//               setEditingBranch(branch);\n//               setShowModal(true);\n//             }}\n//             onDelete={(branch) => {\n//               setBranchToDelete(branch);\n//               setShowDeleteModal(true);\n//             }}\n//             onManageDomains={(branch) => {\n//               setSelectedBranch(branch);\n//               setShowDomainModal(true);\n//             }}\n//             onManageInternships={(branch) => {\n//               setSelectedBranch(branch);\n//               setShowInternshipModal(true);\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {filteredBranches.length === 0 && !loading && (\n//         <div className=\"empty-state\">\n//           <FiBookOpen size={48} />\n//           <h3>No branches found</h3>\n//           <p>Get started by creating your first branch</p>\n//           <button \n//             className=\"btn btn-primary\"\n//             onClick={() => {\n//               setEditingBranch(null);\n//               setShowModal(true);\n//             }}\n//           >\n//             <FiPlus /> Add Branch\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Branch Modal */}\n//       {showModal && (\n//         <BranchModal\n//           branch={editingBranch}\n//           onClose={() => {\n//             setShowModal(false);\n//             setEditingBranch(null);\n//           }}\n//           onSave={handleSaveBranch}\n//         />\n//       )}\n\n//       {/* Delete Confirmation Modal */}\n//       {showDeleteModal && (\n//         <ConfirmationModal\n//           title=\"Delete Branch\"\n//           message={`Are you sure you want to delete \"${branchToDelete?.name}\"? This action cannot be undone.`}\n//           onConfirm={handleDeleteBranch}\n//           onCancel={() => {\n//             setShowDeleteModal(false);\n//             setBranchToDelete(null);\n//           }}\n//           confirmText=\"Delete\"\n//           cancelText=\"Cancel\"\n//           type=\"danger\"\n//         />\n//       )}\n\n//       {/* Domain Management Modal */}\n//       {showDomainModal && selectedBranch && (\n//         <DomainManagementModal\n//           branch={selectedBranch}\n//           onClose={() => {\n//             setShowDomainModal(false);\n//             setSelectedBranch(null);\n//           }}\n//         />\n//       )}\n\n//       {/* Direct Internship Management Modal */}\n//       {showInternshipModal && selectedBranch && (\n//         <DirectInternshipModal\n//           branch={selectedBranch}\n//           onClose={() => {\n//             setShowInternshipModal(false);\n//             setSelectedBranch(null);\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // Branch Card Component\n// const BranchCard = ({ branch, viewMode, onEdit, onDelete, onManageDomains, onManageInternships }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   return (\n//     <div className={`branch-card ${viewMode}`}>\n//       <div className=\"branch-header\">\n//         <div className=\"branch-icon\">\n//           <FiBookOpen />\n//         </div>\n//         <div className=\"branch-info\">\n//           <h3 className=\"branch-name\">{branch.name}</h3>\n//           <span className=\"branch-code\">{branch.code}</span>\n//           {branch.description && (\n//             <p className=\"branch-description\">{branch.description}</p>\n//           )}\n//         </div>\n//         <div className=\"branch-menu\">\n//           <button onClick={() => setShowMenu(!showMenu)}>\n//             <FiSettings />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\">\n//               <button onClick={() => {\n//                 onManageDomains(branch);\n//                 setShowMenu(false);\n//               }}>\n//                 <FiGrid /> Manage Domains\n//               </button>\n//               <button onClick={() => {\n//                 onManageInternships(branch);\n//                 setShowMenu(false);\n//               }}>\n//                 <FiUsers /> Direct Internships\n//               </button>\n//               <button onClick={() => {\n//                 onEdit(branch);\n//                 setShowMenu(false);\n//               }}>\n//                 <FiEdit /> Edit Branch\n//               </button>\n//               <button \n//                 onClick={() => {\n//                   onDelete(branch);\n//                   setShowMenu(false);\n//                 }} \n//                 className=\"danger\"\n//               >\n//                 <FiTrash2 /> Delete Branch\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       <div className=\"branch-stats\">\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{branch.domainCount || 0}</span>\n//           <span className=\"stat-label\">Domains</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{branch.internshipCount || 0}</span>\n//           <span className=\"stat-label\">Internships</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{branch.totalLearners || 0}</span>\n//           <span className=\"stat-label\">Learners</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className={`status ${branch.isActive ? 'active' : 'inactive'}`}>\n//             {branch.isActive ? 'Active' : 'Inactive'}\n//           </span>\n//         </div>\n//       </div>\n\n//       <div className=\"branch-actions\">\n//         <button \n//           className=\"btn btn-sm btn-outline\"\n//           onClick={() => onManageDomains(branch)}\n//         >\n//           <FiGrid /> Domains\n//         </button>\n//         <button \n//           className=\"btn btn-sm btn-outline\"\n//           onClick={() => onManageInternships(branch)}\n//         >\n//           <FiUsers /> Internships\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Branch Modal Component\n// const BranchModal = ({ branch, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     name: branch?.name || '',\n//     code: branch?.code || '',\n//     description: branch?.description || '',\n//     isActive: branch?.isActive !== undefined ? branch.isActive : true,\n//     sortOrder: branch?.sortOrder || 0\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const [loading, setLoading] = useState(false);\n\n//   const validate = () => {\n//     const newErrors = {};\n\n//     if (!formData.name.trim()) {\n//       newErrors.name = 'Branch name is required';\n//     } else if (formData.name.length < 2) {\n//       newErrors.name = 'Branch name must be at least 2 characters';\n//     }\n\n//     if (!formData.code.trim()) {\n//       newErrors.code = 'Branch code is required';\n//     } else if (formData.code.length < 2) {\n//       newErrors.code = 'Branch code must be at least 2 characters';\n//     }\n\n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (!validate()) return;\n\n//     setLoading(true);\n//     try {\n//       await onSave(formData);\n//     } catch (error) {\n//       console.error('Error saving branch:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <Modal title={branch ? 'Edit Branch' : 'Add Branch'} onClose={onClose}>\n//       <form onSubmit={handleSubmit} className=\"branch-form\">\n//         <div className=\"form-group\">\n//           <label>Branch Name *</label>\n//           <input\n//             type=\"text\"\n//             value={formData.name}\n//             onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//             placeholder=\"e.g., Computer Science & Engineering\"\n//             className={errors.name ? 'error' : ''}\n//           />\n//           {errors.name && <span className=\"error-text\">{errors.name}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Branch Code *</label>\n//           <input\n//             type=\"text\"\n//             value={formData.code}\n//             onChange={(e) => setFormData({ ...formData, code: e.target.value.toUpperCase() })}\n//             placeholder=\"e.g., CSE\"\n//             className={errors.code ? 'error' : ''}\n//           />\n//           {errors.code && <span className=\"error-text\">{errors.code}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Description</label>\n//           <textarea\n//             value={formData.description}\n//             onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n//             placeholder=\"Brief description of the branch\"\n//             rows={3}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Sort Order</label>\n//           <input\n//             type=\"number\"\n//             value={formData.sortOrder}\n//             onChange={(e) => setFormData({ ...formData, sortOrder: parseInt(e.target.value) || 0 })}\n//             min=\"0\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label className=\"checkbox-label\">\n//             <input\n//               type=\"checkbox\"\n//               checked={formData.isActive}\n//               onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\n//             />\n//             Active\n//           </label>\n//         </div>\n\n//         <div className=\"form-actions\">\n//           <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n//             Cancel\n//           </button>\n//           <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n//             {loading ? 'Saving...' : (branch ? 'Update' : 'Create')}\n//           </button>\n//         </div>\n//       </form>\n//     </Modal>\n//   );\n// };\n\n// // ✅ PLACEHOLDER MODALS (will show \"Coming Soon\" for now)\n// const DomainManagementModal = ({ branch, onClose }) => {\n//   return (\n//     <Modal title={`Manage Domains - ${branch.name}`} onClose={onClose} size=\"large\">\n//       <div className=\"coming-soon\">\n//         <h3>🚀 Coming Soon!</h3>\n//         <p>Domain management interface will be available here.</p>\n//         <p>You'll be able to add and manage domains for {branch.name}.</p>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// const DirectInternshipModal = ({ branch, onClose }) => {\n//   return (\n//     <Modal title={`Direct Internships - ${branch.name}`} onClose={onClose} size=\"large\">\n//       <div className=\"coming-soon\">\n//         <h3>🚀 Coming Soon!</h3>\n//         <p>Direct internship management will be available here.</p>\n//         <p>You'll be able to add internships directly to {branch.name} without requiring domains.</p>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// export default ManageBranches;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ManageBranches\");\n$RefreshReg$(_c2, \"BranchCard\");\n$RefreshReg$(_c3, \"BranchModal\");\n$RefreshReg$(_c4, \"DomainManagementModal\");\n$RefreshReg$(_c5, \"DomainModal\");\n$RefreshReg$(_c6, \"DirectInternshipModal\");","map":{"version":3,"names":["React","useState","useEffect","FiPlus","FiEdit","FiTrash2","FiSettings","FiBookOpen","FiUsers","FiSearch","FiGrid","FiList","toast","Modal","ConfirmationModal","branchService","jsxDEV","_jsxDEV","ManageBranches","_s","branches","setBranches","loading","setLoading","showModal","setShowModal","editingBranch","setEditingBranch","showDeleteModal","setShowDeleteModal","branchToDelete","setBranchToDelete","searchTerm","setSearchTerm","viewMode","setViewMode","selectedBranch","setSelectedBranch","showDomainModal","setShowDomainModal","showInternshipModal","setShowInternshipModal","fetchBranches","_response$data","_response$data$data","_response$data2","_response$data3","console","log","response","getAllBranches","branchesData","data","Array","isArray","warn","length","success","warning","error","_error$response","_error$response2","status","handleSaveBranch","branchData","updateBranch","id","createBranch","_error$response3","_error$response3$data","message","handleDeleteBranch","deleteBranch","_error$response4","_error$response4$data","filteredBranches","filter","branch","_branch$name","_branch$code","name","toLowerCase","includes","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","map","BranchCard","onEdit","onDelete","onManageDomains","onManageInternships","size","BranchModal","onClose","onSave","title","onConfirm","onCancel","confirmText","cancelText","DomainManagementModal","DirectInternshipModal","_c","_s2","showMenu","setShowMenu","description","domainCount","internshipCount","totalLearners","isActive","_c2","_s3","formData","setFormData","undefined","sortOrder","errors","setErrors","validate","newErrors","trim","Object","keys","handleSubmit","preventDefault","onSubmit","toUpperCase","rows","parseInt","min","checked","disabled","_c3","_s4","domains","setDomains","editingDomain","setEditingDomain","fetchDomains","_response$data4","getDomainsByBranch","domainsData","_error$response5","handleSaveDomain","domainData","dataWithBranch","branchId","updateDomain","createDomain","_error$response6","_error$response6$data","handleDeleteDomain","domain","window","confirm","deleteDomain","_error$response7","_error$response7$data","DomainModal","_c4","_s5","_c5","_c6","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/internships/ManageBranches.js"],"sourcesContent":["\n// src/components/internships/ManageBranches.js - REAL API INTEGRATION\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  FiPlus, \n  FiEdit, \n  FiTrash2, \n  FiSettings, \n  FiBookOpen,\n  FiUsers,\n  FiSearch,\n  FiGrid,\n  FiList\n} from 'react-icons/fi';\nimport { toast } from 'react-toastify';\nimport Modal from '../common/Modal';\nimport ConfirmationModal from '../common/ConfirmationModal';\nimport { branchService } from '../../services/branchService';\nimport './ManageBranches.css';\n\nconst ManageBranches = () => {\n  const [branches, setBranches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showModal, setShowModal] = useState(false);\n  const [editingBranch, setEditingBranch] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [branchToDelete, setBranchToDelete] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [viewMode, setViewMode] = useState('grid');\n  const [selectedBranch, setSelectedBranch] = useState(null);\n  const [showDomainModal, setShowDomainModal] = useState(false);\n  const [showInternshipModal, setShowInternshipModal] = useState(false);\n\n  useEffect(() => {\n    fetchBranches();\n  }, []);\n\n  // const fetchBranches = async () => {\n  //   try {\n  //     setLoading(true);\n  //     console.log('🔄 Fetching branches from API...');\n      \n  //     const response = await branchService.getAllBranches();\n  //     console.log('✅ API Response:', response);\n      \n  //     // Handle different response structures\n  //     const branchesData = response.data?.data || response.data || [];\n      \n  //     if (Array.isArray(branchesData)) {\n  //       setBranches(branchesData);\n  //       toast.success(`Loaded ${branchesData.length} branches successfully!`);\n  //     } else {\n  //       console.warn('⚠️ Invalid response format:', response);\n  //       setBranches([]);\n  //       toast.warning('No branches found');\n  //     }\n  //   } catch (error) {\n  //     console.error('❌ Error fetching branches:', error);\n      \n  //     if (error.response?.status === 401) {\n  //       toast.error('Authentication required. Please login again.');\n  //     } else if (error.response?.status === 500) {\n  //       toast.error('Server error. Please check if the backend is running.');\n  //     } else {\n  //       toast.error('Failed to fetch branches. Please try again.');\n  //     }\n      \n  //     setBranches([]);\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n\n  // src/components/internships/ManageBranches.js - FIXED RESPONSE PARSING\n\n// Replace the fetchBranches function in your ManageBranches.js with this:\n\nconst fetchBranches = async () => {\n  try {\n    setLoading(true);\n    console.log('🔄 Fetching branches from API...');\n    \n    const response = await branchService.getAllBranches();\n    console.log('✅ API Response:', response);\n    \n    // ✅ FIXED: Correct data extraction from response\n    // Your API returns: { success: true, data: { branches: [...], pagination: {...} } }\n    // So we need to access response.data.data.branches\n    \n    let branchesData = [];\n    \n    // Handle different possible response structures\n    if (response.data?.data?.branches) {\n      // Standard API response: response.data.data.branches\n      branchesData = response.data.data.branches;\n      console.log('✅ Using response.data.data.branches:', branchesData);\n    } else if (response.data?.branches) {\n      // Alternative structure: response.data.branches\n      branchesData = response.data.branches;\n      console.log('✅ Using response.data.branches:', branchesData);\n    } else if (Array.isArray(response.data?.data)) {\n      // Direct array in data: response.data.data\n      branchesData = response.data.data;\n      console.log('✅ Using response.data.data (array):', branchesData);\n    } else if (Array.isArray(response.data)) {\n      // Direct array: response.data\n      branchesData = response.data;\n      console.log('✅ Using response.data (array):', branchesData);\n    } else {\n      console.warn('⚠️ Unexpected response structure:', response.data);\n      branchesData = [];\n    }\n    \n    if (Array.isArray(branchesData) && branchesData.length > 0) {\n      setBranches(branchesData);\n      toast.success(`Loaded ${branchesData.length} branches successfully!`);\n      console.log('✅ Branches set successfully:', branchesData);\n    } else {\n      console.warn('⚠️ No branches found in response');\n      setBranches([]);\n      toast.warning('No branches found');\n    }\n  } catch (error) {\n    console.error('❌ Error fetching branches:', error);\n    \n    if (error.response?.status === 401) {\n      toast.error('Authentication required. Please login again.');\n    } else if (error.response?.status === 500) {\n      toast.error('Server error. Please check if the backend is running.');\n    } else {\n      toast.error('Failed to fetch branches. Please try again.');\n    }\n    \n    setBranches([]);\n  } finally {\n    setLoading(false);\n  }\n};\n  const handleSaveBranch = async (branchData) => {\n    try {\n      console.log('💾 Saving branch:', branchData);\n      \n      if (editingBranch) {\n        await branchService.updateBranch(editingBranch.id, branchData);\n        toast.success('Branch updated successfully');\n      } else {\n        await branchService.createBranch(branchData);\n        toast.success('Branch created successfully');\n      }\n      \n      setShowModal(false);\n      setEditingBranch(null);\n      fetchBranches(); // Refresh the list\n    } catch (error) {\n      console.error('❌ Error saving branch:', error);\n      \n      if (error.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error('Failed to save branch');\n      }\n    }\n  };\n\n  const handleDeleteBranch = async () => {\n    try {\n      console.log('🗑️ Deleting branch:', branchToDelete);\n      \n      await branchService.deleteBranch(branchToDelete.id);\n      toast.success('Branch deleted successfully');\n      \n      setShowDeleteModal(false);\n      setBranchToDelete(null);\n      fetchBranches(); // Refresh the list\n    } catch (error) {\n      console.error('❌ Error deleting branch:', error);\n      \n      if (error.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error('Failed to delete branch');\n      }\n    }\n  };\n\n  // Safe filtering with array check\n  const filteredBranches = Array.isArray(branches) ? branches.filter(branch =>\n    branch.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    branch.code?.toLowerCase().includes(searchTerm.toLowerCase())\n  ) : [];\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading branches...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"manage-branches\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Manage Branches</h1>\n          <p>Manage academic branches and their associated domains</p>\n        </div>\n        <button \n          className=\"btn btn-primary\"\n          onClick={() => {\n            setEditingBranch(null);\n            setShowModal(true);\n          }}\n        >\n          <FiPlus /> Add Branch\n        </button>\n      </div>\n\n      <div className=\"page-controls\">\n        <div className=\"search-controls\">\n          <div className=\"search-box\">\n            <FiSearch />\n            <input\n              type=\"text\"\n              placeholder=\"Search branches...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n        </div>\n        \n        <div className=\"view-controls\">\n          <button\n            className={`view-btn ${viewMode === 'grid' ? 'active' : ''}`}\n            onClick={() => setViewMode('grid')}\n          >\n            <FiGrid />\n          </button>\n          <button\n            className={`view-btn ${viewMode === 'list' ? 'active' : ''}`}\n            onClick={() => setViewMode('list')}\n          >\n            <FiList />\n          </button>\n        </div>\n      </div>\n\n      <div className={`branches-container ${viewMode}`}>\n        {filteredBranches.map(branch => (\n          <BranchCard\n            key={branch.id}\n            branch={branch}\n            viewMode={viewMode}\n            onEdit={(branch) => {\n              setEditingBranch(branch);\n              setShowModal(true);\n            }}\n            onDelete={(branch) => {\n              setBranchToDelete(branch);\n              setShowDeleteModal(true);\n            }}\n            onManageDomains={(branch) => {\n              setSelectedBranch(branch);\n              setShowDomainModal(true);\n            }}\n            onManageInternships={(branch) => {\n              setSelectedBranch(branch);\n              setShowInternshipModal(true);\n            }}\n          />\n        ))}\n      </div>\n\n      {filteredBranches.length === 0 && !loading && (\n        <div className=\"empty-state\">\n          <FiBookOpen size={48} />\n          <h3>No branches found</h3>\n          <p>Get started by creating your first branch</p>\n          <button \n            className=\"btn btn-primary\"\n            onClick={() => {\n              setEditingBranch(null);\n              setShowModal(true);\n            }}\n          >\n            <FiPlus /> Add Branch\n          </button>\n        </div>\n      )}\n\n      {/* Branch Modal */}\n      {showModal && (\n        <BranchModal\n          branch={editingBranch}\n          onClose={() => {\n            setShowModal(false);\n            setEditingBranch(null);\n          }}\n          onSave={handleSaveBranch}\n        />\n      )}\n\n      {/* Delete Confirmation Modal */}\n      {showDeleteModal && (\n        <ConfirmationModal\n          title=\"Delete Branch\"\n          message={`Are you sure you want to delete \"${branchToDelete?.name}\"? This action cannot be undone.`}\n          onConfirm={handleDeleteBranch}\n          onCancel={() => {\n            setShowDeleteModal(false);\n            setBranchToDelete(null);\n          }}\n          confirmText=\"Delete\"\n          cancelText=\"Cancel\"\n          type=\"danger\"\n        />\n      )}\n\n      {/* ✅ REAL DOMAIN MANAGEMENT MODAL */}\n      {showDomainModal && selectedBranch && (\n        <DomainManagementModal\n          branch={selectedBranch}\n          onClose={() => {\n            setShowDomainModal(false);\n            setSelectedBranch(null);\n          }}\n        />\n      )}\n\n      {/* Direct Internship Management Modal */}\n      {showInternshipModal && selectedBranch && (\n        <DirectInternshipModal\n          branch={selectedBranch}\n          onClose={() => {\n            setShowInternshipModal(false);\n            setSelectedBranch(null);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\n// Branch Card Component (same as before)\nconst BranchCard = ({ branch, viewMode, onEdit, onDelete, onManageDomains, onManageInternships }) => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <div className={`branch-card ${viewMode}`}>\n      <div className=\"branch-header\">\n        <div className=\"branch-icon\">\n          <FiBookOpen />\n        </div>\n        <div className=\"branch-info\">\n          <h3 className=\"branch-name\">{branch.name}</h3>\n          <span className=\"branch-code\">{branch.code}</span>\n          {branch.description && (\n            <p className=\"branch-description\">{branch.description}</p>\n          )}\n        </div>\n        <div className=\"branch-menu\">\n          <button onClick={() => setShowMenu(!showMenu)}>\n            <FiSettings />\n          </button>\n          {showMenu && (\n            <div className=\"dropdown-menu\">\n              <button onClick={() => {\n                onManageDomains(branch);\n                setShowMenu(false);\n              }}>\n                <FiGrid /> Manage Domains\n              </button>\n              <button onClick={() => {\n                onManageInternships(branch);\n                setShowMenu(false);\n              }}>\n                <FiUsers /> Direct Internships\n              </button>\n              <button onClick={() => {\n                onEdit(branch);\n                setShowMenu(false);\n              }}>\n                <FiEdit /> Edit Branch\n              </button>\n              <button \n                onClick={() => {\n                  onDelete(branch);\n                  setShowMenu(false);\n                }} \n                className=\"danger\"\n              >\n                <FiTrash2 /> Delete Branch\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"branch-stats\">\n        <div className=\"stat\">\n          <span className=\"stat-value\">{branch.domainCount || 0}</span>\n          <span className=\"stat-label\">Domains</span>\n        </div>\n        <div className=\"stat\">\n          <span className=\"stat-value\">{branch.internshipCount || 0}</span>\n          <span className=\"stat-label\">Internships</span>\n        </div>\n        <div className=\"stat\">\n          <span className=\"stat-value\">{branch.totalLearners || 0}</span>\n          <span className=\"stat-label\">Learners</span>\n        </div>\n        <div className=\"stat\">\n          <span className={`status ${branch.isActive ? 'active' : 'inactive'}`}>\n            {branch.isActive ? 'Active' : 'Inactive'}\n          </span>\n        </div>\n      </div>\n\n      <div className=\"branch-actions\">\n        <button \n          className=\"btn btn-sm btn-outline\"\n          onClick={() => onManageDomains(branch)}\n        >\n          <FiGrid /> Domains\n        </button>\n        <button \n          className=\"btn btn-sm btn-outline\"\n          onClick={() => onManageInternships(branch)}\n        >\n          <FiUsers /> Internships\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Branch Modal Component (same as before)\nconst BranchModal = ({ branch, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    name: branch?.name || '',\n    code: branch?.code || '',\n    description: branch?.description || '',\n    isActive: branch?.isActive !== undefined ? branch.isActive : true,\n    sortOrder: branch?.sortOrder || 0\n  });\n\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const validate = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'Branch name is required';\n    } else if (formData.name.length < 2) {\n      newErrors.name = 'Branch name must be at least 2 characters';\n    }\n    \n    if (!formData.code.trim()) {\n      newErrors.code = 'Branch code is required';\n    } else if (formData.code.length < 2) {\n      newErrors.code = 'Branch code must be at least 2 characters';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validate()) return;\n    \n    setLoading(true);\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving branch:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Modal title={branch ? 'Edit Branch' : 'Add Branch'} onClose={onClose}>\n      <form onSubmit={handleSubmit} className=\"branch-form\">\n        <div className=\"form-group\">\n          <label>Branch Name *</label>\n          <input\n            type=\"text\"\n            value={formData.name}\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            placeholder=\"e.g., Computer Science & Engineering\"\n            className={errors.name ? 'error' : ''}\n          />\n          {errors.name && <span className=\"error-text\">{errors.name}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Branch Code *</label>\n          <input\n            type=\"text\"\n            value={formData.code}\n            onChange={(e) => setFormData({ ...formData, code: e.target.value.toUpperCase() })}\n            placeholder=\"e.g., CSE\"\n            className={errors.code ? 'error' : ''}\n          />\n          {errors.code && <span className=\"error-text\">{errors.code}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea\n            value={formData.description}\n            onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n            placeholder=\"Brief description of the branch\"\n            rows={3}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Sort Order</label>\n          <input\n            type=\"number\"\n            value={formData.sortOrder}\n            onChange={(e) => setFormData({ ...formData, sortOrder: parseInt(e.target.value) || 0 })}\n            min=\"0\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              checked={formData.isActive}\n              onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\n            />\n            Active\n          </label>\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n            {loading ? 'Saving...' : (branch ? 'Update' : 'Create')}\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\n// ✅ REAL DOMAIN MANAGEMENT MODAL WITH API INTEGRATION\nconst DomainManagementModal = ({ branch, onClose }) => {\n  const [domains, setDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showDomainModal, setShowDomainModal] = useState(false);\n  const [editingDomain, setEditingDomain] = useState(null);\n\n  useEffect(() => {\n    fetchDomains();\n  }, [branch.id]);\n\n  const fetchDomains = async () => {\n    try {\n      setLoading(true);\n      console.log('🔄 Fetching domains for branch:', branch.id);\n      \n      const response = await branchService.getDomainsByBranch(branch.id);\n      console.log('✅ Domains API Response:', response);\n      \n      const domainsData = response.data?.data || response.data || [];\n      setDomains(Array.isArray(domainsData) ? domainsData : []);\n      \n    } catch (error) {\n      console.error('❌ Error fetching domains:', error);\n      \n      if (error.response?.status === 404) {\n        setDomains([]); // No domains found is okay\n      } else {\n        toast.error('Failed to fetch domains');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveDomain = async (domainData) => {\n    try {\n      const dataWithBranch = { ...domainData, branchId: branch.id };\n      console.log('💾 Saving domain:', dataWithBranch);\n      \n      if (editingDomain) {\n        await branchService.updateDomain(editingDomain.id, dataWithBranch);\n        toast.success('Domain updated successfully');\n      } else {\n        await branchService.createDomain(dataWithBranch);\n        toast.success('Domain created successfully');\n      }\n      \n      setShowDomainModal(false);\n      setEditingDomain(null);\n      fetchDomains(); // Refresh the list\n    } catch (error) {\n      console.error('❌ Error saving domain:', error);\n      \n      if (error.response?.data?.message) {\n        toast.error(error.response.data.message);\n      } else {\n        toast.error('Failed to save domain');\n      }\n    }\n  };\n\n  const handleDeleteDomain = async (domain) => {\n    if (window.confirm(`Are you sure you want to delete \"${domain.name}\"?`)) {\n      try {\n        console.log('🗑️ Deleting domain:', domain);\n        \n        await branchService.deleteDomain(domain.id);\n        toast.success('Domain deleted successfully');\n        fetchDomains(); // Refresh the list\n      } catch (error) {\n        console.error('❌ Error deleting domain:', error);\n        \n        if (error.response?.data?.message) {\n          toast.error(error.response.data.message);\n        } else {\n          toast.error('Failed to delete domain');\n        }\n      }\n    }\n  };\n\n  return (\n    <Modal \n      title={`Manage Domains - ${branch.name}`} \n      onClose={onClose}\n      size=\"large\"\n    >\n      <div className=\"domain-management\">\n        <div className=\"section-header\">\n          <h3>Domains under {branch.name}</h3>\n          <button \n            className=\"btn btn-primary\"\n            onClick={() => {\n              setEditingDomain(null);\n              setShowDomainModal(true);\n            }}\n          >\n            <FiPlus /> Add Domain\n          </button>\n        </div>\n\n        {loading ? (\n          <div className=\"loading-container\">\n            <div className=\"loading-spinner\"></div>\n            <p>Loading domains...</p>\n          </div>\n        ) : (\n          <div className=\"domains-grid\">\n            {domains.map(domain => (\n              <div key={domain.id} className=\"domain-card\">\n                <div className=\"domain-header\">\n                  <h4>{domain.name}</h4>\n                  <div className=\"domain-actions\">\n                    <button \n                      className=\"btn btn-sm btn-outline\"\n                      onClick={() => {\n                        setEditingDomain(domain);\n                        setShowDomainModal(true);\n                      }}\n                    >\n                      <FiEdit />\n                    </button>\n                    <button \n                      className=\"btn btn-sm btn-danger\"\n                      onClick={() => handleDeleteDomain(domain)}\n                    >\n                      <FiTrash2 />\n                    </button>\n                  </div>\n                </div>\n                \n                {domain.description && (\n                  <p className=\"domain-description\">{domain.description}</p>\n                )}\n                \n                <div className=\"domain-stats\">\n                  <span className=\"stat\">\n                    {domain.internshipCount || 0} Internships\n                  </span>\n                  <span className={`status ${domain.isActive ? 'active' : 'inactive'}`}>\n                    {domain.isActive ? 'Active' : 'Inactive'}\n                  </span>\n                </div>\n              </div>\n            ))}\n            \n            {domains.length === 0 && (\n              <div className=\"empty-state\">\n                <FiGrid size={32} />\n                <p>No domains found</p>\n                <button \n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    setEditingDomain(null);\n                    setShowDomainModal(true);\n                  }}\n                >\n                  <FiPlus /> Add First Domain\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Domain Modal */}\n        {showDomainModal && (\n          <DomainModal\n            domain={editingDomain}\n            branch={branch}\n            onClose={() => {\n              setShowDomainModal(false);\n              setEditingDomain(null);\n            }}\n            onSave={handleSaveDomain}\n          />\n        )}\n      </div>\n    </Modal>\n  );\n};\n\n// Domain Modal Component\nconst DomainModal = ({ domain, branch, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    name: domain?.name || '',\n    description: domain?.description || '',\n    isActive: domain?.isActive !== undefined ? domain.isActive : true,\n    sortOrder: domain?.sortOrder || 0\n  });\n\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const validate = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'Domain name is required';\n    } else if (formData.name.length < 2) {\n      newErrors.name = 'Domain name must be at least 2 characters';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validate()) return;\n    \n    setLoading(true);\n    try {\n      await onSave(formData);\n    } catch (error) {\n      console.error('Error saving domain:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Modal title={domain ? 'Edit Domain' : 'Add Domain'} onClose={onClose}>\n      <form onSubmit={handleSubmit} className=\"domain-form\">\n        <div className=\"form-group\">\n          <label>Domain Name *</label>\n          <input\n            type=\"text\"\n            value={formData.name}\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            placeholder=\"e.g., Artificial Intelligence & Machine Learning\"\n            className={errors.name ? 'error' : ''}\n          />\n          {errors.name && <span className=\"error-text\">{errors.name}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Description</label>\n          <textarea\n            value={formData.description}\n            onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n            placeholder=\"Brief description of the domain\"\n            rows={3}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Sort Order</label>\n          <input\n            type=\"number\"\n            value={formData.sortOrder}\n            onChange={(e) => setFormData({ ...formData, sortOrder: parseInt(e.target.value) || 0 })}\n            min=\"0\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"checkbox-label\">\n            <input\n              type=\"checkbox\"\n              checked={formData.isActive}\n              onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\n            />\n            Active\n          </label>\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n            {loading ? 'Saving...' : (domain ? 'Update' : 'Create')}\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\n// Placeholder for Direct Internship Modal\nconst DirectInternshipModal = ({ branch, onClose }) => {\n  return (\n    <Modal title={`Direct Internships - ${branch.name}`} onClose={onClose} size=\"large\">\n      <div className=\"coming-soon\">\n        <h3>🚀 Coming Soon!</h3>\n        <p>Direct internship management will be available here.</p>\n        <p>You'll be able to add internships directly to {branch.name} without requiring domains.</p>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ManageBranches;\n\n\n\n// // src/components/internships/ManageBranches.js - FIXED VERSION\n// import React, { useState, useEffect } from 'react';\n// import { \n//   FiPlus, \n//   FiEdit, \n//   FiTrash2, \n//   FiSettings, \n//   FiBookOpen,\n//   FiUsers,\n//   FiSearch,\n//   FiGrid,\n//   FiList\n// } from 'react-icons/fi';\n// import { toast } from 'react-toastify';\n// import Modal from '../common/Modal';\n// import ConfirmationModal from '../common/ConfirmationModal';\n// // import { branchService } from '../../services/branchService'; // Commented out for now\n// import './ManageBranches.css';\n\n// const ManageBranches = () => {\n//   const [branches, setBranches] = useState([]); // ✅ Ensure it's always an array\n//   const [loading, setLoading] = useState(true);\n//   const [showModal, setShowModal] = useState(false);\n//   const [editingBranch, setEditingBranch] = useState(null);\n//   const [showDeleteModal, setShowDeleteModal] = useState(false);\n//   const [branchToDelete, setBranchToDelete] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [viewMode, setViewMode] = useState('grid');\n//   const [selectedBranch, setSelectedBranch] = useState(null);\n//   const [showDomainModal, setShowDomainModal] = useState(false);\n//   const [showInternshipModal, setShowInternshipModal] = useState(false);\n\n//   useEffect(() => {\n//     fetchBranches();\n//   }, []);\n\n//   const fetchBranches = async () => {\n//     try {\n//       setLoading(true);\n      \n//       // ✅ TEMPORARY: Mock data for testing (replace with real API call later)\n//       const mockBranches = [\n//         {\n//           id: 1,\n//           name: 'Computer Science & Engineering',\n//           code: 'CSE',\n//           description: 'Computer Science and Engineering branch focusing on software development and technology.',\n//           isActive: true,\n//           domainCount: 5,\n//           internshipCount: 12,\n//           totalLearners: 150\n//         },\n//         {\n//           id: 2,\n//           name: 'Electronics & Communication Engineering',\n//           code: 'ECE',\n//           description: 'Electronics and Communication Engineering branch.',\n//           isActive: true,\n//           domainCount: 3,\n//           internshipCount: 8,\n//           totalLearners: 95\n//         },\n//         {\n//           id: 3,\n//           name: 'Mechanical Engineering',\n//           code: 'MECH',\n//           description: 'Mechanical Engineering branch.',\n//           isActive: true,\n//           domainCount: 2,\n//           internshipCount: 5,\n//           totalLearners: 60\n//         }\n//       ];\n\n//       // Simulate API delay\n//       setTimeout(() => {\n//         setBranches(mockBranches);\n//         setLoading(false);\n//         toast.success('Branches loaded successfully!');\n//       }, 1000);\n\n//       // ✅ FUTURE: Uncomment this when branchService is ready\n//       // const response = await branchService.getAllBranches();\n//       // setBranches(Array.isArray(response.data) ? response.data : []);\n      \n//     } catch (error) {\n//       console.error('Error fetching branches:', error);\n//       toast.error('Failed to fetch branches');\n//       setBranches([]); // ✅ Ensure it's always an array on error\n//     } finally {\n//       setTimeout(() => setLoading(false), 1000); // Ensure loading stops\n//     }\n//   };\n\n//   const handleSaveBranch = async (branchData) => {\n//     try {\n//       if (editingBranch) {\n//         // ✅ TEMPORARY: Mock update\n//         setBranches(prev => prev.map(branch => \n//           branch.id === editingBranch.id \n//             ? { ...branch, ...branchData }\n//             : branch\n//         ));\n//         toast.success('Branch updated successfully');\n        \n//         // ✅ FUTURE: Uncomment when API is ready\n//         // await branchService.updateBranch(editingBranch.id, branchData);\n//       } else {\n//         // ✅ TEMPORARY: Mock create\n//         const newBranch = {\n//           id: Date.now(), // Temporary ID\n//           ...branchData,\n//           domainCount: 0,\n//           internshipCount: 0,\n//           totalLearners: 0\n//         };\n//         setBranches(prev => [...prev, newBranch]);\n//         toast.success('Branch created successfully');\n        \n//         // ✅ FUTURE: Uncomment when API is ready\n//         // await branchService.createBranch(branchData);\n//       }\n      \n//       setShowModal(false);\n//       setEditingBranch(null);\n//       // fetchBranches(); // Re-fetch when using real API\n//     } catch (error) {\n//       console.error('Error saving branch:', error);\n//       toast.error('Failed to save branch');\n//     }\n//   };\n\n//   const handleDeleteBranch = async () => {\n//     try {\n//       // ✅ TEMPORARY: Mock delete\n//       setBranches(prev => prev.filter(branch => branch.id !== branchToDelete.id));\n//       toast.success('Branch deleted successfully');\n      \n//       // ✅ FUTURE: Uncomment when API is ready\n//       // await branchService.deleteBranch(branchToDelete.id);\n      \n//       setShowDeleteModal(false);\n//       setBranchToDelete(null);\n//       // fetchBranches(); // Re-fetch when using real API\n//     } catch (error) {\n//       console.error('Error deleting branch:', error);\n//       toast.error('Failed to delete branch');\n//     }\n//   };\n\n//   // ✅ SAFE FILTERING: Ensure branches is always an array\n//   const filteredBranches = Array.isArray(branches) ? branches.filter(branch =>\n//     branch.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     branch.code.toLowerCase().includes(searchTerm.toLowerCase())\n//   ) : [];\n\n//   if (loading) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading branches...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"manage-branches\">\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <h1>Manage Branches</h1>\n//           <p>Manage academic branches and their associated domains</p>\n//         </div>\n//         <button \n//           className=\"btn btn-primary\"\n//           onClick={() => {\n//             setEditingBranch(null);\n//             setShowModal(true);\n//           }}\n//         >\n//           <FiPlus /> Add Branch\n//         </button>\n//       </div>\n\n//       <div className=\"page-controls\">\n//         <div className=\"search-controls\">\n//           <div className=\"search-box\">\n//             <FiSearch />\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search branches...\"\n//               value={searchTerm}\n//               onChange={(e) => setSearchTerm(e.target.value)}\n//             />\n//           </div>\n//         </div>\n        \n//         <div className=\"view-controls\">\n//           <button\n//             className={`view-btn ${viewMode === 'grid' ? 'active' : ''}`}\n//             onClick={() => setViewMode('grid')}\n//           >\n//             <FiGrid />\n//           </button>\n//           <button\n//             className={`view-btn ${viewMode === 'list' ? 'active' : ''}`}\n//             onClick={() => setViewMode('list')}\n//           >\n//             <FiList />\n//           </button>\n//         </div>\n//       </div>\n\n//       <div className={`branches-container ${viewMode}`}>\n//         {filteredBranches.map(branch => (\n//           <BranchCard\n//             key={branch.id}\n//             branch={branch}\n//             viewMode={viewMode}\n//             onEdit={(branch) => {\n//               setEditingBranch(branch);\n//               setShowModal(true);\n//             }}\n//             onDelete={(branch) => {\n//               setBranchToDelete(branch);\n//               setShowDeleteModal(true);\n//             }}\n//             onManageDomains={(branch) => {\n//               setSelectedBranch(branch);\n//               setShowDomainModal(true);\n//             }}\n//             onManageInternships={(branch) => {\n//               setSelectedBranch(branch);\n//               setShowInternshipModal(true);\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {filteredBranches.length === 0 && !loading && (\n//         <div className=\"empty-state\">\n//           <FiBookOpen size={48} />\n//           <h3>No branches found</h3>\n//           <p>Get started by creating your first branch</p>\n//           <button \n//             className=\"btn btn-primary\"\n//             onClick={() => {\n//               setEditingBranch(null);\n//               setShowModal(true);\n//             }}\n//           >\n//             <FiPlus /> Add Branch\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Branch Modal */}\n//       {showModal && (\n//         <BranchModal\n//           branch={editingBranch}\n//           onClose={() => {\n//             setShowModal(false);\n//             setEditingBranch(null);\n//           }}\n//           onSave={handleSaveBranch}\n//         />\n//       )}\n\n//       {/* Delete Confirmation Modal */}\n//       {showDeleteModal && (\n//         <ConfirmationModal\n//           title=\"Delete Branch\"\n//           message={`Are you sure you want to delete \"${branchToDelete?.name}\"? This action cannot be undone.`}\n//           onConfirm={handleDeleteBranch}\n//           onCancel={() => {\n//             setShowDeleteModal(false);\n//             setBranchToDelete(null);\n//           }}\n//           confirmText=\"Delete\"\n//           cancelText=\"Cancel\"\n//           type=\"danger\"\n//         />\n//       )}\n\n//       {/* Domain Management Modal */}\n//       {showDomainModal && selectedBranch && (\n//         <DomainManagementModal\n//           branch={selectedBranch}\n//           onClose={() => {\n//             setShowDomainModal(false);\n//             setSelectedBranch(null);\n//           }}\n//         />\n//       )}\n\n//       {/* Direct Internship Management Modal */}\n//       {showInternshipModal && selectedBranch && (\n//         <DirectInternshipModal\n//           branch={selectedBranch}\n//           onClose={() => {\n//             setShowInternshipModal(false);\n//             setSelectedBranch(null);\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // Branch Card Component\n// const BranchCard = ({ branch, viewMode, onEdit, onDelete, onManageDomains, onManageInternships }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   return (\n//     <div className={`branch-card ${viewMode}`}>\n//       <div className=\"branch-header\">\n//         <div className=\"branch-icon\">\n//           <FiBookOpen />\n//         </div>\n//         <div className=\"branch-info\">\n//           <h3 className=\"branch-name\">{branch.name}</h3>\n//           <span className=\"branch-code\">{branch.code}</span>\n//           {branch.description && (\n//             <p className=\"branch-description\">{branch.description}</p>\n//           )}\n//         </div>\n//         <div className=\"branch-menu\">\n//           <button onClick={() => setShowMenu(!showMenu)}>\n//             <FiSettings />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\">\n//               <button onClick={() => {\n//                 onManageDomains(branch);\n//                 setShowMenu(false);\n//               }}>\n//                 <FiGrid /> Manage Domains\n//               </button>\n//               <button onClick={() => {\n//                 onManageInternships(branch);\n//                 setShowMenu(false);\n//               }}>\n//                 <FiUsers /> Direct Internships\n//               </button>\n//               <button onClick={() => {\n//                 onEdit(branch);\n//                 setShowMenu(false);\n//               }}>\n//                 <FiEdit /> Edit Branch\n//               </button>\n//               <button \n//                 onClick={() => {\n//                   onDelete(branch);\n//                   setShowMenu(false);\n//                 }} \n//                 className=\"danger\"\n//               >\n//                 <FiTrash2 /> Delete Branch\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n      \n//       <div className=\"branch-stats\">\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{branch.domainCount || 0}</span>\n//           <span className=\"stat-label\">Domains</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{branch.internshipCount || 0}</span>\n//           <span className=\"stat-label\">Internships</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className=\"stat-value\">{branch.totalLearners || 0}</span>\n//           <span className=\"stat-label\">Learners</span>\n//         </div>\n//         <div className=\"stat\">\n//           <span className={`status ${branch.isActive ? 'active' : 'inactive'}`}>\n//             {branch.isActive ? 'Active' : 'Inactive'}\n//           </span>\n//         </div>\n//       </div>\n\n//       <div className=\"branch-actions\">\n//         <button \n//           className=\"btn btn-sm btn-outline\"\n//           onClick={() => onManageDomains(branch)}\n//         >\n//           <FiGrid /> Domains\n//         </button>\n//         <button \n//           className=\"btn btn-sm btn-outline\"\n//           onClick={() => onManageInternships(branch)}\n//         >\n//           <FiUsers /> Internships\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Branch Modal Component\n// const BranchModal = ({ branch, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     name: branch?.name || '',\n//     code: branch?.code || '',\n//     description: branch?.description || '',\n//     isActive: branch?.isActive !== undefined ? branch.isActive : true,\n//     sortOrder: branch?.sortOrder || 0\n//   });\n\n//   const [errors, setErrors] = useState({});\n//   const [loading, setLoading] = useState(false);\n\n//   const validate = () => {\n//     const newErrors = {};\n    \n//     if (!formData.name.trim()) {\n//       newErrors.name = 'Branch name is required';\n//     } else if (formData.name.length < 2) {\n//       newErrors.name = 'Branch name must be at least 2 characters';\n//     }\n    \n//     if (!formData.code.trim()) {\n//       newErrors.code = 'Branch code is required';\n//     } else if (formData.code.length < 2) {\n//       newErrors.code = 'Branch code must be at least 2 characters';\n//     }\n    \n//     setErrors(newErrors);\n//     return Object.keys(newErrors).length === 0;\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n    \n//     if (!validate()) return;\n    \n//     setLoading(true);\n//     try {\n//       await onSave(formData);\n//     } catch (error) {\n//       console.error('Error saving branch:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <Modal title={branch ? 'Edit Branch' : 'Add Branch'} onClose={onClose}>\n//       <form onSubmit={handleSubmit} className=\"branch-form\">\n//         <div className=\"form-group\">\n//           <label>Branch Name *</label>\n//           <input\n//             type=\"text\"\n//             value={formData.name}\n//             onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n//             placeholder=\"e.g., Computer Science & Engineering\"\n//             className={errors.name ? 'error' : ''}\n//           />\n//           {errors.name && <span className=\"error-text\">{errors.name}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Branch Code *</label>\n//           <input\n//             type=\"text\"\n//             value={formData.code}\n//             onChange={(e) => setFormData({ ...formData, code: e.target.value.toUpperCase() })}\n//             placeholder=\"e.g., CSE\"\n//             className={errors.code ? 'error' : ''}\n//           />\n//           {errors.code && <span className=\"error-text\">{errors.code}</span>}\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Description</label>\n//           <textarea\n//             value={formData.description}\n//             onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n//             placeholder=\"Brief description of the branch\"\n//             rows={3}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label>Sort Order</label>\n//           <input\n//             type=\"number\"\n//             value={formData.sortOrder}\n//             onChange={(e) => setFormData({ ...formData, sortOrder: parseInt(e.target.value) || 0 })}\n//             min=\"0\"\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label className=\"checkbox-label\">\n//             <input\n//               type=\"checkbox\"\n//               checked={formData.isActive}\n//               onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\n//             />\n//             Active\n//           </label>\n//         </div>\n\n//         <div className=\"form-actions\">\n//           <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n//             Cancel\n//           </button>\n//           <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n//             {loading ? 'Saving...' : (branch ? 'Update' : 'Create')}\n//           </button>\n//         </div>\n//       </form>\n//     </Modal>\n//   );\n// };\n\n// // ✅ PLACEHOLDER MODALS (will show \"Coming Soon\" for now)\n// const DomainManagementModal = ({ branch, onClose }) => {\n//   return (\n//     <Modal title={`Manage Domains - ${branch.name}`} onClose={onClose} size=\"large\">\n//       <div className=\"coming-soon\">\n//         <h3>🚀 Coming Soon!</h3>\n//         <p>Domain management interface will be available here.</p>\n//         <p>You'll be able to add and manage domains for {branch.name}.</p>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// const DirectInternshipModal = ({ branch, onClose }) => {\n//   return (\n//     <Modal title={`Direct Internships - ${branch.name}`} onClose={onClose} size=\"large\">\n//       <div className=\"coming-soon\">\n//         <h3>🚀 Coming Soon!</h3>\n//         <p>Direct internship management will be available here.</p>\n//         <p>You'll be able to add internships directly to {branch.name} without requiring domains.</p>\n//       </div>\n//     </Modal>\n//   );\n// };\n\n// export default ManageBranches;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}