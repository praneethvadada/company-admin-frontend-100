{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/leads/LeadManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/components/leads/LeadManagement.js - NEW FILE\nimport React, { useState, useEffect } from 'react';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport { FiSearch, FiFilter, FiDownload, FiMail, FiPhone, FiUser, FiMapPin, FiCalendar, FiFileText, FiEdit, FiEye, FiMoreVertical, FiUsers, FiClock } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LeadManagement = () => {\n  _s();\n  const [leads, setLeads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0\n  });\n  const [filters, setFilters] = useState({\n    search: '',\n    status: 'new',\n    projectId: '',\n    dateFrom: '',\n    dateTo: '',\n    sortBy: 'createdAt',\n    sortOrder: 'DESC'\n  });\n  const [projects, setProjects] = useState([]);\n  const [selectedLead, setSelectedLead] = useState(null);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const leadStatuses = [{\n    value: 'new',\n    label: 'New',\n    color: '#3b82f6'\n  }, {\n    value: 'contacted',\n    label: 'Contacted',\n    color: '#f59e0b'\n  }, {\n    value: 'qualified',\n    label: 'Qualified',\n    color: '#10b981'\n  }, {\n    value: 'converted',\n    label: 'Converted',\n    color: '#059669'\n  }, {\n    value: 'closed',\n    label: 'Closed',\n    color: '#6b7280'\n  }];\n  useEffect(() => {\n    fetchInitialData();\n  }, []);\n  useEffect(() => {\n    fetchLeads();\n  }, [filters, pagination.currentPage]);\n  const fetchInitialData = async () => {\n    try {\n      var _projectsResponse$dat, _projectsResponse$dat2, _projectsResponse$dat3;\n      const projectsResponse = await authService.getProjects({\n        limit: 100\n      });\n      setProjects(((_projectsResponse$dat = projectsResponse.data) === null || _projectsResponse$dat === void 0 ? void 0 : _projectsResponse$dat.projects) || ((_projectsResponse$dat2 = projectsResponse.data) === null || _projectsResponse$dat2 === void 0 ? void 0 : (_projectsResponse$dat3 = _projectsResponse$dat2.data) === null || _projectsResponse$dat3 === void 0 ? void 0 : _projectsResponse$dat3.projects) || []);\n    } catch (error) {\n      console.error('❌ Error fetching initial data:', error);\n    }\n  };\n  const fetchLeads = async () => {\n    try {\n      var _response$data, _response$data2, _response$data2$data, _response$data3, _response$data4, _response$data4$data;\n      setLoading(true);\n      const params = {\n        page: pagination.currentPage,\n        limit: 15,\n        ...filters\n      };\n      const response = await authService.getLeads(params);\n      console.log('✅ Leads fetched:', response.data);\n      setLeads(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.leads) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$data = _response$data2.data) === null || _response$data2$data === void 0 ? void 0 : _response$data2$data.leads) || []);\n      setPagination(((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.pagination) || ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : (_response$data4$data = _response$data4.data) === null || _response$data4$data === void 0 ? void 0 : _response$data4$data.pagination) || pagination);\n    } catch (error) {\n      console.error('❌ Error fetching leads:', error);\n      toast.error('Failed to fetch leads');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = searchTerm => {\n    setFilters(prev => ({\n      ...prev,\n      search: searchTerm\n    }));\n    setPagination(prev => ({\n      ...prev,\n      currentPage: 1\n    }));\n  };\n  const handleFilterChange = (filterKey, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterKey]: value\n    }));\n    setPagination(prev => ({\n      ...prev,\n      currentPage: 1\n    }));\n  };\n  const handleUpdateLead = async (leadId, updateData) => {\n    try {\n      await authService.updateLead(leadId, updateData);\n      toast.success('Lead updated successfully');\n      fetchLeads();\n      setShowUpdateModal(false);\n      setSelectedLead(null);\n    } catch (error) {\n      console.error('❌ Error updating lead:', error);\n      toast.error('Failed to update lead');\n    }\n  };\n  const handleExportLeads = async () => {\n    try {\n      const blob = await authService.exportLeads(filters);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `leads-${new Date().toISOString().split('T')[0]}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n      toast.success('Leads exported successfully');\n    } catch (error) {\n      console.error('❌ Error exporting leads:', error);\n      toast.error('Failed to export leads');\n    }\n  };\n  const getStatusColor = status => {\n    const statusConfig = leadStatuses.find(s => s.value === status);\n    return (statusConfig === null || statusConfig === void 0 ? void 0 : statusConfig.color) || '#6b7280';\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (loading && leads.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading leads...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lead-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Lead Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Track and manage customer inquiries and conversions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-button\",\n        onClick: handleExportLeads,\n        children: [/*#__PURE__*/_jsxDEV(FiDownload, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), \"Export CSV\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lead-stats\",\n      children: leadStatuses.map(status => {\n        const count = leads.filter(lead => lead.status === status.value).length;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          style: {\n            borderLeftColor: status.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-number\",\n            children: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: status.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, status.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(FiSearch, {\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search leads by name, email, or company...\",\n          value: filters.search,\n          onChange: e => handleSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.status,\n          onChange: e => handleFilterChange('status', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Statuses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), leadStatuses.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status.value,\n            children: status.label\n          }, status.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.projectId,\n          onChange: e => handleFilterChange('projectId', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: project.id,\n            children: project.title\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filters.dateFrom,\n          onChange: e => handleFilterChange('dateFrom', e.target.value),\n          placeholder: \"From Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filters.dateTo,\n          onChange: e => handleFilterChange('dateTo', e.target.value),\n          placeholder: \"To Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.sortBy,\n          onChange: e => handleFilterChange('sortBy', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"createdAt\",\n            children: \"Sort by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fullName\",\n            children: \"Sort by Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"status\",\n            children: \"Sort by Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leads-table-container\",\n      children: leads.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"leads-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Lead Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: leads.map(lead => /*#__PURE__*/_jsxDEV(LeadRow, {\n            lead: lead,\n            onView: () => setSelectedLead(lead),\n            onUpdate: () => {\n              setSelectedLead(lead);\n              setShowUpdateModal(true);\n            },\n            getStatusColor: getStatusColor,\n            formatDate: formatDate\n          }, lead.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(FiUsers, {\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No leads found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No leads match your current filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), pagination.totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: pagination.currentPage === 1,\n        onClick: () => setPagination(prev => ({\n          ...prev,\n          currentPage: prev.currentPage - 1\n        })),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-info\",\n        children: [\"Page \", pagination.currentPage, \" of \", pagination.totalPages, \"(\", pagination.totalItems, \" total)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: pagination.currentPage === pagination.totalPages,\n        onClick: () => setPagination(prev => ({\n          ...prev,\n          currentPage: prev.currentPage + 1\n        })),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this), selectedLead && !showUpdateModal && /*#__PURE__*/_jsxDEV(LeadDetailsModal, {\n      lead: selectedLead,\n      onClose: () => setSelectedLead(null),\n      onUpdate: () => {\n        setShowUpdateModal(true);\n      },\n      formatDate: formatDate,\n      getStatusColor: getStatusColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), showUpdateModal && selectedLead && /*#__PURE__*/_jsxDEV(UpdateLeadModal, {\n      lead: selectedLead,\n      leadStatuses: leadStatuses,\n      onClose: () => {\n        setShowUpdateModal(false);\n        setSelectedLead(null);\n      },\n      onUpdate: handleUpdateLead\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n// Lead Row Component\n_s(LeadManagement, \"7UGNqKAP5GHqbU5FmSkZj2BPEy0=\");\n_c = LeadManagement;\nconst LeadRow = ({\n  lead,\n  onView,\n  onUpdate,\n  getStatusColor,\n  formatDate\n}) => {\n  _s2();\n  var _lead$project;\n  const [showMenu, setShowMenu] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"lead-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"lead-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lead-name\",\n        children: [/*#__PURE__*/_jsxDEV(FiUser, {\n          className: \"lead-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"name\",\n          children: lead.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lead-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"college\",\n          children: lead.collegeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"branch\",\n          children: lead.branch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"contact-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-item\",\n        children: [/*#__PURE__*/_jsxDEV(FiMail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `mailto:${lead.email}`,\n          children: lead.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-item\",\n        children: [/*#__PURE__*/_jsxDEV(FiPhone, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `tel:${lead.phone}`,\n          children: lead.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-item\",\n        children: [/*#__PURE__*/_jsxDEV(FiMapPin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: lead.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"project-info\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-name\",\n        children: [/*#__PURE__*/_jsxDEV(FiFileText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ((_lead$project = lead.project) === null || _lead$project === void 0 ? void 0 : _lead$project.title) || 'Unknown Project'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"status-cell\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-badge\",\n        style: {\n          backgroundColor: getStatusColor(lead.status)\n        },\n        children: lead.status.charAt(0).toUpperCase() + lead.status.slice(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"date-cell\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-info\",\n        children: [/*#__PURE__*/_jsxDEV(FiCalendar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatDate(lead.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"actions-cell\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowMenu(!showMenu),\n          children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onView(),\n            children: [/*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), \" View Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onUpdate(),\n            children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), \" Update Status\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.open(`mailto:${lead.email}`),\n            children: [/*#__PURE__*/_jsxDEV(FiMail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), \" Send Email\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.open(`tel:${lead.phone}`),\n            children: [/*#__PURE__*/_jsxDEV(FiPhone, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), \" Call\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\n\n// Lead Details Modal\n_s2(LeadRow, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c2 = LeadRow;\nconst LeadDetailsModal = ({\n  lead,\n  onClose,\n  onUpdate,\n  formatDate,\n  getStatusColor\n}) => {\n  var _lead$project2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Lead Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lead-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Personal Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), \" \", lead.fullName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${lead.email}`,\n                children: lead.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `tel:${lead.phone}`,\n                children: lead.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"City:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this), \" \", lead.city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Academic Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"College:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this), \" \", lead.collegeName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Branch:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), \" \", lead.branch]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Project Interest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Project:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), \" \", ((_lead$project2 = lead.project) === null || _lead$project2 === void 0 ? void 0 : _lead$project2.title) || 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Inquiry Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), \" \", formatDate(lead.createdAt)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Status & Notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge\",\n                style: {\n                  backgroundColor: getStatusColor(lead.status)\n                },\n                children: lead.status.charAt(0).toUpperCase() + lead.status.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), lead.notes && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Notes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: lead.notes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onUpdate,\n            className: \"primary-button\",\n            children: \"Update Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.open(`mailto:${lead.email}`),\n            children: \"Send Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 416,\n    columnNumber: 5\n  }, this);\n};\n\n// Update Lead Modal\n_c3 = LeadDetailsModal;\nconst UpdateLeadModal = ({\n  lead,\n  leadStatuses,\n  onClose,\n  onUpdate\n}) => {\n  _s3();\n  var _lead$project3;\n  const [formData, setFormData] = useState({\n    status: lead.status,\n    notes: lead.notes || ''\n  });\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      await onUpdate(lead.id, formData);\n    } catch (error) {\n      console.error('Error updating lead:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Update Lead Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lead-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: lead.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [lead.email, \" | \", (_lead$project3 = lead.project) === null || _lead$project3 === void 0 ? void 0 : _lead$project3.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formData.status,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              status: e.target.value\n            })),\n            required: true,\n            children: leadStatuses.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status.value,\n              children: status.label\n            }, status.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.notes,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              notes: e.target.value\n            })),\n            rows: 4,\n            placeholder: \"Add notes about this lead...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading,\n            children: loading ? 'Updating...' : 'Update Lead'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 5\n  }, this);\n};\n_s3(UpdateLeadModal, \"3nb6/DCMVde1L/SdPpXpGQJzsps=\");\n_c4 = UpdateLeadModal;\nexport default LeadManagement;\n\n// // src/components/leads/LeadManagement.js - NEW FILE\n// import React, { useState, useEffect } from 'react';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiSearch,\n//   FiFilter,\n//   FiDownload,\n//   FiMail,\n//   FiPhone,\n//   FiUser,\n//   FiMapPin,\n//   FiCalendar,\n//   FiFileText,\n//   FiEdit,\n//   FiEye,\n//   FiMoreVertical,\n//   FiUsers,\n//   FiClock\n// } from 'react-icons/fi';\n\n// const LeadManagement = () => {\n//   const [leads, setLeads] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [pagination, setPagination] = useState({\n//     currentPage: 1,\n//     totalPages: 1,\n//     totalItems: 0\n//   });\n//   const [filters, setFilters] = useState({\n//     search: '',\n//     status: 'new',\n//     projectId: '',\n//     dateFrom: '',\n//     dateTo: '',\n//     sortBy: 'createdAt',\n//     sortOrder: 'DESC'\n//   });\n//   const [projects, setProjects] = useState([]);\n//   const [selectedLead, setSelectedLead] = useState(null);\n//   const [showUpdateModal, setShowUpdateModal] = useState(false);\n\n//   const leadStatuses = [\n//     { value: 'new', label: 'New', color: '#3b82f6' },\n//     { value: 'contacted', label: 'Contacted', color: '#f59e0b' },\n//     { value: 'qualified', label: 'Qualified', color: '#10b981' },\n//     { value: 'converted', label: 'Converted', color: '#059669' },\n//     { value: 'closed', label: 'Closed', color: '#6b7280' }\n//   ];\n\n//   useEffect(() => {\n//     fetchInitialData();\n//   }, []);\n\n//   useEffect(() => {\n//     fetchLeads();\n//   }, [filters, pagination.currentPage]);\n\n//   const fetchInitialData = async () => {\n//     try {\n//       const projectsResponse = await authService.getProjects({ limit: 100 });\n//       setProjects(projectsResponse.data.projects || []);\n//     } catch (error) {\n//       console.error('❌ Error fetching initial data:', error);\n//     }\n//   };\n\n//   const fetchLeads = async () => {\n//     try {\n//       setLoading(true);\n//       const params = {\n//         page: pagination.currentPage,\n//         limit: 15,\n//         ...filters\n//       };\n\n//       const response = await authService.getLeads(params);\n//       console.log('✅ Leads fetched:', response);\n\n//       setLeads(response.data.leads || []);\n//       setPagination(response.data.pagination || pagination);\n//     } catch (error) {\n//       console.error('❌ Error fetching leads:', error);\n//       toast.error('Failed to fetch leads');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = (searchTerm) => {\n//     setFilters(prev => ({ ...prev, search: searchTerm }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n//   };\n\n//   const handleFilterChange = (filterKey, value) => {\n//     setFilters(prev => ({ ...prev, [filterKey]: value }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n//   };\n\n//   const handleUpdateLead = async (leadId, updateData) => {\n//     try {\n//       await authService.updateLead(leadId, updateData);\n//       toast.success('Lead updated successfully');\n//       fetchLeads();\n//       setShowUpdateModal(false);\n//       setSelectedLead(null);\n//     } catch (error) {\n//       console.error('❌ Error updating lead:', error);\n//       toast.error('Failed to update lead');\n//     }\n//   };\n\n//   const handleExportLeads = async () => {\n//     try {\n//       const blob = await authService.exportLeads(filters);\n//       const url = window.URL.createObjectURL(blob);\n//       const a = document.createElement('a');\n//       a.href = url;\n//       a.download = `leads-${new Date().toISOString().split('T')[0]}.csv`;\n//       document.body.appendChild(a);\n//       a.click();\n//       document.body.removeChild(a);\n//       window.URL.revokeObjectURL(url);\n//       toast.success('Leads exported successfully');\n//     } catch (error) {\n//       console.error('❌ Error exporting leads:', error);\n//       toast.error('Failed to export leads');\n//     }\n//   };\n\n//   const getStatusColor = (status) => {\n//     const statusConfig = leadStatuses.find(s => s.value === status);\n//     return statusConfig?.color || '#6b7280';\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   if (loading && leads.length === 0) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading leads...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"lead-management\">\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <h1>Lead Management</h1>\n//           <p>Track and manage customer inquiries and conversions</p>\n//         </div>\n//         <button className=\"primary-button\" onClick={handleExportLeads}>\n//           <FiDownload />\n//           Export CSV\n//         </button>\n//       </div>\n\n//       {/* Stats Overview */}\n//       <div className=\"lead-stats\">\n//         {leadStatuses.map(status => {\n//           const count = leads.filter(lead => lead.status === status.value).length;\n//           return (\n//             <div key={status.value} className=\"stat-card\" style={{ borderLeftColor: status.color }}>\n//               <div className=\"stat-number\">{count}</div>\n//               <div className=\"stat-label\">{status.label}</div>\n//             </div>\n//           );\n//         })}\n//       </div>\n\n//       {/* Filters and Controls */}\n//       <div className=\"controls-section\">\n//         <div className=\"search-bar\">\n//           <FiSearch className=\"search-icon\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search leads by name, email, or company...\"\n//             value={filters.search}\n//             onChange={(e) => handleSearch(e.target.value)}\n//           />\n//         </div>\n\n//         <div className=\"filter-controls\">\n//           <select\n//             value={filters.status}\n//             onChange={(e) => handleFilterChange('status', e.target.value)}\n//           >\n//             <option value=\"\">All Statuses</option>\n//             {leadStatuses.map(status => (\n//               <option key={status.value} value={status.value}>{status.label}</option>\n//             ))}\n//           </select>\n\n//           <select\n//             value={filters.projectId}\n//             onChange={(e) => handleFilterChange('projectId', e.target.value)}\n//           >\n//             <option value=\"\">All Projects</option>\n//             {projects.map(project => (\n//               <option key={project.id} value={project.id}>{project.title}</option>\n//             ))}\n//           </select>\n\n//           <input\n//             type=\"date\"\n//             value={filters.dateFrom}\n//             onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\n//             placeholder=\"From Date\"\n//           />\n\n//           <input\n//             type=\"date\"\n//             value={filters.dateTo}\n//             onChange={(e) => handleFilterChange('dateTo', e.target.value)}\n//             placeholder=\"To Date\"\n//           />\n\n//           <select\n//             value={filters.sortBy}\n//             onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n//           >\n//             <option value=\"createdAt\">Sort by Date</option>\n//             <option value=\"fullName\">Sort by Name</option>\n//             <option value=\"status\">Sort by Status</option>\n//           </select>\n//         </div>\n//       </div>\n\n//       {/* Leads Table */}\n//       <div className=\"leads-table-container\">\n//         {leads.length > 0 ? (\n//           <table className=\"leads-table\">\n//             <thead>\n//               <tr>\n//                 <th>Lead Info</th>\n//                 <th>Contact</th>\n//                 <th>Project</th>\n//                 <th>Status</th>\n//                 <th>Date</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {leads.map((lead) => (\n//                 <LeadRow\n//                   key={lead.id}\n//                   lead={lead}\n//                   onView={() => setSelectedLead(lead)}\n//                   onUpdate={() => {\n//                     setSelectedLead(lead);\n//                     setShowUpdateModal(true);\n//                   }}\n//                   getStatusColor={getStatusColor}\n//                   formatDate={formatDate}\n//                 />\n//               ))}\n//             </tbody>\n//           </table>\n//         ) : (\n//           <div className=\"empty-state\">\n//             <FiUsers size={48} />\n//             <h3>No leads found</h3>\n//             <p>No leads match your current filters</p>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Pagination */}\n//       {pagination.totalPages > 1 && (\n//         <div className=\"pagination\">\n//           <button\n//             disabled={pagination.currentPage === 1}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n//           >\n//             Previous\n//           </button>\n\n//           <span className=\"page-info\">\n//             Page {pagination.currentPage} of {pagination.totalPages}\n//             ({pagination.totalItems} total)\n//           </span>\n\n//           <button\n//             disabled={pagination.currentPage === pagination.totalPages}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Lead Details Modal */}\n//       {selectedLead && !showUpdateModal && (\n//         <LeadDetailsModal\n//           lead={selectedLead}\n//           onClose={() => setSelectedLead(null)}\n//           onUpdate={() => {\n//             setShowUpdateModal(true);\n//           }}\n//           formatDate={formatDate}\n//           getStatusColor={getStatusColor}\n//         />\n//       )}\n\n//       {/* Update Lead Modal */}\n//       {showUpdateModal && selectedLead && (\n//         <UpdateLeadModal\n//           lead={selectedLead}\n//           leadStatuses={leadStatuses}\n//           onClose={() => {\n//             setShowUpdateModal(false);\n//             setSelectedLead(null);\n//           }}\n//           onUpdate={handleUpdateLead}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // Lead Row Component\n// const LeadRow = ({ lead, onView, onUpdate, getStatusColor, formatDate }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   return (\n//     <tr className=\"lead-row\">\n//       <td className=\"lead-info\">\n//         <div className=\"lead-name\">\n//           <FiUser className=\"lead-icon\" />\n//           <span className=\"name\">{lead.fullName}</span>\n//         </div>\n//         <div className=\"lead-details\">\n//           <span className=\"college\">{lead.collegeName}</span>\n//           <span className=\"branch\">{lead.branch}</span>\n//         </div>\n//       </td>\n\n//       <td className=\"contact-info\">\n//         <div className=\"contact-item\">\n//           <FiMail />\n//           <a href={`mailto:${lead.email}`}>{lead.email}</a>\n//         </div>\n//         <div className=\"contact-item\">\n//           <FiPhone />\n//           <a href={`tel:${lead.phone}`}>{lead.phone}</a>\n//         </div>\n//         <div className=\"contact-item\">\n//           <FiMapPin />\n//           <span>{lead.city}</span>\n//         </div>\n//       </td>\n\n//       <td className=\"project-info\">\n//         <div className=\"project-name\">\n//           <FiFileText />\n//           <span>{lead.project?.title || 'Unknown Project'}</span>\n//         </div>\n//       </td>\n\n//       <td className=\"status-cell\">\n//         <span \n//           className=\"status-badge\" \n//           style={{ backgroundColor: getStatusColor(lead.status) }}\n//         >\n//           {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\n//         </span>\n//       </td>\n\n//       <td className=\"date-cell\">\n//         <div className=\"date-info\">\n//           <FiCalendar />\n//           <span>{formatDate(lead.createdAt)}</span>\n//         </div>\n//       </td>\n\n//       <td className=\"actions-cell\">\n//         <div className=\"action-menu\">\n//           <button onClick={() => setShowMenu(!showMenu)}>\n//             <FiMoreVertical />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\">\n//               <button onClick={() => onView()}>\n//                 <FiEye /> View Details\n//               </button>\n//               <button onClick={() => onUpdate()}>\n//                 <FiEdit /> Update Status\n//               </button>\n//               <button onClick={() => window.open(`mailto:${lead.email}`)}>\n//                 <FiMail /> Send Email\n//               </button>\n//               <button onClick={() => window.open(`tel:${lead.phone}`)}>\n//                 <FiPhone /> Call\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </td>\n//     </tr>\n//   );\n// };\n\n// // Lead Details Modal\n// const LeadDetailsModal = ({ lead, onClose, onUpdate, formatDate, getStatusColor }) => {\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Lead Details</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n\n//         <div className=\"lead-details\">\n//           <div className=\"detail-grid\">\n//             <div className=\"detail-section\">\n//               <h3>Personal Information</h3>\n//               <div className=\"detail-item\">\n//                 <strong>Name:</strong> {lead.fullName}\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>Email:</strong> \n//                 <a href={`mailto:${lead.email}`}>{lead.email}</a>\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>Phone:</strong> \n//                 <a href={`tel:${lead.phone}`}>{lead.phone}</a>\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>City:</strong> {lead.city}\n//               </div>\n//             </div>\n\n//             <div className=\"detail-section\">\n//               <h3>Academic Information</h3>\n//               <div className=\"detail-item\">\n//                 <strong>College:</strong> {lead.collegeName}\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>Branch:</strong> {lead.branch}\n//               </div>\n//             </div>\n\n//             <div className=\"detail-section\">\n//               <h3>Project Interest</h3>\n//               <div className=\"detail-item\">\n//                 <strong>Project:</strong> {lead.project?.title || 'Unknown'}\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>Inquiry Date:</strong> {formatDate(lead.createdAt)}\n//               </div>\n//             </div>\n\n//             <div className=\"detail-section\">\n//               <h3>Status & Notes</h3>\n//               <div className=\"detail-item\">\n//                 <strong>Status:</strong>\n//                 <span \n//                   className=\"status-badge\" \n//                   style={{ backgroundColor: getStatusColor(lead.status) }}\n//                 >\n//                   {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\n//                 </span>\n//               </div>\n//               {lead.notes && (\n//                 <div className=\"detail-item\">\n//                   <strong>Notes:</strong>\n//                   <p>{lead.notes}</p>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button onClick={onUpdate} className=\"primary-button\">\n//               Update Status\n//             </button>\n//             <button onClick={() => window.open(`mailto:${lead.email}`)}>\n//               Send Email\n//             </button>\n//             <button onClick={onClose}>Close</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Update Lead Modal\n// const UpdateLeadModal = ({ lead, leadStatuses, onClose, onUpdate }) => {\n//   const [formData, setFormData] = useState({\n//     status: lead.status,\n//     notes: lead.notes || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       await onUpdate(lead.id, formData);\n//     } catch (error) {\n//       console.error('Error updating lead:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>Update Lead Status</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"lead-summary\">\n//             <h3>{lead.fullName}</h3>\n//             <p>{lead.email} | {lead.project?.title}</p>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Status</label>\n//             <select\n//               value={formData.status}\n//               onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.value }))}\n//               required\n//             >\n//               {leadStatuses.map(status => (\n//                 <option key={status.value} value={status.value}>\n//                   {status.label}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Notes</label>\n//             <textarea\n//               value={formData.notes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n//               rows={4}\n//               placeholder=\"Add notes about this lead...\"\n//             />\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Updating...' : 'Update Lead'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LeadManagement;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LeadManagement\");\n$RefreshReg$(_c2, \"LeadRow\");\n$RefreshReg$(_c3, \"LeadDetailsModal\");\n$RefreshReg$(_c4, \"UpdateLeadModal\");","map":{"version":3,"names":["React","useState","useEffect","authService","toast","FiSearch","FiFilter","FiDownload","FiMail","FiPhone","FiUser","FiMapPin","FiCalendar","FiFileText","FiEdit","FiEye","FiMoreVertical","FiUsers","FiClock","jsxDEV","_jsxDEV","LeadManagement","_s","leads","setLeads","loading","setLoading","pagination","setPagination","currentPage","totalPages","totalItems","filters","setFilters","search","status","projectId","dateFrom","dateTo","sortBy","sortOrder","projects","setProjects","selectedLead","setSelectedLead","showUpdateModal","setShowUpdateModal","leadStatuses","value","label","color","fetchInitialData","fetchLeads","_projectsResponse$dat","_projectsResponse$dat2","_projectsResponse$dat3","projectsResponse","getProjects","limit","data","error","console","_response$data","_response$data2","_response$data2$data","_response$data3","_response$data4","_response$data4$data","params","page","response","getLeads","log","handleSearch","searchTerm","prev","handleFilterChange","filterKey","handleUpdateLead","leadId","updateData","updateLead","success","handleExportLeads","blob","exportLeads","url","window","URL","createObjectURL","a","document","createElement","href","download","Date","toISOString","split","body","appendChild","click","removeChild","revokeObjectURL","getStatusColor","statusConfig","find","s","formatDate","dateString","toLocaleDateString","year","month","day","hour","minute","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","count","filter","lead","style","borderLeftColor","type","placeholder","onChange","e","target","project","id","title","LeadRow","onView","onUpdate","size","disabled","LeadDetailsModal","onClose","UpdateLeadModal","_c","_s2","_lead$project","showMenu","setShowMenu","fullName","collegeName","branch","email","phone","city","backgroundColor","charAt","toUpperCase","slice","createdAt","open","_c2","_lead$project2","notes","_c3","_s3","_lead$project3","formData","setFormData","handleSubmit","preventDefault","onSubmit","required","rows","_c4","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/leads/LeadManagement.js"],"sourcesContent":["// src/components/leads/LeadManagement.js - NEW FILE\nimport React, { useState, useEffect } from 'react';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport {\n  FiSearch,\n  FiFilter,\n  FiDownload,\n  FiMail,\n  FiPhone,\n  FiUser,\n  FiMapPin,\n  FiCalendar,\n  FiFileText,\n  FiEdit,\n  FiEye,\n  FiMoreVertical,\n  FiUsers,\n  FiClock\n} from 'react-icons/fi';\n\nconst LeadManagement = () => {\n  const [leads, setLeads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0\n  });\n  const [filters, setFilters] = useState({\n    search: '',\n    status: 'new',\n    projectId: '',\n    dateFrom: '',\n    dateTo: '',\n    sortBy: 'createdAt',\n    sortOrder: 'DESC'\n  });\n  const [projects, setProjects] = useState([]);\n  const [selectedLead, setSelectedLead] = useState(null);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n\n  const leadStatuses = [\n    { value: 'new', label: 'New', color: '#3b82f6' },\n    { value: 'contacted', label: 'Contacted', color: '#f59e0b' },\n    { value: 'qualified', label: 'Qualified', color: '#10b981' },\n    { value: 'converted', label: 'Converted', color: '#059669' },\n    { value: 'closed', label: 'Closed', color: '#6b7280' }\n  ];\n\n  useEffect(() => {\n    fetchInitialData();\n  }, []);\n\n  useEffect(() => {\n    fetchLeads();\n  }, [filters, pagination.currentPage]);\n\n  const fetchInitialData = async () => {\n    try {\n      const projectsResponse = await authService.getProjects({ limit: 100 });\n      setProjects(projectsResponse.data?.projects || projectsResponse.data?.data?.projects || []);\n    } catch (error) {\n      console.error('❌ Error fetching initial data:', error);\n    }\n  };\n\n  const fetchLeads = async () => {\n    try {\n      setLoading(true);\n      const params = {\n        page: pagination.currentPage,\n        limit: 15,\n        ...filters\n      };\n      \n      const response = await authService.getLeads(params);\n      console.log('✅ Leads fetched:', response.data);\n      \n      setLeads(response.data?.leads || response.data?.data?.leads || []);\n      setPagination(response.data?.pagination || response.data?.data?.pagination || pagination);\n    } catch (error) {\n      console.error('❌ Error fetching leads:', error);\n      toast.error('Failed to fetch leads');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (searchTerm) => {\n    setFilters(prev => ({ ...prev, search: searchTerm }));\n    setPagination(prev => ({ ...prev, currentPage: 1 }));\n  };\n\n  const handleFilterChange = (filterKey, value) => {\n    setFilters(prev => ({ ...prev, [filterKey]: value }));\n    setPagination(prev => ({ ...prev, currentPage: 1 }));\n  };\n\n  const handleUpdateLead = async (leadId, updateData) => {\n    try {\n      await authService.updateLead(leadId, updateData);\n      toast.success('Lead updated successfully');\n      fetchLeads();\n      setShowUpdateModal(false);\n      setSelectedLead(null);\n    } catch (error) {\n      console.error('❌ Error updating lead:', error);\n      toast.error('Failed to update lead');\n    }\n  };\n\n  const handleExportLeads = async () => {\n    try {\n      const blob = await authService.exportLeads(filters);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `leads-${new Date().toISOString().split('T')[0]}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n      toast.success('Leads exported successfully');\n    } catch (error) {\n      console.error('❌ Error exporting leads:', error);\n      toast.error('Failed to export leads');\n    }\n  };\n\n  const getStatusColor = (status) => {\n    const statusConfig = leadStatuses.find(s => s.value === status);\n    return statusConfig?.color || '#6b7280';\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (loading && leads.length === 0) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading leads...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"lead-management\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Lead Management</h1>\n          <p>Track and manage customer inquiries and conversions</p>\n        </div>\n        <button className=\"primary-button\" onClick={handleExportLeads}>\n          <FiDownload />\n          Export CSV\n        </button>\n      </div>\n\n      {/* Stats Overview */}\n      <div className=\"lead-stats\">\n        {leadStatuses.map(status => {\n          const count = leads.filter(lead => lead.status === status.value).length;\n          return (\n            <div key={status.value} className=\"stat-card\" style={{ borderLeftColor: status.color }}>\n              <div className=\"stat-number\">{count}</div>\n              <div className=\"stat-label\">{status.label}</div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Filters and Controls */}\n      <div className=\"controls-section\">\n        <div className=\"search-bar\">\n          <FiSearch className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search leads by name, email, or company...\"\n            value={filters.search}\n            onChange={(e) => handleSearch(e.target.value)}\n          />\n        </div>\n        \n        <div className=\"filter-controls\">\n          <select\n            value={filters.status}\n            onChange={(e) => handleFilterChange('status', e.target.value)}\n          >\n            <option value=\"\">All Statuses</option>\n            {leadStatuses.map(status => (\n              <option key={status.value} value={status.value}>{status.label}</option>\n            ))}\n          </select>\n          \n          <select\n            value={filters.projectId}\n            onChange={(e) => handleFilterChange('projectId', e.target.value)}\n          >\n            <option value=\"\">All Projects</option>\n            {projects.map(project => (\n              <option key={project.id} value={project.id}>{project.title}</option>\n            ))}\n          </select>\n          \n          <input\n            type=\"date\"\n            value={filters.dateFrom}\n            onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\n            placeholder=\"From Date\"\n          />\n          \n          <input\n            type=\"date\"\n            value={filters.dateTo}\n            onChange={(e) => handleFilterChange('dateTo', e.target.value)}\n            placeholder=\"To Date\"\n          />\n          \n          <select\n            value={filters.sortBy}\n            onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n          >\n            <option value=\"createdAt\">Sort by Date</option>\n            <option value=\"fullName\">Sort by Name</option>\n            <option value=\"status\">Sort by Status</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Leads Table */}\n      <div className=\"leads-table-container\">\n        {leads.length > 0 ? (\n          <table className=\"leads-table\">\n            <thead>\n              <tr>\n                <th>Lead Info</th>\n                <th>Contact</th>\n                <th>Project</th>\n                <th>Status</th>\n                <th>Date</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {leads.map((lead) => (\n                <LeadRow\n                  key={lead.id}\n                  lead={lead}\n                  onView={() => setSelectedLead(lead)}\n                  onUpdate={() => {\n                    setSelectedLead(lead);\n                    setShowUpdateModal(true);\n                  }}\n                  getStatusColor={getStatusColor}\n                  formatDate={formatDate}\n                />\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div className=\"empty-state\">\n            <FiUsers size={48} />\n            <h3>No leads found</h3>\n            <p>No leads match your current filters</p>\n          </div>\n        )}\n      </div>\n\n      {/* Pagination */}\n      {pagination.totalPages > 1 && (\n        <div className=\"pagination\">\n          <button\n            disabled={pagination.currentPage === 1}\n            onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n          >\n            Previous\n          </button>\n          \n          <span className=\"page-info\">\n            Page {pagination.currentPage} of {pagination.totalPages}\n            ({pagination.totalItems} total)\n          </span>\n          \n          <button\n            disabled={pagination.currentPage === pagination.totalPages}\n            onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n          >\n            Next\n          </button>\n        </div>\n      )}\n\n      {/* Lead Details Modal */}\n      {selectedLead && !showUpdateModal && (\n        <LeadDetailsModal\n          lead={selectedLead}\n          onClose={() => setSelectedLead(null)}\n          onUpdate={() => {\n            setShowUpdateModal(true);\n          }}\n          formatDate={formatDate}\n          getStatusColor={getStatusColor}\n        />\n      )}\n\n      {/* Update Lead Modal */}\n      {showUpdateModal && selectedLead && (\n        <UpdateLeadModal\n          lead={selectedLead}\n          leadStatuses={leadStatuses}\n          onClose={() => {\n            setShowUpdateModal(false);\n            setSelectedLead(null);\n          }}\n          onUpdate={handleUpdateLead}\n        />\n      )}\n    </div>\n  );\n};\n\n// Lead Row Component\nconst LeadRow = ({ lead, onView, onUpdate, getStatusColor, formatDate }) => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <tr className=\"lead-row\">\n      <td className=\"lead-info\">\n        <div className=\"lead-name\">\n          <FiUser className=\"lead-icon\" />\n          <span className=\"name\">{lead.fullName}</span>\n        </div>\n        <div className=\"lead-details\">\n          <span className=\"college\">{lead.collegeName}</span>\n          <span className=\"branch\">{lead.branch}</span>\n        </div>\n      </td>\n      \n      <td className=\"contact-info\">\n        <div className=\"contact-item\">\n          <FiMail />\n          <a href={`mailto:${lead.email}`}>{lead.email}</a>\n        </div>\n        <div className=\"contact-item\">\n          <FiPhone />\n          <a href={`tel:${lead.phone}`}>{lead.phone}</a>\n        </div>\n        <div className=\"contact-item\">\n          <FiMapPin />\n          <span>{lead.city}</span>\n        </div>\n      </td>\n      \n      <td className=\"project-info\">\n        <div className=\"project-name\">\n          <FiFileText />\n          <span>{lead.project?.title || 'Unknown Project'}</span>\n        </div>\n      </td>\n      \n      <td className=\"status-cell\">\n        <span \n          className=\"status-badge\" \n          style={{ backgroundColor: getStatusColor(lead.status) }}\n        >\n          {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\n        </span>\n      </td>\n      \n      <td className=\"date-cell\">\n        <div className=\"date-info\">\n          <FiCalendar />\n          <span>{formatDate(lead.createdAt)}</span>\n        </div>\n      </td>\n      \n      <td className=\"actions-cell\">\n        <div className=\"action-menu\">\n          <button onClick={() => setShowMenu(!showMenu)}>\n            <FiMoreVertical />\n          </button>\n          {showMenu && (\n            <div className=\"dropdown-menu\">\n              <button onClick={() => onView()}>\n                <FiEye /> View Details\n              </button>\n              <button onClick={() => onUpdate()}>\n                <FiEdit /> Update Status\n              </button>\n              <button onClick={() => window.open(`mailto:${lead.email}`)}>\n                <FiMail /> Send Email\n              </button>\n              <button onClick={() => window.open(`tel:${lead.phone}`)}>\n                <FiPhone /> Call\n              </button>\n            </div>\n          )}\n        </div>\n      </td>\n    </tr>\n  );\n};\n\n// Lead Details Modal\nconst LeadDetailsModal = ({ lead, onClose, onUpdate, formatDate, getStatusColor }) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Lead Details</h2>\n          <button onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"lead-details\">\n          <div className=\"detail-grid\">\n            <div className=\"detail-section\">\n              <h3>Personal Information</h3>\n              <div className=\"detail-item\">\n                <strong>Name:</strong> {lead.fullName}\n              </div>\n              <div className=\"detail-item\">\n                <strong>Email:</strong> \n                <a href={`mailto:${lead.email}`}>{lead.email}</a>\n              </div>\n              <div className=\"detail-item\">\n                <strong>Phone:</strong> \n                <a href={`tel:${lead.phone}`}>{lead.phone}</a>\n              </div>\n              <div className=\"detail-item\">\n                <strong>City:</strong> {lead.city}\n              </div>\n            </div>\n            \n            <div className=\"detail-section\">\n              <h3>Academic Information</h3>\n              <div className=\"detail-item\">\n                <strong>College:</strong> {lead.collegeName}\n              </div>\n              <div className=\"detail-item\">\n                <strong>Branch:</strong> {lead.branch}\n              </div>\n            </div>\n            \n            <div className=\"detail-section\">\n              <h3>Project Interest</h3>\n              <div className=\"detail-item\">\n                <strong>Project:</strong> {lead.project?.title || 'Unknown'}\n              </div>\n              <div className=\"detail-item\">\n                <strong>Inquiry Date:</strong> {formatDate(lead.createdAt)}\n              </div>\n            </div>\n            \n            <div className=\"detail-section\">\n              <h3>Status & Notes</h3>\n              <div className=\"detail-item\">\n                <strong>Status:</strong>\n                <span \n                  className=\"status-badge\" \n                  style={{ backgroundColor: getStatusColor(lead.status) }}\n                >\n                  {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\n                </span>\n              </div>\n              {lead.notes && (\n                <div className=\"detail-item\">\n                  <strong>Notes:</strong>\n                  <p>{lead.notes}</p>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button onClick={onUpdate} className=\"primary-button\">\n              Update Status\n            </button>\n            <button onClick={() => window.open(`mailto:${lead.email}`)}>\n              Send Email\n            </button>\n            <button onClick={onClose}>Close</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Update Lead Modal\nconst UpdateLeadModal = ({ lead, leadStatuses, onClose, onUpdate }) => {\n  const [formData, setFormData] = useState({\n    status: lead.status,\n    notes: lead.notes || ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      await onUpdate(lead.id, formData);\n    } catch (error) {\n      console.error('Error updating lead:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <h2>Update Lead Status</h2>\n          <button onClick={onClose}>×</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"lead-summary\">\n            <h3>{lead.fullName}</h3>\n            <p>{lead.email} | {lead.project?.title}</p>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Status</label>\n            <select\n              value={formData.status}\n              onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.value }))}\n              required\n            >\n              {leadStatuses.map(status => (\n                <option key={status.value} value={status.value}>\n                  {status.label}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Notes</label>\n            <textarea\n              value={formData.notes}\n              onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n              rows={4}\n              placeholder=\"Add notes about this lead...\"\n            />\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n              {loading ? 'Updating...' : 'Update Lead'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LeadManagement;\n\n\n// // src/components/leads/LeadManagement.js - NEW FILE\n// import React, { useState, useEffect } from 'react';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiSearch,\n//   FiFilter,\n//   FiDownload,\n//   FiMail,\n//   FiPhone,\n//   FiUser,\n//   FiMapPin,\n//   FiCalendar,\n//   FiFileText,\n//   FiEdit,\n//   FiEye,\n//   FiMoreVertical,\n//   FiUsers,\n//   FiClock\n// } from 'react-icons/fi';\n\n// const LeadManagement = () => {\n//   const [leads, setLeads] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [pagination, setPagination] = useState({\n//     currentPage: 1,\n//     totalPages: 1,\n//     totalItems: 0\n//   });\n//   const [filters, setFilters] = useState({\n//     search: '',\n//     status: 'new',\n//     projectId: '',\n//     dateFrom: '',\n//     dateTo: '',\n//     sortBy: 'createdAt',\n//     sortOrder: 'DESC'\n//   });\n//   const [projects, setProjects] = useState([]);\n//   const [selectedLead, setSelectedLead] = useState(null);\n//   const [showUpdateModal, setShowUpdateModal] = useState(false);\n\n//   const leadStatuses = [\n//     { value: 'new', label: 'New', color: '#3b82f6' },\n//     { value: 'contacted', label: 'Contacted', color: '#f59e0b' },\n//     { value: 'qualified', label: 'Qualified', color: '#10b981' },\n//     { value: 'converted', label: 'Converted', color: '#059669' },\n//     { value: 'closed', label: 'Closed', color: '#6b7280' }\n//   ];\n\n//   useEffect(() => {\n//     fetchInitialData();\n//   }, []);\n\n//   useEffect(() => {\n//     fetchLeads();\n//   }, [filters, pagination.currentPage]);\n\n//   const fetchInitialData = async () => {\n//     try {\n//       const projectsResponse = await authService.getProjects({ limit: 100 });\n//       setProjects(projectsResponse.data.projects || []);\n//     } catch (error) {\n//       console.error('❌ Error fetching initial data:', error);\n//     }\n//   };\n\n//   const fetchLeads = async () => {\n//     try {\n//       setLoading(true);\n//       const params = {\n//         page: pagination.currentPage,\n//         limit: 15,\n//         ...filters\n//       };\n      \n//       const response = await authService.getLeads(params);\n//       console.log('✅ Leads fetched:', response);\n      \n//       setLeads(response.data.leads || []);\n//       setPagination(response.data.pagination || pagination);\n//     } catch (error) {\n//       console.error('❌ Error fetching leads:', error);\n//       toast.error('Failed to fetch leads');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleSearch = (searchTerm) => {\n//     setFilters(prev => ({ ...prev, search: searchTerm }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n//   };\n\n//   const handleFilterChange = (filterKey, value) => {\n//     setFilters(prev => ({ ...prev, [filterKey]: value }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n//   };\n\n//   const handleUpdateLead = async (leadId, updateData) => {\n//     try {\n//       await authService.updateLead(leadId, updateData);\n//       toast.success('Lead updated successfully');\n//       fetchLeads();\n//       setShowUpdateModal(false);\n//       setSelectedLead(null);\n//     } catch (error) {\n//       console.error('❌ Error updating lead:', error);\n//       toast.error('Failed to update lead');\n//     }\n//   };\n\n//   const handleExportLeads = async () => {\n//     try {\n//       const blob = await authService.exportLeads(filters);\n//       const url = window.URL.createObjectURL(blob);\n//       const a = document.createElement('a');\n//       a.href = url;\n//       a.download = `leads-${new Date().toISOString().split('T')[0]}.csv`;\n//       document.body.appendChild(a);\n//       a.click();\n//       document.body.removeChild(a);\n//       window.URL.revokeObjectURL(url);\n//       toast.success('Leads exported successfully');\n//     } catch (error) {\n//       console.error('❌ Error exporting leads:', error);\n//       toast.error('Failed to export leads');\n//     }\n//   };\n\n//   const getStatusColor = (status) => {\n//     const statusConfig = leadStatuses.find(s => s.value === status);\n//     return statusConfig?.color || '#6b7280';\n//   };\n\n//   const formatDate = (dateString) => {\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   if (loading && leads.length === 0) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading leads...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"lead-management\">\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <h1>Lead Management</h1>\n//           <p>Track and manage customer inquiries and conversions</p>\n//         </div>\n//         <button className=\"primary-button\" onClick={handleExportLeads}>\n//           <FiDownload />\n//           Export CSV\n//         </button>\n//       </div>\n\n//       {/* Stats Overview */}\n//       <div className=\"lead-stats\">\n//         {leadStatuses.map(status => {\n//           const count = leads.filter(lead => lead.status === status.value).length;\n//           return (\n//             <div key={status.value} className=\"stat-card\" style={{ borderLeftColor: status.color }}>\n//               <div className=\"stat-number\">{count}</div>\n//               <div className=\"stat-label\">{status.label}</div>\n//             </div>\n//           );\n//         })}\n//       </div>\n\n//       {/* Filters and Controls */}\n//       <div className=\"controls-section\">\n//         <div className=\"search-bar\">\n//           <FiSearch className=\"search-icon\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search leads by name, email, or company...\"\n//             value={filters.search}\n//             onChange={(e) => handleSearch(e.target.value)}\n//           />\n//         </div>\n        \n//         <div className=\"filter-controls\">\n//           <select\n//             value={filters.status}\n//             onChange={(e) => handleFilterChange('status', e.target.value)}\n//           >\n//             <option value=\"\">All Statuses</option>\n//             {leadStatuses.map(status => (\n//               <option key={status.value} value={status.value}>{status.label}</option>\n//             ))}\n//           </select>\n          \n//           <select\n//             value={filters.projectId}\n//             onChange={(e) => handleFilterChange('projectId', e.target.value)}\n//           >\n//             <option value=\"\">All Projects</option>\n//             {projects.map(project => (\n//               <option key={project.id} value={project.id}>{project.title}</option>\n//             ))}\n//           </select>\n          \n//           <input\n//             type=\"date\"\n//             value={filters.dateFrom}\n//             onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\n//             placeholder=\"From Date\"\n//           />\n          \n//           <input\n//             type=\"date\"\n//             value={filters.dateTo}\n//             onChange={(e) => handleFilterChange('dateTo', e.target.value)}\n//             placeholder=\"To Date\"\n//           />\n          \n//           <select\n//             value={filters.sortBy}\n//             onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n//           >\n//             <option value=\"createdAt\">Sort by Date</option>\n//             <option value=\"fullName\">Sort by Name</option>\n//             <option value=\"status\">Sort by Status</option>\n//           </select>\n//         </div>\n//       </div>\n\n//       {/* Leads Table */}\n//       <div className=\"leads-table-container\">\n//         {leads.length > 0 ? (\n//           <table className=\"leads-table\">\n//             <thead>\n//               <tr>\n//                 <th>Lead Info</th>\n//                 <th>Contact</th>\n//                 <th>Project</th>\n//                 <th>Status</th>\n//                 <th>Date</th>\n//                 <th>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {leads.map((lead) => (\n//                 <LeadRow\n//                   key={lead.id}\n//                   lead={lead}\n//                   onView={() => setSelectedLead(lead)}\n//                   onUpdate={() => {\n//                     setSelectedLead(lead);\n//                     setShowUpdateModal(true);\n//                   }}\n//                   getStatusColor={getStatusColor}\n//                   formatDate={formatDate}\n//                 />\n//               ))}\n//             </tbody>\n//           </table>\n//         ) : (\n//           <div className=\"empty-state\">\n//             <FiUsers size={48} />\n//             <h3>No leads found</h3>\n//             <p>No leads match your current filters</p>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Pagination */}\n//       {pagination.totalPages > 1 && (\n//         <div className=\"pagination\">\n//           <button\n//             disabled={pagination.currentPage === 1}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n//           >\n//             Previous\n//           </button>\n          \n//           <span className=\"page-info\">\n//             Page {pagination.currentPage} of {pagination.totalPages}\n//             ({pagination.totalItems} total)\n//           </span>\n          \n//           <button\n//             disabled={pagination.currentPage === pagination.totalPages}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Lead Details Modal */}\n//       {selectedLead && !showUpdateModal && (\n//         <LeadDetailsModal\n//           lead={selectedLead}\n//           onClose={() => setSelectedLead(null)}\n//           onUpdate={() => {\n//             setShowUpdateModal(true);\n//           }}\n//           formatDate={formatDate}\n//           getStatusColor={getStatusColor}\n//         />\n//       )}\n\n//       {/* Update Lead Modal */}\n//       {showUpdateModal && selectedLead && (\n//         <UpdateLeadModal\n//           lead={selectedLead}\n//           leadStatuses={leadStatuses}\n//           onClose={() => {\n//             setShowUpdateModal(false);\n//             setSelectedLead(null);\n//           }}\n//           onUpdate={handleUpdateLead}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // Lead Row Component\n// const LeadRow = ({ lead, onView, onUpdate, getStatusColor, formatDate }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   return (\n//     <tr className=\"lead-row\">\n//       <td className=\"lead-info\">\n//         <div className=\"lead-name\">\n//           <FiUser className=\"lead-icon\" />\n//           <span className=\"name\">{lead.fullName}</span>\n//         </div>\n//         <div className=\"lead-details\">\n//           <span className=\"college\">{lead.collegeName}</span>\n//           <span className=\"branch\">{lead.branch}</span>\n//         </div>\n//       </td>\n      \n//       <td className=\"contact-info\">\n//         <div className=\"contact-item\">\n//           <FiMail />\n//           <a href={`mailto:${lead.email}`}>{lead.email}</a>\n//         </div>\n//         <div className=\"contact-item\">\n//           <FiPhone />\n//           <a href={`tel:${lead.phone}`}>{lead.phone}</a>\n//         </div>\n//         <div className=\"contact-item\">\n//           <FiMapPin />\n//           <span>{lead.city}</span>\n//         </div>\n//       </td>\n      \n//       <td className=\"project-info\">\n//         <div className=\"project-name\">\n//           <FiFileText />\n//           <span>{lead.project?.title || 'Unknown Project'}</span>\n//         </div>\n//       </td>\n      \n//       <td className=\"status-cell\">\n//         <span \n//           className=\"status-badge\" \n//           style={{ backgroundColor: getStatusColor(lead.status) }}\n//         >\n//           {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\n//         </span>\n//       </td>\n      \n//       <td className=\"date-cell\">\n//         <div className=\"date-info\">\n//           <FiCalendar />\n//           <span>{formatDate(lead.createdAt)}</span>\n//         </div>\n//       </td>\n      \n//       <td className=\"actions-cell\">\n//         <div className=\"action-menu\">\n//           <button onClick={() => setShowMenu(!showMenu)}>\n//             <FiMoreVertical />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\">\n//               <button onClick={() => onView()}>\n//                 <FiEye /> View Details\n//               </button>\n//               <button onClick={() => onUpdate()}>\n//                 <FiEdit /> Update Status\n//               </button>\n//               <button onClick={() => window.open(`mailto:${lead.email}`)}>\n//                 <FiMail /> Send Email\n//               </button>\n//               <button onClick={() => window.open(`tel:${lead.phone}`)}>\n//                 <FiPhone /> Call\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </td>\n//     </tr>\n//   );\n// };\n\n// // Lead Details Modal\n// const LeadDetailsModal = ({ lead, onClose, onUpdate, formatDate, getStatusColor }) => {\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Lead Details</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n        \n//         <div className=\"lead-details\">\n//           <div className=\"detail-grid\">\n//             <div className=\"detail-section\">\n//               <h3>Personal Information</h3>\n//               <div className=\"detail-item\">\n//                 <strong>Name:</strong> {lead.fullName}\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>Email:</strong> \n//                 <a href={`mailto:${lead.email}`}>{lead.email}</a>\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>Phone:</strong> \n//                 <a href={`tel:${lead.phone}`}>{lead.phone}</a>\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>City:</strong> {lead.city}\n//               </div>\n//             </div>\n            \n//             <div className=\"detail-section\">\n//               <h3>Academic Information</h3>\n//               <div className=\"detail-item\">\n//                 <strong>College:</strong> {lead.collegeName}\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>Branch:</strong> {lead.branch}\n//               </div>\n//             </div>\n            \n//             <div className=\"detail-section\">\n//               <h3>Project Interest</h3>\n//               <div className=\"detail-item\">\n//                 <strong>Project:</strong> {lead.project?.title || 'Unknown'}\n//               </div>\n//               <div className=\"detail-item\">\n//                 <strong>Inquiry Date:</strong> {formatDate(lead.createdAt)}\n//               </div>\n//             </div>\n            \n//             <div className=\"detail-section\">\n//               <h3>Status & Notes</h3>\n//               <div className=\"detail-item\">\n//                 <strong>Status:</strong>\n//                 <span \n//                   className=\"status-badge\" \n//                   style={{ backgroundColor: getStatusColor(lead.status) }}\n//                 >\n//                   {lead.status.charAt(0).toUpperCase() + lead.status.slice(1)}\n//                 </span>\n//               </div>\n//               {lead.notes && (\n//                 <div className=\"detail-item\">\n//                   <strong>Notes:</strong>\n//                   <p>{lead.notes}</p>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button onClick={onUpdate} className=\"primary-button\">\n//               Update Status\n//             </button>\n//             <button onClick={() => window.open(`mailto:${lead.email}`)}>\n//               Send Email\n//             </button>\n//             <button onClick={onClose}>Close</button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Update Lead Modal\n// const UpdateLeadModal = ({ lead, leadStatuses, onClose, onUpdate }) => {\n//   const [formData, setFormData] = useState({\n//     status: lead.status,\n//     notes: lead.notes || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n    \n//     try {\n//       await onUpdate(lead.id, formData);\n//     } catch (error) {\n//       console.error('Error updating lead:', error);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>Update Lead Status</h2>\n//           <button onClick={onClose}>×</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"lead-summary\">\n//             <h3>{lead.fullName}</h3>\n//             <p>{lead.email} | {lead.project?.title}</p>\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Status</label>\n//             <select\n//               value={formData.status}\n//               onChange={(e) => setFormData(prev => ({ ...prev, status: e.target.value }))}\n//               required\n//             >\n//               {leadStatuses.map(status => (\n//                 <option key={status.value} value={status.value}>\n//                   {status.label}\n//                 </option>\n//               ))}\n//             </select>\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Notes</label>\n//             <textarea\n//               value={formData.notes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n//               rows={4}\n//               placeholder=\"Add notes about this lead...\"\n//             />\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Updating...' : 'Update Lead'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default LeadManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}