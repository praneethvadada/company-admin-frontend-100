{"ast":null,"code":"// src/services/authService.js - REPLACE EXISTING (Hybrid Version)\nimport api from './api';\nimport { cookieUtils } from '../utils/cookieUtils';\nexport const authService = {\n  // Login user\n  login: credentials => {\n    console.log('🔐 authService.login: Making login API call');\n    return api.post('/auth/login', credentials);\n  },\n  // Register new user\n  signup: userData => {\n    console.log('📝 authService.signup: Making signup API call');\n    return api.post('/auth/signup', userData);\n  },\n  // Step 1: Request password reset OTP\n  forgotPassword: email => {\n    console.log('🔑 authService.forgotPassword: Making forgot password API call');\n    return api.post('/auth/forgot-password', {\n      email\n    });\n  },\n  // Step 2: Reset password with OTP\n  resetPassword: resetData => {\n    console.log('🔄 authService.resetPassword: Making reset password API call');\n    console.log('📦 Reset password data:', {\n      token: resetData.token ? 'Present' : 'Missing',\n      otp: resetData.otp ? 'Present' : 'Missing',\n      newPassword: resetData.newPassword ? 'Present' : 'Missing',\n      confirmPassword: resetData.confirmPassword ? 'Present' : 'Missing'\n    });\n    return api.post('/auth/reset-password', {\n      token: resetData.token,\n      otp: resetData.otp,\n      newPassword: resetData.newPassword,\n      confirmPassword: resetData.confirmPassword\n    });\n  },\n  // Step 1: Request password change (sends OTP) - Exact API match\n  changePassword: passwordData => {\n    console.log('🔐 authService.changePassword: Step 1 - Requesting password change with OTP');\n    console.log('📦 Request data being sent to /auth/change-password:', {\n      currentPassword: passwordData.currentPassword ? 'Present' : 'Missing',\n      newPassword: passwordData.newPassword ? 'Present' : 'Missing',\n      confirmPassword: passwordData.confirmPassword ? 'Present' : 'Missing'\n    });\n    const requestBody = {\n      currentPassword: passwordData.currentPassword,\n      newPassword: passwordData.newPassword,\n      confirmPassword: passwordData.confirmPassword\n    };\n    console.log('📤 Exact request body:', JSON.stringify(requestBody, null, 2));\n    return api.post('/auth/change-password', requestBody);\n  },\n  // Step 2: Verify OTP and complete password change - Exact API match\n  verifyPasswordChangeOTP: otpData => {\n    console.log('🔐 authService.verifyPasswordChangeOTP: Step 2 - Verifying OTP');\n    console.log('📦 OTP verification data received in authService:', {\n      token: otpData.token ? 'Present' : 'Missing',\n      tokenValue: otpData.token,\n      tokenType: typeof otpData.token,\n      tokenLength: otpData.token ? otpData.token.length : 0,\n      otp: otpData.otp ? 'Present' : 'Missing',\n      otpValue: otpData.otp,\n      otpType: typeof otpData.otp\n    });\n    // Exact API structure as specified\n    const requestBody = {\n      token: otpData.token,\n      otp: otpData.otp\n    };\n    console.log('📤 Final request body for /auth/verify-password-change:');\n    console.log('📤 Request body object:', requestBody);\n    console.log('📤 Request body JSON:', JSON.stringify(requestBody, null, 2));\n    return api.post('/auth/verify-password-change', requestBody);\n  },\n  // Logout user (FIXED VERSION)\n  logout: async () => {\n    console.log('🚪 authService.logout: Making logout API call');\n    try {\n      const response = await api.post('/auth/logout');\n      console.log('✅ Logout API call successful');\n      return response;\n    } catch (error) {\n      console.error('❌ Logout API call failed:', error);\n      throw error;\n    } finally {\n      // Always clean up regardless of API success/failure\n      console.log('🧹 Cleaning up auth data...');\n      authService.removeAuthToken();\n      cookieUtils.clearAuth();\n    }\n  },\n  // Set auth token in headers\n  setAuthToken: token => {\n    console.log('🔑 authService.setAuthToken: Setting auth token in API headers');\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n  // Remove auth token from headers\n  removeAuthToken: () => {\n    console.log('🗑️ authService.removeAuthToken: Removing auth token from API headers');\n    delete api.defaults.headers.common['Authorization'];\n  },\n  // Profile management\n  getProfile: () => {\n    console.log('👤 authService.getProfile: Making get profile API call');\n    return api.get('/auth/profile');\n  },\n  // Dashboard API calls\n  getDashboardStats: () => {\n    console.log('📊 authService.getDashboardStats: Making dashboard stats API call');\n    return api.get('/admin/dashboard/stats');\n  },\n  getRecentActivity: () => {\n    console.log('📋 authService.getRecentActivity: Making recent activity API call');\n    return api.get('/admin/dashboard/recent-activity');\n  },\n  getAnalytics: (period = 30) => {\n    console.log('📈 authService.getAnalytics: Making analytics API call');\n    return api.get(`/admin/dashboard/analytics?period=${period}`);\n  },\n  // Domain management\n  getDomains: (params = {}) => {\n    console.log('📁 authService.getDomains: Making get domains API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/domains?${queryString}` : '/admin/domains';\n    return api.get(url);\n  },\n  createDomain: data => {\n    console.log('📁 authService.createDomain: Making create domain API call');\n    return api.post('/admin/domains', data);\n  },\n  updateDomain: (id, data) => {\n    console.log('📁 authService.updateDomain: Making update domain API call');\n    return api.put(`/admin/domains/${id}`, data);\n  },\n  deleteDomain: id => {\n    console.log('📁 authService.deleteDomain: Making delete domain API call');\n    return api.delete(`/admin/domains/${id}`);\n  },\n  getDomainHierarchy: id => {\n    console.log('🌳 authService.getDomainHierarchy: Making get domain hierarchy API call');\n    return api.get(`/admin/domains/${id}/hierarchy`);\n  },\n  // SubDomain management\n  getSubDomains: (params = {}) => {\n    console.log('📂 authService.getSubDomains: Making get sub-domains API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/subdomains?${queryString}` : '/admin/subdomains';\n    return api.get(url);\n  },\n  createSubDomain: data => {\n    console.log('📂 authService.createSubDomain: Making create sub-domain API call');\n    return api.post('/admin/subdomains', data);\n  },\n  updateSubDomain: (id, data) => {\n    console.log('📂 authService.updateSubDomain: Making update sub-domain API call');\n    return api.put(`/admin/subdomains/${id}`, data);\n  },\n  deleteSubDomain: id => {\n    console.log('📂 authService.deleteSubDomain: Making delete sub-domain API call');\n    return api.delete(`/admin/subdomains/${id}`);\n  },\n  getLeafSubDomains: domainId => {\n    console.log('🍃 authService.getLeafSubDomains: Making get leaf sub-domains API call');\n    return api.get(`/admin/subdomains/leafs?domainId=${domainId}`);\n  },\n  // Project management\n  getProjects: (params = {}) => {\n    console.log('📋 authService.getProjects: Making get projects API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/projects?${queryString}` : '/admin/projects';\n    return api.get(url);\n  },\n  createProject: data => {\n    console.log('📋 authService.createProject: Making create project API call');\n    return api.post('/admin/projects', data);\n  },\n  updateProject: (id, data) => {\n    console.log('📋 authService.updateProject: Making update project API call');\n    return api.put(`/admin/projects/${id}`, data);\n  },\n  deleteProject: id => {\n    console.log('📋 authService.deleteProject: Making delete project API call');\n    return api.delete(`/admin/projects/${id}`);\n  },\n  moveProject: (id, data) => {\n    console.log('📋 authService.moveProject: Making move project API call');\n    return api.put(`/admin/projects/${id}/move`, data);\n  },\n  archiveProject: (id, data) => {\n    console.log('📋 authService.archiveProject: Making archive project API call');\n    return api.put(`/admin/projects/${id}/archive`, data);\n  },\n  // Leads management\n  getLeads: (params = {}) => {\n    console.log('👥 authService.getLeads: Making get leads API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/leads?${queryString}` : '/admin/leads';\n    return api.get(url);\n  },\n  updateLead: (id, data) => {\n    console.log('👥 authService.updateLead: Making update lead API call');\n    return api.put(`/admin/leads/${id}`, data);\n  },\n  exportLeads: (params = {}) => {\n    console.log('💾 authService.exportLeads: Making export leads API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/leads/export/csv?${queryString}` : '/admin/leads/export/csv';\n    return api.get(url, {\n      responseType: 'blob'\n    });\n  },\n  // Image management\n  uploadImages: formData => {\n    console.log('🖼️ authService.uploadImages: Making upload images API call');\n    return api.post('/admin/images/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  updateImage: (id, data) => {\n    console.log('🖼️ authService.updateImage: Making update image API call');\n    return api.put(`/admin/images/${id}`, data);\n  },\n  deleteImage: id => {\n    console.log('🖼️ authService.deleteImage: Making delete image API call');\n    return api.delete(`/admin/images/${id}`);\n  },\n  reorderImages: data => {\n    console.log('🖼️ authService.reorderImages: Making reorder images API call');\n    return api.put('/admin/images/reorder', data);\n  },\n  // Add this right before the closing }; in your authService object\n\n  // Branch management (for internships)\n  getBranches: (params = {}) => {\n    console.log('🌿 authService.getBranches: Making get branches API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/branches?${queryString}` : '/admin/branches';\n    return api.get(url);\n  },\n  createBranch: data => {\n    console.log('🌿 authService.createBranch: Making create branch API call');\n    return api.post('/admin/branches', data);\n  },\n  updateBranch: (id, data) => {\n    console.log('🌿 authService.updateBranch: Making update branch API call');\n    return api.put(`/admin/branches/${id}`, data);\n  },\n  deleteBranch: id => {\n    console.log('🌿 authService.deleteBranch: Making delete branch API call');\n    return api.delete(`/admin/branches/${id}`);\n  },\n  // Internship management\n  getInternships: (params = {}) => {\n    console.log('🎓 authService.getInternships: Making get internships API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/internships?${queryString}` : '/admin/internships';\n    return api.get(url);\n  },\n  createInternship: data => {\n    console.log('🎓 authService.createInternship: Making create internship API call');\n    return api.post('/admin/internships', data);\n  },\n  updateInternship: (id, data) => {\n    console.log('🎓 authService.updateInternship: Making update internship API call');\n    return api.put(`/admin/internships/${id}`, data);\n  },\n  deleteInternship: id => {\n    console.log('🎓 authService.deleteInternship: Making delete internship API call');\n    return api.delete(`/admin/internships/${id}`);\n  },\n  // Enrollment management  \n  getEnrollments: (params = {}) => {\n    console.log('👥 authService.getEnrollments: Making get enrollments API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/enrollments?${queryString}` : '/admin/enrollments';\n    return api.get(url);\n  },\n  updateEnrollment: (id, data) => {\n    console.log('👥 authService.updateEnrollment: Making update enrollment API call');\n    return api.put(`/admin/enrollments/${id}`, data);\n  },\n  exportEnrollments: (params = {}) => {\n    console.log('💾 authService.exportEnrollments: Making export enrollments API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/enrollments/export/csv?${queryString}` : '/admin/enrollments/export/csv';\n    return api.get(url, {\n      responseType: 'blob'\n    });\n  },\n  // Ratings and feedback management\n  getRatings: (params = {}) => {\n    console.log('⭐ authService.getRatings: Making get ratings API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/ratings?${queryString}` : '/admin/ratings';\n    return api.get(url);\n  },\n  updateRating: (id, data) => {\n    console.log('⭐ authService.updateRating: Making update rating API call');\n    return api.put(`/admin/ratings/${id}`, data);\n  },\n  deleteRating: id => {\n    console.log('⭐ authService.deleteRating: Making delete rating API call');\n    return api.delete(`/admin/ratings/${id}`);\n  },\n  // Add these missing methods to your authService.js\n\n  // Internship Domain management (CRITICAL - your frontend needs this)\n  getInternshipDomains: (params = {}) => {\n    console.log('🎯 authService.getInternshipDomains: Making get internship domains API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/internship-domains?${queryString}` : '/admin/internship-domains';\n    return api.get(url);\n  },\n  getDomainsByBranch: (branchId, params = {}) => {\n    console.log('🌿 authService.getDomainsByBranch: Making get domains by branch API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/branches/${branchId}/internship-domains?${queryString}` : `/admin/branches/${branchId}/internship-domains`;\n    return api.get(url);\n  },\n  createInternshipDomain: data => {\n    console.log('🎯 authService.createInternshipDomain: Making create internship domain API call');\n    return api.post('/admin/internship-domains', data);\n  },\n  updateInternshipDomain: (id, data) => {\n    console.log('🎯 authService.updateInternshipDomain: Making update internship domain API call');\n    return api.put(`/admin/internship-domains/${id}`, data);\n  },\n  deleteInternshipDomain: id => {\n    console.log('🎯 authService.deleteInternshipDomain: Making delete internship domain API call');\n    return api.delete(`/admin/internship-domains/${id}`);\n  },\n  // Additional useful methods\n  getBranchStats: () => {\n    console.log('📊 authService.getBranchStats: Making get branch stats API call');\n    return api.get('/admin/branches/stats');\n  },\n  getInternshipStats: id => {\n    console.log('📊 authService.getInternshipStats: Making get internship stats API call');\n    return api.get(`/admin/internships/${id}/stats`);\n  },\n  getInternshipLeadStats: () => {\n    console.log('📊 authService.getInternshipLeadStats: Making get internship lead stats API call');\n    return api.get('/admin/internship-leads/stats');\n  },\n  getRatingStats: () => {\n    console.log('📊 authService.getRatingStats: Making get rating stats API call');\n    return api.get('/admin/ratings/stats');\n  },\n  searchInternships: (params = {}) => {\n    console.log('🔍 authService.searchInternships: Making search internships API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/internships/search?${queryString}` : '/admin/internships/search';\n    return api.get(url);\n  },\n  approveRating: id => {\n    console.log('✅ authService.approveRating: Making approve rating API call');\n    return api.put(`/admin/ratings/${id}/approve`);\n  },\n  bulkApproveRatings: data => {\n    console.log('✅ authService.bulkApproveRatings: Making bulk approve ratings API call');\n    return api.put('/admin/ratings/bulk-approve', data);\n  }\n};\n\n// // old code\n// import api from './api';\n\n// export const authService = {\n//   // Login user\n//   login: (credentials) => {\n//     console.log('🔐 authService.login: Making login API call');\n//     return api.post('/auth/login', credentials);\n//   },\n\n//   // Register new user\n//   signup: (userData) => {\n//     console.log('📝 authService.signup: Making signup API call');\n//     return api.post('/auth/signup', userData);\n//   },\n\n//   // Step 1: Request password reset OTP\n//   forgotPassword: (email) => {\n//     console.log('🔑 authService.forgotPassword: Making forgot password API call');\n//     return api.post('/auth/forgot-password', { email });\n//   },\n\n//   // Step 2: Reset password with OTP\n//   resetPassword: (resetData) => {\n//     console.log('🔄 authService.resetPassword: Making reset password API call');\n//     console.log('📦 Reset password data:', {\n//       token: resetData.token ? 'Present' : 'Missing',\n//       otp: resetData.otp ? 'Present' : 'Missing',\n//       newPassword: resetData.newPassword ? 'Present' : 'Missing',\n//       confirmPassword: resetData.confirmPassword ? 'Present' : 'Missing'\n//     });\n\n//     return api.post('/auth/reset-password', {\n//       token: resetData.token,\n//       otp: resetData.otp,\n//       newPassword: resetData.newPassword,\n//       confirmPassword: resetData.confirmPassword\n//     });\n//   },\n\n//   // Step 1: Request password change (sends OTP) - Exact API match\n//   changePassword: (passwordData) => {\n//     console.log('🔐 authService.changePassword: Step 1 - Requesting password change with OTP');\n//     console.log('📦 Request data being sent to /auth/change-password:', {\n//       currentPassword: passwordData.currentPassword ? 'Present' : 'Missing',\n//       newPassword: passwordData.newPassword ? 'Present' : 'Missing',\n//       confirmPassword: passwordData.confirmPassword ? 'Present' : 'Missing'\n//     });\n\n//     const requestBody = {\n//       currentPassword: passwordData.currentPassword,\n//       newPassword: passwordData.newPassword,\n//       confirmPassword: passwordData.confirmPassword\n//     };\n\n//     console.log('📤 Exact request body:', JSON.stringify(requestBody, null, 2));\n\n//     return api.post('/auth/change-password', requestBody);\n//   },\n\n//   // Step 2: Verify OTP and complete password change - Exact API match\n//   verifyPasswordChangeOTP: (otpData) => {\n//     console.log('🔐 authService.verifyPasswordChangeOTP: Step 2 - Verifying OTP');\n//     console.log('📦 OTP verification data received in authService:', {\n//       token: otpData.token ? 'Present' : 'Missing',\n//       tokenValue: otpData.token,\n//       tokenType: typeof otpData.token,\n//       tokenLength: otpData.token ? otpData.token.length : 0,\n//       otp: otpData.otp ? 'Present' : 'Missing',\n//       otpValue: otpData.otp,\n//       otpType: typeof otpData.otp\n//     });\n\n//     // Exact API structure as specified\n//     const requestBody = {\n//       token: otpData.token,\n//       otp: otpData.otp\n//     };\n\n//     console.log('📤 Final request body for /auth/verify-password-change:');\n//     console.log('📤 Request body object:', requestBody);\n//     console.log('📤 Request body JSON:', JSON.stringify(requestBody, null, 2));\n\n//     return api.post('/auth/verify-password-change', requestBody);\n//   },\n\n//   // Logout user\n//   logout: () => {\n//     console.log('🚪 authService.logout: Making logout API call');\n//     return api.post('/auth/logout');\n//   },\n\n//   // Set auth token in headers\n//   setAuthToken: (token) => {\n//     console.log('🔑 authService.setAuthToken: Setting auth token in API headers');\n//     api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n//   },\n\n//   // Remove auth token from headers\n//   removeAuthToken: () => {\n//     console.log('🗑️ authService.removeAuthToken: Removing auth token from API headers');\n//     delete api.defaults.headers.common['Authorization'];\n//   },\n\n//   // Dashboard API calls\n//   getDashboardStats: () => {\n//     console.log('📊 authService.getDashboardStats: Making dashboard stats API call');\n//     return api.get('/admin/dashboard/stats');\n//   },\n\n//   // Domain management\n//   getDomains: () => {\n//     console.log('📁 authService.getDomains: Making get domains API call');\n//     return api.get('/admin/domains');\n//   },\n\n//   // Project management\n//   getProjects: () => {\n//     console.log('📋 authService.getProjects: Making get projects API call');\n//     return api.get('/admin/projects');\n//   },\n\n//   // Leads management\n//   getLeads: () => {\n//     console.log('👥 authService.getLeads: Making get leads API call');\n//     return api.get('/admin/leads');\n//   }\n// };","map":{"version":3,"names":["api","cookieUtils","authService","login","credentials","console","log","post","signup","userData","forgotPassword","email","resetPassword","resetData","token","otp","newPassword","confirmPassword","changePassword","passwordData","currentPassword","requestBody","JSON","stringify","verifyPasswordChangeOTP","otpData","tokenValue","tokenType","tokenLength","length","otpValue","otpType","logout","response","error","removeAuthToken","clearAuth","setAuthToken","defaults","headers","common","getProfile","get","getDashboardStats","getRecentActivity","getAnalytics","period","getDomains","params","queryString","URLSearchParams","toString","url","createDomain","data","updateDomain","id","put","deleteDomain","delete","getDomainHierarchy","getSubDomains","createSubDomain","updateSubDomain","deleteSubDomain","getLeafSubDomains","domainId","getProjects","createProject","updateProject","deleteProject","moveProject","archiveProject","getLeads","updateLead","exportLeads","responseType","uploadImages","formData","updateImage","deleteImage","reorderImages","getBranches","createBranch","updateBranch","deleteBranch","getInternships","createInternship","updateInternship","deleteInternship","getEnrollments","updateEnrollment","exportEnrollments","getRatings","updateRating","deleteRating","getInternshipDomains","getDomainsByBranch","branchId","createInternshipDomain","updateInternshipDomain","deleteInternshipDomain","getBranchStats","getInternshipStats","getInternshipLeadStats","getRatingStats","searchInternships","approveRating","bulkApproveRatings"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/services/authService.js"],"sourcesContent":["// src/services/authService.js - REPLACE EXISTING (Hybrid Version)\nimport api from './api';\nimport { cookieUtils } from '../utils/cookieUtils';\n\nexport const authService = {\n  // Login user\n  login: (credentials) => {\n    console.log('🔐 authService.login: Making login API call');\n    return api.post('/auth/login', credentials);\n  },\n\n  // Register new user\n  signup: (userData) => {\n    console.log('📝 authService.signup: Making signup API call');\n    return api.post('/auth/signup', userData);\n  },\n\n  // Step 1: Request password reset OTP\n  forgotPassword: (email) => {\n    console.log('🔑 authService.forgotPassword: Making forgot password API call');\n    return api.post('/auth/forgot-password', { email });\n  },\n\n  // Step 2: Reset password with OTP\n  resetPassword: (resetData) => {\n    console.log('🔄 authService.resetPassword: Making reset password API call');\n    console.log('📦 Reset password data:', {\n      token: resetData.token ? 'Present' : 'Missing',\n      otp: resetData.otp ? 'Present' : 'Missing',\n      newPassword: resetData.newPassword ? 'Present' : 'Missing',\n      confirmPassword: resetData.confirmPassword ? 'Present' : 'Missing'\n    });\n    return api.post('/auth/reset-password', {\n      token: resetData.token,\n      otp: resetData.otp,\n      newPassword: resetData.newPassword,\n      confirmPassword: resetData.confirmPassword\n    });\n  },\n\n  // Step 1: Request password change (sends OTP) - Exact API match\n  changePassword: (passwordData) => {\n    console.log('🔐 authService.changePassword: Step 1 - Requesting password change with OTP');\n    console.log('📦 Request data being sent to /auth/change-password:', {\n      currentPassword: passwordData.currentPassword ? 'Present' : 'Missing',\n      newPassword: passwordData.newPassword ? 'Present' : 'Missing',\n      confirmPassword: passwordData.confirmPassword ? 'Present' : 'Missing'\n    });\n    const requestBody = {\n      currentPassword: passwordData.currentPassword,\n      newPassword: passwordData.newPassword,\n      confirmPassword: passwordData.confirmPassword\n    };\n    console.log('📤 Exact request body:', JSON.stringify(requestBody, null, 2));\n    return api.post('/auth/change-password', requestBody);\n  },\n\n  // Step 2: Verify OTP and complete password change - Exact API match\n  verifyPasswordChangeOTP: (otpData) => {\n    console.log('🔐 authService.verifyPasswordChangeOTP: Step 2 - Verifying OTP');\n    console.log('📦 OTP verification data received in authService:', {\n      token: otpData.token ? 'Present' : 'Missing',\n      tokenValue: otpData.token,\n      tokenType: typeof otpData.token,\n      tokenLength: otpData.token ? otpData.token.length : 0,\n      otp: otpData.otp ? 'Present' : 'Missing',\n      otpValue: otpData.otp,\n      otpType: typeof otpData.otp\n    });\n    // Exact API structure as specified\n    const requestBody = {\n      token: otpData.token,\n      otp: otpData.otp\n    };\n    console.log('📤 Final request body for /auth/verify-password-change:');\n    console.log('📤 Request body object:', requestBody);\n    console.log('📤 Request body JSON:', JSON.stringify(requestBody, null, 2));\n    return api.post('/auth/verify-password-change', requestBody);\n  },\n\n  // Logout user (FIXED VERSION)\n  logout: async () => {\n    console.log('🚪 authService.logout: Making logout API call');\n    try {\n      const response = await api.post('/auth/logout');\n      console.log('✅ Logout API call successful');\n      return response;\n    } catch (error) {\n      console.error('❌ Logout API call failed:', error);\n      throw error;\n    } finally {\n      // Always clean up regardless of API success/failure\n      console.log('🧹 Cleaning up auth data...');\n      authService.removeAuthToken();\n      cookieUtils.clearAuth();\n    }\n  },\n\n  // Set auth token in headers\n  setAuthToken: (token) => {\n    console.log('🔑 authService.setAuthToken: Setting auth token in API headers');\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  },\n\n  // Remove auth token from headers\n  removeAuthToken: () => {\n    console.log('🗑️ authService.removeAuthToken: Removing auth token from API headers');\n    delete api.defaults.headers.common['Authorization'];\n  },\n\n  // Profile management\n  getProfile: () => {\n    console.log('👤 authService.getProfile: Making get profile API call');\n    return api.get('/auth/profile');\n  },\n\n  // Dashboard API calls\n  getDashboardStats: () => {\n    console.log('📊 authService.getDashboardStats: Making dashboard stats API call');\n    return api.get('/admin/dashboard/stats');\n  },\n\n  getRecentActivity: () => {\n    console.log('📋 authService.getRecentActivity: Making recent activity API call');\n    return api.get('/admin/dashboard/recent-activity');\n  },\n\n  getAnalytics: (period = 30) => {\n    console.log('📈 authService.getAnalytics: Making analytics API call');\n    return api.get(`/admin/dashboard/analytics?period=${period}`);\n  },\n\n  // Domain management\n  getDomains: (params = {}) => {\n    console.log('📁 authService.getDomains: Making get domains API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/domains?${queryString}` : '/admin/domains';\n    return api.get(url);\n  },\n\n  createDomain: (data) => {\n    console.log('📁 authService.createDomain: Making create domain API call');\n    return api.post('/admin/domains', data);\n  },\n\n  updateDomain: (id, data) => {\n    console.log('📁 authService.updateDomain: Making update domain API call');\n    return api.put(`/admin/domains/${id}`, data);\n  },\n\n  deleteDomain: (id) => {\n    console.log('📁 authService.deleteDomain: Making delete domain API call');\n    return api.delete(`/admin/domains/${id}`);\n  },\n\n  getDomainHierarchy: (id) => {\n    console.log('🌳 authService.getDomainHierarchy: Making get domain hierarchy API call');\n    return api.get(`/admin/domains/${id}/hierarchy`);\n  },\n\n  // SubDomain management\n  getSubDomains: (params = {}) => {\n    console.log('📂 authService.getSubDomains: Making get sub-domains API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/subdomains?${queryString}` : '/admin/subdomains';\n    return api.get(url);\n  },\n\n  createSubDomain: (data) => {\n    console.log('📂 authService.createSubDomain: Making create sub-domain API call');\n    return api.post('/admin/subdomains', data);\n  },\n\n  updateSubDomain: (id, data) => {\n    console.log('📂 authService.updateSubDomain: Making update sub-domain API call');\n    return api.put(`/admin/subdomains/${id}`, data);\n  },\n\n  deleteSubDomain: (id) => {\n    console.log('📂 authService.deleteSubDomain: Making delete sub-domain API call');\n    return api.delete(`/admin/subdomains/${id}`);\n  },\n\n  getLeafSubDomains: (domainId) => {\n    console.log('🍃 authService.getLeafSubDomains: Making get leaf sub-domains API call');\n    return api.get(`/admin/subdomains/leafs?domainId=${domainId}`);\n  },\n\n  // Project management\n  getProjects: (params = {}) => {\n    console.log('📋 authService.getProjects: Making get projects API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/projects?${queryString}` : '/admin/projects';\n    return api.get(url);\n  },\n\n  createProject: (data) => {\n    console.log('📋 authService.createProject: Making create project API call');\n    return api.post('/admin/projects', data);\n  },\n\n  updateProject: (id, data) => {\n    console.log('📋 authService.updateProject: Making update project API call');\n    return api.put(`/admin/projects/${id}`, data);\n  },\n\n  deleteProject: (id) => {\n    console.log('📋 authService.deleteProject: Making delete project API call');\n    return api.delete(`/admin/projects/${id}`);\n  },\n\n  moveProject: (id, data) => {\n    console.log('📋 authService.moveProject: Making move project API call');\n    return api.put(`/admin/projects/${id}/move`, data);\n  },\n\n  archiveProject: (id, data) => {\n    console.log('📋 authService.archiveProject: Making archive project API call');\n    return api.put(`/admin/projects/${id}/archive`, data);\n  },\n\n  // Leads management\n  getLeads: (params = {}) => {\n    console.log('👥 authService.getLeads: Making get leads API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/leads?${queryString}` : '/admin/leads';\n    return api.get(url);\n  },\n\n  updateLead: (id, data) => {\n    console.log('👥 authService.updateLead: Making update lead API call');\n    return api.put(`/admin/leads/${id}`, data);\n  },\n\n  exportLeads: (params = {}) => {\n    console.log('💾 authService.exportLeads: Making export leads API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/leads/export/csv?${queryString}` : '/admin/leads/export/csv';\n    return api.get(url, { responseType: 'blob' });\n  },\n\n  // Image management\n  uploadImages: (formData) => {\n    console.log('🖼️ authService.uploadImages: Making upload images API call');\n    return api.post('/admin/images/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n\n  updateImage: (id, data) => {\n    console.log('🖼️ authService.updateImage: Making update image API call');\n    return api.put(`/admin/images/${id}`, data);\n  },\n\n  deleteImage: (id) => {\n    console.log('🖼️ authService.deleteImage: Making delete image API call');\n    return api.delete(`/admin/images/${id}`);\n  },\n\n  reorderImages: (data) => {\n    console.log('🖼️ authService.reorderImages: Making reorder images API call');\n    return api.put('/admin/images/reorder', data);\n  },\n\n  // Add this right before the closing }; in your authService object\n\n  // Branch management (for internships)\n  getBranches: (params = {}) => {\n    console.log('🌿 authService.getBranches: Making get branches API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/branches?${queryString}` : '/admin/branches';\n    return api.get(url);\n  },\n\n  createBranch: (data) => {\n    console.log('🌿 authService.createBranch: Making create branch API call');\n    return api.post('/admin/branches', data);\n  },\n\n  updateBranch: (id, data) => {\n    console.log('🌿 authService.updateBranch: Making update branch API call');\n    return api.put(`/admin/branches/${id}`, data);\n  },\n\n  deleteBranch: (id) => {\n    console.log('🌿 authService.deleteBranch: Making delete branch API call');\n    return api.delete(`/admin/branches/${id}`);\n  },\n\n  // Internship management\n  getInternships: (params = {}) => {\n    console.log('🎓 authService.getInternships: Making get internships API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/internships?${queryString}` : '/admin/internships';\n    return api.get(url);\n  },\n\n  createInternship: (data) => {\n    console.log('🎓 authService.createInternship: Making create internship API call');\n    return api.post('/admin/internships', data);\n  },\n\n  updateInternship: (id, data) => {\n    console.log('🎓 authService.updateInternship: Making update internship API call');\n    return api.put(`/admin/internships/${id}`, data);\n  },\n\n  deleteInternship: (id) => {\n    console.log('🎓 authService.deleteInternship: Making delete internship API call');\n    return api.delete(`/admin/internships/${id}`);\n  },\n\n  // Enrollment management  \n  getEnrollments: (params = {}) => {\n    console.log('👥 authService.getEnrollments: Making get enrollments API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/enrollments?${queryString}` : '/admin/enrollments';\n    return api.get(url);\n  },\n\n  updateEnrollment: (id, data) => {\n    console.log('👥 authService.updateEnrollment: Making update enrollment API call');\n    return api.put(`/admin/enrollments/${id}`, data);\n  },\n\n  exportEnrollments: (params = {}) => {\n    console.log('💾 authService.exportEnrollments: Making export enrollments API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/enrollments/export/csv?${queryString}` : '/admin/enrollments/export/csv';\n    return api.get(url, { responseType: 'blob' });\n  },\n\n  // Ratings and feedback management\n  getRatings: (params = {}) => {\n    console.log('⭐ authService.getRatings: Making get ratings API call');\n    const queryString = new URLSearchParams(params).toString();\n    const url = queryString ? `/admin/ratings?${queryString}` : '/admin/ratings';\n    return api.get(url);\n  },\n\n  updateRating: (id, data) => {\n    console.log('⭐ authService.updateRating: Making update rating API call');\n    return api.put(`/admin/ratings/${id}`, data);\n  },\n\n  deleteRating: (id) => {\n    console.log('⭐ authService.deleteRating: Making delete rating API call');\n    return api.delete(`/admin/ratings/${id}`);\n  },\n\n  // Add these missing methods to your authService.js\n\n// Internship Domain management (CRITICAL - your frontend needs this)\ngetInternshipDomains: (params = {}) => {\n  console.log('🎯 authService.getInternshipDomains: Making get internship domains API call');\n  const queryString = new URLSearchParams(params).toString();\n  const url = queryString ? `/admin/internship-domains?${queryString}` : '/admin/internship-domains';\n  return api.get(url);\n},\n\ngetDomainsByBranch: (branchId, params = {}) => {\n  console.log('🌿 authService.getDomainsByBranch: Making get domains by branch API call');\n  const queryString = new URLSearchParams(params).toString();\n  const url = queryString ? `/admin/branches/${branchId}/internship-domains?${queryString}` : `/admin/branches/${branchId}/internship-domains`;\n  return api.get(url);\n},\n\ncreateInternshipDomain: (data) => {\n  console.log('🎯 authService.createInternshipDomain: Making create internship domain API call');\n  return api.post('/admin/internship-domains', data);\n},\n\nupdateInternshipDomain: (id, data) => {\n  console.log('🎯 authService.updateInternshipDomain: Making update internship domain API call');\n  return api.put(`/admin/internship-domains/${id}`, data);\n},\n\ndeleteInternshipDomain: (id) => {\n  console.log('🎯 authService.deleteInternshipDomain: Making delete internship domain API call');\n  return api.delete(`/admin/internship-domains/${id}`);\n},\n\n// Additional useful methods\ngetBranchStats: () => {\n  console.log('📊 authService.getBranchStats: Making get branch stats API call');\n  return api.get('/admin/branches/stats');\n},\n\ngetInternshipStats: (id) => {\n  console.log('📊 authService.getInternshipStats: Making get internship stats API call');\n  return api.get(`/admin/internships/${id}/stats`);\n},\n\ngetInternshipLeadStats: () => {\n  console.log('📊 authService.getInternshipLeadStats: Making get internship lead stats API call');\n  return api.get('/admin/internship-leads/stats');\n},\n\ngetRatingStats: () => {\n  console.log('📊 authService.getRatingStats: Making get rating stats API call');\n  return api.get('/admin/ratings/stats');\n},\n\nsearchInternships: (params = {}) => {\n  console.log('🔍 authService.searchInternships: Making search internships API call');\n  const queryString = new URLSearchParams(params).toString();\n  const url = queryString ? `/admin/internships/search?${queryString}` : '/admin/internships/search';\n  return api.get(url);\n},\n\napproveRating: (id) => {\n  console.log('✅ authService.approveRating: Making approve rating API call');\n  return api.put(`/admin/ratings/${id}/approve`);\n},\n\nbulkApproveRatings: (data) => {\n  console.log('✅ authService.bulkApproveRatings: Making bulk approve ratings API call');\n  return api.put('/admin/ratings/bulk-approve', data);\n}\n\n  \n};\n\n\n\n// // old code\n// import api from './api';\n\n// export const authService = {\n//   // Login user\n//   login: (credentials) => {\n//     console.log('🔐 authService.login: Making login API call');\n//     return api.post('/auth/login', credentials);\n//   },\n\n//   // Register new user\n//   signup: (userData) => {\n//     console.log('📝 authService.signup: Making signup API call');\n//     return api.post('/auth/signup', userData);\n//   },\n\n//   // Step 1: Request password reset OTP\n//   forgotPassword: (email) => {\n//     console.log('🔑 authService.forgotPassword: Making forgot password API call');\n//     return api.post('/auth/forgot-password', { email });\n//   },\n\n//   // Step 2: Reset password with OTP\n//   resetPassword: (resetData) => {\n//     console.log('🔄 authService.resetPassword: Making reset password API call');\n//     console.log('📦 Reset password data:', {\n//       token: resetData.token ? 'Present' : 'Missing',\n//       otp: resetData.otp ? 'Present' : 'Missing',\n//       newPassword: resetData.newPassword ? 'Present' : 'Missing',\n//       confirmPassword: resetData.confirmPassword ? 'Present' : 'Missing'\n//     });\n    \n//     return api.post('/auth/reset-password', {\n//       token: resetData.token,\n//       otp: resetData.otp,\n//       newPassword: resetData.newPassword,\n//       confirmPassword: resetData.confirmPassword\n//     });\n//   },\n\n//   // Step 1: Request password change (sends OTP) - Exact API match\n//   changePassword: (passwordData) => {\n//     console.log('🔐 authService.changePassword: Step 1 - Requesting password change with OTP');\n//     console.log('📦 Request data being sent to /auth/change-password:', {\n//       currentPassword: passwordData.currentPassword ? 'Present' : 'Missing',\n//       newPassword: passwordData.newPassword ? 'Present' : 'Missing',\n//       confirmPassword: passwordData.confirmPassword ? 'Present' : 'Missing'\n//     });\n    \n//     const requestBody = {\n//       currentPassword: passwordData.currentPassword,\n//       newPassword: passwordData.newPassword,\n//       confirmPassword: passwordData.confirmPassword\n//     };\n    \n//     console.log('📤 Exact request body:', JSON.stringify(requestBody, null, 2));\n    \n//     return api.post('/auth/change-password', requestBody);\n//   },\n\n//   // Step 2: Verify OTP and complete password change - Exact API match\n//   verifyPasswordChangeOTP: (otpData) => {\n//     console.log('🔐 authService.verifyPasswordChangeOTP: Step 2 - Verifying OTP');\n//     console.log('📦 OTP verification data received in authService:', {\n//       token: otpData.token ? 'Present' : 'Missing',\n//       tokenValue: otpData.token,\n//       tokenType: typeof otpData.token,\n//       tokenLength: otpData.token ? otpData.token.length : 0,\n//       otp: otpData.otp ? 'Present' : 'Missing',\n//       otpValue: otpData.otp,\n//       otpType: typeof otpData.otp\n//     });\n    \n//     // Exact API structure as specified\n//     const requestBody = {\n//       token: otpData.token,\n//       otp: otpData.otp\n//     };\n    \n//     console.log('📤 Final request body for /auth/verify-password-change:');\n//     console.log('📤 Request body object:', requestBody);\n//     console.log('📤 Request body JSON:', JSON.stringify(requestBody, null, 2));\n    \n//     return api.post('/auth/verify-password-change', requestBody);\n//   },\n\n//   // Logout user\n//   logout: () => {\n//     console.log('🚪 authService.logout: Making logout API call');\n//     return api.post('/auth/logout');\n//   },\n\n//   // Set auth token in headers\n//   setAuthToken: (token) => {\n//     console.log('🔑 authService.setAuthToken: Setting auth token in API headers');\n//     api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n//   },\n\n//   // Remove auth token from headers\n//   removeAuthToken: () => {\n//     console.log('🗑️ authService.removeAuthToken: Removing auth token from API headers');\n//     delete api.defaults.headers.common['Authorization'];\n//   },\n\n//   // Dashboard API calls\n//   getDashboardStats: () => {\n//     console.log('📊 authService.getDashboardStats: Making dashboard stats API call');\n//     return api.get('/admin/dashboard/stats');\n//   },\n\n//   // Domain management\n//   getDomains: () => {\n//     console.log('📁 authService.getDomains: Making get domains API call');\n//     return api.get('/admin/domains');\n//   },\n\n//   // Project management\n//   getProjects: () => {\n//     console.log('📋 authService.getProjects: Making get projects API call');\n//     return api.get('/admin/projects');\n//   },\n\n//   // Leads management\n//   getLeads: () => {\n//     console.log('👥 authService.getLeads: Making get leads API call');\n//     return api.get('/admin/leads');\n//   }\n// };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}