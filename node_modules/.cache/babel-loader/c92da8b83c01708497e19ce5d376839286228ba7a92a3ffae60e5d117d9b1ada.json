{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/SubDomainManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\n// src/components/domains/SubDomainManagement.js - ENHANCED WITH PROJECT VIEW/EDIT/DELETE\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport { FiPlus, FiEdit, FiTrash2, FiChevronDown, FiChevronRight, FiFolder, FiFolderPlus, FiFileText, FiArrowLeft, FiMoreVertical, FiMove, FiTarget, FiEye, FiStar, FiArchive, FiList, FiX } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubDomainManagement = () => {\n  _s();\n  console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  const {\n    domainId\n  } = useParams();\n  const navigate = useNavigate();\n  const [domain, setDomain] = useState(null);\n  const [subDomains, setSubDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSubDomain, setEditingSubDomain] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n  // Project creation state\n  const [showProjectModal, setShowProjectModal] = useState(false);\n  const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n  // NEW: Project management states\n  const [showProjectsModal, setShowProjectsModal] = useState(false);\n  const [selectedSubDomainForProjectsView, setSelectedSubDomainForProjectsView] = useState(null);\n  const [projectsInSubDomain, setProjectsInSubDomain] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showProjectEditModal, setShowProjectEditModal] = useState(false);\n  const [projectsLoading, setProjectsLoading] = useState(false);\n  console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n    domainId,\n    domain: domain === null || domain === void 0 ? void 0 : domain.title,\n    subDomainsCount: subDomains.length,\n    loading,\n    selectedParent: selectedParent === null || selectedParent === void 0 ? void 0 : selectedParent.title,\n    expandedCount: expandedNodes.size,\n    showProjectModal,\n    selectedSubDomainForProject: selectedSubDomainForProject === null || selectedSubDomainForProject === void 0 ? void 0 : selectedSubDomainForProject.title,\n    // NEW states\n    showProjectsModal,\n    selectedSubDomainForProjectsView: selectedSubDomainForProjectsView === null || selectedSubDomainForProjectsView === void 0 ? void 0 : selectedSubDomainForProjectsView.title,\n    projectsInSubDomainCount: projectsInSubDomain.length,\n    editingProject: editingProject === null || editingProject === void 0 ? void 0 : editingProject.title\n  });\n  useEffect(() => {\n    if (domainId) {\n      console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n      fetchDomainAndSubDomains();\n    }\n  }, [domainId]);\n  const fetchDomainAndSubDomains = async () => {\n    try {\n      var _domainsResponse$data, _domainsResponse$data2, _domainsResponse$data3, _subDomainsResponse$d, _subDomainsResponse$d2, _subDomainsResponse$d3;\n      setLoading(true);\n      console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n      // Get domain details\n      const domainsResponse = await authService.getDomains();\n      console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      let domainData = null;\n      const domains = ((_domainsResponse$data = domainsResponse.data) === null || _domainsResponse$data === void 0 ? void 0 : _domainsResponse$data.domains) || ((_domainsResponse$data2 = domainsResponse.data) === null || _domainsResponse$data2 === void 0 ? void 0 : (_domainsResponse$data3 = _domainsResponse$data2.data) === null || _domainsResponse$data3 === void 0 ? void 0 : _domainsResponse$data3.domains) || [];\n      if (domains.length > 0) {\n        domainData = domains.find(d => d.id == domainId);\n        console.log('üéØ SUBDOMAIN FETCH - Found domain data:', domainData);\n      }\n      if (!domainData) {\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Domain not found, creating fallback');\n        domainData = {\n          id: domainId,\n          title: `Domain ${domainId}`,\n          description: 'Domain not found in list',\n          projectCount: 0\n        };\n      }\n      setDomain(domainData);\n\n      // Get subdomains\n      console.log('üì° SUBDOMAIN FETCH - Fetching subdomains with domainId:', domainId);\n      const subDomainsResponse = await authService.getSubDomains({\n        domainId: domainId\n      });\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse);\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response.data:', subDomainsResponse.data);\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response data type:', typeof subDomainsResponse.data);\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response data keys:', Object.keys(subDomainsResponse.data || {}));\n      const subDomainsData = ((_subDomainsResponse$d = subDomainsResponse.data) === null || _subDomainsResponse$d === void 0 ? void 0 : _subDomainsResponse$d.subDomains) || ((_subDomainsResponse$d2 = subDomainsResponse.data) === null || _subDomainsResponse$d2 === void 0 ? void 0 : (_subDomainsResponse$d3 = _subDomainsResponse$d2.data) === null || _subDomainsResponse$d3 === void 0 ? void 0 : _subDomainsResponse$d3.subDomains) || [];\n      console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains data:', subDomainsData);\n      console.log('üéØ SUBDOMAIN FETCH - Subdomains count:', subDomainsData.length);\n\n      // üîç DEBUGGING: Log each subdomain's project count\n      subDomainsData.forEach((subdomain, index) => {\n        var _subdomain$children;\n        console.log(`üìä SUBDOMAIN ${index + 1} [${subdomain.title}]:`, {\n          id: subdomain.id,\n          title: subdomain.title,\n          projectCount: subdomain.projectCount,\n          hasChildren: subdomain.children && subdomain.children.length > 0,\n          childrenCount: ((_subdomain$children = subdomain.children) === null || _subdomain$children === void 0 ? void 0 : _subdomain$children.length) || 0,\n          isLeaf: !subdomain.children || subdomain.children.length === 0,\n          fullObject: subdomain\n        });\n      });\n      setSubDomains(subDomainsData);\n\n      // Auto-expand first level\n      if (subDomainsData.length > 0) {\n        const firstLevelIds = subDomainsData.map(sd => sd.id);\n        setExpandedNodes(new Set(firstLevelIds));\n        console.log('üîÑ SUBDOMAIN FETCH - Auto-expanded first level IDs:', firstLevelIds);\n      }\n\n      // Try hierarchy API as fallback\n      try {\n        var _hierarchyResponse$da;\n        console.log('üì° SUBDOMAIN FETCH - Trying hierarchy API as fallback');\n        const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n        console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse);\n        console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response.data:', hierarchyResponse.data);\n        const hierarchyData = ((_hierarchyResponse$da = hierarchyResponse.data) === null || _hierarchyResponse$da === void 0 ? void 0 : _hierarchyResponse$da.data) || hierarchyResponse.data;\n        console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        if (hierarchyData !== null && hierarchyData !== void 0 && hierarchyData.subDomains && hierarchyData.subDomains.length > 0) {\n          console.log('üîÑ SUBDOMAIN FETCH - Using hierarchy data instead');\n          console.log('üîÑ SUBDOMAIN FETCH - Hierarchy subdomains:', hierarchyData.subDomains);\n\n          // üîç DEBUGGING: Log hierarchy subdomain project counts\n          hierarchyData.subDomains.forEach((subdomain, index) => {\n            var _subdomain$children2;\n            console.log(`üìä HIERARCHY SUBDOMAIN ${index + 1} [${subdomain.title}]:`, {\n              id: subdomain.id,\n              title: subdomain.title,\n              projectCount: subdomain.projectCount,\n              hasChildren: subdomain.children && subdomain.children.length > 0,\n              childrenCount: ((_subdomain$children2 = subdomain.children) === null || _subdomain$children2 === void 0 ? void 0 : _subdomain$children2.length) || 0,\n              isLeaf: !subdomain.children || subdomain.children.length === 0,\n              fullObject: subdomain\n            });\n          });\n          setSubDomains(hierarchyData.subDomains);\n          if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n            setDomain(prev => ({\n              ...prev,\n              ...hierarchyData\n            }));\n          }\n        }\n      } catch (hierarchyError) {\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy error response:', hierarchyError.response);\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n      console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n      console.error('‚ùå SUBDOMAIN FETCH - Error response data:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      console.error('‚ùå SUBDOMAIN FETCH - Error message:', error.message);\n      toast.error('Failed to fetch domain information: ' + (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message));\n      setDomain({\n        id: domainId,\n        title: `Domain ${domainId}`,\n        description: 'Error loading domain details',\n        projectCount: 0\n      });\n      setSubDomains([]);\n    } finally {\n      setLoading(false);\n      console.log('üèÅ SUBDOMAIN FETCH - Loading set to false');\n    }\n  };\n  const handleAddSubDomain = (parent = null) => {\n    console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent === null || parent === void 0 ? void 0 : parent.title);\n    setSelectedParent(parent);\n    setEditingSubDomain(null);\n    setShowAddModal(true);\n  };\n  const handleEditSubDomain = subDomain => {\n    console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n    setSelectedParent(null);\n    setEditingSubDomain(subDomain);\n    setShowAddModal(true);\n  };\n\n  // Handle adding project to subdomain\n  const handleAddProjectToSubDomain = subDomain => {\n    console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n    console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    if (subDomain.children && subDomain.children.length > 0) {\n      toast.error('Projects can only be added to leaf sub-domains (those without children)');\n      return;\n    }\n    setSelectedSubDomainForProject(subDomain);\n    setShowProjectModal(true);\n  };\n\n  // NEW: Handle viewing projects in subdomain\n  const handleViewProjectsInSubDomain = async subDomain => {\n    console.log('üëÅÔ∏è VIEW PROJECTS - Starting for subdomain:', subDomain.title);\n    console.log('üîç VIEW PROJECTS - SubDomain object:', subDomain);\n    console.log('üîç VIEW PROJECTS - Has children?', subDomain.children && subDomain.children.length > 0);\n    console.log('üîç VIEW PROJECTS - Project count:', subDomain.projectCount);\n    console.log('üîç VIEW PROJECTS - Is leaf?', !subDomain.children || subDomain.children.length === 0);\n    if (subDomain.children && subDomain.children.length > 0) {\n      console.log('‚ùå VIEW PROJECTS - Not a leaf subdomain');\n      toast.error('Only leaf sub-domains have projects to view');\n      return;\n    }\n    if (!subDomain.projectCount || subDomain.projectCount === 0) {\n      console.log('‚ùå VIEW PROJECTS - No projects in subdomain');\n      toast.info('This sub-domain has no projects yet. Let\\'s fetch anyway to check...');\n      // Don't return - still try to fetch in case the count is wrong\n    }\n    console.log('‚úÖ VIEW PROJECTS - Proceeding to fetch projects');\n    setSelectedSubDomainForProjectsView(subDomain);\n    await fetchProjectsInSubDomain(subDomain.id);\n    setShowProjectsModal(true);\n  };\n\n  // NEW: Fetch projects for a specific subdomain\n  const fetchProjectsInSubDomain = async subDomainId => {\n    try {\n      var _response$data, _response$data2, _response$data2$data;\n      setProjectsLoading(true);\n      console.log('üì° FETCH PROJECTS - For subdomain ID:', subDomainId);\n      console.log('üì° FETCH PROJECTS - Making API call to authService.getProjects()');\n      const response = await authService.getProjects({\n        subDomainId: subDomainId,\n        limit: 100 // Get all projects for this subdomain\n      });\n      console.log('‚úÖ FETCH PROJECTS - Full API Response:', response);\n      console.log('‚úÖ FETCH PROJECTS - Response status:', response.status);\n      console.log('‚úÖ FETCH PROJECTS - Response data:', response.data);\n      console.log('‚úÖ FETCH PROJECTS - Response data type:', typeof response.data);\n      console.log('‚úÖ FETCH PROJECTS - Response data keys:', Object.keys(response.data || {}));\n      const projects = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.projects) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$data = _response$data2.data) === null || _response$data2$data === void 0 ? void 0 : _response$data2$data.projects) || [];\n      console.log('üéØ FETCH PROJECTS - Extracted projects:', projects);\n      console.log('üéØ FETCH PROJECTS - Projects count:', projects.length);\n      console.log('üéØ FETCH PROJECTS - First project (if any):', projects[0]);\n      setProjectsInSubDomain(projects);\n      if (projects.length === 0) {\n        console.log('‚ö†Ô∏è FETCH PROJECTS - No projects found for subdomain:', subDomainId);\n        toast.info(`No projects found in this subdomain. API returned ${projects.length} projects.`);\n      } else {\n        console.log('üéâ FETCH PROJECTS - Successfully loaded', projects.length, 'projects');\n      }\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response4$data;\n      console.error('‚ùå FETCH PROJECTS - Error occurred:', error);\n      console.error('‚ùå FETCH PROJECTS - Error response:', error.response);\n      console.error('‚ùå FETCH PROJECTS - Error response data:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      console.error('‚ùå FETCH PROJECTS - Error message:', error.message);\n      toast.error('Failed to fetch projects: ' + (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || error.message));\n      setProjectsInSubDomain([]);\n    } finally {\n      setProjectsLoading(false);\n      console.log('üèÅ FETCH PROJECTS - Loading set to false');\n    }\n  };\n\n  // NEW: Handle editing a project\n  const handleEditProject = project => {\n    console.log('‚úèÔ∏è EDIT PROJECT - Starting for:', project.title);\n    setEditingProject(project);\n    setShowProjectEditModal(true);\n  };\n\n  // NEW: Handle deleting a project\n  const handleDeleteProject = async project => {\n    console.log('üóëÔ∏è DELETE PROJECT - Starting deletion process for:', project.title);\n    console.log('üóëÔ∏è DELETE PROJECT - Project ID:', project.id);\n    console.log('üóëÔ∏è DELETE PROJECT - Full project object:', project);\n    const confirmMessage = `Are you sure you want to delete the project \"${project.title}\"?\\n\\nThis action cannot be undone.`;\n    const userConfirmed = window.confirm(confirmMessage);\n    console.log('üóëÔ∏è DELETE PROJECT - User confirmation:', userConfirmed);\n    if (!userConfirmed) {\n      console.log('‚ùå DELETE PROJECT - Cancelled by user');\n      return;\n    }\n    try {\n      console.log('üì° DELETE PROJECT - Making API call to authService.deleteProject()');\n      console.log('üì° DELETE PROJECT - API endpoint will be: /admin/projects/' + project.id);\n      const response = await authService.deleteProject(project.id);\n      console.log('‚úÖ DELETE PROJECT - API Response received:', response);\n      console.log('‚úÖ DELETE PROJECT - Response status:', response.status);\n      console.log('‚úÖ DELETE PROJECT - Response data:', response.data);\n      toast.success('Project deleted successfully');\n      console.log('üéâ DELETE PROJECT - Success toast shown');\n\n      // Refresh projects list and subdomain data\n      console.log('üîÑ DELETE PROJECT - Refreshing projects list for subdomain:', selectedSubDomainForProjectsView.id);\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      console.log('üîÑ DELETE PROJECT - Refreshing domain and subdomains to update counts');\n      await fetchDomainAndSubDomains(); // Refresh to update project counts\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response7, _error$response7$data;\n      console.error('‚ùå DELETE PROJECT - Error occurred:', error);\n      console.error('‚ùå DELETE PROJECT - Error type:', typeof error);\n      console.error('‚ùå DELETE PROJECT - Error message:', error.message);\n      console.error('‚ùå DELETE PROJECT - Error response:', error.response);\n      console.error('‚ùå DELETE PROJECT - Error response status:', (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status);\n      console.error('‚ùå DELETE PROJECT - Error response data:', (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data);\n      console.error('‚ùå DELETE PROJECT - Error stack:', error.stack);\n      const errorMessage = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || error.message || 'Unknown error occurred';\n      toast.error('Failed to delete project: ' + errorMessage);\n      console.log('‚ùå DELETE PROJECT - Error toast shown with message:', errorMessage);\n    }\n  };\n\n  // NEW: Handle archiving a project\n  const handleArchiveProject = async project => {\n    const isArchiving = project.isActive;\n    const action = isArchiving ? 'archive' : 'restore';\n    console.log('üìÅ ARCHIVE PROJECT - Action:', action, 'for:', project.title);\n    if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n      return;\n    }\n    try {\n      await authService.archiveProject(project.id, {\n        archive: isArchiving,\n        reason: `${action} via subdomain management`\n      });\n      console.log('‚úÖ ARCHIVE PROJECT - Success');\n      toast.success(`Project ${action}d successfully`);\n\n      // Refresh projects list\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n    } catch (error) {\n      console.error('‚ùå ARCHIVE PROJECT - Error:', error);\n      toast.error(`Failed to ${action} project`);\n    }\n  };\n\n  // NEW: Handle toggling featured status\n  const handleToggleProjectFeatured = async project => {\n    console.log('‚≠ê TOGGLE FEATURED - For project:', project.title);\n    try {\n      await authService.updateProject(project.id, {\n        isFeatured: !project.isFeatured\n      });\n      console.log('‚úÖ TOGGLE FEATURED - Success');\n      toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n\n      // Refresh projects list\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n    } catch (error) {\n      console.error('‚ùå TOGGLE FEATURED - Error:', error);\n      toast.error('Failed to update featured status');\n    }\n  };\n  const handleDeleteSubDomain = async subDomain => {\n    var _subDomain$children;\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting deletion process for:', subDomain.title);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - SubDomain ID:', subDomain.id);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Full subdomain object:', subDomain);\n    const hasChildren = subDomain.children && subDomain.children.length > 0;\n    const hasProjects = subDomain.projectCount > 0;\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Has children:', hasChildren);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Has projects:', hasProjects);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Children count:', ((_subDomain$children = subDomain.children) === null || _subDomain$children === void 0 ? void 0 : _subDomain$children.length) || 0);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Project count:', subDomain.projectCount || 0);\n    let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n    if (hasChildren) {\n      confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n    }\n    if (hasProjects) {\n      confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n    }\n    confirmMessage += '\\n\\nThis action cannot be undone.';\n    const userConfirmed = window.confirm(confirmMessage);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - User confirmation:', userConfirmed);\n    if (!userConfirmed) {\n      console.log('‚ùå SUBDOMAIN DELETE - Cancelled by user');\n      return;\n    }\n    try {\n      console.log('üì° SUBDOMAIN DELETE - Making API call to authService.deleteSubDomain()');\n      console.log('üì° SUBDOMAIN DELETE - API endpoint will be: /admin/subdomains/' + subDomain.id);\n      const response = await authService.deleteSubDomain(subDomain.id);\n      console.log('‚úÖ SUBDOMAIN DELETE - API Response received:', response);\n      console.log('‚úÖ SUBDOMAIN DELETE - Response status:', response.status);\n      console.log('‚úÖ SUBDOMAIN DELETE - Response data:', response.data);\n      toast.success('Sub-domain deleted successfully');\n      console.log('üéâ SUBDOMAIN DELETE - Success toast shown');\n      console.log('üîÑ SUBDOMAIN DELETE - Refreshing domain and subdomains');\n      fetchDomainAndSubDomains();\n    } catch (error) {\n      var _error$response8, _error$response9, _error$response0, _error$response0$data;\n      console.error('‚ùå SUBDOMAIN DELETE - Error occurred:', error);\n      console.error('‚ùå SUBDOMAIN DELETE - Error type:', typeof error);\n      console.error('‚ùå SUBDOMAIN DELETE - Error message:', error.message);\n      console.error('‚ùå SUBDOMAIN DELETE - Error response:', error.response);\n      console.error('‚ùå SUBDOMAIN DELETE - Error response status:', (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status);\n      console.error('‚ùå SUBDOMAIN DELETE - Error response data:', (_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data);\n      console.error('‚ùå SUBDOMAIN DELETE - Error stack:', error.stack);\n      const errorMessage = ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.message) || error.message || 'Unknown error occurred';\n      toast.error('Failed to delete sub-domain: ' + errorMessage);\n      console.log('‚ùå SUBDOMAIN DELETE - Error toast shown with message:', errorMessage);\n    }\n  };\n  const toggleExpanded = nodeId => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading sub-domains...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subdomain-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"breadcrumb-link\",\n            onClick: () => navigate('/domains'),\n            children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this), \"Domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-current\",\n            children: (domain === null || domain === void 0 ? void 0 : domain.title) || 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SubDomain Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Manage the hierarchical structure of \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'this domain']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: () => handleAddSubDomain(),\n          style: {\n            backgroundColor: '#3b82f6',\n            color: 'white',\n            padding: '12px 16px',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: 'pointer',\n            fontSize: '14px',\n            fontWeight: '500'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n            style: {\n              marginRight: '6px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), \"Add Root SubDomain\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Build Your SubDomain Hierarchy:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guide-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\\"Add Root SubDomain\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 47\n            }, this), \" to create top-level categories\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click the \", /*#__PURE__*/_jsxDEV(FiPlus, {\n              className: \"inline-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 51\n            }, this), \" button next to any subdomain to add children\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Only \", /*#__PURE__*/_jsxDEV(FiTarget, {\n              className: \"inline-icon leaf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 46\n            }, this), \" leaf subdomains can have projects assigned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\\"Add Project\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 47\n            }, this), \" or \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\\"View Projects\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 81\n            }, this), \" on leaf subdomains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), domain && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-icon\",\n        children: /*#__PURE__*/_jsxDEV(FiFolder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: domain.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: domain.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"domain-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: subDomains.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), \" root sub-domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: domain.projectCount || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), \" total projects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subdomain-tree-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SubDomain Hierarchy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiFolder, {\n              className: \"folder-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), \"Has children\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiTarget, {\n              className: \"leaf-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), \"Leaf (can have projects)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiFileText, {\n              className: \"project-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this), \"Add Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiList, {\n              className: \"view-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this), \"View Projects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), subDomains.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subdomain-tree\",\n        children: subDomains.map(subDomain => /*#__PURE__*/_jsxDEV(SubDomainNode, {\n          subDomain: subDomain,\n          level: 0,\n          isExpanded: expandedNodes.has(subDomain.id),\n          onToggleExpanded: toggleExpanded,\n          onEdit: handleEditSubDomain,\n          onDelete: handleDeleteSubDomain,\n          onAddChild: handleAddSubDomain,\n          onAddProject: handleAddProjectToSubDomain,\n          onViewProjects: handleViewProjectsInSubDomain // NEW\n          ,\n          expandedNodes: expandedNodes\n        }, subDomain.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-tree-state\",\n        children: [/*#__PURE__*/_jsxDEV(FiFolderPlus, {\n          size: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No SubDomains Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start organizing your \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'domain', \" projects by creating subdomains\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-examples\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Example Structure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-tree\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item\",\n              children: \"\\uD83D\\uDCC2 Machine Learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item nested\",\n              children: \"\\uD83C\\uDFAF Deep Learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item nested\",\n              children: \"\\uD83C\\uDFAF Computer Vision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item\",\n              children: \"\\uD83C\\uDFAF Data Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button large\",\n            onClick: () => handleAddSubDomain(),\n            style: {\n              backgroundColor: '#3b82f6',\n              color: 'white',\n              padding: '14px 20px',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: 'pointer',\n              fontSize: '16px',\n              fontWeight: '600'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n              style: {\n                marginRight: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this), \"Create Your First SubDomain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"\\uD83D\\uDCA1 Tip: Start with broad categories, then add specific subcategories as needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(SubDomainModal, {\n      subDomain: editingSubDomain,\n      parent: selectedParent,\n      domain: domain,\n      onClose: () => {\n        setShowAddModal(false);\n        setEditingSubDomain(null);\n        setSelectedParent(null);\n      },\n      onSave: () => {\n        setShowAddModal(false);\n        setEditingSubDomain(null);\n        setSelectedParent(null);\n        fetchDomainAndSubDomains();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 9\n    }, this), showProjectModal && /*#__PURE__*/_jsxDEV(ProjectModal, {\n      subDomain: selectedSubDomainForProject,\n      domain: domain,\n      onClose: () => {\n        setShowProjectModal(false);\n        setSelectedSubDomainForProject(null);\n      },\n      onSave: () => {\n        setShowProjectModal(false);\n        setSelectedSubDomainForProject(null);\n        toast.success('Project created successfully!');\n        fetchDomainAndSubDomains(); // Refresh to update project counts\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 9\n    }, this), showProjectsModal && /*#__PURE__*/_jsxDEV(ProjectsListModal, {\n      subDomain: selectedSubDomainForProjectsView,\n      projects: projectsInSubDomain,\n      loading: projectsLoading,\n      onClose: () => {\n        setShowProjectsModal(false);\n        setSelectedSubDomainForProjectsView(null);\n        setProjectsInSubDomain([]);\n      },\n      onEdit: handleEditProject,\n      onDelete: handleDeleteProject,\n      onArchive: handleArchiveProject,\n      onToggleFeatured: handleToggleProjectFeatured,\n      onAddProject: () => {\n        setShowProjectsModal(false);\n        setSelectedSubDomainForProject(selectedSubDomainForProjectsView);\n        setShowProjectModal(true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 9\n    }, this), showProjectEditModal && editingProject && /*#__PURE__*/_jsxDEV(ProjectEditModal, {\n      project: editingProject,\n      onClose: () => {\n        setShowProjectEditModal(false);\n        setEditingProject(null);\n      },\n      onSave: () => {\n        setShowProjectEditModal(false);\n        setEditingProject(null);\n        // Refresh projects list and subdomain data\n        fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n        fetchDomainAndSubDomains();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 5\n  }, this);\n};\n\n// UPDATED SubDomain Node Component with View Projects functionality\n_s(SubDomainManagement, \"h/WabeT8E3uxhidDdHFGsO8/F6w=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SubDomainManagement;\nconst SubDomainNode = ({\n  subDomain,\n  level,\n  isExpanded,\n  onToggleExpanded,\n  onEdit,\n  onDelete,\n  onAddChild,\n  onAddProject,\n  onViewProjects,\n  // NEW\n  expandedNodes\n}) => {\n  _s2();\n  var _subDomain$children2;\n  const [showMenu, setShowMenu] = useState(false);\n  const hasChildren = subDomain.children && subDomain.children.length > 0;\n  const isLeaf = !hasChildren;\n  const hasProjects = subDomain.projectCount > 0;\n  console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n    title: subDomain.title,\n    level,\n    hasChildren,\n    isLeaf,\n    isExpanded,\n    projectCount: subDomain.projectCount,\n    hasProjects,\n    children: subDomain.children,\n    childrenLength: (_subDomain$children2 = subDomain.children) === null || _subDomain$children2 === void 0 ? void 0 : _subDomain$children2.length,\n    subDomainFullObject: subDomain\n  });\n\n  // üîç DEBUGGING: Log button visibility conditions\n  console.log('üîç BUTTON VISIBILITY DEBUG for', subDomain.title, ':', {\n    isLeaf,\n    hasProjects,\n    projectCount: subDomain.projectCount,\n    shouldShowViewButton: isLeaf && hasProjects,\n    shouldShowAddButton: isLeaf\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `subdomain-node level-${level}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-main\",\n        children: [hasChildren ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"expand-button\",\n          onClick: () => onToggleExpanded(subDomain.id),\n          children: isExpanded ? /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expand-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-icon\",\n          children: isLeaf ? /*#__PURE__*/_jsxDEV(FiTarget, {\n            className: \"leaf-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(FiFolder, {\n            className: \"folder-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"node-title\",\n            children: subDomain.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"node-description\",\n            children: subDomain.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-stats\",\n            children: [hasChildren && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge\",\n              children: [subDomain.children.length, \" sub-domains\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 17\n            }, this), hasProjects && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge projects\",\n              children: [subDomain.projectCount, \" projects\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 17\n            }, this), isLeaf && !hasProjects && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge leaf\",\n              children: \"Can have projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge debug\",\n              style: {\n                backgroundColor: '#ff9999',\n                color: '#000'\n              },\n              children: [\"DEBUG: Count=\", subDomain.projectCount || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '10px',\n            color: '#666',\n            marginBottom: '5px'\n          },\n          children: [\"DEBUG: isLeaf=\", isLeaf.toString(), \", hasProjects=\", hasProjects.toString(), \", count=\", subDomain.projectCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 11\n        }, this), isLeaf && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button view\",\n          onClick: () => {\n            console.log('üéØ VIEW BUTTON CLICKED for:', subDomain.title);\n            onViewProjects(subDomain);\n          },\n          title: `View projects in \"${subDomain.title}\" (Count: ${subDomain.projectCount || 0})`,\n          style: {\n            backgroundColor: hasProjects ? '#10b981' : '#6b7280'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '10px',\n              marginLeft: '2px'\n            },\n            children: subDomain.projectCount || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 13\n        }, this), isLeaf && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button project\",\n          onClick: () => {\n            console.log('üéØ ADD PROJECT BUTTON CLICKED for:', subDomain.title);\n            onAddProject(subDomain);\n          },\n          title: `Add project to \"${subDomain.title}\"`,\n          children: /*#__PURE__*/_jsxDEV(FiFileText, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button add\",\n          onClick: () => onAddChild(subDomain),\n          title: `Add child subdomain under \"${subDomain.title}\"`,\n          children: /*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowMenu(!showMenu),\n            title: \"More actions\",\n            children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 13\n          }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [isLeaf && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log('üéØ DROPDOWN VIEW PROJECTS CLICKED for:', subDomain.title);\n                onViewProjects(subDomain);\n                setShowMenu(false);\n              },\n              className: \"primary-option\",\n              style: {\n                backgroundColor: hasProjects ? '#dff0d8' : '#f8f9fa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 21\n              }, this), \" View Projects (\", subDomain.projectCount || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 19\n            }, this), isLeaf && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onAddProject(subDomain);\n                setShowMenu(false);\n              },\n              className: \"primary-option\",\n              children: [/*#__PURE__*/_jsxDEV(FiFileText, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 21\n              }, this), \" Add Project\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onEdit(subDomain);\n                setShowMenu(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 19\n              }, this), \" Edit SubDomain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onAddChild(subDomain);\n                setShowMenu(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 19\n              }, this), \" Add Child SubDomain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onDelete(subDomain);\n                setShowMenu(false);\n              },\n              className: \"danger\",\n              children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 909,\n                columnNumber: 19\n              }, this), \" Delete SubDomain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 7\n    }, this), hasChildren && isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-children\",\n      children: subDomain.children.map(child => /*#__PURE__*/_jsxDEV(SubDomainNode, {\n        subDomain: child,\n        level: level + 1,\n        isExpanded: expandedNodes.has(child.id),\n        onToggleExpanded: onToggleExpanded,\n        onEdit: onEdit,\n        onDelete: onDelete,\n        onAddChild: onAddChild,\n        onAddProject: onAddProject,\n        onViewProjects: onViewProjects // NEW\n        ,\n        expandedNodes: expandedNodes\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 769,\n    columnNumber: 5\n  }, this);\n};\n\n// SubDomain Modal Component (unchanged)\n_s2(SubDomainNode, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c2 = SubDomainNode;\nconst SubDomainModal = ({\n  subDomain,\n  parent,\n  domain,\n  onClose,\n  onSave\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    title: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.title) || '',\n    description: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.description) || ''\n  });\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const requestData = {\n        title: formData.title.trim(),\n        description: formData.description.trim(),\n        domainId: domain.id,\n        parentId: (parent === null || parent === void 0 ? void 0 : parent.id) || null\n      };\n      console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n      if (subDomain) {\n        const response = await authService.updateSubDomain(subDomain.id, requestData);\n        toast.success('Sub-domain updated successfully');\n      } else {\n        const response = await authService.createSubDomain(requestData);\n        toast.success('Sub-domain created successfully');\n      }\n      onSave();\n    } catch (error) {\n      var _error$response1, _error$response1$data;\n      console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n      const errorMessage = ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Failed to save sub-domain';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getModalTitle = () => {\n    if (subDomain) {\n      return `Edit SubDomain: ${subDomain.title}`;\n    }\n    if (parent) {\n      return `Add SubDomain under: ${parent.title}`;\n    }\n    return `Add Root SubDomain in: ${(domain === null || domain === void 0 ? void 0 : domain.title) || 'Domain'}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: getModalTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"SubDomain Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            placeholder: \"e.g., Machine Learning, Deep Learning\",\n            required: true,\n            minLength: 3,\n            maxLength: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1014,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              description: e.target.value\n            })),\n            rows: 3,\n            placeholder: \"Describe what this sub-domain covers...\",\n            maxLength: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1015,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 13\n          }, this), \" \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 66\n          }, this), parent && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Parent SubDomain:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 17\n            }, this), \" \", parent.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 13\n          }, this), \" \", parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading || !formData.title.trim(),\n            children: loading ? 'Saving...' : 'Save SubDomain'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1038,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 992,\n    columnNumber: 5\n  }, this);\n};\n\n// Project Creation Modal Component (unchanged)\n_s3(SubDomainModal, \"GK/DCXfCNFb5ohLoW+l6KsTmPCs=\");\n_c3 = SubDomainModal;\nconst ProjectModal = ({\n  subDomain,\n  domain,\n  onClose,\n  onSave\n}) => {\n  _s4();\n  const [formData, setFormData] = useState({\n    title: '',\n    abstract: '',\n    specifications: '',\n    learningOutcomes: '',\n    subDomainId: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.id) || '',\n    isFeatured: false\n  });\n  const [loading, setLoading] = useState(false);\n  console.log('üìù PROJECT MODAL - Props:', {\n    subDomain: subDomain === null || subDomain === void 0 ? void 0 : subDomain.title,\n    domain: domain === null || domain === void 0 ? void 0 : domain.title,\n    formData\n  });\n\n  // Slug generation function\n  const generateSlug = title => {\n    return title.toLowerCase().trim().replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n    .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n    .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // Don't send slug - let backend auto-generate it\n      const projectData = {\n        title: formData.title.trim(),\n        abstract: formData.abstract.trim(),\n        specifications: formData.specifications.trim(),\n        learningOutcomes: formData.learningOutcomes.trim(),\n        subDomainId: formData.subDomainId,\n        isFeatured: formData.isFeatured\n      };\n      console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n      console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n      const response = await authService.createProject(projectData);\n      console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n      onSave();\n    } catch (error) {\n      var _error$response10, _error$response11, _error$response11$dat;\n      console.error('‚ùå PROJECT SAVE - Error:', error);\n      console.error('‚ùå PROJECT SAVE - Error response:', (_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.data);\n\n      // Show more specific error message if available\n      const errorMessage = ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || 'Failed to create project';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Add Project to: \", subDomain === null || subDomain === void 0 ? void 0 : subDomain.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            placeholder: \"Enter project title...\",\n            required: true,\n            minLength: 3,\n            maxLength: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 13\n          }, this), formData.title && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slug-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Expected URL Slug: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                children: generateSlug(formData.title)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 43\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"(auto-generated by backend)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 87\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1137,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 13\n          }, this), \" \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1143,\n            columnNumber: 66\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SubDomain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 13\n          }, this), \" \", (subDomain === null || subDomain === void 0 ? void 0 : subDomain.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-note\",\n            children: [/*#__PURE__*/_jsxDEV(FiTarget, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 15\n            }, this), \" This is a leaf subdomain - perfect for projects!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Abstract *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.abstract,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              abstract: e.target.value\n            })),\n            rows: 4,\n            placeholder: \"Brief description of the project...\",\n            required: true,\n            minLength: 10,\n            maxLength: 1000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Specifications *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.specifications,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              specifications: e.target.value\n            })),\n            rows: 6,\n            placeholder: \"Technical specifications and requirements...\",\n            required: true,\n            minLength: 10,\n            maxLength: 5000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Learning Outcomes *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.learningOutcomes,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              learningOutcomes: e.target.value\n            })),\n            rows: 4,\n            placeholder: \"What will students learn from this project...\",\n            required: true,\n            minLength: 10,\n            maxLength: 2000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formData.isFeatured,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                isFeatured: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FiTarget, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1196,\n              columnNumber: 15\n            }, this), \"Featured Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes,\n            children: loading ? 'Creating...' : 'Create Project'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1115,\n    columnNumber: 5\n  }, this);\n};\n\n// NEW: Projects List Modal Component\n_s4(ProjectModal, \"xEzGlE7RlMQaW2g8q8xIHb6RJTM=\");\n_c4 = ProjectModal;\nconst ProjectsListModal = ({\n  subDomain,\n  projects,\n  loading,\n  onClose,\n  onEdit,\n  onDelete,\n  onArchive,\n  onToggleFeatured,\n  onAddProject\n}) => {\n  console.log('üìã PROJECTS LIST MODAL - Rendering with props:', {\n    subDomain: subDomain === null || subDomain === void 0 ? void 0 : subDomain.title,\n    subDomainId: subDomain === null || subDomain === void 0 ? void 0 : subDomain.id,\n    projectsCount: projects.length,\n    loading,\n    projects: projects,\n    firstProject: projects[0]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Projects in: \", subDomain === null || subDomain === void 0 ? void 0 : subDomain.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-list-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"SubDomain:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1253,\n                columnNumber: 18\n              }, this), \" \", subDomain === null || subDomain === void 0 ? void 0 : subDomain.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Total Projects:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1254,\n                columnNumber: 18\n              }, this), \" \", projects.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#666',\n                marginTop: '10px',\n                padding: '10px',\n                backgroundColor: '#f0f0f0'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"DEBUG INFO:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1257,\n                columnNumber: 45\n              }, this), \"SubDomain ID: \", subDomain === null || subDomain === void 0 ? void 0 : subDomain.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1258,\n                columnNumber: 46\n              }, this), \"Projects Array Length: \", projects.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1259,\n                columnNumber: 57\n              }, this), \"Loading: \", loading.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1260,\n                columnNumber: 46\n              }, this), \"Projects Data: \", JSON.stringify(projects, null, 2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: () => {\n              console.log('üéØ ADD NEW PROJECT CLICKED from modal');\n              onAddProject();\n            },\n            style: {\n              backgroundColor: '#3b82f6',\n              color: 'white',\n              padding: '10px 14px',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n              style: {\n                marginRight: '6px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1281,\n              columnNumber: 15\n            }, this), \"Add New Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1251,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading projects...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1287,\n          columnNumber: 13\n        }, this) : projects.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-list\",\n          children: projects.map((project, index) => {\n            console.log(`üìÑ RENDERING PROJECT ${index + 1}:`, project);\n            return /*#__PURE__*/_jsxDEV(ProjectListItem, {\n              project: project,\n              onEdit: onEdit,\n              onDelete: onDelete,\n              onArchive: onArchive,\n              onToggleFeatured: onToggleFeatured\n            }, project.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1296,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1292,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-projects-state\",\n          children: [/*#__PURE__*/_jsxDEV(FiFileText, {\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Projects Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This subdomain doesn't have any projects yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#666',\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"DEBUG:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1313,\n              columnNumber: 17\n            }, this), \" API returned \", projects.length, \" projects for subdomain \", subDomain === null || subDomain === void 0 ? void 0 : subDomain.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: () => {\n              console.log('üéØ ADD FIRST PROJECT CLICKED from empty state');\n              onAddProject();\n            },\n            style: {\n              backgroundColor: '#3b82f6',\n              color: 'white',\n              padding: '12px 16px',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n              style: {\n                marginRight: '6px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1332,\n              columnNumber: 17\n            }, this), \"Add First Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1241,\n    columnNumber: 5\n  }, this);\n};\n\n// NEW: Project List Item Component\n_c5 = ProjectsListModal;\nconst ProjectListItem = ({\n  project,\n  onEdit,\n  onDelete,\n  onArchive,\n  onToggleFeatured\n}) => {\n  _s5();\n  var _project$abstract, _project$abstract2;\n  const [showMenu, setShowMenu] = useState(false);\n  console.log('üìÑ PROJECT LIST ITEM - Rendering project:', {\n    id: project.id,\n    title: project.title,\n    abstract: (_project$abstract = project.abstract) === null || _project$abstract === void 0 ? void 0 : _project$abstract.substring(0, 50),\n    isActive: project.isActive,\n    isFeatured: project.isFeatured,\n    viewCount: project.viewCount,\n    createdAt: project.createdAt,\n    updatedAt: project.updatedAt,\n    fullProject: project\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `project-list-item ${!project.isActive ? 'archived' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"project-title\",\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-badges\",\n          children: [project.isFeatured && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge featured\",\n            children: [/*#__PURE__*/_jsxDEV(FiStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1373,\n              columnNumber: 17\n            }, this), \" Featured\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1372,\n            columnNumber: 15\n          }, this), !project.isActive && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge archived\",\n            children: \"Archived\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge debug\",\n            style: {\n              backgroundColor: '#e3f2fd',\n              color: '#1976d2'\n            },\n            children: [\"ID: \", project.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"project-abstract\",\n        children: [((_project$abstract2 = project.abstract) === null || _project$abstract2 === void 0 ? void 0 : _project$abstract2.substring(0, 150)) || 'No abstract available', \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1390,\n            columnNumber: 13\n          }, this), \" \", project.viewCount || 0, \" views\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [\"Created: \", project.createdAt ? new Date(project.createdAt).toLocaleDateString() : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat\",\n          children: [\"Updated: \", project.updatedAt ? new Date(project.updatedAt).toLocaleDateString() : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button primary\",\n        onClick: () => {\n          console.log('üéØ EDIT BUTTON CLICKED for project:', project.title);\n          onEdit(project);\n        },\n        title: \"Edit project\",\n        style: {\n          backgroundColor: '#10b981',\n          color: 'white',\n          padding: '8px 12px',\n          margin: '2px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FiEdit, {\n          style: {\n            marginRight: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 11\n        }, this), \"Edit Project\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button danger\",\n        onClick: () => {\n          console.log('üéØ DELETE BUTTON CLICKED for project:', project.title);\n          onDelete(project);\n        },\n        title: \"Delete project\",\n        style: {\n          backgroundColor: '#ef4444',\n          color: 'white',\n          padding: '8px 12px',\n          margin: '2px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FiTrash2, {\n          style: {\n            marginRight: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1444,\n          columnNumber: 11\n        }, this), \"Delete Project\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button featured\",\n        onClick: () => {\n          console.log('üéØ TOGGLE FEATURED BUTTON CLICKED for project:', project.title);\n          onToggleFeatured(project);\n        },\n        title: project.isFeatured ? \"Remove from featured\" : \"Make featured\",\n        style: {\n          backgroundColor: project.isFeatured ? '#f59e0b' : '#6b7280',\n          color: 'white',\n          padding: '8px 12px',\n          margin: '2px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FiStar, {\n          style: {\n            marginRight: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 11\n        }, this), project.isFeatured ? 'Remove Featured' : 'Make Featured']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button archive\",\n        onClick: () => {\n          console.log('üéØ ARCHIVE BUTTON CLICKED for project:', project.title);\n          onArchive(project);\n        },\n        title: project.isActive ? \"Archive project\" : \"Restore project\",\n        style: {\n          backgroundColor: project.isActive ? '#6b7280' : '#059669',\n          color: 'white',\n          padding: '8px 12px',\n          margin: '2px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FiArchive, {\n          style: {\n            marginRight: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1490,\n          columnNumber: 11\n        }, this), project.isActive ? 'Archive' : 'Restore']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log('üéØ MORE MENU CLICKED for project:', project.title);\n            setShowMenu(!showMenu);\n          },\n          title: \"More actions\",\n          style: {\n            backgroundColor: '#6b7280',\n            color: 'white',\n            padding: '8px 12px',\n            margin: '2px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FiMoreVertical, {\n            style: {\n              marginRight: '4px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1512,\n            columnNumber: 13\n          }, this), \"More Options\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1495,\n          columnNumber: 11\n        }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          style: {\n            zIndex: 1000,\n            backgroundColor: 'white',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            padding: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('üéØ DROPDOWN EDIT CLICKED for project:', project.title);\n              onEdit(project);\n              setShowMenu(false);\n            },\n            style: {\n              display: 'block',\n              width: '100%',\n              padding: '5px',\n              margin: '2px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1522,\n              columnNumber: 17\n            }, this), \" Edit Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1517,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('üéØ DROPDOWN TOGGLE FEATURED CLICKED for project:', project.title);\n              onToggleFeatured(project);\n              setShowMenu(false);\n            },\n            style: {\n              display: 'block',\n              width: '100%',\n              padding: '5px',\n              margin: '2px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1529,\n              columnNumber: 17\n            }, this), \" \", project.isFeatured ? 'Remove Featured' : 'Make Featured']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1524,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('üéØ DROPDOWN ARCHIVE CLICKED for project:', project.title);\n              onArchive(project);\n              setShowMenu(false);\n            },\n            style: {\n              display: 'block',\n              width: '100%',\n              padding: '5px',\n              margin: '2px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiArchive, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1536,\n              columnNumber: 17\n            }, this), \" \", project.isActive ? 'Archive' : 'Restore']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1531,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('üéØ DROPDOWN DELETE CLICKED for project:', project.title);\n              onDelete(project);\n              setShowMenu(false);\n            },\n            className: \"danger\",\n            style: {\n              display: 'block',\n              width: '100%',\n              padding: '5px',\n              margin: '2px',\n              backgroundColor: '#ef4444',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1543,\n              columnNumber: 17\n            }, this), \" Delete Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1538,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1516,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1494,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1401,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1366,\n    columnNumber: 5\n  }, this);\n};\n\n// NEW: Project Edit Modal Component\n_s5(ProjectListItem, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c6 = ProjectListItem;\nconst ProjectEditModal = ({\n  project,\n  onClose,\n  onSave\n}) => {\n  _s6();\n  var _project$subDomain, _project$subDomain$do, _project$subDomain2;\n  const [formData, setFormData] = useState({\n    title: (project === null || project === void 0 ? void 0 : project.title) || '',\n    abstract: (project === null || project === void 0 ? void 0 : project.abstract) || '',\n    specifications: (project === null || project === void 0 ? void 0 : project.specifications) || '',\n    learningOutcomes: (project === null || project === void 0 ? void 0 : project.learningOutcomes) || '',\n    isFeatured: (project === null || project === void 0 ? void 0 : project.isFeatured) || false\n  });\n  const [loading, setLoading] = useState(false);\n  console.log('üìù PROJECT EDIT MODAL - Project:', project.title);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      console.log('üíæ PROJECT UPDATE - Starting with data:', formData);\n      await authService.updateProject(project.id, formData);\n      console.log('‚úÖ PROJECT UPDATE - Success');\n      toast.success('Project updated successfully');\n      onSave();\n    } catch (error) {\n      console.error('‚ùå PROJECT UPDATE - Error:', error);\n      toast.error('Failed to update project');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit Project: \", project.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1588,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1589,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1587,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1594,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1595,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1604,\n            columnNumber: 13\n          }, this), \" \", ((_project$subDomain = project.subDomain) === null || _project$subDomain === void 0 ? void 0 : (_project$subDomain$do = _project$subDomain.domain) === null || _project$subDomain$do === void 0 ? void 0 : _project$subDomain$do.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1604,\n            columnNumber: 85\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SubDomain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1605,\n            columnNumber: 13\n          }, this), \" \", ((_project$subDomain2 = project.subDomain) === null || _project$subDomain2 === void 0 ? void 0 : _project$subDomain2.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1605,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-note\",\n            children: \"\\uD83D\\uDCA1 To move this project to a different domain/subdomain, contact your administrator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1606,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Abstract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1612,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.abstract,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              abstract: e.target.value\n            })),\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1613,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Specifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1622,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.specifications,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              specifications: e.target.value\n            })),\n            rows: 6,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Learning Outcomes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.learningOutcomes,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              learningOutcomes: e.target.value\n            })),\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1633,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formData.isFeatured,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                isFeatured: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1643,\n              columnNumber: 15\n            }, this), \"Featured Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1642,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1653,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading,\n            children: loading ? 'Updating...' : 'Update Project'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1656,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1652,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1592,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1586,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1585,\n    columnNumber: 5\n  }, this);\n};\n_s6(ProjectEditModal, \"HWWjhxv4JT3/Tfbaz4NAG+yYBwQ=\");\n_c7 = ProjectEditModal;\nexport default SubDomainManagement;\n// // src/components/domains/SubDomainManagement.js - ENHANCED WITH PROJECT VIEW/EDIT/DELETE\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiChevronDown,\n//   FiChevronRight,\n//   FiFolder,\n//   FiFolderPlus,\n//   FiFileText,\n//   FiArrowLeft,\n//   FiMoreVertical,\n//   FiMove,\n//   FiTarget,\n//   FiEye,\n//   FiStar,\n//   FiArchive,\n//   FiList,\n//   FiX\n// } from 'react-icons/fi';\n\n// const SubDomainManagement = () => {\n//   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n//   const { domainId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [domain, setDomain] = useState(null);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingSubDomain, setEditingSubDomain] = useState(null);\n//   const [selectedParent, setSelectedParent] = useState(null);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n//   // Project creation state\n//   const [showProjectModal, setShowProjectModal] = useState(false);\n//   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n//   // NEW: Project management states\n//   const [showProjectsModal, setShowProjectsModal] = useState(false);\n//   const [selectedSubDomainForProjectsView, setSelectedSubDomainForProjectsView] = useState(null);\n//   const [projectsInSubDomain, setProjectsInSubDomain] = useState([]);\n//   const [editingProject, setEditingProject] = useState(null);\n//   const [showProjectEditModal, setShowProjectEditModal] = useState(false);\n//   const [projectsLoading, setProjectsLoading] = useState(false);\n\n//   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n//     domainId,\n//     domain: domain?.title,\n//     subDomainsCount: subDomains.length,\n//     loading,\n//     selectedParent: selectedParent?.title,\n//     expandedCount: expandedNodes.size,\n//     showProjectModal,\n//     selectedSubDomainForProject: selectedSubDomainForProject?.title,\n//     // NEW states\n//     showProjectsModal,\n//     selectedSubDomainForProjectsView: selectedSubDomainForProjectsView?.title,\n//     projectsInSubDomainCount: projectsInSubDomain.length,\n//     editingProject: editingProject?.title\n//   });\n\n//   useEffect(() => {\n//     if (domainId) {\n//       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n//       fetchDomainAndSubDomains();\n//     }\n//   }, [domainId]);\n\n//   const fetchDomainAndSubDomains = async () => {\n//     try {\n//       setLoading(true);\n\n//       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n//       // Get domain details\n//       const domainsResponse = await authService.getDomains();\n//       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n//       let domainData = null;\n//       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n//       if (domains.length > 0) {\n//         domainData = domains.find(d => d.id == domainId);\n//         console.log('üéØ SUBDOMAIN FETCH - Found domain data:', domainData);\n//       }\n\n//       if (!domainData) {\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Domain not found, creating fallback');\n//         domainData = {\n//           id: domainId,\n//           title: `Domain ${domainId}`,\n//           description: 'Domain not found in list',\n//           projectCount: 0\n//         };\n//       }\n\n//       setDomain(domainData);\n\n//       // Get subdomains\n//       console.log('üì° SUBDOMAIN FETCH - Fetching subdomains with domainId:', domainId);\n//       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n//       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse);\n//       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response.data:', subDomainsResponse.data);\n//       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response data type:', typeof subDomainsResponse.data);\n//       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response data keys:', Object.keys(subDomainsResponse.data || {}));\n\n//       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n//       console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains data:', subDomainsData);\n//       console.log('üéØ SUBDOMAIN FETCH - Subdomains count:', subDomainsData.length);\n\n//       // üîç DEBUGGING: Log each subdomain's project count\n//       subDomainsData.forEach((subdomain, index) => {\n//         console.log(`üìä SUBDOMAIN ${index + 1} [${subdomain.title}]:`, {\n//           id: subdomain.id,\n//           title: subdomain.title,\n//           projectCount: subdomain.projectCount,\n//           hasChildren: subdomain.children && subdomain.children.length > 0,\n//           childrenCount: subdomain.children?.length || 0,\n//           isLeaf: !subdomain.children || subdomain.children.length === 0,\n//           fullObject: subdomain\n//         });\n//       });\n\n//       setSubDomains(subDomainsData);\n\n//       // Auto-expand first level\n//       if (subDomainsData.length > 0) {\n//         const firstLevelIds = subDomainsData.map(sd => sd.id);\n//         setExpandedNodes(new Set(firstLevelIds));\n//         console.log('üîÑ SUBDOMAIN FETCH - Auto-expanded first level IDs:', firstLevelIds);\n//       }\n\n//       // Try hierarchy API as fallback\n//       try {\n//         console.log('üì° SUBDOMAIN FETCH - Trying hierarchy API as fallback');\n//         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n//         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse);\n//         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response.data:', hierarchyResponse.data);\n\n//         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n//         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n//         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n//           console.log('üîÑ SUBDOMAIN FETCH - Using hierarchy data instead');\n//           console.log('üîÑ SUBDOMAIN FETCH - Hierarchy subdomains:', hierarchyData.subDomains);\n\n//           // üîç DEBUGGING: Log hierarchy subdomain project counts\n//           hierarchyData.subDomains.forEach((subdomain, index) => {\n//             console.log(`üìä HIERARCHY SUBDOMAIN ${index + 1} [${subdomain.title}]:`, {\n//               id: subdomain.id,\n//               title: subdomain.title,\n//               projectCount: subdomain.projectCount,\n//               hasChildren: subdomain.children && subdomain.children.length > 0,\n//               childrenCount: subdomain.children?.length || 0,\n//               isLeaf: !subdomain.children || subdomain.children.length === 0,\n//               fullObject: subdomain\n//             });\n//           });\n\n//           setSubDomains(hierarchyData.subDomains);\n//           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n//             setDomain(prev => ({ ...prev, ...hierarchyData }));\n//           }\n//         }\n//       } catch (hierarchyError) {\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy error response:', hierarchyError.response);\n//       }\n\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n//       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n//       console.error('‚ùå SUBDOMAIN FETCH - Error response data:', error.response?.data);\n//       console.error('‚ùå SUBDOMAIN FETCH - Error message:', error.message);\n//       toast.error('Failed to fetch domain information: ' + (error.response?.data?.message || error.message));\n\n//       setDomain({\n//         id: domainId,\n//         title: `Domain ${domainId}`,\n//         description: 'Error loading domain details',\n//         projectCount: 0\n//       });\n//       setSubDomains([]);\n//     } finally {\n//       setLoading(false);\n//       console.log('üèÅ SUBDOMAIN FETCH - Loading set to false');\n//     }\n//   };\n\n//   const handleAddSubDomain = (parent = null) => {\n//     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n//     setSelectedParent(parent);\n//     setEditingSubDomain(null);\n//     setShowAddModal(true);\n//   };\n\n//   const handleEditSubDomain = (subDomain) => {\n//     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n//     setSelectedParent(null);\n//     setEditingSubDomain(subDomain);\n//     setShowAddModal(true);\n//   };\n\n//   // Handle adding project to subdomain\n//   const handleAddProjectToSubDomain = (subDomain) => {\n//     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n//     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n\n//     if (subDomain.children && subDomain.children.length > 0) {\n//       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n//       return;\n//     }\n\n//     setSelectedSubDomainForProject(subDomain);\n//     setShowProjectModal(true);\n//   };\n\n//   // NEW: Handle viewing projects in subdomain\n//   const handleViewProjectsInSubDomain = async (subDomain) => {\n//     console.log('üëÅÔ∏è VIEW PROJECTS - Starting for subdomain:', subDomain.title);\n//     console.log('üîç VIEW PROJECTS - SubDomain object:', subDomain);\n//     console.log('üîç VIEW PROJECTS - Has children?', subDomain.children && subDomain.children.length > 0);\n//     console.log('üîç VIEW PROJECTS - Project count:', subDomain.projectCount);\n//     console.log('üîç VIEW PROJECTS - Is leaf?', !subDomain.children || subDomain.children.length === 0);\n\n//     if (subDomain.children && subDomain.children.length > 0) {\n//       console.log('‚ùå VIEW PROJECTS - Not a leaf subdomain');\n//       toast.error('Only leaf sub-domains have projects to view');\n//       return;\n//     }\n\n//     if (!subDomain.projectCount || subDomain.projectCount === 0) {\n//       console.log('‚ùå VIEW PROJECTS - No projects in subdomain');\n//       toast.info('This sub-domain has no projects yet. Let\\'s fetch anyway to check...');\n//       // Don't return - still try to fetch in case the count is wrong\n//     }\n\n//     console.log('‚úÖ VIEW PROJECTS - Proceeding to fetch projects');\n//     setSelectedSubDomainForProjectsView(subDomain);\n//     await fetchProjectsInSubDomain(subDomain.id);\n//     setShowProjectsModal(true);\n//   };\n\n//   // NEW: Fetch projects for a specific subdomain\n//   const fetchProjectsInSubDomain = async (subDomainId) => {\n//     try {\n//       setProjectsLoading(true);\n//       console.log('üì° FETCH PROJECTS - For subdomain ID:', subDomainId);\n//       console.log('üì° FETCH PROJECTS - Making API call to authService.getProjects()');\n\n//       const response = await authService.getProjects({ \n//         subDomainId: subDomainId,\n//         limit: 100 // Get all projects for this subdomain\n//       });\n\n//       console.log('‚úÖ FETCH PROJECTS - Full API Response:', response);\n//       console.log('‚úÖ FETCH PROJECTS - Response status:', response.status);\n//       console.log('‚úÖ FETCH PROJECTS - Response data:', response.data);\n//       console.log('‚úÖ FETCH PROJECTS - Response data type:', typeof response.data);\n//       console.log('‚úÖ FETCH PROJECTS - Response data keys:', Object.keys(response.data || {}));\n\n//       const projects = response.data?.projects || response.data?.data?.projects || [];\n//       console.log('üéØ FETCH PROJECTS - Extracted projects:', projects);\n//       console.log('üéØ FETCH PROJECTS - Projects count:', projects.length);\n//       console.log('üéØ FETCH PROJECTS - First project (if any):', projects[0]);\n\n//       setProjectsInSubDomain(projects);\n\n//       if (projects.length === 0) {\n//         console.log('‚ö†Ô∏è FETCH PROJECTS - No projects found for subdomain:', subDomainId);\n//         toast.info(`No projects found in this subdomain. API returned ${projects.length} projects.`);\n//       } else {\n//         console.log('üéâ FETCH PROJECTS - Successfully loaded', projects.length, 'projects');\n//       }\n\n//     } catch (error) {\n//       console.error('‚ùå FETCH PROJECTS - Error occurred:', error);\n//       console.error('‚ùå FETCH PROJECTS - Error response:', error.response);\n//       console.error('‚ùå FETCH PROJECTS - Error response data:', error.response?.data);\n//       console.error('‚ùå FETCH PROJECTS - Error message:', error.message);\n//       toast.error('Failed to fetch projects: ' + (error.response?.data?.message || error.message));\n//       setProjectsInSubDomain([]);\n//     } finally {\n//       setProjectsLoading(false);\n//       console.log('üèÅ FETCH PROJECTS - Loading set to false');\n//     }\n//   };\n\n//   // NEW: Handle editing a project\n//   const handleEditProject = (project) => {\n//     console.log('‚úèÔ∏è EDIT PROJECT - Starting for:', project.title);\n//     setEditingProject(project);\n//     setShowProjectEditModal(true);\n//   };\n\n//   // NEW: Handle deleting a project\n//   const handleDeleteProject = async (project) => {\n//     console.log('üóëÔ∏è DELETE PROJECT - Requesting deletion:', project.title);\n\n//     if (!window.confirm(`Are you sure you want to delete the project \"${project.title}\"?`)) {\n//       console.log('‚ùå DELETE PROJECT - Cancelled by user');\n//       return;\n//     }\n\n//     try {\n//       console.log('üì° DELETE PROJECT - API call for:', project.id);\n//       await authService.deleteProject(project.id);\n//       console.log('‚úÖ DELETE PROJECT - Success');\n//       toast.success('Project deleted successfully');\n\n//       // Refresh projects list and subdomain data\n//       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n//       await fetchDomainAndSubDomains(); // Refresh to update project counts\n\n//     } catch (error) {\n//       console.error('‚ùå DELETE PROJECT - Error:', error);\n//       toast.error('Failed to delete project');\n//     }\n//   };\n\n//   // NEW: Handle archiving a project\n//   const handleArchiveProject = async (project) => {\n//     const isArchiving = project.isActive;\n//     const action = isArchiving ? 'archive' : 'restore';\n\n//     console.log('üìÅ ARCHIVE PROJECT - Action:', action, 'for:', project.title);\n\n//     if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n//       return;\n//     }\n\n//     try {\n//       await authService.archiveProject(project.id, {\n//         archive: isArchiving,\n//         reason: `${action} via subdomain management`\n//       });\n//       console.log('‚úÖ ARCHIVE PROJECT - Success');\n//       toast.success(`Project ${action}d successfully`);\n\n//       // Refresh projects list\n//       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n\n//     } catch (error) {\n//       console.error('‚ùå ARCHIVE PROJECT - Error:', error);\n//       toast.error(`Failed to ${action} project`);\n//     }\n//   };\n\n//   // NEW: Handle toggling featured status\n//   const handleToggleProjectFeatured = async (project) => {\n//     console.log('‚≠ê TOGGLE FEATURED - For project:', project.title);\n\n//     try {\n//       await authService.updateProject(project.id, {\n//         isFeatured: !project.isFeatured\n//       });\n//       console.log('‚úÖ TOGGLE FEATURED - Success');\n//       toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n\n//       // Refresh projects list\n//       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n\n//     } catch (error) {\n//       console.error('‚ùå TOGGLE FEATURED - Error:', error);\n//       toast.error('Failed to update featured status');\n//     }\n//   };\n\n//   const handleDeleteSubDomain = async (subDomain) => {\n//     const hasChildren = subDomain.children && subDomain.children.length > 0;\n//     const hasProjects = subDomain.projectCount > 0;\n\n//     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n//     if (hasChildren) {\n//       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n//     }\n//     if (hasProjects) {\n//       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n//     }\n\n//     if (!window.confirm(confirmMessage)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n//       const response = await authService.deleteSubDomain(subDomain.id);\n//       toast.success('Sub-domain deleted successfully');\n//       fetchDomainAndSubDomains();\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n//       toast.error('Failed to delete sub-domain');\n//     }\n//   };\n\n//   const toggleExpanded = (nodeId) => {\n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading sub-domains...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"subdomain-management\">\n//       {/* Header with Breadcrumb */}\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <div className=\"breadcrumb\">\n//             <button \n//               className=\"breadcrumb-link\"\n//               onClick={() => navigate('/domains')}\n//             >\n//               <FiArrowLeft />\n//               Domains\n//             </button>\n//             <span className=\"breadcrumb-separator\">/</span>\n//             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n//           </div>\n//           <h1>SubDomain Management</h1>\n//           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n//         </div>\n//         <div className=\"header-actions\">\n//           <button \n//             className=\"primary-button\" \n//             onClick={() => handleAddSubDomain()}\n//           >\n//             <FiPlus />\n//             Add Root SubDomain\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Quick Guide */}\n//       <div className=\"quick-guide\">\n//         <h3>How to Build Your SubDomain Hierarchy:</h3>\n//         <div className=\"guide-steps\">\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">1</span>\n//             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">2</span>\n//             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">3</span>\n//             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">4</span>\n//             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> or <strong>\"View Projects\"</strong> on leaf subdomains</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domain Info Card */}\n//       {domain && (\n//         <div className=\"domain-info-card\">\n//           <div className=\"domain-icon\">\n//             <FiFolder />\n//           </div>\n//           <div className=\"domain-details\">\n//             <h3>{domain.title}</h3>\n//             <p>{domain.description}</p>\n//             <div className=\"domain-stats\">\n//               <span className=\"stat-item\">\n//                 <strong>{subDomains.length}</strong> root sub-domains\n//               </span>\n//               <span className=\"stat-item\">\n//                 <strong>{domain.projectCount || 0}</strong> total projects\n//               </span>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* SubDomain Tree */}\n//       <div className=\"subdomain-tree-container\">\n//         <div className=\"tree-header\">\n//           <h2>SubDomain Hierarchy</h2>\n//           <div className=\"tree-legend\">\n//             <span className=\"legend-item\">\n//               <FiFolder className=\"folder-icon\" />\n//               Has children\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiTarget className=\"leaf-icon\" />\n//               Leaf (can have projects)\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiFileText className=\"project-icon\" />\n//               Add Project\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiList className=\"view-icon\" />\n//               View Projects\n//             </span>\n//           </div>\n//         </div>\n\n//         {subDomains.length > 0 ? (\n//           <div className=\"subdomain-tree\">\n//             {subDomains.map((subDomain) => (\n//               <SubDomainNode\n//                 key={subDomain.id}\n//                 subDomain={subDomain}\n//                 level={0}\n//                 isExpanded={expandedNodes.has(subDomain.id)}\n//                 onToggleExpanded={toggleExpanded}\n//                 onEdit={handleEditSubDomain}\n//                 onDelete={handleDeleteSubDomain}\n//                 onAddChild={handleAddSubDomain}\n//                 onAddProject={handleAddProjectToSubDomain}\n//                 onViewProjects={handleViewProjectsInSubDomain} // NEW\n//                 expandedNodes={expandedNodes}\n//               />\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"empty-tree-state\">\n//             <FiFolderPlus size={64} />\n//             <h3>No SubDomains Yet</h3>\n//             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n//             <div className=\"empty-state-examples\">\n//               <h4>Example Structure:</h4>\n//               <div className=\"example-tree\">\n//                 <div className=\"example-item\">üìÇ Machine Learning</div>\n//                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n//                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n//                 <div className=\"example-item\">üéØ Data Science</div>\n//               </div>\n//             </div>\n//             <div className=\"empty-state-actions\">\n//               <button \n//                 className=\"primary-button large\" \n//                 onClick={() => handleAddSubDomain()}\n//               >\n//                 <FiPlus />\n//                 Create Your First SubDomain\n//               </button>\n//               <p className=\"help-text\">\n//                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit SubDomain Modal */}\n//       {showAddModal && (\n//         <SubDomainModal\n//           subDomain={editingSubDomain}\n//           parent={selectedParent}\n//           domain={domain}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//           }}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n\n//       {/* Project Creation Modal */}\n//       {showProjectModal && (\n//         <ProjectModal\n//           subDomain={selectedSubDomainForProject}\n//           domain={domain}\n//           onClose={() => {\n//             setShowProjectModal(false);\n//             setSelectedSubDomainForProject(null);\n//           }}\n//           onSave={() => {\n//             setShowProjectModal(false);\n//             setSelectedSubDomainForProject(null);\n//             toast.success('Project created successfully!');\n//             fetchDomainAndSubDomains(); // Refresh to update project counts\n//           }}\n//         />\n//       )}\n\n//       {/* NEW: Projects List Modal */}\n//       {showProjectsModal && (\n//         <ProjectsListModal\n//           subDomain={selectedSubDomainForProjectsView}\n//           projects={projectsInSubDomain}\n//           loading={projectsLoading}\n//           onClose={() => {\n//             setShowProjectsModal(false);\n//             setSelectedSubDomainForProjectsView(null);\n//             setProjectsInSubDomain([]);\n//           }}\n//           onEdit={handleEditProject}\n//           onDelete={handleDeleteProject}\n//           onArchive={handleArchiveProject}\n//           onToggleFeatured={handleToggleProjectFeatured}\n//           onAddProject={() => {\n//             setShowProjectsModal(false);\n//             setSelectedSubDomainForProject(selectedSubDomainForProjectsView);\n//             setShowProjectModal(true);\n//           }}\n//         />\n//       )}\n\n//       {/* NEW: Project Edit Modal */}\n//       {showProjectEditModal && editingProject && (\n//         <ProjectEditModal\n//           project={editingProject}\n//           onClose={() => {\n//             setShowProjectEditModal(false);\n//             setEditingProject(null);\n//           }}\n//           onSave={() => {\n//             setShowProjectEditModal(false);\n//             setEditingProject(null);\n//             // Refresh projects list and subdomain data\n//             fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // UPDATED SubDomain Node Component with View Projects functionality\n// const SubDomainNode = ({ \n//   subDomain, \n//   level, \n//   isExpanded, \n//   onToggleExpanded, \n//   onEdit, \n//   onDelete, \n//   onAddChild,\n//   onAddProject,\n//   onViewProjects, // NEW\n//   expandedNodes \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n//   const hasChildren = subDomain.children && subDomain.children.length > 0;\n//   const isLeaf = !hasChildren;\n//   const hasProjects = subDomain.projectCount > 0;\n\n//   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n//     title: subDomain.title,\n//     level,\n//     hasChildren,\n//     isLeaf,\n//     isExpanded,\n//     projectCount: subDomain.projectCount,\n//     hasProjects,\n//     children: subDomain.children,\n//     childrenLength: subDomain.children?.length,\n//     subDomainFullObject: subDomain\n//   });\n\n//   // üîç DEBUGGING: Log button visibility conditions\n//   console.log('üîç BUTTON VISIBILITY DEBUG for', subDomain.title, ':', {\n//     isLeaf,\n//     hasProjects,\n//     projectCount: subDomain.projectCount,\n//     shouldShowViewButton: isLeaf && hasProjects,\n//     shouldShowAddButton: isLeaf\n//   });\n\n//   return (\n//     <div className={`subdomain-node level-${level}`}>\n//       <div className=\"node-content\">\n//         <div className=\"node-main\">\n//           {hasChildren ? (\n//             <button \n//               className=\"expand-button\"\n//               onClick={() => onToggleExpanded(subDomain.id)}\n//             >\n//               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n//             </button>\n//           ) : (\n//             <div className=\"expand-placeholder\" />\n//           )}\n\n//           <div className=\"node-icon\">\n//             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n//           </div>\n\n//           <div className=\"node-info\">\n//             <h4 className=\"node-title\">{subDomain.title}</h4>\n//             <p className=\"node-description\">{subDomain.description}</p>\n//             <div className=\"node-stats\">\n//               {hasChildren && (\n//                 <span className=\"stat-badge\">\n//                   {subDomain.children.length} sub-domains\n//                 </span>\n//               )}\n//               {hasProjects && (\n//                 <span className=\"stat-badge projects\">\n//                   {subDomain.projectCount} projects\n//                 </span>\n//               )}\n//               {isLeaf && !hasProjects && (\n//                 <span className=\"stat-badge leaf\">\n//                   Can have projects\n//                 </span>\n//               )}\n//               {/* üîç DEBUGGING: Always show project count for debugging */}\n//               <span className=\"stat-badge debug\" style={{backgroundColor: '#ff9999', color: '#000'}}>\n//                 DEBUG: Count={subDomain.projectCount || 0}\n//               </span>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"node-actions\">\n//           {/* üîç DEBUGGING: Always show this section with debug info */}\n//           <div style={{fontSize: '10px', color: '#666', marginBottom: '5px'}}>\n//             DEBUG: isLeaf={isLeaf.toString()}, hasProjects={hasProjects.toString()}, count={subDomain.projectCount}\n//           </div>\n\n//           {/* NEW: View Projects button for leaf nodes - ALWAYS SHOW IF LEAF FOR DEBUGGING */}\n//           {isLeaf && (\n//             <button \n//               className=\"action-button view\" \n//               onClick={() => {\n//                 console.log('üéØ VIEW BUTTON CLICKED for:', subDomain.title);\n//                 onViewProjects(subDomain);\n//               }}\n//               title={`View projects in \"${subDomain.title}\" (Count: ${subDomain.projectCount || 0})`}\n//               style={{backgroundColor: hasProjects ? '#10b981' : '#6b7280'}}\n//             >\n//               <FiList />\n//               <span style={{fontSize: '10px', marginLeft: '2px'}}>\n//                 {subDomain.projectCount || 0}\n//               </span>\n//             </button>\n//           )}\n\n//           {isLeaf && (\n//             <button \n//               className=\"action-button project\" \n//               onClick={() => {\n//                 console.log('üéØ ADD PROJECT BUTTON CLICKED for:', subDomain.title);\n//                 onAddProject(subDomain);\n//               }}\n//               title={`Add project to \"${subDomain.title}\"`}\n//             >\n//               <FiFileText />\n//             </button>\n//           )}\n\n//           <button \n//             className=\"action-button add\" \n//             onClick={() => onAddChild(subDomain)}\n//             title={`Add child subdomain under \"${subDomain.title}\"`}\n//           >\n//             <FiPlus />\n//           </button>\n\n//           <div className=\"action-menu\">\n//             <button \n//               onClick={() => setShowMenu(!showMenu)}\n//               title=\"More actions\"\n//             >\n//               <FiMoreVertical />\n//             </button>\n//             {showMenu && (\n//               <div className=\"dropdown-menu\">\n//                 {/* üîç DEBUGGING: Always show view projects option for leaf nodes */}\n//                 {isLeaf && (\n//                   <button \n//                     onClick={() => {\n//                       console.log('üéØ DROPDOWN VIEW PROJECTS CLICKED for:', subDomain.title);\n//                       onViewProjects(subDomain);\n//                       setShowMenu(false);\n//                     }}\n//                     className=\"primary-option\"\n//                     style={{backgroundColor: hasProjects ? '#dff0d8' : '#f8f9fa'}}\n//                   >\n//                     <FiList /> View Projects ({subDomain.projectCount || 0})\n//                   </button>\n//                 )}\n//                 {isLeaf && (\n//                   <button \n//                     onClick={() => {\n//                       onAddProject(subDomain);\n//                       setShowMenu(false);\n//                     }}\n//                     className=\"primary-option\"\n//                   >\n//                     <FiFileText /> Add Project\n//                   </button>\n//                 )}\n//                 <button onClick={() => {\n//                   onEdit(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiEdit /> Edit SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onAddChild(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiPlus /> Add Child SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onDelete(subDomain);\n//                   setShowMenu(false);\n//                 }} className=\"danger\">\n//                   <FiTrash2 /> Delete SubDomain\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Children */}\n//       {hasChildren && isExpanded && (\n//         <div className=\"node-children\">\n//           {subDomain.children.map((child) => (\n//             <SubDomainNode\n//               key={child.id}\n//               subDomain={child}\n//               level={level + 1}\n//               isExpanded={expandedNodes.has(child.id)}\n//               onToggleExpanded={onToggleExpanded}\n//               onEdit={onEdit}\n//               onDelete={onDelete}\n//               onAddChild={onAddChild}\n//               onAddProject={onAddProject}\n//               onViewProjects={onViewProjects} // NEW\n//               expandedNodes={expandedNodes}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Modal Component (unchanged)\n// const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: subDomain?.title || '',\n//     description: subDomain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       const requestData = {\n//         title: formData.title.trim(),\n//         description: formData.description.trim(),\n//         domainId: domain.id,\n//         parentId: parent?.id || null\n//       };\n\n//       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n//       if (subDomain) {\n//         const response = await authService.updateSubDomain(subDomain.id, requestData);\n//         toast.success('Sub-domain updated successfully');\n//       } else {\n//         const response = await authService.createSubDomain(requestData);\n//         toast.success('Sub-domain created successfully');\n//       }\n\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n//       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n//       toast.error(errorMessage);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const getModalTitle = () => {\n//     if (subDomain) {\n//       return `Edit SubDomain: ${subDomain.title}`;\n//     }\n//     if (parent) {\n//       return `Add SubDomain under: ${parent.title}`;\n//     }\n//     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{getModalTitle()}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>SubDomain Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"e.g., Machine Learning, Deep Learning\"\n//               required\n//               minLength={3}\n//               maxLength={100}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//               placeholder=\"Describe what this sub-domain covers...\"\n//               maxLength={500}\n//             />\n//           </div>\n\n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             {parent && (\n//               <>\n//                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n//               </>\n//             )}\n//             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title.trim()}\n//             >\n//               {loading ? 'Saving...' : 'Save SubDomain'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Project Creation Modal Component (unchanged)\n// const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: '',\n//     abstract: '',\n//     specifications: '',\n//     learningOutcomes: '',\n//     subDomainId: subDomain?.id || '',\n//     isFeatured: false\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('üìù PROJECT MODAL - Props:', {\n//     subDomain: subDomain?.title,\n//     domain: domain?.title,\n//     formData\n//   });\n\n//   // Slug generation function\n//   const generateSlug = (title) => {\n//     return title\n//       .toLowerCase()\n//       .trim()\n//       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n//       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n//       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       // Don't send slug - let backend auto-generate it\n//       const projectData = {\n//         title: formData.title.trim(),\n//         abstract: formData.abstract.trim(),\n//         specifications: formData.specifications.trim(),\n//         learningOutcomes: formData.learningOutcomes.trim(),\n//         subDomainId: formData.subDomainId,\n//         isFeatured: formData.isFeatured\n//       };\n\n//       console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n//       console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n\n//       const response = await authService.createProject(projectData);\n//       console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå PROJECT SAVE - Error:', error);\n//       console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n\n//       // Show more specific error message if available\n//       const errorMessage = error.response?.data?.message || 'Failed to create project';\n//       toast.error(errorMessage);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Add Project to: {subDomain?.title}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Project Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"Enter project title...\"\n//               required\n//               minLength={3}\n//               maxLength={200}\n//             />\n//             {/* Show slug preview (for user reference only) */}\n//             {formData.title && (\n//               <div className=\"slug-preview\">\n//                 <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n//               </div>\n//             )}\n//           </div>\n\n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n//             <span className=\"info-note\">\n//               <FiTarget /> This is a leaf subdomain - perfect for projects!\n//             </span>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Abstract *</label>\n//             <textarea\n//               value={formData.abstract}\n//               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n//               rows={4}\n//               placeholder=\"Brief description of the project...\"\n//               required\n//               minLength={10}\n//               maxLength={1000}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Specifications *</label>\n//             <textarea\n//               value={formData.specifications}\n//               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n//               rows={6}\n//               placeholder=\"Technical specifications and requirements...\"\n//               required\n//               minLength={10}\n//               maxLength={5000}\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Learning Outcomes *</label>\n//             <textarea\n//               value={formData.learningOutcomes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n//               rows={4}\n//               placeholder=\"What will students learn from this project...\"\n//               required\n//               minLength={10}\n//               maxLength={2000}\n//             />\n//           </div>\n\n//           <div className=\"form-group checkbox\">\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={formData.isFeatured}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n//               />\n//               <FiTarget />\n//               Featured Project\n//             </label>\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n//             >\n//               {loading ? 'Creating...' : 'Create Project'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // NEW: Projects List Modal Component\n// const ProjectsListModal = ({ \n//   subDomain, \n//   projects, \n//   loading, \n//   onClose, \n//   onEdit, \n//   onDelete, \n//   onArchive, \n//   onToggleFeatured,\n//   onAddProject \n// }) => {\n//   console.log('üìã PROJECTS LIST MODAL - Rendering with props:', {\n//     subDomain: subDomain?.title,\n//     subDomainId: subDomain?.id,\n//     projectsCount: projects.length,\n//     loading,\n//     projects: projects,\n//     firstProject: projects[0]\n//   });\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Projects in: {subDomain?.title}</h2>\n//           <button onClick={onClose}>\n//             <FiX />\n//           </button>\n//         </div>\n\n//         <div className=\"projects-list-content\">\n//           <div className=\"projects-list-header\">\n//             <div className=\"list-info\">\n//               <p><strong>SubDomain:</strong> {subDomain?.title}</p>\n//               <p><strong>Total Projects:</strong> {projects.length}</p>\n//               {/* üîç DEBUGGING: Show debug info */}\n//               <div style={{fontSize: '12px', color: '#666', marginTop: '10px', padding: '10px', backgroundColor: '#f0f0f0'}}>\n//                 <strong>DEBUG INFO:</strong><br/>\n//                 SubDomain ID: {subDomain?.id}<br/>\n//                 Projects Array Length: {projects.length}<br/>\n//                 Loading: {loading.toString()}<br/>\n//                 Projects Data: {JSON.stringify(projects, null, 2)}\n//               </div>\n//             </div>\n//             <button \n//               className=\"primary-button\" \n//               onClick={() => {\n//                 console.log('üéØ ADD NEW PROJECT CLICKED from modal');\n//                 onAddProject();\n//               }}\n//             >\n//               <FiPlus />\n//               Add New Project\n//             </button>\n//           </div>\n\n//           {loading ? (\n//             <div className=\"loading-container\">\n//               <div className=\"loading-spinner\"></div>\n//               <p>Loading projects...</p>\n//             </div>\n//           ) : projects.length > 0 ? (\n//             <div className=\"projects-list\">\n//               {projects.map((project, index) => {\n//                 console.log(`üìÑ RENDERING PROJECT ${index + 1}:`, project);\n//                 return (\n//                   <ProjectListItem\n//                     key={project.id}\n//                     project={project}\n//                     onEdit={onEdit}\n//                     onDelete={onDelete}\n//                     onArchive={onArchive}\n//                     onToggleFeatured={onToggleFeatured}\n//                   />\n//                 );\n//               })}\n//             </div>\n//           ) : (\n//             <div className=\"empty-projects-state\">\n//               <FiFileText size={48} />\n//               <h3>No Projects Found</h3>\n//               <p>This subdomain doesn't have any projects yet.</p>\n//               <div style={{fontSize: '12px', color: '#666', marginTop: '10px'}}>\n//                 <strong>DEBUG:</strong> API returned {projects.length} projects for subdomain {subDomain?.id}\n//               </div>\n//               <button \n//                 className=\"primary-button\" \n//                 onClick={() => {\n//                   console.log('üéØ ADD FIRST PROJECT CLICKED from empty state');\n//                   onAddProject();\n//                 }}\n//               >\n//                 <FiPlus />\n//                 Add First Project\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // NEW: Project List Item Component\n// const ProjectListItem = ({ \n//   project, \n//   onEdit, \n//   onDelete, \n//   onArchive, \n//   onToggleFeatured \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   console.log('üìÑ PROJECT LIST ITEM - Rendering project:', {\n//     id: project.id,\n//     title: project.title,\n//     abstract: project.abstract?.substring(0, 50),\n//     isActive: project.isActive,\n//     isFeatured: project.isFeatured,\n//     viewCount: project.viewCount,\n//     createdAt: project.createdAt,\n//     updatedAt: project.updatedAt,\n//     fullProject: project\n//   });\n\n//   return (\n//     <div className={`project-list-item ${!project.isActive ? 'archived' : ''}`}>\n//       <div className=\"project-info\">\n//         <div className=\"project-title-section\">\n//           <h4 className=\"project-title\">{project.title}</h4>\n//           <div className=\"project-badges\">\n//             {project.isFeatured && (\n//               <span className=\"badge featured\">\n//                 <FiStar /> Featured\n//               </span>\n//             )}\n//             {!project.isActive && (\n//               <span className=\"badge archived\">Archived</span>\n//             )}\n//             {/* üîç DEBUGGING: Always show project ID */}\n//             <span className=\"badge debug\" style={{backgroundColor: '#e3f2fd', color: '#1976d2'}}>\n//               ID: {project.id}\n//             </span>\n//           </div>\n//         </div>\n//         <p className=\"project-abstract\">\n//           {project.abstract?.substring(0, 150) || 'No abstract available'}...\n//         </p>\n//         <div className=\"project-stats\">\n//           <span className=\"stat\">\n//             <FiEye /> {project.viewCount || 0} views\n//           </span>\n//           <span className=\"stat\">\n//             Created: {project.createdAt ? new Date(project.createdAt).toLocaleDateString() : 'Unknown'}\n//           </span>\n//           <span className=\"stat\">\n//             Updated: {project.updatedAt ? new Date(project.updatedAt).toLocaleDateString() : 'Unknown'}\n//           </span>\n//         </div>\n//       </div>\n\n//       <div className=\"project-actions\">\n//         {/* üîç DEBUGGING: Always show edit button with debug styling */}\n//         <button \n//           className=\"action-button primary\" \n//           onClick={() => {\n//             console.log('üéØ EDIT BUTTON CLICKED for project:', project.title);\n//             onEdit(project);\n//           }}\n//           title=\"Edit project\"\n//           style={{backgroundColor: '#10b981', color: 'white', padding: '8px', margin: '2px'}}\n//         >\n//           <FiEdit />\n//           <span style={{fontSize: '10px', marginLeft: '2px'}}>EDIT</span>\n//         </button>\n\n//         {/* üîç DEBUGGING: Always show delete button with debug styling */}\n//         <button \n//           className=\"action-button danger\" \n//           onClick={() => {\n//             console.log('üéØ DELETE BUTTON CLICKED for project:', project.title);\n//             onDelete(project);\n//           }}\n//           title=\"Delete project\"\n//           style={{backgroundColor: '#ef4444', color: 'white', padding: '8px', margin: '2px'}}\n//         >\n//           <FiTrash2 />\n//           <span style={{fontSize: '10px', marginLeft: '2px'}}>DEL</span>\n//         </button>\n\n//         <div className=\"action-menu\">\n//           <button \n//             onClick={() => {\n//               console.log('üéØ MORE MENU CLICKED for project:', project.title);\n//               setShowMenu(!showMenu);\n//             }}\n//             title=\"More actions\"\n//             style={{backgroundColor: '#6b7280', color: 'white', padding: '8px', margin: '2px'}}\n//           >\n//             <FiMoreVertical />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\" style={{zIndex: 1000, backgroundColor: 'white', border: '1px solid #ccc', borderRadius: '4px', padding: '5px'}}>\n//               <button onClick={() => {\n//                 console.log('üéØ DROPDOWN EDIT CLICKED for project:', project.title);\n//                 onEdit(project);\n//                 setShowMenu(false);\n//               }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n//                 <FiEdit /> Edit Project\n//               </button>\n//               <button onClick={() => {\n//                 console.log('üéØ DROPDOWN TOGGLE FEATURED CLICKED for project:', project.title);\n//                 onToggleFeatured(project);\n//                 setShowMenu(false);\n//               }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n//                 <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n//               </button>\n//               <button onClick={() => {\n//                 console.log('üéØ DROPDOWN ARCHIVE CLICKED for project:', project.title);\n//                 onArchive(project);\n//                 setShowMenu(false);\n//               }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n//                 <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n//               </button>\n//               <button onClick={() => {\n//                 console.log('üéØ DROPDOWN DELETE CLICKED for project:', project.title);\n//                 onDelete(project);\n//                 setShowMenu(false);\n//               }} className=\"danger\" style={{display: 'block', width: '100%', padding: '5px', margin: '2px', backgroundColor: '#ef4444', color: 'white'}}>\n//                 <FiTrash2 /> Delete Project\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // NEW: Project Edit Modal Component\n// const ProjectEditModal = ({ project, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: project?.title || '',\n//     abstract: project?.abstract || '',\n//     specifications: project?.specifications || '',\n//     learningOutcomes: project?.learningOutcomes || '',\n//     isFeatured: project?.isFeatured || false\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('üìù PROJECT EDIT MODAL - Project:', project.title);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       console.log('üíæ PROJECT UPDATE - Starting with data:', formData);\n//       await authService.updateProject(project.id, formData);\n//       console.log('‚úÖ PROJECT UPDATE - Success');\n//       toast.success('Project updated successfully');\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå PROJECT UPDATE - Error:', error);\n//       toast.error('Failed to update project');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Edit Project: {project.title}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Project Title</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {project.subDomain?.domain?.title || 'Unknown'}<br />\n//             <strong>SubDomain:</strong> {project.subDomain?.title || 'Unknown'}<br />\n//             <span className=\"info-note\">\n//               üí° To move this project to a different domain/subdomain, contact your administrator\n//             </span>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Abstract</label>\n//             <textarea\n//               value={formData.abstract}\n//               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n//               rows={4}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Specifications</label>\n//             <textarea\n//               value={formData.specifications}\n//               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n//               rows={6}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Learning Outcomes</label>\n//             <textarea\n//               value={formData.learningOutcomes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n//               rows={4}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group checkbox\">\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={formData.isFeatured}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n//               />\n//               Featured Project\n//             </label>\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Updating...' : 'Update Project'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SubDomainManagement;\n\n// // // src/components/domains/SubDomainManagement.js - ENHANCED WITH PROJECT VIEW/EDIT/DELETE\n// // import React, { useState, useEffect } from 'react';\n// // import { useParams, useNavigate } from 'react-router-dom';\n// // import { authService } from '../../services/authService';\n// // import { toast } from 'react-toastify';\n// // import {\n// //   FiPlus,\n// //   FiEdit,\n// //   FiTrash2,\n// //   FiChevronDown,\n// //   FiChevronRight,\n// //   FiFolder,\n// //   FiFolderPlus,\n// //   FiFileText,\n// //   FiArrowLeft,\n// //   FiMoreVertical,\n// //   FiMove,\n// //   FiTarget,\n// //   FiEye,\n// //   FiStar,\n// //   FiArchive,\n// //   FiList,\n// //   FiX\n// // } from 'react-icons/fi';\n\n// // const SubDomainManagement = () => {\n// //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// //   const { domainId } = useParams();\n// //   const navigate = useNavigate();\n\n// //   const [domain, setDomain] = useState(null);\n// //   const [subDomains, setSubDomains] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [showAddModal, setShowAddModal] = useState(false);\n// //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// //   const [selectedParent, setSelectedParent] = useState(null);\n// //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// //   // Project creation state\n// //   const [showProjectModal, setShowProjectModal] = useState(false);\n// //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// //   // NEW: Project management states\n// //   const [showProjectsModal, setShowProjectsModal] = useState(false);\n// //   const [selectedSubDomainForProjectsView, setSelectedSubDomainForProjectsView] = useState(null);\n// //   const [projectsInSubDomain, setProjectsInSubDomain] = useState([]);\n// //   const [editingProject, setEditingProject] = useState(null);\n// //   const [showProjectEditModal, setShowProjectEditModal] = useState(false);\n// //   const [projectsLoading, setProjectsLoading] = useState(false);\n\n// //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// //     domainId,\n// //     domain: domain?.title,\n// //     subDomainsCount: subDomains.length,\n// //     loading,\n// //     selectedParent: selectedParent?.title,\n// //     expandedCount: expandedNodes.size,\n// //     showProjectModal,\n// //     selectedSubDomainForProject: selectedSubDomainForProject?.title,\n// //     // NEW states\n// //     showProjectsModal,\n// //     selectedSubDomainForProjectsView: selectedSubDomainForProjectsView?.title,\n// //     projectsInSubDomainCount: projectsInSubDomain.length,\n// //     editingProject: editingProject?.title\n// //   });\n\n// //   useEffect(() => {\n// //     if (domainId) {\n// //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// //       fetchDomainAndSubDomains();\n// //     }\n// //   }, [domainId]);\n\n// //   const fetchDomainAndSubDomains = async () => {\n// //     try {\n// //       setLoading(true);\n\n// //       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n// //       // Get domain details\n// //       const domainsResponse = await authService.getDomains();\n// //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// //       let domainData = null;\n// //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// //       if (domains.length > 0) {\n// //         domainData = domains.find(d => d.id == domainId);\n// //       }\n\n// //       if (!domainData) {\n// //         domainData = {\n// //           id: domainId,\n// //           title: `Domain ${domainId}`,\n// //           description: 'Domain not found in list',\n// //           projectCount: 0\n// //         };\n// //       }\n\n// //       setDomain(domainData);\n\n// //       // Get subdomains\n// //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// //       setSubDomains(subDomainsData);\n\n// //       // Auto-expand first level\n// //       if (subDomainsData.length > 0) {\n// //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// //         setExpandedNodes(new Set(firstLevelIds));\n// //       }\n\n// //       // Try hierarchy API as fallback\n// //       try {\n// //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// //           setSubDomains(hierarchyData.subDomains);\n// //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// //           }\n// //         }\n// //       } catch (hierarchyError) {\n// //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// //       }\n\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// //       toast.error('Failed to fetch domain information');\n\n// //       setDomain({\n// //         id: domainId,\n// //         title: `Domain ${domainId}`,\n// //         description: 'Error loading domain details',\n// //         projectCount: 0\n// //       });\n// //       setSubDomains([]);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const handleAddSubDomain = (parent = null) => {\n// //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// //     setSelectedParent(parent);\n// //     setEditingSubDomain(null);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleEditSubDomain = (subDomain) => {\n// //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// //     setSelectedParent(null);\n// //     setEditingSubDomain(subDomain);\n// //     setShowAddModal(true);\n// //   };\n\n// //   // Handle adding project to subdomain\n// //   const handleAddProjectToSubDomain = (subDomain) => {\n// //     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n// //     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n\n// //     if (subDomain.children && subDomain.children.length > 0) {\n// //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// //       return;\n// //     }\n\n// //     setSelectedSubDomainForProject(subDomain);\n// //     setShowProjectModal(true);\n// //   };\n\n// //   // NEW: Handle viewing projects in subdomain\n// //   const handleViewProjectsInSubDomain = async (subDomain) => {\n// //     console.log('üëÅÔ∏è VIEW PROJECTS - Starting for subdomain:', subDomain.title);\n\n// //     if (subDomain.children && subDomain.children.length > 0) {\n// //       toast.error('Only leaf sub-domains have projects to view');\n// //       return;\n// //     }\n\n// //     if (!subDomain.projectCount || subDomain.projectCount === 0) {\n// //       toast.info('This sub-domain has no projects yet');\n// //       return;\n// //     }\n\n// //     setSelectedSubDomainForProjectsView(subDomain);\n// //     await fetchProjectsInSubDomain(subDomain.id);\n// //     setShowProjectsModal(true);\n// //   };\n\n// //   // NEW: Fetch projects for a specific subdomain\n// //   const fetchProjectsInSubDomain = async (subDomainId) => {\n// //     try {\n// //       setProjectsLoading(true);\n// //       console.log('üì° FETCH PROJECTS - For subdomain:', subDomainId);\n\n// //       const response = await authService.getProjects({ \n// //         subDomainId: subDomainId,\n// //         limit: 100 // Get all projects for this subdomain\n// //       });\n\n// //       console.log('‚úÖ FETCH PROJECTS - Response:', response.data);\n// //       const projects = response.data?.projects || [];\n// //       setProjectsInSubDomain(projects);\n\n// //     } catch (error) {\n// //       console.error('‚ùå FETCH PROJECTS - Error:', error);\n// //       toast.error('Failed to fetch projects');\n// //       setProjectsInSubDomain([]);\n// //     } finally {\n// //       setProjectsLoading(false);\n// //     }\n// //   };\n\n// //   // NEW: Handle editing a project\n// //   const handleEditProject = (project) => {\n// //     console.log('‚úèÔ∏è EDIT PROJECT - Starting for:', project.title);\n// //     setEditingProject(project);\n// //     setShowProjectEditModal(true);\n// //   };\n\n// //   // NEW: Handle deleting a project\n// //   const handleDeleteProject = async (project) => {\n// //     console.log('üóëÔ∏è DELETE PROJECT - Requesting deletion:', project.title);\n\n// //     if (!window.confirm(`Are you sure you want to delete the project \"${project.title}\"?`)) {\n// //       console.log('‚ùå DELETE PROJECT - Cancelled by user');\n// //       return;\n// //     }\n\n// //     try {\n// //       console.log('üì° DELETE PROJECT - API call for:', project.id);\n// //       await authService.deleteProject(project.id);\n// //       console.log('‚úÖ DELETE PROJECT - Success');\n// //       toast.success('Project deleted successfully');\n\n// //       // Refresh projects list and subdomain data\n// //       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n// //       await fetchDomainAndSubDomains(); // Refresh to update project counts\n\n// //     } catch (error) {\n// //       console.error('‚ùå DELETE PROJECT - Error:', error);\n// //       toast.error('Failed to delete project');\n// //     }\n// //   };\n\n// //   // NEW: Handle archiving a project\n// //   const handleArchiveProject = async (project) => {\n// //     const isArchiving = project.isActive;\n// //     const action = isArchiving ? 'archive' : 'restore';\n\n// //     console.log('üìÅ ARCHIVE PROJECT - Action:', action, 'for:', project.title);\n\n// //     if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       await authService.archiveProject(project.id, {\n// //         archive: isArchiving,\n// //         reason: `${action} via subdomain management`\n// //       });\n// //       console.log('‚úÖ ARCHIVE PROJECT - Success');\n// //       toast.success(`Project ${action}d successfully`);\n\n// //       // Refresh projects list\n// //       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n\n// //     } catch (error) {\n// //       console.error('‚ùå ARCHIVE PROJECT - Error:', error);\n// //       toast.error(`Failed to ${action} project`);\n// //     }\n// //   };\n\n// //   // NEW: Handle toggling featured status\n// //   const handleToggleProjectFeatured = async (project) => {\n// //     console.log('‚≠ê TOGGLE FEATURED - For project:', project.title);\n\n// //     try {\n// //       await authService.updateProject(project.id, {\n// //         isFeatured: !project.isFeatured\n// //       });\n// //       console.log('‚úÖ TOGGLE FEATURED - Success');\n// //       toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n\n// //       // Refresh projects list\n// //       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n\n// //     } catch (error) {\n// //       console.error('‚ùå TOGGLE FEATURED - Error:', error);\n// //       toast.error('Failed to update featured status');\n// //     }\n// //   };\n\n// //   const handleDeleteSubDomain = async (subDomain) => {\n// //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //     const hasProjects = subDomain.projectCount > 0;\n\n// //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// //     if (hasChildren) {\n// //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// //     }\n// //     if (hasProjects) {\n// //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// //     }\n\n// //     if (!window.confirm(confirmMessage)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// //       const response = await authService.deleteSubDomain(subDomain.id);\n// //       toast.success('Sub-domain deleted successfully');\n// //       fetchDomainAndSubDomains();\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// //       toast.error('Failed to delete sub-domain');\n// //     }\n// //   };\n\n// //   const toggleExpanded = (nodeId) => {\n// //     const newExpanded = new Set(expandedNodes);\n// //     if (newExpanded.has(nodeId)) {\n// //       newExpanded.delete(nodeId);\n// //     } else {\n// //       newExpanded.add(nodeId);\n// //     }\n// //     setExpandedNodes(newExpanded);\n// //   };\n\n// //   if (loading) {\n// //     return (\n// //       <div className=\"loading-container\">\n// //         <div className=\"loading-spinner\"></div>\n// //         <p>Loading sub-domains...</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"subdomain-management\">\n// //       {/* Header with Breadcrumb */}\n// //       <div className=\"page-header\">\n// //         <div className=\"header-content\">\n// //           <div className=\"breadcrumb\">\n// //             <button \n// //               className=\"breadcrumb-link\"\n// //               onClick={() => navigate('/domains')}\n// //             >\n// //               <FiArrowLeft />\n// //               Domains\n// //             </button>\n// //             <span className=\"breadcrumb-separator\">/</span>\n// //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// //           </div>\n// //           <h1>SubDomain Management</h1>\n// //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// //         </div>\n// //         <div className=\"header-actions\">\n// //           <button \n// //             className=\"primary-button\" \n// //             onClick={() => handleAddSubDomain()}\n// //           >\n// //             <FiPlus />\n// //             Add Root SubDomain\n// //           </button>\n// //         </div>\n// //       </div>\n\n// //       {/* Quick Guide */}\n// //       <div className=\"quick-guide\">\n// //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// //         <div className=\"guide-steps\">\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">1</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">2</span>\n// //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">3</span>\n// //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">4</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> or <strong>\"View Projects\"</strong> on leaf subdomains</span>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Domain Info Card */}\n// //       {domain && (\n// //         <div className=\"domain-info-card\">\n// //           <div className=\"domain-icon\">\n// //             <FiFolder />\n// //           </div>\n// //           <div className=\"domain-details\">\n// //             <h3>{domain.title}</h3>\n// //             <p>{domain.description}</p>\n// //             <div className=\"domain-stats\">\n// //               <span className=\"stat-item\">\n// //                 <strong>{subDomains.length}</strong> root sub-domains\n// //               </span>\n// //               <span className=\"stat-item\">\n// //                 <strong>{domain.projectCount || 0}</strong> total projects\n// //               </span>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       )}\n\n// //       {/* SubDomain Tree */}\n// //       <div className=\"subdomain-tree-container\">\n// //         <div className=\"tree-header\">\n// //           <h2>SubDomain Hierarchy</h2>\n// //           <div className=\"tree-legend\">\n// //             <span className=\"legend-item\">\n// //               <FiFolder className=\"folder-icon\" />\n// //               Has children\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiTarget className=\"leaf-icon\" />\n// //               Leaf (can have projects)\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiFileText className=\"project-icon\" />\n// //               Add Project\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiList className=\"view-icon\" />\n// //               View Projects\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {subDomains.length > 0 ? (\n// //           <div className=\"subdomain-tree\">\n// //             {subDomains.map((subDomain) => (\n// //               <SubDomainNode\n// //                 key={subDomain.id}\n// //                 subDomain={subDomain}\n// //                 level={0}\n// //                 isExpanded={expandedNodes.has(subDomain.id)}\n// //                 onToggleExpanded={toggleExpanded}\n// //                 onEdit={handleEditSubDomain}\n// //                 onDelete={handleDeleteSubDomain}\n// //                 onAddChild={handleAddSubDomain}\n// //                 onAddProject={handleAddProjectToSubDomain}\n// //                 onViewProjects={handleViewProjectsInSubDomain} // NEW\n// //                 expandedNodes={expandedNodes}\n// //               />\n// //             ))}\n// //           </div>\n// //         ) : (\n// //           <div className=\"empty-tree-state\">\n// //             <FiFolderPlus size={64} />\n// //             <h3>No SubDomains Yet</h3>\n// //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// //             <div className=\"empty-state-examples\">\n// //               <h4>Example Structure:</h4>\n// //               <div className=\"example-tree\">\n// //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// //                 <div className=\"example-item\">üéØ Data Science</div>\n// //               </div>\n// //             </div>\n// //             <div className=\"empty-state-actions\">\n// //               <button \n// //                 className=\"primary-button large\" \n// //                 onClick={() => handleAddSubDomain()}\n// //               >\n// //                 <FiPlus />\n// //                 Create Your First SubDomain\n// //               </button>\n// //               <p className=\"help-text\">\n// //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// //               </p>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Add/Edit SubDomain Modal */}\n// //       {showAddModal && (\n// //         <SubDomainModal\n// //           subDomain={editingSubDomain}\n// //           parent={selectedParent}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //             fetchDomainAndSubDomains();\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* Project Creation Modal */}\n// //       {showProjectModal && (\n// //         <ProjectModal\n// //           subDomain={selectedSubDomainForProject}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowProjectModal(false);\n// //             setSelectedSubDomainForProject(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowProjectModal(false);\n// //             setSelectedSubDomainForProject(null);\n// //             toast.success('Project created successfully!');\n// //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* NEW: Projects List Modal */}\n// //       {showProjectsModal && (\n// //         <ProjectsListModal\n// //           subDomain={selectedSubDomainForProjectsView}\n// //           projects={projectsInSubDomain}\n// //           loading={projectsLoading}\n// //           onClose={() => {\n// //             setShowProjectsModal(false);\n// //             setSelectedSubDomainForProjectsView(null);\n// //             setProjectsInSubDomain([]);\n// //           }}\n// //           onEdit={handleEditProject}\n// //           onDelete={handleDeleteProject}\n// //           onArchive={handleArchiveProject}\n// //           onToggleFeatured={handleToggleProjectFeatured}\n// //           onAddProject={() => {\n// //             setShowProjectsModal(false);\n// //             setSelectedSubDomainForProject(selectedSubDomainForProjectsView);\n// //             setShowProjectModal(true);\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* NEW: Project Edit Modal */}\n// //       {showProjectEditModal && editingProject && (\n// //         <ProjectEditModal\n// //           project={editingProject}\n// //           onClose={() => {\n// //             setShowProjectEditModal(false);\n// //             setEditingProject(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowProjectEditModal(false);\n// //             setEditingProject(null);\n// //             // Refresh projects list and subdomain data\n// //             fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n// //             fetchDomainAndSubDomains();\n// //           }}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // UPDATED SubDomain Node Component with View Projects functionality\n// // const SubDomainNode = ({ \n// //   subDomain, \n// //   level, \n// //   isExpanded, \n// //   onToggleExpanded, \n// //   onEdit, \n// //   onDelete, \n// //   onAddChild,\n// //   onAddProject,\n// //   onViewProjects, // NEW\n// //   expandedNodes \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n// //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //   const isLeaf = !hasChildren;\n// //   const hasProjects = subDomain.projectCount > 0;\n\n// //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// //     title: subDomain.title,\n// //     level,\n// //     hasChildren,\n// //     isLeaf,\n// //     isExpanded,\n// //     projectCount: subDomain.projectCount,\n// //     hasProjects\n// //   });\n\n// //   return (\n// //     <div className={`subdomain-node level-${level}`}>\n// //       <div className=\"node-content\">\n// //         <div className=\"node-main\">\n// //           {hasChildren ? (\n// //             <button \n// //               className=\"expand-button\"\n// //               onClick={() => onToggleExpanded(subDomain.id)}\n// //             >\n// //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// //             </button>\n// //           ) : (\n// //             <div className=\"expand-placeholder\" />\n// //           )}\n\n// //           <div className=\"node-icon\">\n// //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// //           </div>\n\n// //           <div className=\"node-info\">\n// //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// //             <p className=\"node-description\">{subDomain.description}</p>\n// //             <div className=\"node-stats\">\n// //               {hasChildren && (\n// //                 <span className=\"stat-badge\">\n// //                   {subDomain.children.length} sub-domains\n// //                 </span>\n// //               )}\n// //               {hasProjects && (\n// //                 <span className=\"stat-badge projects\">\n// //                   {subDomain.projectCount} projects\n// //                 </span>\n// //               )}\n// //               {isLeaf && !hasProjects && (\n// //                 <span className=\"stat-badge leaf\">\n// //                   Can have projects\n// //                 </span>\n// //               )}\n// //             </div>\n// //           </div>\n// //         </div>\n\n// //         <div className=\"node-actions\">\n// //           {/* NEW: View Projects button for leaf nodes with projects */}\n// //           {isLeaf && hasProjects && (\n// //             <button \n// //               className=\"action-button view\" \n// //               onClick={() => onViewProjects(subDomain)}\n// //               title={`View ${subDomain.projectCount} project(s) in \"${subDomain.title}\"`}\n// //             >\n// //               <FiList />\n// //             </button>\n// //           )}\n\n// //           {isLeaf && (\n// //             <button \n// //               className=\"action-button project\" \n// //               onClick={() => onAddProject(subDomain)}\n// //               title={`Add project to \"${subDomain.title}\"`}\n// //             >\n// //               <FiFileText />\n// //             </button>\n// //           )}\n\n// //           <button \n// //             className=\"action-button add\" \n// //             onClick={() => onAddChild(subDomain)}\n// //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// //           >\n// //             <FiPlus />\n// //           </button>\n\n// //           <div className=\"action-menu\">\n// //             <button \n// //               onClick={() => setShowMenu(!showMenu)}\n// //               title=\"More actions\"\n// //             >\n// //               <FiMoreVertical />\n// //             </button>\n// //             {showMenu && (\n// //               <div className=\"dropdown-menu\">\n// //                 {/* NEW: View Projects option */}\n// //                 {isLeaf && hasProjects && (\n// //                   <button \n// //                     onClick={() => {\n// //                       onViewProjects(subDomain);\n// //                       setShowMenu(false);\n// //                     }}\n// //                     className=\"primary-option\"\n// //                   >\n// //                     <FiList /> View Projects ({subDomain.projectCount})\n// //                   </button>\n// //                 )}\n// //                 {isLeaf && (\n// //                   <button \n// //                     onClick={() => {\n// //                       onAddProject(subDomain);\n// //                       setShowMenu(false);\n// //                     }}\n// //                     className=\"primary-option\"\n// //                   >\n// //                     <FiFileText /> Add Project\n// //                   </button>\n// //                 )}\n// //                 <button onClick={() => {\n// //                   onEdit(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiEdit /> Edit SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onAddChild(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiPlus /> Add Child SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onDelete(subDomain);\n// //                   setShowMenu(false);\n// //                 }} className=\"danger\">\n// //                   <FiTrash2 /> Delete SubDomain\n// //                 </button>\n// //               </div>\n// //             )}\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Children */}\n// //       {hasChildren && isExpanded && (\n// //         <div className=\"node-children\">\n// //           {subDomain.children.map((child) => (\n// //             <SubDomainNode\n// //               key={child.id}\n// //               subDomain={child}\n// //               level={level + 1}\n// //               isExpanded={expandedNodes.has(child.id)}\n// //               onToggleExpanded={onToggleExpanded}\n// //               onEdit={onEdit}\n// //               onDelete={onDelete}\n// //               onAddChild={onAddChild}\n// //               onAddProject={onAddProject}\n// //               onViewProjects={onViewProjects} // NEW\n// //               expandedNodes={expandedNodes}\n// //             />\n// //           ))}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // SubDomain Modal Component (unchanged)\n// // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: subDomain?.title || '',\n// //     description: subDomain?.description || ''\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       const requestData = {\n// //         title: formData.title.trim(),\n// //         description: formData.description.trim(),\n// //         domainId: domain.id,\n// //         parentId: parent?.id || null\n// //       };\n\n// //       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n// //       if (subDomain) {\n// //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// //         toast.success('Sub-domain updated successfully');\n// //       } else {\n// //         const response = await authService.createSubDomain(requestData);\n// //         toast.success('Sub-domain created successfully');\n// //       }\n\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// //       toast.error(errorMessage);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const getModalTitle = () => {\n// //     if (subDomain) {\n// //       return `Edit SubDomain: ${subDomain.title}`;\n// //     }\n// //     if (parent) {\n// //       return `Add SubDomain under: ${parent.title}`;\n// //     }\n// //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal\">\n// //         <div className=\"modal-header\">\n// //           <h2>{getModalTitle()}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>SubDomain Title *</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// //               required\n// //               minLength={3}\n// //               maxLength={100}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Description (Optional)</label>\n// //             <textarea\n// //               value={formData.description}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// //               rows={3}\n// //               placeholder=\"Describe what this sub-domain covers...\"\n// //               maxLength={500}\n// //             />\n// //           </div>\n\n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             {parent && (\n// //               <>\n// //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// //               </>\n// //             )}\n// //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// //           </div>\n\n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button \n// //               type=\"submit\" \n// //               className=\"primary-button\" \n// //               disabled={loading || !formData.title.trim()}\n// //             >\n// //               {loading ? 'Saving...' : 'Save SubDomain'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // Project Creation Modal Component (unchanged)\n// // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: '',\n// //     abstract: '',\n// //     specifications: '',\n// //     learningOutcomes: '',\n// //     subDomainId: subDomain?.id || '',\n// //     isFeatured: false\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   console.log('üìù PROJECT MODAL - Props:', {\n// //     subDomain: subDomain?.title,\n// //     domain: domain?.title,\n// //     formData\n// //   });\n\n// //   // Slug generation function\n// //   const generateSlug = (title) => {\n// //     return title\n// //       .toLowerCase()\n// //       .trim()\n// //       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n// //       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n// //       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       // Don't send slug - let backend auto-generate it\n// //       const projectData = {\n// //         title: formData.title.trim(),\n// //         abstract: formData.abstract.trim(),\n// //         specifications: formData.specifications.trim(),\n// //         learningOutcomes: formData.learningOutcomes.trim(),\n// //         subDomainId: formData.subDomainId,\n// //         isFeatured: formData.isFeatured\n// //       };\n\n// //       console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n// //       console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n\n// //       const response = await authService.createProject(projectData);\n// //       console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå PROJECT SAVE - Error:', error);\n// //       console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n\n// //       // Show more specific error message if available\n// //       const errorMessage = error.response?.data?.message || 'Failed to create project';\n// //       toast.error(errorMessage);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>Add Project to: {subDomain?.title}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>Project Title *</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"Enter project title...\"\n// //               required\n// //               minLength={3}\n// //               maxLength={200}\n// //             />\n// //             {/* Show slug preview (for user reference only) */}\n// //             {formData.title && (\n// //               <div className=\"slug-preview\">\n// //                 <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n// //               </div>\n// //             )}\n// //           </div>\n\n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// //             <span className=\"info-note\">\n// //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// //             </span>\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Abstract *</label>\n// //             <textarea\n// //               value={formData.abstract}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// //               rows={4}\n// //               placeholder=\"Brief description of the project...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={1000}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Specifications *</label>\n// //             <textarea\n// //               value={formData.specifications}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// //               rows={6}\n// //               placeholder=\"Technical specifications and requirements...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={5000}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Learning Outcomes *</label>\n// //             <textarea\n// //               value={formData.learningOutcomes}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// //               rows={4}\n// //               placeholder=\"What will students learn from this project...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={2000}\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group checkbox\">\n// //             <label>\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={formData.isFeatured}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// //               />\n// //               <FiTarget />\n// //               Featured Project\n// //             </label>\n// //           </div>\n\n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button \n// //               type=\"submit\" \n// //               className=\"primary-button\" \n// //               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n// //             >\n// //               {loading ? 'Creating...' : 'Create Project'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // NEW: Projects List Modal Component\n// // const ProjectsListModal = ({ \n// //   subDomain, \n// //   projects, \n// //   loading, \n// //   onClose, \n// //   onEdit, \n// //   onDelete, \n// //   onArchive, \n// //   onToggleFeatured,\n// //   onAddProject \n// // }) => {\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>Projects in: {subDomain?.title}</h2>\n// //           <button onClick={onClose}>\n// //             <FiX />\n// //           </button>\n// //         </div>\n\n// //         <div className=\"projects-list-content\">\n// //           <div className=\"projects-list-header\">\n// //             <div className=\"list-info\">\n// //               <p><strong>SubDomain:</strong> {subDomain?.title}</p>\n// //               <p><strong>Total Projects:</strong> {projects.length}</p>\n// //             </div>\n// //             <button \n// //               className=\"primary-button\" \n// //               onClick={onAddProject}\n// //             >\n// //               <FiPlus />\n// //               Add New Project\n// //             </button>\n// //           </div>\n\n// //           {loading ? (\n// //             <div className=\"loading-container\">\n// //               <div className=\"loading-spinner\"></div>\n// //               <p>Loading projects...</p>\n// //             </div>\n// //           ) : projects.length > 0 ? (\n// //             <div className=\"projects-list\">\n// //               {projects.map((project) => (\n// //                 <ProjectListItem\n// //                   key={project.id}\n// //                   project={project}\n// //                   onEdit={onEdit}\n// //                   onDelete={onDelete}\n// //                   onArchive={onArchive}\n// //                   onToggleFeatured={onToggleFeatured}\n// //                 />\n// //               ))}\n// //             </div>\n// //           ) : (\n// //             <div className=\"empty-projects-state\">\n// //               <FiFileText size={48} />\n// //               <h3>No Projects Yet</h3>\n// //               <p>This subdomain doesn't have any projects yet.</p>\n// //               <button \n// //                 className=\"primary-button\" \n// //                 onClick={onAddProject}\n// //               >\n// //                 <FiPlus />\n// //                 Add First Project\n// //               </button>\n// //             </div>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // NEW: Project List Item Component\n// // const ProjectListItem = ({ \n// //   project, \n// //   onEdit, \n// //   onDelete, \n// //   onArchive, \n// //   onToggleFeatured \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n\n// //   return (\n// //     <div className={`project-list-item ${!project.isActive ? 'archived' : ''}`}>\n// //       <div className=\"project-info\">\n// //         <div className=\"project-title-section\">\n// //           <h4 className=\"project-title\">{project.title}</h4>\n// //           <div className=\"project-badges\">\n// //             {project.isFeatured && (\n// //               <span className=\"badge featured\">\n// //                 <FiStar /> Featured\n// //               </span>\n// //             )}\n// //             {!project.isActive && (\n// //               <span className=\"badge archived\">Archived</span>\n// //             )}\n// //           </div>\n// //         </div>\n// //         <p className=\"project-abstract\">\n// //           {project.abstract?.substring(0, 150)}...\n// //         </p>\n// //         <div className=\"project-stats\">\n// //           <span className=\"stat\">\n// //             <FiEye /> {project.viewCount || 0} views\n// //           </span>\n// //           <span className=\"stat\">\n// //             Created: {new Date(project.createdAt).toLocaleDateString()}\n// //           </span>\n// //           <span className=\"stat\">\n// //             Updated: {new Date(project.updatedAt).toLocaleDateString()}\n// //           </span>\n// //         </div>\n// //       </div>\n\n// //       <div className=\"project-actions\">\n// //         <button \n// //           className=\"action-button primary\" \n// //           onClick={() => onEdit(project)}\n// //           title=\"Edit project\"\n// //         >\n// //           <FiEdit />\n// //         </button>\n\n// //         <div className=\"action-menu\">\n// //           <button \n// //             onClick={() => setShowMenu(!showMenu)}\n// //             title=\"More actions\"\n// //           >\n// //             <FiMoreVertical />\n// //           </button>\n// //           {showMenu && (\n// //             <div className=\"dropdown-menu\">\n// //               <button onClick={() => {\n// //                 onEdit(project);\n// //                 setShowMenu(false);\n// //               }}>\n// //                 <FiEdit /> Edit Project\n// //               </button>\n// //               <button onClick={() => {\n// //                 onToggleFeatured(project);\n// //                 setShowMenu(false);\n// //               }}>\n// //                 <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n// //               </button>\n// //               <button onClick={() => {\n// //                 onArchive(project);\n// //                 setShowMenu(false);\n// //               }}>\n// //                 <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n// //               </button>\n// //               <button onClick={() => {\n// //                 onDelete(project);\n// //                 setShowMenu(false);\n// //               }} className=\"danger\">\n// //                 <FiTrash2 /> Delete Project\n// //               </button>\n// //             </div>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // NEW: Project Edit Modal Component\n// // const ProjectEditModal = ({ project, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: project?.title || '',\n// //     abstract: project?.abstract || '',\n// //     specifications: project?.specifications || '',\n// //     learningOutcomes: project?.learningOutcomes || '',\n// //     isFeatured: project?.isFeatured || false\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   console.log('üìù PROJECT EDIT MODAL - Project:', project.title);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       console.log('üíæ PROJECT UPDATE - Starting with data:', formData);\n// //       await authService.updateProject(project.id, formData);\n// //       console.log('‚úÖ PROJECT UPDATE - Success');\n// //       toast.success('Project updated successfully');\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå PROJECT UPDATE - Error:', error);\n// //       toast.error('Failed to update project');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>Edit Project: {project.title}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>Project Title</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {project.subDomain?.domain?.title || 'Unknown'}<br />\n// //             <strong>SubDomain:</strong> {project.subDomain?.title || 'Unknown'}<br />\n// //             <span className=\"info-note\">\n// //               üí° To move this project to a different domain/subdomain, contact your administrator\n// //             </span>\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Abstract</label>\n// //             <textarea\n// //               value={formData.abstract}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// //               rows={4}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Specifications</label>\n// //             <textarea\n// //               value={formData.specifications}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// //               rows={6}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Learning Outcomes</label>\n// //             <textarea\n// //               value={formData.learningOutcomes}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// //               rows={4}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group checkbox\">\n// //             <label>\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={formData.isFeatured}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// //               />\n// //               Featured Project\n// //             </label>\n// //           </div>\n\n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// //               {loading ? 'Updating...' : 'Update Project'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SubDomainManagement;\n\n// // // // src/components/domains/SubDomainManagement.js - UPDATED WITH SLUG GENERATION\n// // // import React, { useState, useEffect } from 'react';\n// // // import { useParams, useNavigate } from 'react-router-dom';\n// // // import { authService } from '../../services/authService';\n// // // import { toast } from 'react-toastify';\n// // // import {\n// // //   FiPlus,\n// // //   FiEdit,\n// // //   FiTrash2,\n// // //   FiChevronDown,\n// // //   FiChevronRight,\n// // //   FiFolder,\n// // //   FiFolderPlus,\n// // //   FiFileText,\n// // //   FiArrowLeft,\n// // //   FiMoreVertical,\n// // //   FiMove,\n// // //   FiTarget\n// // // } from 'react-icons/fi';\n\n// // // const SubDomainManagement = () => {\n// // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // //   const { domainId } = useParams();\n// // //   const navigate = useNavigate();\n\n// // //   const [domain, setDomain] = useState(null);\n// // //   const [subDomains, setSubDomains] = useState([]);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [showAddModal, setShowAddModal] = useState(false);\n// // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // //   const [selectedParent, setSelectedParent] = useState(null);\n// // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // //   // NEW: Project creation state\n// // //   const [showProjectModal, setShowProjectModal] = useState(false);\n// // //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // //     domainId,\n// // //     domain: domain?.title,\n// // //     subDomainsCount: subDomains.length,\n// // //     loading,\n// // //     selectedParent: selectedParent?.title,\n// // //     expandedCount: expandedNodes.size,\n// // //     showProjectModal,\n// // //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// // //   });\n\n// // //   useEffect(() => {\n// // //     if (domainId) {\n// // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // //       fetchDomainAndSubDomains();\n// // //     }\n// // //   }, [domainId]);\n\n// // //   const fetchDomainAndSubDomains = async () => {\n// // //     try {\n// // //       setLoading(true);\n\n// // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n// // //       // Get domain details\n// // //       const domainsResponse = await authService.getDomains();\n// // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // //       let domainData = null;\n// // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // //       if (domains.length > 0) {\n// // //         domainData = domains.find(d => d.id == domainId);\n// // //       }\n\n// // //       if (!domainData) {\n// // //         domainData = {\n// // //           id: domainId,\n// // //           title: `Domain ${domainId}`,\n// // //           description: 'Domain not found in list',\n// // //           projectCount: 0\n// // //         };\n// // //       }\n\n// // //       setDomain(domainData);\n\n// // //       // Get subdomains\n// // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // //       setSubDomains(subDomainsData);\n\n// // //       // Auto-expand first level\n// // //       if (subDomainsData.length > 0) {\n// // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // //         setExpandedNodes(new Set(firstLevelIds));\n// // //       }\n\n// // //       // Try hierarchy API as fallback\n// // //       try {\n// // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // //           setSubDomains(hierarchyData.subDomains);\n// // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // //           }\n// // //         }\n// // //       } catch (hierarchyError) {\n// // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// // //       }\n\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // //       toast.error('Failed to fetch domain information');\n\n// // //       setDomain({\n// // //         id: domainId,\n// // //         title: `Domain ${domainId}`,\n// // //         description: 'Error loading domain details',\n// // //         projectCount: 0\n// // //       });\n// // //       setSubDomains([]);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const handleAddSubDomain = (parent = null) => {\n// // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// // //     setSelectedParent(parent);\n// // //     setEditingSubDomain(null);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   const handleEditSubDomain = (subDomain) => {\n// // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// // //     setSelectedParent(null);\n// // //     setEditingSubDomain(subDomain);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   // NEW: Handle adding project to subdomain\n// // //   const handleAddProjectToSubDomain = (subDomain) => {\n// // //     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n// // //     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n\n// // //     if (subDomain.children && subDomain.children.length > 0) {\n// // //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// // //       return;\n// // //     }\n\n// // //     setSelectedSubDomainForProject(subDomain);\n// // //     setShowProjectModal(true);\n// // //   };\n\n// // //   const handleDeleteSubDomain = async (subDomain) => {\n// // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //     const hasProjects = subDomain.projectCount > 0;\n\n// // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // //     if (hasChildren) {\n// // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // //     }\n// // //     if (hasProjects) {\n// // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // //     }\n\n// // //     if (!window.confirm(confirmMessage)) {\n// // //       return;\n// // //     }\n\n// // //     try {\n// // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// // //       const response = await authService.deleteSubDomain(subDomain.id);\n// // //       toast.success('Sub-domain deleted successfully');\n// // //       fetchDomainAndSubDomains();\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // //       toast.error('Failed to delete sub-domain');\n// // //     }\n// // //   };\n\n// // //   const toggleExpanded = (nodeId) => {\n// // //     const newExpanded = new Set(expandedNodes);\n// // //     if (newExpanded.has(nodeId)) {\n// // //       newExpanded.delete(nodeId);\n// // //     } else {\n// // //       newExpanded.add(nodeId);\n// // //     }\n// // //     setExpandedNodes(newExpanded);\n// // //   };\n\n// // //   if (loading) {\n// // //     return (\n// // //       <div className=\"loading-container\">\n// // //         <div className=\"loading-spinner\"></div>\n// // //         <p>Loading sub-domains...</p>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <div className=\"subdomain-management\">\n// // //       {/* Header with Breadcrumb */}\n// // //       <div className=\"page-header\">\n// // //         <div className=\"header-content\">\n// // //           <div className=\"breadcrumb\">\n// // //             <button \n// // //               className=\"breadcrumb-link\"\n// // //               onClick={() => navigate('/domains')}\n// // //             >\n// // //               <FiArrowLeft />\n// // //               Domains\n// // //             </button>\n// // //             <span className=\"breadcrumb-separator\">/</span>\n// // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // //           </div>\n// // //           <h1>SubDomain Management</h1>\n// // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // //         </div>\n// // //         <div className=\"header-actions\">\n// // //           <button \n// // //             className=\"primary-button\" \n// // //             onClick={() => handleAddSubDomain()}\n// // //           >\n// // //             <FiPlus />\n// // //             Add Root SubDomain\n// // //           </button>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Quick Guide */}\n// // //       <div className=\"quick-guide\">\n// // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // //         <div className=\"guide-steps\">\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">1</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">2</span>\n// // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">3</span>\n// // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">4</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Domain Info Card */}\n// // //       {domain && (\n// // //         <div className=\"domain-info-card\">\n// // //           <div className=\"domain-icon\">\n// // //             <FiFolder />\n// // //           </div>\n// // //           <div className=\"domain-details\">\n// // //             <h3>{domain.title}</h3>\n// // //             <p>{domain.description}</p>\n// // //             <div className=\"domain-stats\">\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // //               </span>\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // //               </span>\n// // //             </div>\n// // //           </div>\n// // //         </div>\n// // //       )}\n\n// // //       {/* SubDomain Tree */}\n// // //       <div className=\"subdomain-tree-container\">\n// // //         <div className=\"tree-header\">\n// // //           <h2>SubDomain Hierarchy</h2>\n// // //           <div className=\"tree-legend\">\n// // //             <span className=\"legend-item\">\n// // //               <FiFolder className=\"folder-icon\" />\n// // //               Has children\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiTarget className=\"leaf-icon\" />\n// // //               Leaf (can have projects)\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiFileText className=\"project-icon\" />\n// // //               Add Project\n// // //             </span>\n// // //           </div>\n// // //         </div>\n\n// // //         {subDomains.length > 0 ? (\n// // //           <div className=\"subdomain-tree\">\n// // //             {subDomains.map((subDomain) => (\n// // //               <SubDomainNode\n// // //                 key={subDomain.id}\n// // //                 subDomain={subDomain}\n// // //                 level={0}\n// // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // //                 onToggleExpanded={toggleExpanded}\n// // //                 onEdit={handleEditSubDomain}\n// // //                 onDelete={handleDeleteSubDomain}\n// // //                 onAddChild={handleAddSubDomain}\n// // //                 onAddProject={handleAddProjectToSubDomain}\n// // //                 expandedNodes={expandedNodes}\n// // //               />\n// // //             ))}\n// // //           </div>\n// // //         ) : (\n// // //           <div className=\"empty-tree-state\">\n// // //             <FiFolderPlus size={64} />\n// // //             <h3>No SubDomains Yet</h3>\n// // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // //             <div className=\"empty-state-examples\">\n// // //               <h4>Example Structure:</h4>\n// // //               <div className=\"example-tree\">\n// // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // //               </div>\n// // //             </div>\n// // //             <div className=\"empty-state-actions\">\n// // //               <button \n// // //                 className=\"primary-button large\" \n// // //                 onClick={() => handleAddSubDomain()}\n// // //               >\n// // //                 <FiPlus />\n// // //                 Create Your First SubDomain\n// // //               </button>\n// // //               <p className=\"help-text\">\n// // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // //               </p>\n// // //             </div>\n// // //           </div>\n// // //         )}\n// // //       </div>\n\n// // //       {/* Add/Edit SubDomain Modal */}\n// // //       {showAddModal && (\n// // //         <SubDomainModal\n// // //           subDomain={editingSubDomain}\n// // //           parent={selectedParent}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //             fetchDomainAndSubDomains();\n// // //           }}\n// // //         />\n// // //       )}\n\n// // //       {/* NEW: Project Creation Modal with SLUG GENERATION */}\n// // //       {showProjectModal && (\n// // //         <ProjectModal\n// // //           subDomain={selectedSubDomainForProject}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowProjectModal(false);\n// // //             setSelectedSubDomainForProject(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowProjectModal(false);\n// // //             setSelectedSubDomainForProject(null);\n// // //             toast.success('Project created successfully!');\n// // //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// // //           }}\n// // //         />\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // UPDATED SubDomain Node Component\n// // // const SubDomainNode = ({ \n// // //   subDomain, \n// // //   level, \n// // //   isExpanded, \n// // //   onToggleExpanded, \n// // //   onEdit, \n// // //   onDelete, \n// // //   onAddChild,\n// // //   onAddProject,\n// // //   expandedNodes \n// // // }) => {\n// // //   const [showMenu, setShowMenu] = useState(false);\n// // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //   const isLeaf = !hasChildren;\n\n// // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // //     title: subDomain.title,\n// // //     level,\n// // //     hasChildren,\n// // //     isLeaf,\n// // //     isExpanded,\n// // //     projectCount: subDomain.projectCount\n// // //   });\n\n// // //   return (\n// // //     <div className={`subdomain-node level-${level}`}>\n// // //       <div className=\"node-content\">\n// // //         <div className=\"node-main\">\n// // //           {hasChildren ? (\n// // //             <button \n// // //               className=\"expand-button\"\n// // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // //             >\n// // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // //             </button>\n// // //           ) : (\n// // //             <div className=\"expand-placeholder\" />\n// // //           )}\n\n// // //           <div className=\"node-icon\">\n// // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // //           </div>\n\n// // //           <div className=\"node-info\">\n// // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // //             <p className=\"node-description\">{subDomain.description}</p>\n// // //             <div className=\"node-stats\">\n// // //               {hasChildren && (\n// // //                 <span className=\"stat-badge\">\n// // //                   {subDomain.children.length} sub-domains\n// // //                 </span>\n// // //               )}\n// // //               {subDomain.projectCount > 0 && (\n// // //                 <span className=\"stat-badge projects\">\n// // //                   {subDomain.projectCount} projects\n// // //                 </span>\n// // //               )}\n// // //               {isLeaf && (\n// // //                 <span className=\"stat-badge leaf\">\n// // //                   Can have projects\n// // //                 </span>\n// // //               )}\n// // //             </div>\n// // //           </div>\n// // //         </div>\n\n// // //         <div className=\"node-actions\">\n// // //           {isLeaf && (\n// // //             <button \n// // //               className=\"action-button project\" \n// // //               onClick={() => onAddProject(subDomain)}\n// // //               title={`Add project to \"${subDomain.title}\"`}\n// // //             >\n// // //               <FiFileText />\n// // //             </button>\n// // //           )}\n\n// // //           <button \n// // //             className=\"action-button add\" \n// // //             onClick={() => onAddChild(subDomain)}\n// // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // //           >\n// // //             <FiPlus />\n// // //           </button>\n\n// // //           <div className=\"action-menu\">\n// // //             <button \n// // //               onClick={() => setShowMenu(!showMenu)}\n// // //               title=\"More actions\"\n// // //             >\n// // //               <FiMoreVertical />\n// // //             </button>\n// // //             {showMenu && (\n// // //               <div className=\"dropdown-menu\">\n// // //                 {isLeaf && (\n// // //                   <button \n// // //                     onClick={() => {\n// // //                       onAddProject(subDomain);\n// // //                       setShowMenu(false);\n// // //                     }}\n// // //                     className=\"primary-option\"\n// // //                   >\n// // //                     <FiFileText /> Add Project\n// // //                   </button>\n// // //                 )}\n// // //                 <button onClick={() => {\n// // //                   onEdit(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiEdit /> Edit SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onAddChild(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiPlus /> Add Child SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onDelete(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }} className=\"danger\">\n// // //                   <FiTrash2 /> Delete SubDomain\n// // //                 </button>\n// // //               </div>\n// // //             )}\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Children */}\n// // //       {hasChildren && isExpanded && (\n// // //         <div className=\"node-children\">\n// // //           {subDomain.children.map((child) => (\n// // //             <SubDomainNode\n// // //               key={child.id}\n// // //               subDomain={child}\n// // //               level={level + 1}\n// // //               isExpanded={expandedNodes.has(child.id)}\n// // //               onToggleExpanded={onToggleExpanded}\n// // //               onEdit={onEdit}\n// // //               onDelete={onDelete}\n// // //               onAddChild={onAddChild}\n// // //               onAddProject={onAddProject}\n// // //               expandedNodes={expandedNodes}\n// // //             />\n// // //           ))}\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // SubDomain Modal Component (unchanged)\n// // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: subDomain?.title || '',\n// // //     description: subDomain?.description || ''\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setLoading(true);\n\n// // //     try {\n// // //       const requestData = {\n// // //         title: formData.title.trim(),\n// // //         description: formData.description.trim(),\n// // //         domainId: domain.id,\n// // //         parentId: parent?.id || null\n// // //       };\n\n// // //       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n// // //       if (subDomain) {\n// // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // //         toast.success('Sub-domain updated successfully');\n// // //       } else {\n// // //         const response = await authService.createSubDomain(requestData);\n// // //         toast.success('Sub-domain created successfully');\n// // //       }\n\n// // //       onSave();\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// // //       toast.error(errorMessage);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const getModalTitle = () => {\n// // //     if (subDomain) {\n// // //       return `Edit SubDomain: ${subDomain.title}`;\n// // //     }\n// // //     if (parent) {\n// // //       return `Add SubDomain under: ${parent.title}`;\n// // //     }\n// // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // //   };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>{getModalTitle()}</h2>\n// // //           <button onClick={onClose}>√ó</button>\n// // //         </div>\n\n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>SubDomain Title *</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // //               required\n// // //               minLength={3}\n// // //               maxLength={100}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Description (Optional)</label>\n// // //             <textarea\n// // //               value={formData.description}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // //               rows={3}\n// // //               placeholder=\"Describe what this sub-domain covers...\"\n// // //               maxLength={500}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             {parent && (\n// // //               <>\n// // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // //               </>\n// // //             )}\n// // //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// // //           </div>\n\n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button \n// // //               type=\"submit\" \n// // //               className=\"primary-button\" \n// // //               disabled={loading || !formData.title.trim()}\n// // //             >\n// // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // UPDATED: Project Modal Component with SLUG GENERATION\n// // // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: '',\n// // //     abstract: '',\n// // //     specifications: '',\n// // //     learningOutcomes: '',\n// // //     subDomainId: subDomain?.id || '',\n// // //     isFeatured: false\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   console.log('üìù PROJECT MODAL - Props:', {\n// // //     subDomain: subDomain?.title,\n// // //     domain: domain?.title,\n// // //     formData\n// // //   });\n\n// // //   // ‚úÖ SLUG GENERATION FUNCTION\n// // //   const generateSlug = (title) => {\n// // //     return title\n// // //       .toLowerCase()\n// // //       .trim()\n// // //       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n// // //       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n// // //       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n// // //   };\n\n// // //   // const handleSubmit = async (e) => {\n// // //   //   e.preventDefault();\n// // //   //   setLoading(true);\n\n// // //   //   try {\n// // //   //     // ‚úÖ PREPARE DATA WITHOUT SLUG (backend will auto-generate)\n// // //   //     const projectData = {\n// // //   //       title: formData.title.trim(),\n// // //   //       abstract: formData.abstract.trim(),\n// // //   //       specifications: formData.specifications.trim(),\n// // //   //       learningOutcomes: formData.learningOutcomes.trim(),\n// // //   //       subDomainId: formData.subDomainId,\n// // //   //       isFeatured: formData.isFeatured\n// // //   //       // ‚ö° REMOVED SLUG - backend validation doesn't allow it\n// // //   //     };\n\n// // //   //     console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n// // //   //     console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n\n// // //   //     const response = await authService.createProject(projectData);\n// // //   //     console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n\n// // //   //     onSave();\n// // //   //   } catch (error) {\n// // //   //     console.error('‚ùå PROJECT SAVE - Error:', error);\n// // //   //     console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n\n// // //   //     // Show more specific error message if available\n// // //   //     const errorMessage = error.response?.data?.message || 'Failed to create project';\n// // //   //     toast.error(errorMessage);\n// // //   //   } finally {\n// // //   //     setLoading(false);\n// // //   //   }\n// // //   // };\n\n// // //   const handleSubmit = async (e) => {\n// // //   e.preventDefault();\n// // //   setLoading(true);\n\n// // //   try {\n// // //     // ‚úÖ DON'T SEND SLUG - let backend auto-generate it\n// // //     const projectData = {\n// // //       title: formData.title.trim(),\n// // //       abstract: formData.abstract.trim(),\n// // //       specifications: formData.specifications.trim(),\n// // //       learningOutcomes: formData.learningOutcomes.trim(),\n// // //       subDomainId: formData.subDomainId,\n// // //       isFeatured: formData.isFeatured\n// // //       // ‚ö° NO SLUG FIELD - backend model hook will generate it\n// // //     };\n\n// // //     console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n// // //     console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n\n// // //     const response = await authService.createProject(projectData);\n// // //     console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n\n// // //     onSave();\n// // //   } catch (error) {\n// // //     console.error('‚ùå PROJECT SAVE - Error:', error);\n// // //     console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n\n// // //     // Show more specific error message if available\n// // //     const errorMessage = error.response?.data?.message || 'Failed to create project';\n// // //     toast.error(errorMessage);\n// // //   } finally {\n// // //     setLoading(false);\n// // //   }\n// // // };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal large\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>Add Project to: {subDomain?.title}</h2>\n// // //           <button onClick={onClose}>√ó</button>\n// // //         </div>\n\n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>Project Title *</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"Enter project title...\"\n// // //               required\n// // //               minLength={3}\n// // //               maxLength={200}\n// // //             />\n// // //             {/* ‚úÖ SHOW SLUG PREVIEW (for user reference only) */}\n// // //             {formData.title && (\n// // //               <div className=\"slug-preview\">\n// // //                 <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n// // //               </div>\n// // //             )}\n// // //           </div>\n\n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// // //             <span className=\"info-note\">\n// // //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// // //             </span>\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Abstract *</label>\n// // //             <textarea\n// // //               value={formData.abstract}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// // //               rows={4}\n// // //               placeholder=\"Brief description of the project...\"\n// // //               required\n// // //               minLength={10}\n// // //               maxLength={1000}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Specifications *</label>\n// // //             <textarea\n// // //               value={formData.specifications}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// // //               rows={6}\n// // //               placeholder=\"Technical specifications and requirements...\"\n// // //               required\n// // //               minLength={10}\n// // //               maxLength={5000}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Learning Outcomes *</label>\n// // //             <textarea\n// // //               value={formData.learningOutcomes}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// // //               rows={4}\n// // //               placeholder=\"What will students learn from this project...\"\n// // //               required\n// // //               minLength={10}\n// // //               maxLength={2000}\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"form-group checkbox\">\n// // //             <label>\n// // //               <input\n// // //                 type=\"checkbox\"\n// // //                 checked={formData.isFeatured}\n// // //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// // //               />\n// // //               <FiTarget />\n// // //               Featured Project\n// // //             </label>\n// // //           </div>\n\n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button \n// // //               type=\"submit\" \n// // //               className=\"primary-button\" \n// // //               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n// // //             >\n// // //               {loading ? 'Creating...' : 'Create Project'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SubDomainManagement;\n\n// // // // // src/components/domains/SubDomainManagement.js - UPDATED WITH SLUG GENERATION\n// // // // import React, { useState, useEffect } from 'react';\n// // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // import { authService } from '../../services/authService';\n// // // // import { toast } from 'react-toastify';\n// // // // import {\n// // // //   FiPlus,\n// // // //   FiEdit,\n// // // //   FiTrash2,\n// // // //   FiChevronDown,\n// // // //   FiChevronRight,\n// // // //   FiFolder,\n// // // //   FiFolderPlus,\n// // // //   FiFileText,\n// // // //   FiArrowLeft,\n// // // //   FiMoreVertical,\n// // // //   FiMove,\n// // // //   FiTarget\n// // // // } from 'react-icons/fi';\n\n// // // // const SubDomainManagement = () => {\n// // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // //   const { domainId } = useParams();\n// // // //   const navigate = useNavigate();\n\n// // // //   const [domain, setDomain] = useState(null);\n// // // //   const [subDomains, setSubDomains] = useState([]);\n// // // //   const [loading, setLoading] = useState(true);\n// // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // //   // NEW: Project creation state\n// // // //   const [showProjectModal, setShowProjectModal] = useState(false);\n// // // //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // //     domainId,\n// // // //     domain: domain?.title,\n// // // //     subDomainsCount: subDomains.length,\n// // // //     loading,\n// // // //     selectedParent: selectedParent?.title,\n// // // //     expandedCount: expandedNodes.size,\n// // // //     showProjectModal,\n// // // //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// // // //   });\n\n// // // //   useEffect(() => {\n// // // //     if (domainId) {\n// // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // //       fetchDomainAndSubDomains();\n// // // //     }\n// // // //   }, [domainId]);\n\n// // // //   const fetchDomainAndSubDomains = async () => {\n// // // //     try {\n// // // //       setLoading(true);\n\n// // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n// // // //       // Get domain details\n// // // //       const domainsResponse = await authService.getDomains();\n// // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // //       let domainData = null;\n// // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // //       if (domains.length > 0) {\n// // // //         domainData = domains.find(d => d.id == domainId);\n// // // //       }\n\n// // // //       if (!domainData) {\n// // // //         domainData = {\n// // // //           id: domainId,\n// // // //           title: `Domain ${domainId}`,\n// // // //           description: 'Domain not found in list',\n// // // //           projectCount: 0\n// // // //         };\n// // // //       }\n\n// // // //       setDomain(domainData);\n\n// // // //       // Get subdomains\n// // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // //       setSubDomains(subDomainsData);\n\n// // // //       // Auto-expand first level\n// // // //       if (subDomainsData.length > 0) {\n// // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // //       }\n\n// // // //       // Try hierarchy API as fallback\n// // // //       try {\n// // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // //           setSubDomains(hierarchyData.subDomains);\n// // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // //           }\n// // // //         }\n// // // //       } catch (hierarchyError) {\n// // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// // // //       }\n\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // //       toast.error('Failed to fetch domain information');\n\n// // // //       setDomain({\n// // // //         id: domainId,\n// // // //         title: `Domain ${domainId}`,\n// // // //         description: 'Error loading domain details',\n// // // //         projectCount: 0\n// // // //       });\n// // // //       setSubDomains([]);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const handleAddSubDomain = (parent = null) => {\n// // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// // // //     setSelectedParent(parent);\n// // // //     setEditingSubDomain(null);\n// // // //     setShowAddModal(true);\n// // // //   };\n\n// // // //   const handleEditSubDomain = (subDomain) => {\n// // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// // // //     setSelectedParent(null);\n// // // //     setEditingSubDomain(subDomain);\n// // // //     setShowAddModal(true);\n// // // //   };\n\n// // // //   // NEW: Handle adding project to subdomain\n// // // //   const handleAddProjectToSubDomain = (subDomain) => {\n// // // //     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n// // // //     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n\n// // // //     if (subDomain.children && subDomain.children.length > 0) {\n// // // //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// // // //       return;\n// // // //     }\n\n// // // //     setSelectedSubDomainForProject(subDomain);\n// // // //     setShowProjectModal(true);\n// // // //   };\n\n// // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // //     if (hasChildren) {\n// // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // //     }\n// // // //     if (hasProjects) {\n// // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // //     }\n\n// // // //     if (!window.confirm(confirmMessage)) {\n// // // //       return;\n// // // //     }\n\n// // // //     try {\n// // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// // // //       const response = await authService.deleteSubDomain(subDomain.id);\n// // // //       toast.success('Sub-domain deleted successfully');\n// // // //       fetchDomainAndSubDomains();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // //       toast.error('Failed to delete sub-domain');\n// // // //     }\n// // // //   };\n\n// // // //   const toggleExpanded = (nodeId) => {\n// // // //     const newExpanded = new Set(expandedNodes);\n// // // //     if (newExpanded.has(nodeId)) {\n// // // //       newExpanded.delete(nodeId);\n// // // //     } else {\n// // // //       newExpanded.add(nodeId);\n// // // //     }\n// // // //     setExpandedNodes(newExpanded);\n// // // //   };\n\n// // // //   if (loading) {\n// // // //     return (\n// // // //       <div className=\"loading-container\">\n// // // //         <div className=\"loading-spinner\"></div>\n// // // //         <p>Loading sub-domains...</p>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   return (\n// // // //     <div className=\"subdomain-management\">\n// // // //       {/* Header with Breadcrumb */}\n// // // //       <div className=\"page-header\">\n// // // //         <div className=\"header-content\">\n// // // //           <div className=\"breadcrumb\">\n// // // //             <button \n// // // //               className=\"breadcrumb-link\"\n// // // //               onClick={() => navigate('/domains')}\n// // // //             >\n// // // //               <FiArrowLeft />\n// // // //               Domains\n// // // //             </button>\n// // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // //           </div>\n// // // //           <h1>SubDomain Management</h1>\n// // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // //         </div>\n// // // //         <div className=\"header-actions\">\n// // // //           <button \n// // // //             className=\"primary-button\" \n// // // //             onClick={() => handleAddSubDomain()}\n// // // //           >\n// // // //             <FiPlus />\n// // // //             Add Root SubDomain\n// // // //           </button>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Quick Guide */}\n// // // //       <div className=\"quick-guide\">\n// // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // //         <div className=\"guide-steps\">\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">1</span>\n// // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">2</span>\n// // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">3</span>\n// // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">4</span>\n// // // //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Domain Info Card */}\n// // // //       {domain && (\n// // // //         <div className=\"domain-info-card\">\n// // // //           <div className=\"domain-icon\">\n// // // //             <FiFolder />\n// // // //           </div>\n// // // //           <div className=\"domain-details\">\n// // // //             <h3>{domain.title}</h3>\n// // // //             <p>{domain.description}</p>\n// // // //             <div className=\"domain-stats\">\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // //               </span>\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // //               </span>\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* SubDomain Tree */}\n// // // //       <div className=\"subdomain-tree-container\">\n// // // //         <div className=\"tree-header\">\n// // // //           <h2>SubDomain Hierarchy</h2>\n// // // //           <div className=\"tree-legend\">\n// // // //             <span className=\"legend-item\">\n// // // //               <FiFolder className=\"folder-icon\" />\n// // // //               Has children\n// // // //             </span>\n// // // //             <span className=\"legend-item\">\n// // // //               <FiTarget className=\"leaf-icon\" />\n// // // //               Leaf (can have projects)\n// // // //             </span>\n// // // //             <span className=\"legend-item\">\n// // // //               <FiFileText className=\"project-icon\" />\n// // // //               Add Project\n// // // //             </span>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         {subDomains.length > 0 ? (\n// // // //           <div className=\"subdomain-tree\">\n// // // //             {subDomains.map((subDomain) => (\n// // // //               <SubDomainNode\n// // // //                 key={subDomain.id}\n// // // //                 subDomain={subDomain}\n// // // //                 level={0}\n// // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // //                 onToggleExpanded={toggleExpanded}\n// // // //                 onEdit={handleEditSubDomain}\n// // // //                 onDelete={handleDeleteSubDomain}\n// // // //                 onAddChild={handleAddSubDomain}\n// // // //                 onAddProject={handleAddProjectToSubDomain}\n// // // //                 expandedNodes={expandedNodes}\n// // // //               />\n// // // //             ))}\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div className=\"empty-tree-state\">\n// // // //             <FiFolderPlus size={64} />\n// // // //             <h3>No SubDomains Yet</h3>\n// // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // //             <div className=\"empty-state-examples\">\n// // // //               <h4>Example Structure:</h4>\n// // // //               <div className=\"example-tree\">\n// // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // //               </div>\n// // // //             </div>\n// // // //             <div className=\"empty-state-actions\">\n// // // //               <button \n// // // //                 className=\"primary-button large\" \n// // // //                 onClick={() => handleAddSubDomain()}\n// // // //               >\n// // // //                 <FiPlus />\n// // // //                 Create Your First SubDomain\n// // // //               </button>\n// // // //               <p className=\"help-text\">\n// // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // //               </p>\n// // // //             </div>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n\n// // // //       {/* Add/Edit SubDomain Modal */}\n// // // //       {showAddModal && (\n// // // //         <SubDomainModal\n// // // //           subDomain={editingSubDomain}\n// // // //           parent={selectedParent}\n// // // //           domain={domain}\n// // // //           onClose={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //           }}\n// // // //           onSave={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //             fetchDomainAndSubDomains();\n// // // //           }}\n// // // //         />\n// // // //       )}\n\n// // // //       {/* NEW: Project Creation Modal with SLUG GENERATION */}\n// // // //       {showProjectModal && (\n// // // //         <ProjectModal\n// // // //           subDomain={selectedSubDomainForProject}\n// // // //           domain={domain}\n// // // //           onClose={() => {\n// // // //             setShowProjectModal(false);\n// // // //             setSelectedSubDomainForProject(null);\n// // // //           }}\n// // // //           onSave={() => {\n// // // //             setShowProjectModal(false);\n// // // //             setSelectedSubDomainForProject(null);\n// // // //             toast.success('Project created successfully!');\n// // // //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// // // //           }}\n// // // //         />\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // UPDATED SubDomain Node Component\n// // // // const SubDomainNode = ({ \n// // // //   subDomain, \n// // // //   level, \n// // // //   isExpanded, \n// // // //   onToggleExpanded, \n// // // //   onEdit, \n// // // //   onDelete, \n// // // //   onAddChild,\n// // // //   onAddProject,\n// // // //   expandedNodes \n// // // // }) => {\n// // // //   const [showMenu, setShowMenu] = useState(false);\n// // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //   const isLeaf = !hasChildren;\n\n// // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // //     title: subDomain.title,\n// // // //     level,\n// // // //     hasChildren,\n// // // //     isLeaf,\n// // // //     isExpanded,\n// // // //     projectCount: subDomain.projectCount\n// // // //   });\n\n// // // //   return (\n// // // //     <div className={`subdomain-node level-${level}`}>\n// // // //       <div className=\"node-content\">\n// // // //         <div className=\"node-main\">\n// // // //           {hasChildren ? (\n// // // //             <button \n// // // //               className=\"expand-button\"\n// // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // //             >\n// // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // //             </button>\n// // // //           ) : (\n// // // //             <div className=\"expand-placeholder\" />\n// // // //           )}\n\n// // // //           <div className=\"node-icon\">\n// // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // //           </div>\n\n// // // //           <div className=\"node-info\">\n// // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // //             <div className=\"node-stats\">\n// // // //               {hasChildren && (\n// // // //                 <span className=\"stat-badge\">\n// // // //                   {subDomain.children.length} sub-domains\n// // // //                 </span>\n// // // //               )}\n// // // //               {subDomain.projectCount > 0 && (\n// // // //                 <span className=\"stat-badge projects\">\n// // // //                   {subDomain.projectCount} projects\n// // // //                 </span>\n// // // //               )}\n// // // //               {isLeaf && (\n// // // //                 <span className=\"stat-badge leaf\">\n// // // //                   Can have projects\n// // // //                 </span>\n// // // //               )}\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         <div className=\"node-actions\">\n// // // //           {isLeaf && (\n// // // //             <button \n// // // //               className=\"action-button project\" \n// // // //               onClick={() => onAddProject(subDomain)}\n// // // //               title={`Add project to \"${subDomain.title}\"`}\n// // // //             >\n// // // //               <FiFileText />\n// // // //             </button>\n// // // //           )}\n\n// // // //           <button \n// // // //             className=\"action-button add\" \n// // // //             onClick={() => onAddChild(subDomain)}\n// // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // //           >\n// // // //             <FiPlus />\n// // // //           </button>\n\n// // // //           <div className=\"action-menu\">\n// // // //             <button \n// // // //               onClick={() => setShowMenu(!showMenu)}\n// // // //               title=\"More actions\"\n// // // //             >\n// // // //               <FiMoreVertical />\n// // // //             </button>\n// // // //             {showMenu && (\n// // // //               <div className=\"dropdown-menu\">\n// // // //                 {isLeaf && (\n// // // //                   <button \n// // // //                     onClick={() => {\n// // // //                       onAddProject(subDomain);\n// // // //                       setShowMenu(false);\n// // // //                     }}\n// // // //                     className=\"primary-option\"\n// // // //                   >\n// // // //                     <FiFileText /> Add Project\n// // // //                   </button>\n// // // //                 )}\n// // // //                 <button onClick={() => {\n// // // //                   onEdit(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiEdit /> Edit SubDomain\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onAddChild(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiPlus /> Add Child SubDomain\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onDelete(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }} className=\"danger\">\n// // // //                   <FiTrash2 /> Delete SubDomain\n// // // //                 </button>\n// // // //               </div>\n// // // //             )}\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Children */}\n// // // //       {hasChildren && isExpanded && (\n// // // //         <div className=\"node-children\">\n// // // //           {subDomain.children.map((child) => (\n// // // //             <SubDomainNode\n// // // //               key={child.id}\n// // // //               subDomain={child}\n// // // //               level={level + 1}\n// // // //               isExpanded={expandedNodes.has(child.id)}\n// // // //               onToggleExpanded={onToggleExpanded}\n// // // //               onEdit={onEdit}\n// // // //               onDelete={onDelete}\n// // // //               onAddChild={onAddChild}\n// // // //               onAddProject={onAddProject}\n// // // //               expandedNodes={expandedNodes}\n// // // //             />\n// // // //           ))}\n// // // //         </div>\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Modal Component (unchanged)\n// // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     title: subDomain?.title || '',\n// // // //     description: subDomain?.description || ''\n// // // //   });\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     setLoading(true);\n\n// // // //     try {\n// // // //       const requestData = {\n// // // //         title: formData.title.trim(),\n// // // //         description: formData.description.trim(),\n// // // //         domainId: domain.id,\n// // // //         parentId: parent?.id || null\n// // // //       };\n\n// // // //       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n// // // //       if (subDomain) {\n// // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // //         toast.success('Sub-domain updated successfully');\n// // // //       } else {\n// // // //         const response = await authService.createSubDomain(requestData);\n// // // //         toast.success('Sub-domain created successfully');\n// // // //       }\n\n// // // //       onSave();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// // // //       toast.error(errorMessage);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const getModalTitle = () => {\n// // // //     if (subDomain) {\n// // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // //     }\n// // // //     if (parent) {\n// // // //       return `Add SubDomain under: ${parent.title}`;\n// // // //     }\n// // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"modal-overlay\">\n// // // //       <div className=\"modal\">\n// // // //         <div className=\"modal-header\">\n// // // //           <h2>{getModalTitle()}</h2>\n// // // //           <button onClick={onClose}>√ó</button>\n// // // //         </div>\n\n// // // //         <form onSubmit={handleSubmit}>\n// // // //           <div className=\"form-group\">\n// // // //             <label>SubDomain Title *</label>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={formData.title}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // //               required\n// // // //               minLength={3}\n// // // //               maxLength={100}\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"form-group\">\n// // // //             <label>Description (Optional)</label>\n// // // //             <textarea\n// // // //               value={formData.description}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // //               rows={3}\n// // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // //               maxLength={500}\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"modal-info\">\n// // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // //             {parent && (\n// // // //               <>\n// // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // //               </>\n// // // //             )}\n// // // //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// // // //           </div>\n\n// // // //           <div className=\"modal-actions\">\n// // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // //               Cancel\n// // // //             </button>\n// // // //             <button \n// // // //               type=\"submit\" \n// // // //               className=\"primary-button\" \n// // // //               disabled={loading || !formData.title.trim()}\n// // // //             >\n// // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // //             </button>\n// // // //           </div>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // UPDATED: Project Modal Component with SLUG GENERATION\n// // // // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     title: '',\n// // // //     abstract: '',\n// // // //     specifications: '',\n// // // //     learningOutcomes: '',\n// // // //     subDomainId: subDomain?.id || '',\n// // // //     isFeatured: false\n// // // //   });\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   console.log('üìù PROJECT MODAL - Props:', {\n// // // //     subDomain: subDomain?.title,\n// // // //     domain: domain?.title,\n// // // //     formData\n// // // //   });\n\n// // // //   // ‚úÖ SLUG GENERATION FUNCTION\n// // // //   const generateSlug = (title) => {\n// // // //     return title\n// // // //       .toLowerCase()\n// // // //       .trim()\n// // // //       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n// // // //       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n// // // //       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n// // // //   };\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     setLoading(true);\n\n// // // //     try {\n// // // //       // ‚úÖ GENERATE SLUG FROM TITLE\n// // // //       const slug = generateSlug(formData.title);\n\n// // // //       // ‚úÖ PREPARE COMPLETE DATA WITH SLUG\n// // // //       const projectData = {\n// // // //         ...formData,\n// // // //         slug: slug, // ‚ö° ADD THE GENERATED SLUG HERE\n// // // //         title: formData.title.trim(),\n// // // //         abstract: formData.abstract.trim(),\n// // // //         specifications: formData.specifications.trim(),\n// // // //         learningOutcomes: formData.learningOutcomes.trim()\n// // // //       };\n\n// // // //       console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n// // // //       console.log('üîó PROJECT SAVE - Generated slug:', slug);\n\n// // // //       const response = await authService.createProject(projectData);\n// // // //       console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n\n// // // //       onSave();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå PROJECT SAVE - Error:', error);\n// // // //       console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n\n// // // //       // Show more specific error message if available\n// // // //       const errorMessage = error.response?.data?.message || 'Failed to create project';\n// // // //       toast.error(errorMessage);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"modal-overlay\">\n// // // //       <div className=\"modal large\">\n// // // //         <div className=\"modal-header\">\n// // // //           <h2>Add Project to: {subDomain?.title}</h2>\n// // // //           <button onClick={onClose}>√ó</button>\n// // // //         </div>\n\n// // // //         <form onSubmit={handleSubmit}>\n// // // //           <div className=\"form-group\">\n// // // //             <label>Project Title *</label>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={formData.title}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // //               placeholder=\"Enter project title...\"\n// // // //               required\n// // // //               minLength={3}\n// // // //               maxLength={200}\n// // // //             />\n// // // //             {/* ‚úÖ SHOW GENERATED SLUG PREVIEW */}\n// // // //             {formData.title && (\n// // // //               <div className=\"slug-preview\">\n// // // //                 <small>URL Slug: <code>{generateSlug(formData.title)}</code></small>\n// // // //               </div>\n// // // //             )}\n// // // //           </div>\n\n// // // //           <div className=\"modal-info\">\n// // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// // // //             <span className=\"info-note\">\n// // // //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// // // //             </span>\n// // // //           </div>\n\n// // // //           <div className=\"form-group\">\n// // // //             <label>Abstract *</label>\n// // // //             <textarea\n// // // //               value={formData.abstract}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// // // //               rows={4}\n// // // //               placeholder=\"Brief description of the project...\"\n// // // //               required\n// // // //               minLength={10}\n// // // //               maxLength={1000}\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"form-group\">\n// // // //             <label>Specifications *</label>\n// // // //             <textarea\n// // // //               value={formData.specifications}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// // // //               rows={6}\n// // // //               placeholder=\"Technical specifications and requirements...\"\n// // // //               required\n// // // //               minLength={10}\n// // // //               maxLength={5000}\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"form-group\">\n// // // //             <label>Learning Outcomes *</label>\n// // // //             <textarea\n// // // //               value={formData.learningOutcomes}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// // // //               rows={4}\n// // // //               placeholder=\"What will students learn from this project...\"\n// // // //               required\n// // // //               minLength={10}\n// // // //               maxLength={2000}\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"form-group checkbox\">\n// // // //             <label>\n// // // //               <input\n// // // //                 type=\"checkbox\"\n// // // //                 checked={formData.isFeatured}\n// // // //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// // // //               />\n// // // //               <FiTarget />\n// // // //               Featured Project\n// // // //             </label>\n// // // //           </div>\n\n// // // //           <div className=\"modal-actions\">\n// // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // //               Cancel\n// // // //             </button>\n// // // //             <button \n// // // //               type=\"submit\" \n// // // //               className=\"primary-button\" \n// // // //               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n// // // //             >\n// // // //               {loading ? 'Creating...' : 'Create Project'}\n// // // //             </button>\n// // // //           </div>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SubDomainManagement;\n\n// // // // // // src/components/domains/SubDomainManagement.js - UPDATED WITH ADD PROJECT FEATURE\n// // // // // import React, { useState, useEffect } from 'react';\n// // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // import { authService } from '../../services/authService';\n// // // // // import { toast } from 'react-toastify';\n// // // // // import {\n// // // // //   FiPlus,\n// // // // //   FiEdit,\n// // // // //   FiTrash2,\n// // // // //   FiChevronDown,\n// // // // //   FiChevronRight,\n// // // // //   FiFolder,\n// // // // //   FiFolderPlus,\n// // // // //   FiFileText,\n// // // // //   FiArrowLeft,\n// // // // //   FiMoreVertical,\n// // // // //   FiMove,\n// // // // //   FiTarget\n// // // // // } from 'react-icons/fi';\n\n// // // // // const SubDomainManagement = () => {\n// // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // //   const { domainId } = useParams();\n// // // // //   const navigate = useNavigate();\n\n// // // // //   const [domain, setDomain] = useState(null);\n// // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // //   const [loading, setLoading] = useState(true);\n// // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // //   // NEW: Project creation state\n// // // // //   const [showProjectModal, setShowProjectModal] = useState(false);\n// // // // //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // //     domainId,\n// // // // //     domain: domain?.title,\n// // // // //     subDomainsCount: subDomains.length,\n// // // // //     loading,\n// // // // //     selectedParent: selectedParent?.title,\n// // // // //     expandedCount: expandedNodes.size,\n// // // // //     showProjectModal,\n// // // // //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// // // // //   });\n\n// // // // //   useEffect(() => {\n// // // // //     if (domainId) {\n// // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     }\n// // // // //   }, [domainId]);\n\n// // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // //     try {\n// // // // //       setLoading(true);\n\n// // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n\n// // // // //       // Get domain details\n// // // // //       const domainsResponse = await authService.getDomains();\n// // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // //       let domainData = null;\n// // // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // // //       if (domains.length > 0) {\n// // // // //         domainData = domains.find(d => d.id == domainId);\n// // // // //       }\n\n// // // // //       if (!domainData) {\n// // // // //         domainData = {\n// // // // //           id: domainId,\n// // // // //           title: `Domain ${domainId}`,\n// // // // //           description: 'Domain not found in list',\n// // // // //           projectCount: 0\n// // // // //         };\n// // // // //       }\n\n// // // // //       setDomain(domainData);\n\n// // // // //       // Get subdomains\n// // // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// // // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // // //       setSubDomains(subDomainsData);\n\n// // // // //       // Auto-expand first level\n// // // // //       if (subDomainsData.length > 0) {\n// // // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // //       }\n\n// // // // //       // Try hierarchy API as fallback\n// // // // //       try {\n// // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // // //           setSubDomains(hierarchyData.subDomains);\n// // // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // // //           }\n// // // // //         }\n// // // // //       } catch (hierarchyError) {\n// // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// // // // //       }\n\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // //       toast.error('Failed to fetch domain information');\n\n// // // // //       setDomain({\n// // // // //         id: domainId,\n// // // // //         title: `Domain ${domainId}`,\n// // // // //         description: 'Error loading domain details',\n// // // // //         projectCount: 0\n// // // // //       });\n// // // // //       setSubDomains([]);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// // // // //     setSelectedParent(parent);\n// // // // //     setEditingSubDomain(null);\n// // // // //     setShowAddModal(true);\n// // // // //   };\n\n// // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// // // // //     setSelectedParent(null);\n// // // // //     setEditingSubDomain(subDomain);\n// // // // //     setShowAddModal(true);\n// // // // //   };\n\n// // // // //   // NEW: Handle adding project to subdomain\n// // // // //   const handleAddProjectToSubDomain = (subDomain) => {\n// // // // //     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n// // // // //     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n\n// // // // //     if (subDomain.children && subDomain.children.length > 0) {\n// // // // //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// // // // //       return;\n// // // // //     }\n\n// // // // //     setSelectedSubDomainForProject(subDomain);\n// // // // //     setShowProjectModal(true);\n// // // // //   };\n\n// // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // //     if (hasChildren) {\n// // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // //     }\n// // // // //     if (hasProjects) {\n// // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // //     }\n\n// // // // //     if (!window.confirm(confirmMessage)) {\n// // // // //       return;\n// // // // //     }\n\n// // // // //     try {\n// // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n// // // // //       toast.success('Sub-domain deleted successfully');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // //       toast.error('Failed to delete sub-domain');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const toggleExpanded = (nodeId) => {\n// // // // //     const newExpanded = new Set(expandedNodes);\n// // // // //     if (newExpanded.has(nodeId)) {\n// // // // //       newExpanded.delete(nodeId);\n// // // // //     } else {\n// // // // //       newExpanded.add(nodeId);\n// // // // //     }\n// // // // //     setExpandedNodes(newExpanded);\n// // // // //   };\n\n// // // // //   if (loading) {\n// // // // //     return (\n// // // // //       <div className=\"loading-container\">\n// // // // //         <div className=\"loading-spinner\"></div>\n// // // // //         <p>Loading sub-domains...</p>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   return (\n// // // // //     <div className=\"subdomain-management\">\n// // // // //       {/* Header with Breadcrumb */}\n// // // // //       <div className=\"page-header\">\n// // // // //         <div className=\"header-content\">\n// // // // //           <div className=\"breadcrumb\">\n// // // // //             <button \n// // // // //               className=\"breadcrumb-link\"\n// // // // //               onClick={() => navigate('/domains')}\n// // // // //             >\n// // // // //               <FiArrowLeft />\n// // // // //               Domains\n// // // // //             </button>\n// // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // //           </div>\n// // // // //           <h1>SubDomain Management</h1>\n// // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // //         </div>\n// // // // //         <div className=\"header-actions\">\n// // // // //           <button \n// // // // //             className=\"primary-button\" \n// // // // //             onClick={() => handleAddSubDomain()}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //             Add Root SubDomain\n// // // // //           </button>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Quick Guide */}\n// // // // //       <div className=\"quick-guide\">\n// // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // //         <div className=\"guide-steps\">\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">1</span>\n// // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">2</span>\n// // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">3</span>\n// // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">4</span>\n// // // // //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Domain Info Card */}\n// // // // //       {domain && (\n// // // // //         <div className=\"domain-info-card\">\n// // // // //           <div className=\"domain-icon\">\n// // // // //             <FiFolder />\n// // // // //           </div>\n// // // // //           <div className=\"domain-details\">\n// // // // //             <h3>{domain.title}</h3>\n// // // // //             <p>{domain.description}</p>\n// // // // //             <div className=\"domain-stats\">\n// // // // //               <span className=\"stat-item\">\n// // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // //               </span>\n// // // // //               <span className=\"stat-item\">\n// // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // //               </span>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {/* SubDomain Tree */}\n// // // // //       <div className=\"subdomain-tree-container\">\n// // // // //         <div className=\"tree-header\">\n// // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // //           <div className=\"tree-legend\">\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiFolder className=\"folder-icon\" />\n// // // // //               Has children\n// // // // //             </span>\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // //               Leaf (can have projects)\n// // // // //             </span>\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiFileText className=\"project-icon\" />\n// // // // //               Add Project\n// // // // //             </span>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         {subDomains.length > 0 ? (\n// // // // //           <div className=\"subdomain-tree\">\n// // // // //             {subDomains.map((subDomain) => (\n// // // // //               <SubDomainNode\n// // // // //                 key={subDomain.id}\n// // // // //                 subDomain={subDomain}\n// // // // //                 level={0}\n// // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // //                 onToggleExpanded={toggleExpanded}\n// // // // //                 onEdit={handleEditSubDomain}\n// // // // //                 onDelete={handleDeleteSubDomain}\n// // // // //                 onAddChild={handleAddSubDomain}\n// // // // //                 onAddProject={handleAddProjectToSubDomain} // NEW\n// // // // //                 expandedNodes={expandedNodes}\n// // // // //               />\n// // // // //             ))}\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div className=\"empty-tree-state\">\n// // // // //             <FiFolderPlus size={64} />\n// // // // //             <h3>No SubDomains Yet</h3>\n// // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // //             <div className=\"empty-state-examples\">\n// // // // //               <h4>Example Structure:</h4>\n// // // // //               <div className=\"example-tree\">\n// // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // //               </div>\n// // // // //             </div>\n// // // // //             <div className=\"empty-state-actions\">\n// // // // //               <button \n// // // // //                 className=\"primary-button large\" \n// // // // //                 onClick={() => handleAddSubDomain()}\n// // // // //               >\n// // // // //                 <FiPlus />\n// // // // //                 Create Your First SubDomain\n// // // // //               </button>\n// // // // //               <p className=\"help-text\">\n// // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // //               </p>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n\n// // // // //       {/* Add/Edit SubDomain Modal */}\n// // // // //       {showAddModal && (\n// // // // //         <SubDomainModal\n// // // // //           subDomain={editingSubDomain}\n// // // // //           parent={selectedParent}\n// // // // //           domain={domain}\n// // // // //           onClose={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //           }}\n// // // // //           onSave={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //             fetchDomainAndSubDomains();\n// // // // //           }}\n// // // // //         />\n// // // // //       )}\n\n// // // // //       {/* NEW: Project Creation Modal */}\n// // // // //       {showProjectModal && (\n// // // // //         <ProjectModal\n// // // // //           subDomain={selectedSubDomainForProject}\n// // // // //           domain={domain}\n// // // // //           onClose={() => {\n// // // // //             setShowProjectModal(false);\n// // // // //             setSelectedSubDomainForProject(null);\n// // // // //           }}\n// // // // //           onSave={() => {\n// // // // //             setShowProjectModal(false);\n// // // // //             setSelectedSubDomainForProject(null);\n// // // // //             toast.success('Project created successfully!');\n// // // // //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// // // // //           }}\n// // // // //         />\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // UPDATED SubDomain Node Component\n// // // // // const SubDomainNode = ({ \n// // // // //   subDomain, \n// // // // //   level, \n// // // // //   isExpanded, \n// // // // //   onToggleExpanded, \n// // // // //   onEdit, \n// // // // //   onDelete, \n// // // // //   onAddChild,\n// // // // //   onAddProject, // NEW\n// // // // //   expandedNodes \n// // // // // }) => {\n// // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //   const isLeaf = !hasChildren;\n\n// // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // //     title: subDomain.title,\n// // // // //     level,\n// // // // //     hasChildren,\n// // // // //     isLeaf,\n// // // // //     isExpanded,\n// // // // //     projectCount: subDomain.projectCount\n// // // // //   });\n\n// // // // //   return (\n// // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // //       <div className=\"node-content\">\n// // // // //         <div className=\"node-main\">\n// // // // //           {hasChildren ? (\n// // // // //             <button \n// // // // //               className=\"expand-button\"\n// // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // //             >\n// // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // //             </button>\n// // // // //           ) : (\n// // // // //             <div className=\"expand-placeholder\" />\n// // // // //           )}\n\n// // // // //           <div className=\"node-icon\">\n// // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // //           </div>\n\n// // // // //           <div className=\"node-info\">\n// // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // //             <div className=\"node-stats\">\n// // // // //               {hasChildren && (\n// // // // //                 <span className=\"stat-badge\">\n// // // // //                   {subDomain.children.length} sub-domains\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {subDomain.projectCount > 0 && (\n// // // // //                 <span className=\"stat-badge projects\">\n// // // // //                   {subDomain.projectCount} projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {isLeaf && (\n// // // // //                 <span className=\"stat-badge leaf\">\n// // // // //                   Can have projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         <div className=\"node-actions\">\n// // // // //           {/* NEW: Add Project Button for Leaf Subdomains */}\n// // // // //           {isLeaf && (\n// // // // //             <button \n// // // // //               className=\"action-button project\" \n// // // // //               onClick={() => onAddProject(subDomain)}\n// // // // //               title={`Add project to \"${subDomain.title}\"`}\n// // // // //             >\n// // // // //               <FiFileText />\n// // // // //             </button>\n// // // // //           )}\n\n// // // // //           <button \n// // // // //             className=\"action-button add\" \n// // // // //             onClick={() => onAddChild(subDomain)}\n// // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //           </button>\n\n// // // // //           <div className=\"action-menu\">\n// // // // //             <button \n// // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // //               title=\"More actions\"\n// // // // //             >\n// // // // //               <FiMoreVertical />\n// // // // //             </button>\n// // // // //             {showMenu && (\n// // // // //               <div className=\"dropdown-menu\">\n// // // // //                 {/* NEW: Add Project Option for Leaf Subdomains */}\n// // // // //                 {isLeaf && (\n// // // // //                   <button \n// // // // //                     onClick={() => {\n// // // // //                       onAddProject(subDomain);\n// // // // //                       setShowMenu(false);\n// // // // //                     }}\n// // // // //                     className=\"primary-option\"\n// // // // //                   >\n// // // // //                     <FiFileText /> Add Project\n// // // // //                   </button>\n// // // // //                 )}\n// // // // //                 <button onClick={() => {\n// // // // //                   onEdit(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }}>\n// // // // //                   <FiEdit /> Edit SubDomain\n// // // // //                 </button>\n// // // // //                 <button onClick={() => {\n// // // // //                   onAddChild(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }}>\n// // // // //                   <FiPlus /> Add Child SubDomain\n// // // // //                 </button>\n// // // // //                 <button onClick={() => {\n// // // // //                   onDelete(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }} className=\"danger\">\n// // // // //                   <FiTrash2 /> Delete SubDomain\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Children */}\n// // // // //       {hasChildren && isExpanded && (\n// // // // //         <div className=\"node-children\">\n// // // // //           {subDomain.children.map((child) => (\n// // // // //             <SubDomainNode\n// // // // //               key={child.id}\n// // // // //               subDomain={child}\n// // // // //               level={level + 1}\n// // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // //               onToggleExpanded={onToggleExpanded}\n// // // // //               onEdit={onEdit}\n// // // // //               onDelete={onDelete}\n// // // // //               onAddChild={onAddChild}\n// // // // //               onAddProject={onAddProject} // NEW\n// // // // //               expandedNodes={expandedNodes}\n// // // // //             />\n// // // // //           ))}\n// // // // //         </div>\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Modal Component (unchanged)\n// // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // //   const [formData, setFormData] = useState({\n// // // // //     title: subDomain?.title || '',\n// // // // //     description: subDomain?.description || ''\n// // // // //   });\n// // // // //   const [loading, setLoading] = useState(false);\n\n// // // // //   const handleSubmit = async (e) => {\n// // // // //     e.preventDefault();\n// // // // //     setLoading(true);\n\n// // // // //     try {\n// // // // //       const requestData = {\n// // // // //         title: formData.title.trim(),\n// // // // //         description: formData.description.trim(),\n// // // // //         domainId: domain.id,\n// // // // //         parentId: parent?.id || null\n// // // // //       };\n\n// // // // //       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n// // // // //       if (subDomain) {\n// // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // //         toast.success('Sub-domain updated successfully');\n// // // // //       } else {\n// // // // //         const response = await authService.createSubDomain(requestData);\n// // // // //         toast.success('Sub-domain created successfully');\n// // // // //       }\n\n// // // // //       onSave();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// // // // //       toast.error(errorMessage);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getModalTitle = () => {\n// // // // //     if (subDomain) {\n// // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // //     }\n// // // // //     if (parent) {\n// // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // //     }\n// // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"modal-overlay\">\n// // // // //       <div className=\"modal\">\n// // // // //         <div className=\"modal-header\">\n// // // // //           <h2>{getModalTitle()}</h2>\n// // // // //           <button onClick={onClose}>√ó</button>\n// // // // //         </div>\n\n// // // // //         <form onSubmit={handleSubmit}>\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>SubDomain Title *</label>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={formData.title}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // //               required\n// // // // //               minLength={3}\n// // // // //               maxLength={100}\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Description (Optional)</label>\n// // // // //             <textarea\n// // // // //               value={formData.description}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // //               rows={3}\n// // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // //               maxLength={500}\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"modal-info\">\n// // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // //             {parent && (\n// // // // //               <>\n// // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // //               </>\n// // // // //             )}\n// // // // //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// // // // //           </div>\n\n// // // // //           <div className=\"modal-actions\">\n// // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // //               Cancel\n// // // // //             </button>\n// // // // //             <button \n// // // // //               type=\"submit\" \n// // // // //               className=\"primary-button\" \n// // // // //               disabled={loading || !formData.title.trim()}\n// // // // //             >\n// // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </form>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // NEW: Project Modal Component for SubDomain context\n// // // // // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// // // // //   const [formData, setFormData] = useState({\n// // // // //     title: '',\n// // // // //     abstract: '',\n// // // // //     specifications: '',\n// // // // //     learningOutcomes: '',\n// // // // //     subDomainId: subDomain?.id || '',\n// // // // //     isFeatured: false\n// // // // //   });\n// // // // //   const [loading, setLoading] = useState(false);\n\n// // // // //   console.log('üìù PROJECT MODAL - Props:', {\n// // // // //     subDomain: subDomain?.title,\n// // // // //     domain: domain?.title,\n// // // // //     formData\n// // // // //   });\n\n// // // // //   const handleSubmit = async (e) => {\n// // // // //     e.preventDefault();\n// // // // //     setLoading(true);\n\n// // // // //     try {\n// // // // //       console.log('üíæ PROJECT SAVE - Starting API call with data:', formData);\n\n// // // // //       const response = await authService.createProject(formData);\n// // // // //       console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n\n// // // // //       onSave();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå PROJECT SAVE - Error:', error);\n// // // // //       toast.error('Failed to create project');\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"modal-overlay\">\n// // // // //       <div className=\"modal large\">\n// // // // //         <div className=\"modal-header\">\n// // // // //           <h2>Add Project to: {subDomain?.title}</h2>\n// // // // //           <button onClick={onClose}>√ó</button>\n// // // // //         </div>\n\n// // // // //         <form onSubmit={handleSubmit}>\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Project Title *</label>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={formData.title}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // //               placeholder=\"Enter project title...\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"modal-info\">\n// // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// // // // //             <span className=\"info-note\">\n// // // // //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// // // // //             </span>\n// // // // //           </div>\n\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Abstract *</label>\n// // // // //             <textarea\n// // // // //               value={formData.abstract}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// // // // //               rows={4}\n// // // // //               placeholder=\"Brief description of the project...\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Specifications *</label>\n// // // // //             <textarea\n// // // // //               value={formData.specifications}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// // // // //               rows={6}\n// // // // //               placeholder=\"Technical specifications and requirements...\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Learning Outcomes *</label>\n// // // // //             <textarea\n// // // // //               value={formData.learningOutcomes}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// // // // //               rows={4}\n// // // // //               placeholder=\"What will students learn from this project...\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"form-group checkbox\">\n// // // // //             <label>\n// // // // //               <input\n// // // // //                 type=\"checkbox\"\n// // // // //                 checked={formData.isFeatured}\n// // // // //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// // // // //               />\n// // // // //               <FiTarget />\n// // // // //               Featured Project\n// // // // //             </label>\n// // // // //           </div>\n\n// // // // //           <div className=\"modal-actions\">\n// // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // //               Cancel\n// // // // //             </button>\n// // // // //             <button \n// // // // //               type=\"submit\" \n// // // // //               className=\"primary-button\" \n// // // // //               disabled={loading || !formData.title || !formData.abstract}\n// // // // //             >\n// // // // //               {loading ? 'Creating...' : 'Create Project'}\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </form>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // export default SubDomainManagement;\n\n// // // // // // // src/components/domains/SubDomainManagement.js - CORRECTED VERSION\n// // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // import { authService } from '../../services/authService';\n// // // // // // import { toast } from 'react-toastify';\n// // // // // // import {\n// // // // // //   FiPlus,\n// // // // // //   FiEdit,\n// // // // // //   FiTrash2,\n// // // // // //   FiChevronDown,\n// // // // // //   FiChevronRight,\n// // // // // //   FiFolder,\n// // // // // //   FiFolderPlus,\n// // // // // //   FiFileText,\n// // // // // //   FiArrowLeft,\n// // // // // //   FiMoreVertical,\n// // // // // //   FiMove,\n// // // // // //   FiTarget\n// // // // // // } from 'react-icons/fi';\n\n// // // // // // const SubDomainManagement = () => {\n// // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // //   const { domainId } = useParams();\n// // // // // //   const navigate = useNavigate();\n\n// // // // // //   const [domain, setDomain] = useState(null);\n// // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // //   const [loading, setLoading] = useState(true);\n// // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // //     domainId,\n// // // // // //     domain: domain?.title,\n// // // // // //     subDomainsCount: subDomains.length,\n// // // // // //     loading,\n// // // // // //     selectedParent: selectedParent?.title,\n// // // // // //     expandedCount: expandedNodes.size\n// // // // // //   });\n\n// // // // // //   useEffect(() => {\n// // // // // //     if (domainId) {\n// // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // //       fetchDomainAndSubDomains();\n// // // // // //     }\n// // // // // //   }, [domainId]);\n\n// // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // //     try {\n// // // // // //       setLoading(true);\n\n// // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // //       // ‚úÖ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n// // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains (no params)');\n// // // // // //       const domainsResponse = await authService.getDomains();\n// // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // //       // Extract specific domain from response\n// // // // // //       let domainData = null;\n// // // // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // // // //       if (domains.length > 0) {\n// // // // // //         domainData = domains.find(d => d.id == domainId);\n// // // // // //       }\n\n// // // // // //       console.log('üéØ SUBDOMAIN FETCH - Found domain:', domainData);\n\n// // // // // //       // If we don't have domain data, create a placeholder\n// // // // // //       if (!domainData) {\n// // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // //         domainData = {\n// // // // // //           id: domainId,\n// // // // // //           title: `Domain ${domainId}`,\n// // // // // //           description: 'Domain not found in list',\n// // // // // //           projectCount: 0\n// // // // // //         };\n// // // // // //       }\n\n// // // // // //       setDomain(domainData);\n\n// // // // // //       // ‚úÖ CORRECTED: Get subdomains using the correct API\n// // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n// // // // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// // // // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n\n// // // // // //       setSubDomains(subDomainsData);\n\n// // // // // //       // Auto-expand first level\n// // // // // //       if (subDomainsData.length > 0) {\n// // // // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // // //         console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // //       }\n\n// // // // // //       // ‚úÖ ALTERNATIVE: Try hierarchy API as fallback\n// // // // // //       try {\n// // // // // //         console.log('üåê SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n// // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // // // //           console.log('üéØ SUBDOMAIN FETCH - Using hierarchy data instead');\n// // // // // //           setSubDomains(hierarchyData.subDomains);\n\n// // // // // //           // Update domain info if more complete\n// // // // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // // // //           }\n// // // // // //         }\n// // // // // //       } catch (hierarchyError) {\n// // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n// // // // // //       }\n\n// // // // // //     } catch (error) {\n// // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // //       // Create fallback domain\n// // // // // //       setDomain({\n// // // // // //         id: domainId,\n// // // // // //         title: `Domain ${domainId}`,\n// // // // // //         description: 'Error loading domain details',\n// // // // // //         projectCount: 0\n// // // // // //       });\n// // // // // //       setSubDomains([]);\n// // // // // //     } finally {\n// // // // // //       setLoading(false);\n// // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // //     setSelectedParent(parent);\n// // // // // //     setEditingSubDomain(null);\n// // // // // //     setShowAddModal(true);\n\n// // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // //       showAddModal: true, \n// // // // // //       selectedParent: parent?.title,\n// // // // // //       editingSubDomain: null \n// // // // // //     });\n// // // // // //   };\n\n// // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // //     setSelectedParent(null);\n// // // // // //     setEditingSubDomain(subDomain);\n// // // // // //     setShowAddModal(true);\n// // // // // //   };\n\n// // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // //     if (hasChildren) {\n// // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // //     }\n// // // // // //     if (hasProjects) {\n// // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // //     }\n\n// // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // //       return;\n// // // // // //     }\n\n// // // // // //     try {\n// // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // //       fetchDomainAndSubDomains();\n// // // // // //     } catch (error) {\n// // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // //       newExpanded.delete(nodeId);\n// // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // //     } else {\n// // // // // //       newExpanded.add(nodeId);\n// // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // //     }\n// // // // // //     setExpandedNodes(newExpanded);\n// // // // // //   };\n\n// // // // // //   if (loading) {\n// // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // //     return (\n// // // // // //       <div className=\"loading-container\">\n// // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // //         <p>Loading sub-domains...</p>\n// // // // // //       </div>\n// // // // // //     );\n// // // // // //   }\n\n// // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // //   return (\n// // // // // //     <div className=\"subdomain-management\">\n// // // // // //       {/* Header with Breadcrumb */}\n// // // // // //       <div className=\"page-header\">\n// // // // // //         <div className=\"header-content\">\n// // // // // //           <div className=\"breadcrumb\">\n// // // // // //             <button \n// // // // // //               className=\"breadcrumb-link\"\n// // // // // //               onClick={() => navigate('/domains')}\n// // // // // //             >\n// // // // // //               <FiArrowLeft />\n// // // // // //               Domains\n// // // // // //             </button>\n// // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // //           </div>\n// // // // // //           <h1>SubDomain Management</h1>\n// // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // //         </div>\n// // // // // //         <div className=\"header-actions\">\n// // // // // //           <button \n// // // // // //             className=\"primary-button\" \n// // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // //           >\n// // // // // //             <FiPlus />\n// // // // // //             Add Root SubDomain\n// // // // // //           </button>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Quick Guide */}\n// // // // // //       <div className=\"quick-guide\">\n// // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // //         <div className=\"guide-steps\">\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">1</span>\n// // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // //           </div>\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">2</span>\n// // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // //           </div>\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">3</span>\n// // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Domain Info Card */}\n// // // // // //       {domain && (\n// // // // // //         <div className=\"domain-info-card\">\n// // // // // //           <div className=\"domain-icon\">\n// // // // // //             <FiFolder />\n// // // // // //           </div>\n// // // // // //           <div className=\"domain-details\">\n// // // // // //             <h3>{domain.title}</h3>\n// // // // // //             <p>{domain.description}</p>\n// // // // // //             <div className=\"domain-stats\">\n// // // // // //               <span className=\"stat-item\">\n// // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // //               </span>\n// // // // // //               <span className=\"stat-item\">\n// // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // //               </span>\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       )}\n\n// // // // // //       {/* SubDomain Tree */}\n// // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // //         <div className=\"tree-header\">\n// // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // //           <div className=\"tree-legend\">\n// // // // // //             <span className=\"legend-item\">\n// // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // //               Has children\n// // // // // //             </span>\n// // // // // //             <span className=\"legend-item\">\n// // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // //               Leaf (can have projects)\n// // // // // //             </span>\n// // // // // //           </div>\n// // // // // //         </div>\n\n// // // // // //         {subDomains.length > 0 ? (\n// // // // // //           <div className=\"subdomain-tree\">\n// // // // // //             {subDomains.map((subDomain) => (\n// // // // // //               <SubDomainNode\n// // // // // //                 key={subDomain.id}\n// // // // // //                 subDomain={subDomain}\n// // // // // //                 level={0}\n// // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // //                 onEdit={handleEditSubDomain}\n// // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // //                 expandedNodes={expandedNodes}\n// // // // // //               />\n// // // // // //             ))}\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div className=\"empty-tree-state\">\n// // // // // //             <FiFolderPlus size={64} />\n// // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // //             <div className=\"empty-state-examples\">\n// // // // // //               <h4>Example Structure:</h4>\n// // // // // //               <div className=\"example-tree\">\n// // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // //               </div>\n// // // // // //             </div>\n// // // // // //             <div className=\"empty-state-actions\">\n// // // // // //               <button \n// // // // // //                 className=\"primary-button large\" \n// // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // //               >\n// // // // // //                 <FiPlus />\n// // // // // //                 Create Your First SubDomain\n// // // // // //               </button>\n// // // // // //               <p className=\"help-text\">\n// // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // //               </p>\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n\n// // // // // //       {/* Add/Edit Modal */}\n// // // // // //       {showAddModal && (\n// // // // // //         <SubDomainModal\n// // // // // //           subDomain={editingSubDomain}\n// // // // // //           parent={selectedParent}\n// // // // // //           domain={domain}\n// // // // // //           onClose={() => {\n// // // // // //             setShowAddModal(false);\n// // // // // //             setEditingSubDomain(null);\n// // // // // //             setSelectedParent(null);\n// // // // // //           }}\n// // // // // //           onSave={() => {\n// // // // // //             setShowAddModal(false);\n// // // // // //             setEditingSubDomain(null);\n// // // // // //             setSelectedParent(null);\n// // // // // //             fetchDomainAndSubDomains();\n// // // // // //           }}\n// // // // // //         />\n// // // // // //       )}\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // // SubDomain Node Component\n// // // // // // const SubDomainNode = ({ \n// // // // // //   subDomain, \n// // // // // //   level, \n// // // // // //   isExpanded, \n// // // // // //   onToggleExpanded, \n// // // // // //   onEdit, \n// // // // // //   onDelete, \n// // // // // //   onAddChild,\n// // // // // //   expandedNodes \n// // // // // // }) => {\n// // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // //   const isLeaf = !hasChildren;\n\n// // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // //     title: subDomain.title,\n// // // // // //     level,\n// // // // // //     hasChildren,\n// // // // // //     isLeaf,\n// // // // // //     isExpanded,\n// // // // // //     projectCount: subDomain.projectCount\n// // // // // //   });\n\n// // // // // //   return (\n// // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // //       <div className=\"node-content\">\n// // // // // //         <div className=\"node-main\">\n// // // // // //           {hasChildren ? (\n// // // // // //             <button \n// // // // // //               className=\"expand-button\"\n// // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // //             >\n// // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // //             </button>\n// // // // // //           ) : (\n// // // // // //             <div className=\"expand-placeholder\" />\n// // // // // //           )}\n\n// // // // // //           <div className=\"node-icon\">\n// // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // //           </div>\n\n// // // // // //           <div className=\"node-info\">\n// // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // //             <div className=\"node-stats\">\n// // // // // //               {hasChildren && (\n// // // // // //                 <span className=\"stat-badge\">\n// // // // // //                   {subDomain.children.length} sub-domains\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //               {subDomain.projectCount > 0 && (\n// // // // // //                 <span className=\"stat-badge projects\">\n// // // // // //                   {subDomain.projectCount} projects\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //               {isLeaf && (\n// // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // //                   Can have projects\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         </div>\n\n// // // // // //         <div className=\"node-actions\">\n// // // // // //           <button \n// // // // // //             className=\"action-button add\" \n// // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // //           >\n// // // // // //             <FiPlus />\n// // // // // //           </button>\n// // // // // //           <div className=\"action-menu\">\n// // // // // //             <button \n// // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // //               title=\"More actions\"\n// // // // // //             >\n// // // // // //               <FiMoreVertical />\n// // // // // //             </button>\n// // // // // //             {showMenu && (\n// // // // // //               <div className=\"dropdown-menu\">\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onEdit(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }}>\n// // // // // //                   <FiEdit /> Edit\n// // // // // //                 </button>\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onAddChild(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }}>\n// // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // //                 </button>\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onDelete(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }} className=\"danger\">\n// // // // // //                   <FiTrash2 /> Delete\n// // // // // //                 </button>\n// // // // // //               </div>\n// // // // // //             )}\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Children */}\n// // // // // //       {hasChildren && isExpanded && (\n// // // // // //         <div className=\"node-children\">\n// // // // // //           {subDomain.children.map((child) => (\n// // // // // //             <SubDomainNode\n// // // // // //               key={child.id}\n// // // // // //               subDomain={child}\n// // // // // //               level={level + 1}\n// // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // //               onEdit={onEdit}\n// // // // // //               onDelete={onDelete}\n// // // // // //               onAddChild={onAddChild}\n// // // // // //               expandedNodes={expandedNodes}\n// // // // // //             />\n// // // // // //           ))}\n// // // // // //         </div>\n// // // // // //       )}\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // // SubDomain Modal Component - CORRECTED VERSION\n// // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // //   const [formData, setFormData] = useState({\n// // // // // //     title: subDomain?.title || '',\n// // // // // //     description: subDomain?.description || ''\n// // // // // //   });\n// // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // //     isEditing: !!subDomain,\n// // // // // //     parentTitle: parent?.title,\n// // // // // //     domainTitle: domain?.title,\n// // // // // //     formData\n// // // // // //   });\n\n// // // // // //   const handleSubmit = async (e) => {\n// // // // // //     e.preventDefault();\n// // // // // //     setLoading(true);\n\n// // // // // //     try {\n// // // // // //       const requestData = {\n// // // // // //         title: formData.title.trim(),\n// // // // // //         description: formData.description.trim(),\n// // // // // //         domainId: domain.id,\n// // // // // //         parentId: parent?.id || null\n// // // // // //       };\n\n// // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // //       if (subDomain) {\n// // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // //       } else {\n// // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // //         toast.success('Sub-domain created successfully');\n// // // // // //       }\n\n// // // // // //       onSave();\n// // // // // //     } catch (error) {\n// // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n\n// // // // // //       const errorMessage = error.response?.data?.message || \n// // // // // //                           error.response?.data?.error || \n// // // // // //                           'Failed to save sub-domain';\n// // // // // //       toast.error(errorMessage);\n// // // // // //     } finally {\n// // // // // //       setLoading(false);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const getModalTitle = () => {\n// // // // // //     if (subDomain) {\n// // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // //     }\n// // // // // //     if (parent) {\n// // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // //     }\n// // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // //   };\n\n// // // // // //   const getLevel = () => {\n// // // // // //     if (!parent) return 'Root Level';\n// // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <div className=\"modal-overlay\">\n// // // // // //       <div className=\"modal\">\n// // // // // //         <div className=\"modal-header\">\n// // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // //         </div>\n\n// // // // // //         <form onSubmit={handleSubmit}>\n// // // // // //           <div className=\"form-group\">\n// // // // // //             <label>SubDomain Title *</label>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={formData.title}\n// // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // //               required\n// // // // // //               minLength={3}\n// // // // // //               maxLength={100}\n// // // // // //             />\n// // // // // //           </div>\n\n// // // // // //           <div className=\"form-group\">\n// // // // // //             <label>Description (Optional)</label>\n// // // // // //             <textarea\n// // // // // //               value={formData.description}\n// // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // //               rows={3}\n// // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // //               maxLength={500}\n// // // // // //             />\n// // // // // //           </div>\n\n// // // // // //           <div className=\"modal-info\">\n// // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // //             {parent && (\n// // // // // //               <>\n// // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // //               </>\n// // // // // //             )}\n// // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // //           </div>\n\n// // // // // //           <div className=\"modal-actions\">\n// // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // //               Cancel\n// // // // // //             </button>\n// // // // // //             <button \n// // // // // //               type=\"submit\" \n// // // // // //               className=\"primary-button\" \n// // // // // //               disabled={loading || !formData.title.trim()}\n// // // // // //             >\n// // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // //             </button>\n// // // // // //           </div>\n// // // // // //         </form>\n// // // // // //       </div>\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // export default SubDomainManagement;\n\n// // // // // // // // src/components/domains/SubDomainManagement.js - CORRECTED VERSION\n// // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // import { authService } from '../../services/authService';\n// // // // // // // import { toast } from 'react-toastify';\n// // // // // // // import {\n// // // // // // //   FiPlus,\n// // // // // // //   FiEdit,\n// // // // // // //   FiTrash2,\n// // // // // // //   FiChevronDown,\n// // // // // // //   FiChevronRight,\n// // // // // // //   FiFolder,\n// // // // // // //   FiFolderPlus,\n// // // // // // //   FiFileText,\n// // // // // // //   FiArrowLeft,\n// // // // // // //   FiMoreVertical,\n// // // // // // //   FiMove,\n// // // // // // //   FiTarget\n// // // // // // // } from 'react-icons/fi';\n\n// // // // // // // const SubDomainManagement = () => {\n// // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // //   const { domainId } = useParams();\n// // // // // // //   const navigate = useNavigate();\n\n// // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // //     domainId,\n// // // // // // //     domain: domain?.title,\n// // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // //     loading,\n// // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // //     expandedCount: expandedNodes.size\n// // // // // // //   });\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     if (domainId) {\n// // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // //       fetchDomainAndSubDomains();\n// // // // // // //     }\n// // // // // // //   }, [domainId]);\n\n// // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // //     try {\n// // // // // // //       setLoading(true);\n\n// // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // //       // ‚úÖ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n// // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains (no params)');\n// // // // // // //       const domainsResponse = await authService.getDomains();\n// // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // // //       // Extract specific domain from response\n// // // // // // //       let domainData = null;\n// // // // // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // // // // //       if (domains.length > 0) {\n// // // // // // //         domainData = domains.find(d => d.id == domainId);\n// // // // // // //       }\n\n// // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Found domain:', domainData);\n\n// // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // //       if (!domainData) {\n// // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // //         domainData = {\n// // // // // // //           id: domainId,\n// // // // // // //           title: `Domain ${domainId}`,\n// // // // // // //           description: 'Domain not found in list',\n// // // // // // //           projectCount: 0\n// // // // // // //         };\n// // // // // // //       }\n\n// // // // // // //       setDomain(domainData);\n\n// // // // // // //       // ‚úÖ CORRECTED: Get subdomains using the correct API\n// // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n// // // // // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n\n// // // // // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n\n// // // // // // //       setSubDomains(subDomainsData);\n\n// // // // // // //       // Auto-expand first level\n// // // // // // //       if (subDomainsData.length > 0) {\n// // // // // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // // // //         console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // //       }\n\n// // // // // // //       // ‚úÖ ALTERNATIVE: Try hierarchy API as fallback\n// // // // // // //       try {\n// // // // // // //         console.log('üåê SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n// // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // // // // //           console.log('üéØ SUBDOMAIN FETCH - Using hierarchy data instead');\n// // // // // // //           setSubDomains(hierarchyData.subDomains);\n\n// // // // // // //           // Update domain info if more complete\n// // // // // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // // // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // // // // //           }\n// // // // // // //         }\n// // // // // // //       } catch (hierarchyError) {\n// // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n// // // // // // //       }\n\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // // //       // Create fallback domain\n// // // // // // //       setDomain({\n// // // // // // //         id: domainId,\n// // // // // // //         title: `Domain ${domainId}`,\n// // // // // // //         description: 'Error loading domain details',\n// // // // // // //         projectCount: 0\n// // // // // // //       });\n// // // // // // //       setSubDomains([]);\n// // // // // // //     } finally {\n// // // // // // //       setLoading(false);\n// // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // //     setSelectedParent(parent);\n// // // // // // //     setEditingSubDomain(null);\n// // // // // // //     setShowAddModal(true);\n\n// // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // //       showAddModal: true, \n// // // // // // //       selectedParent: parent?.title,\n// // // // // // //       editingSubDomain: null \n// // // // // // //     });\n// // // // // // //   };\n\n// // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // //     setSelectedParent(null);\n// // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // //     setShowAddModal(true);\n// // // // // // //   };\n\n// // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // //     if (hasChildren) {\n// // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // //     }\n// // // // // // //     if (hasProjects) {\n// // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // //     }\n\n// // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // //       return;\n// // // // // // //     }\n\n// // // // // // //     try {\n// // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // //       fetchDomainAndSubDomains();\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // //       newExpanded.delete(nodeId);\n// // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // //     } else {\n// // // // // // //       newExpanded.add(nodeId);\n// // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // //     }\n// // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // //   };\n\n// // // // // // //   if (loading) {\n// // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // //     return (\n// // // // // // //       <div className=\"loading-container\">\n// // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // //       </div>\n// // // // // // //     );\n// // // // // // //   }\n\n// // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // //   return (\n// // // // // // //     <div className=\"subdomain-management\">\n// // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // //       <div className=\"page-header\">\n// // // // // // //         <div className=\"header-content\">\n// // // // // // //           <div className=\"breadcrumb\">\n// // // // // // //             <button \n// // // // // // //               className=\"breadcrumb-link\"\n// // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // //             >\n// // // // // // //               <FiArrowLeft />\n// // // // // // //               Domains\n// // // // // // //             </button>\n// // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // //           </div>\n// // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // //         </div>\n// // // // // // //         <div className=\"header-actions\">\n// // // // // // //           <button \n// // // // // // //             className=\"primary-button\" \n// // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // //           >\n// // // // // // //             <FiPlus />\n// // // // // // //             Add Root SubDomain\n// // // // // // //           </button>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Quick Guide */}\n// // // // // // //       <div className=\"quick-guide\">\n// // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // //         <div className=\"guide-steps\">\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // //           </div>\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // //           </div>\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Domain Info Card */}\n// // // // // // //       {domain && (\n// // // // // // //         <div className=\"domain-info-card\">\n// // // // // // //           <div className=\"domain-icon\">\n// // // // // // //             <FiFolder />\n// // // // // // //           </div>\n// // // // // // //           <div className=\"domain-details\">\n// // // // // // //             <h3>{domain.title}</h3>\n// // // // // // //             <p>{domain.description}</p>\n// // // // // // //             <div className=\"domain-stats\">\n// // // // // // //               <span className=\"stat-item\">\n// // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // //               </span>\n// // // // // // //               <span className=\"stat-item\">\n// // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // //               </span>\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       )}\n\n// // // // // // //       {/* SubDomain Tree */}\n// // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // //         <div className=\"tree-header\">\n// // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // //           <div className=\"tree-legend\">\n// // // // // // //             <span className=\"legend-item\">\n// // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // //               Has children\n// // // // // // //             </span>\n// // // // // // //             <span className=\"legend-item\">\n// // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // //               Leaf (can have projects)\n// // // // // // //             </span>\n// // // // // // //           </div>\n// // // // // // //         </div>\n\n// // // // // // //         {subDomains.length > 0 ? (\n// // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // //               <SubDomainNode\n// // // // // // //                 key={subDomain.id}\n// // // // // // //                 subDomain={subDomain}\n// // // // // // //                 level={0}\n// // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // //               />\n// // // // // // //             ))}\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // //             <FiFolderPlus size={64} />\n// // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // //               <h4>Example Structure:</h4>\n// // // // // // //               <div className=\"example-tree\">\n// // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // //               </div>\n// // // // // // //             </div>\n// // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // //               <button \n// // // // // // //                 className=\"primary-button large\" \n// // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // //               >\n// // // // // // //                 <FiPlus />\n// // // // // // //                 Create Your First SubDomain\n// // // // // // //               </button>\n// // // // // // //               <p className=\"help-text\">\n// // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // //               </p>\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n\n// // // // // // //       {/* Add/Edit Modal */}\n// // // // // // //       {showAddModal && (\n// // // // // // //         <SubDomainModal\n// // // // // // //           subDomain={editingSubDomain}\n// // // // // // //           parent={selectedParent}\n// // // // // // //           domain={domain}\n// // // // // // //           onClose={() => {\n// // // // // // //             setShowAddModal(false);\n// // // // // // //             setEditingSubDomain(null);\n// // // // // // //             setSelectedParent(null);\n// // // // // // //           }}\n// // // // // // //           onSave={() => {\n// // // // // // //             setShowAddModal(false);\n// // // // // // //             setEditingSubDomain(null);\n// // // // // // //             setSelectedParent(null);\n// // // // // // //             fetchDomainAndSubDomains();\n// // // // // // //           }}\n// // // // // // //         />\n// // // // // // //       )}\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // // SubDomain Node Component\n// // // // // // // const SubDomainNode = ({ \n// // // // // // //   subDomain, \n// // // // // // //   level, \n// // // // // // //   isExpanded, \n// // // // // // //   onToggleExpanded, \n// // // // // // //   onEdit, \n// // // // // // //   onDelete, \n// // // // // // //   onAddChild,\n// // // // // // //   expandedNodes \n// // // // // // // }) => {\n// // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // //     title: subDomain.title,\n// // // // // // //     level,\n// // // // // // //     hasChildren,\n// // // // // // //     isLeaf,\n// // // // // // //     isExpanded,\n// // // // // // //     projectCount: subDomain.projectCount\n// // // // // // //   });\n\n// // // // // // //   return (\n// // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // //       <div className=\"node-content\">\n// // // // // // //         <div className=\"node-main\">\n// // // // // // //           {hasChildren ? (\n// // // // // // //             <button \n// // // // // // //               className=\"expand-button\"\n// // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // //             >\n// // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // //             </button>\n// // // // // // //           ) : (\n// // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // //           )}\n\n// // // // // // //           <div className=\"node-icon\">\n// // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // //           </div>\n\n// // // // // // //           <div className=\"node-info\">\n// // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // //             <div className=\"node-stats\">\n// // // // // // //               {hasChildren && (\n// // // // // // //                 <span className=\"stat-badge\">\n// // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // //                   {subDomain.projectCount} projects\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //               {isLeaf && (\n// // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // //                   Can have projects\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         </div>\n\n// // // // // // //         <div className=\"node-actions\">\n// // // // // // //           <button \n// // // // // // //             className=\"action-button add\" \n// // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // //           >\n// // // // // // //             <FiPlus />\n// // // // // // //           </button>\n// // // // // // //           <div className=\"action-menu\">\n// // // // // // //             <button \n// // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // //               title=\"More actions\"\n// // // // // // //             >\n// // // // // // //               <FiMoreVertical />\n// // // // // // //             </button>\n// // // // // // //             {showMenu && (\n// // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onEdit(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }}>\n// // // // // // //                   <FiEdit /> Edit\n// // // // // // //                 </button>\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onAddChild(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }}>\n// // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // //                 </button>\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onDelete(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }} className=\"danger\">\n// // // // // // //                   <FiTrash2 /> Delete\n// // // // // // //                 </button>\n// // // // // // //               </div>\n// // // // // // //             )}\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Children */}\n// // // // // // //       {hasChildren && isExpanded && (\n// // // // // // //         <div className=\"node-children\">\n// // // // // // //           {subDomain.children.map((child) => (\n// // // // // // //             <SubDomainNode\n// // // // // // //               key={child.id}\n// // // // // // //               subDomain={child}\n// // // // // // //               level={level + 1}\n// // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // //               onEdit={onEdit}\n// // // // // // //               onDelete={onDelete}\n// // // // // // //               onAddChild={onAddChild}\n// // // // // // //               expandedNodes={expandedNodes}\n// // // // // // //             />\n// // // // // // //           ))}\n// // // // // // //         </div>\n// // // // // // //       )}\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // // SubDomain Modal Component - CORRECTED VERSION\n// // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // //   const [formData, setFormData] = useState({\n// // // // // // //     title: subDomain?.title || '',\n// // // // // // //     description: subDomain?.description || ''\n// // // // // // //   });\n// // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // //     isEditing: !!subDomain,\n// // // // // // //     parentTitle: parent?.title,\n// // // // // // //     domainTitle: domain?.title,\n// // // // // // //     formData\n// // // // // // //   });\n\n// // // // // // //   const handleSubmit = async (e) => {\n// // // // // // //     e.preventDefault();\n// // // // // // //     setLoading(true);\n\n// // // // // // //     try {\n// // // // // // //       const requestData = {\n// // // // // // //         title: formData.title.trim(),\n// // // // // // //         description: formData.description.trim(),\n// // // // // // //         domainId: domain.id,\n// // // // // // //         parentId: parent?.id || null\n// // // // // // //       };\n\n// // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // //       if (subDomain) {\n// // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // //       } else {\n// // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // //       }\n\n// // // // // // //       onSave();\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n\n// // // // // // //       const errorMessage = error.response?.data?.message || \n// // // // // // //                           error.response?.data?.error || \n// // // // // // //                           'Failed to save sub-domain';\n// // // // // // //       toast.error(errorMessage);\n// // // // // // //     } finally {\n// // // // // // //       setLoading(false);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const getModalTitle = () => {\n// // // // // // //     if (subDomain) {\n// // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // //     }\n// // // // // // //     if (parent) {\n// // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // //     }\n// // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // //   };\n\n// // // // // // //   const getLevel = () => {\n// // // // // // //     if (!parent) return 'Root Level';\n// // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <div className=\"modal-overlay\">\n// // // // // // //       <div className=\"modal\">\n// // // // // // //         <div className=\"modal-header\">\n// // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // //         </div>\n\n// // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // //           <div className=\"form-group\">\n// // // // // // //             <label>SubDomain Title *</label>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={formData.title}\n// // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // //               required\n// // // // // // //               minLength={3}\n// // // // // // //               maxLength={100}\n// // // // // // //             />\n// // // // // // //           </div>\n\n// // // // // // //           <div className=\"form-group\">\n// // // // // // //             <label>Description (Optional)</label>\n// // // // // // //             <textarea\n// // // // // // //               value={formData.description}\n// // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // //               rows={3}\n// // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // //               maxLength={500}\n// // // // // // //             />\n// // // // // // //           </div>\n\n// // // // // // //           <div className=\"modal-info\">\n// // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // //             {parent && (\n// // // // // // //               <>\n// // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // //               </>\n// // // // // // //             )}\n// // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // //           </div>\n\n// // // // // // //           <div className=\"modal-actions\">\n// // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // //               Cancel\n// // // // // // //             </button>\n// // // // // // //             <button \n// // // // // // //               type=\"submit\" \n// // // // // // //               className=\"primary-button\" \n// // // // // // //               disabled={loading || !formData.title.trim()}\n// // // // // // //             >\n// // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // //             </button>\n// // // // // // //           </div>\n// // // // // // //         </form>\n// // // // // // //       </div>\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // export default SubDomainManagement;\n\n// // // // // // // // // src/components/domains/SubDomainManagement.js - FIXED VERSION\n// // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // import {\n// // // // // // // //   FiPlus,\n// // // // // // // //   FiEdit,\n// // // // // // // //   FiTrash2,\n// // // // // // // //   FiChevronDown,\n// // // // // // // //   FiChevronRight,\n// // // // // // // //   FiFolder,\n// // // // // // // //   FiFolderPlus,\n// // // // // // // //   FiFileText,\n// // // // // // // //   FiArrowLeft,\n// // // // // // // //   FiMoreVertical,\n// // // // // // // //   FiMove,\n// // // // // // // //   FiTarget\n// // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // const SubDomainManagement = () => {\n// // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // // //   const { domainId } = useParams();\n// // // // // // // //   const navigate = useNavigate();\n\n// // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // //     domainId,\n// // // // // // // //     domain: domain?.title,\n// // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // //     loading,\n// // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // //   });\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     if (domainId) {\n// // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // //     }\n// // // // // // // //   }, [domainId]);\n\n// // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // //     try {\n// // // // // // // //       setLoading(true);\n\n// // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // // //       // First, let's try to get domain details\n// // // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // // // //       // Extract domain from response\n// // // // // // // //       let domainData = null;\n// // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // //       }\n\n// // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // //       if (!domainData) {\n// // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // //         domainData = {\n// // // // // // // //           id: domainId,\n// // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // //           description: 'Loading domain details...',\n// // // // // // // //           projectCount: 0\n// // // // // // // //         };\n// // // // // // // //       }\n\n// // // // // // // //       setDomain(domainData);\n\n// // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // //       try {\n// // // // // // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // // //         // Auto-expand first level\n// // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // //         }\n// // // // // // // //       } catch (hierarchyError) {\n// // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // //         setSubDomains([]);\n// // // // // // // //       }\n\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // // // //       // Create fallback domain\n// // // // // // // //       setDomain({\n// // // // // // // //         id: domainId,\n// // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // //         description: 'Error loading domain details',\n// // // // // // // //         projectCount: 0\n// // // // // // // //       });\n// // // // // // // //       setSubDomains([]);\n// // // // // // // //     } finally {\n// // // // // // // //       setLoading(false);\n// // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // // //     setSelectedParent(parent);\n// // // // // // // //     setEditingSubDomain(null);\n// // // // // // // //     setShowAddModal(true);\n\n// // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // //       showAddModal: true, \n// // // // // // // //       selectedParent: parent?.title,\n// // // // // // // //       editingSubDomain: null \n// // // // // // // //     });\n// // // // // // // //   };\n\n// // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // // //     setSelectedParent(null);\n// // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // //     setShowAddModal(true);\n// // // // // // // //   };\n\n// // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // //     if (hasChildren) {\n// // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // //     }\n// // // // // // // //     if (hasProjects) {\n// // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // //     }\n\n// // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // //       return;\n// // // // // // // //     }\n\n// // // // // // // //     try {\n// // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // //     } else {\n// // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // //     }\n// // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // //   };\n\n// // // // // // // //   if (loading) {\n// // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // // //     return (\n// // // // // // // //       <div className=\"loading-container\">\n// // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // //       </div>\n// // // // // // // //     );\n// // // // // // // //   }\n\n// // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // //   return (\n// // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // //       <div className=\"page-header\">\n// // // // // // // //         <div className=\"header-content\">\n// // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // //             <button \n// // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // //             >\n// // // // // // // //               <FiArrowLeft />\n// // // // // // // //               Domains\n// // // // // // // //             </button>\n// // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // //           </div>\n// // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // //         </div>\n// // // // // // // //         <div className=\"header-actions\">\n// // // // // // // //           <button \n// // // // // // // //             className=\"primary-button\" \n// // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // //           >\n// // // // // // // //             <FiPlus />\n// // // // // // // //             Add Root SubDomain\n// // // // // // // //           </button>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Quick Guide */}\n// // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Domain Info Card */}\n// // // // // // // //       {domain && (\n// // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // //             <FiFolder />\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"domain-details\">\n// // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // //             <p>{domain.description}</p>\n// // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // //               <span className=\"stat-item\">\n// // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // //               </span>\n// // // // // // // //               <span className=\"stat-item\">\n// // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // //               </span>\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       )}\n\n// // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // //         <div className=\"tree-header\">\n// // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // //             <span className=\"legend-item\">\n// // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // //               Has children\n// // // // // // // //             </span>\n// // // // // // // //             <span className=\"legend-item\">\n// // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // //               Leaf (can have projects)\n// // // // // // // //             </span>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n\n// // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // //               <SubDomainNode\n// // // // // // // //                 key={subDomain.id}\n// // // // // // // //                 subDomain={subDomain}\n// // // // // // // //                 level={0}\n// // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // //               />\n// // // // // // // //             ))}\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // //               <div className=\"example-tree\">\n// // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // //               </div>\n// // // // // // // //             </div>\n// // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // //               <button \n// // // // // // // //                 className=\"primary-button large\" \n// // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // //               >\n// // // // // // // //                 <FiPlus />\n// // // // // // // //                 Create Your First SubDomain\n// // // // // // // //               </button>\n// // // // // // // //               <p className=\"help-text\">\n// // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // //               </p>\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // //       {showAddModal && (\n// // // // // // // //         <SubDomainModal\n// // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // //           parent={selectedParent}\n// // // // // // // //           domain={domain}\n// // // // // // // //           onClose={() => {\n// // // // // // // //             setShowAddModal(false);\n// // // // // // // //             setEditingSubDomain(null);\n// // // // // // // //             setSelectedParent(null);\n// // // // // // // //           }}\n// // // // // // // //           onSave={() => {\n// // // // // // // //             setShowAddModal(false);\n// // // // // // // //             setEditingSubDomain(null);\n// // // // // // // //             setSelectedParent(null);\n// // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // //           }}\n// // // // // // // //         />\n// // // // // // // //       )}\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // // SubDomain Node Component\n// // // // // // // // const SubDomainNode = ({ \n// // // // // // // //   subDomain, \n// // // // // // // //   level, \n// // // // // // // //   isExpanded, \n// // // // // // // //   onToggleExpanded, \n// // // // // // // //   onEdit, \n// // // // // // // //   onDelete, \n// // // // // // // //   onAddChild,\n// // // // // // // //   expandedNodes \n// // // // // // // // }) => {\n// // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // //     title: subDomain.title,\n// // // // // // // //     level,\n// // // // // // // //     hasChildren,\n// // // // // // // //     isLeaf,\n// // // // // // // //     isExpanded,\n// // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // //   });\n\n// // // // // // // //   return (\n// // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // //       <div className=\"node-content\">\n// // // // // // // //         <div className=\"node-main\">\n// // // // // // // //           {hasChildren ? (\n// // // // // // // //             <button \n// // // // // // // //               className=\"expand-button\"\n// // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // //             >\n// // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // //             </button>\n// // // // // // // //           ) : (\n// // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // //           )}\n\n// // // // // // // //           <div className=\"node-icon\">\n// // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // //           </div>\n\n// // // // // // // //           <div className=\"node-info\">\n// // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // //             <div className=\"node-stats\">\n// // // // // // // //               {hasChildren && (\n// // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //               {isLeaf && (\n// // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // //                   Can have projects\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n\n// // // // // // // //         <div className=\"node-actions\">\n// // // // // // // //           <button \n// // // // // // // //             className=\"action-button add\" \n// // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // //           >\n// // // // // // // //             <FiPlus />\n// // // // // // // //           </button>\n// // // // // // // //           <div className=\"action-menu\">\n// // // // // // // //             <button \n// // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // //               title=\"More actions\"\n// // // // // // // //             >\n// // // // // // // //               <FiMoreVertical />\n// // // // // // // //             </button>\n// // // // // // // //             {showMenu && (\n// // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onEdit(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }}>\n// // // // // // // //                   <FiEdit /> Edit\n// // // // // // // //                 </button>\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onAddChild(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }}>\n// // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // //                 </button>\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onDelete(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }} className=\"danger\">\n// // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // //                 </button>\n// // // // // // // //               </div>\n// // // // // // // //             )}\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Children */}\n// // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // //         <div className=\"node-children\">\n// // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // //             <SubDomainNode\n// // // // // // // //               key={child.id}\n// // // // // // // //               subDomain={child}\n// // // // // // // //               level={level + 1}\n// // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // //               onEdit={onEdit}\n// // // // // // // //               onDelete={onDelete}\n// // // // // // // //               onAddChild={onAddChild}\n// // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // //             />\n// // // // // // // //           ))}\n// // // // // // // //         </div>\n// // // // // // // //       )}\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // // SubDomain Modal Component - FIXED VERSION\n// // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // //     title: subDomain?.title || '',\n// // // // // // // //     description: subDomain?.description || ''\n// // // // // // // //   });\n// // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // //     isEditing: !!subDomain,\n// // // // // // // //     parentTitle: parent?.title,\n// // // // // // // //     domainTitle: domain?.title,\n// // // // // // // //     formData\n// // // // // // // //   });\n\n// // // // // // // //   // Enhanced slug generation with better validation\n// // // // // // // //   const generateSlug = (title) => {\n// // // // // // // //     if (!title || title.trim() === '') {\n// // // // // // // //       return '';\n// // // // // // // //     }\n\n// // // // // // // //     let slug = title\n// // // // // // // //       .toLowerCase()\n// // // // // // // //       .trim()\n// // // // // // // //       .replace(/[^a-z0-9\\s-]/g, '') // Remove special chars except spaces and hyphens\n// // // // // // // //       .replace(/\\s+/g, '-')         // Replace spaces with hyphens\n// // // // // // // //       .replace(/-+/g, '-')          // Remove consecutive hyphens\n// // // // // // // //       .replace(/^-|-$/g, '');       // Remove leading/trailing hyphens\n\n// // // // // // // //     // Ensure minimum length - if too short, add timestamp\n// // // // // // // //     if (slug.length < 3) {\n// // // // // // // //       slug = slug + '-' + Date.now().toString().slice(-4);\n// // // // // // // //     }\n\n// // // // // // // //     // Ensure maximum length\n// // // // // // // //     if (slug.length > 50) {\n// // // // // // // //       slug = slug.substring(0, 50).replace(/-$/, '');\n// // // // // // // //     }\n\n// // // // // // // //     return slug;\n// // // // // // // //   };\n\n// // // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // //     e.preventDefault();\n// // // // // // // //     setLoading(true);\n\n// // // // // // // //     try {\n// // // // // // // //       // Generate slug from title\n// // // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // // //       // Validate slug\n// // // // // // // //       if (!slug || slug.length < 3) {\n// // // // // // // //         toast.error('Title must generate a valid slug (at least 3 characters)');\n// // // // // // // //         setLoading(false);\n// // // // // // // //         return;\n// // // // // // // //       }\n\n// // // // // // // //       const requestData = {\n// // // // // // // //         title: formData.title.trim(),\n// // // // // // // //         description: formData.description.trim(),\n\n// // // // // // // //         domainId: domain.id,\n// // // // // // // //         parentId: parent?.id || null\n// // // // // // // //       };\n\n// // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // //       console.log('üîç SUBDOMAIN SAVE - Generated slug:', slug, 'Length:', slug.length);\n// // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // //       if (subDomain) {\n// // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // //       } else {\n// // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // //       }\n\n// // // // // // // //       onSave();\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n\n// // // // // // // //       // Better error handling\n// // // // // // // //       const errorMessage = error.response?.data?.message || \n// // // // // // // //                           error.response?.data?.error || \n// // // // // // // //                           'Failed to save sub-domain';\n// // // // // // // //       toast.error(errorMessage);\n// // // // // // // //     } finally {\n// // // // // // // //       setLoading(false);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const getModalTitle = () => {\n// // // // // // // //     if (subDomain) {\n// // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // //     }\n// // // // // // // //     if (parent) {\n// // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // //     }\n// // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // //   };\n\n// // // // // // // //   const getLevel = () => {\n// // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // //     // This is a simplified level calculation\n// // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // //       <div className=\"modal\">\n// // // // // // // //         <div className=\"modal-header\">\n// // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // //         </div>\n\n// // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // //           <div className=\"form-group\">\n// // // // // // // //             <label>SubDomain Title *</label>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={formData.title}\n// // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // //               required\n// // // // // // // //               minLength={3}\n// // // // // // // //               maxLength={100}\n// // // // // // // //             />\n// // // // // // // //             {formData.title && (\n// // // // // // // //               <div className=\"slug-preview\">\n// // // // // // // //                 <small>\n// // // // // // // //                   URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code>\n// // // // // // // //                   {slugPreview && slugPreview.length < 3 && (\n// // // // // // // //                     <span style={{color: 'red'}}> (Too short - needs at least 3 chars)</span>\n// // // // // // // //                   )}\n// // // // // // // //                 </small>\n// // // // // // // //               </div>\n// // // // // // // //             )}\n// // // // // // // //           </div>\n\n// // // // // // // //           <div className=\"form-group\">\n// // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // //             <textarea\n// // // // // // // //               value={formData.description}\n// // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // //               rows={3}\n// // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // //               maxLength={500}\n// // // // // // // //             />\n// // // // // // // //           </div>\n\n// // // // // // // //           <div className=\"modal-info\">\n// // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // //             {parent && (\n// // // // // // // //               <>\n// // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // //               </>\n// // // // // // // //             )}\n// // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // //           </div>\n\n// // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // //               Cancel\n// // // // // // // //             </button>\n// // // // // // // //             <button \n// // // // // // // //               type=\"submit\" \n// // // // // // // //               className=\"primary-button\" \n// // // // // // // //               disabled={loading || !formData.title.trim() || slugPreview.length < 3}\n// // // // // // // //             >\n// // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // //             </button>\n// // // // // // // //           </div>\n// // // // // // // //         </form>\n// // // // // // // //       </div>\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // export default SubDomainManagement;\n\n// // // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // import {\n// // // // // // // // //   FiPlus,\n// // // // // // // // //   FiEdit,\n// // // // // // // // //   FiTrash2,\n// // // // // // // // //   FiChevronDown,\n// // // // // // // // //   FiChevronRight,\n// // // // // // // // //   FiFolder,\n// // // // // // // // //   FiFolderPlus,\n// // // // // // // // //   FiFileText,\n// // // // // // // // //   FiArrowLeft,\n// // // // // // // // //   FiMoreVertical,\n// // // // // // // // //   FiMove,\n// // // // // // // // //   FiTarget\n// // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // //   const navigate = useNavigate();\n\n// // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // //     domainId,\n// // // // // // // // //     domain: domain?.title,\n// // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // //     loading,\n// // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // //   });\n\n// // // // // // // // //   useEffect(() => {\n// // // // // // // // //     if (domainId) {\n// // // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // //     }\n// // // // // // // // //   }, [domainId]);\n\n// // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // //     try {\n// // // // // // // // //       setLoading(true);\n\n// // // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // // // //       // First, let's try to get domain details\n// // // // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // // // // //       // Extract domain from response\n// // // // // // // // //       let domainData = null;\n// // // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // // //       }\n\n// // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // // //       if (!domainData) {\n// // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // // //         domainData = {\n// // // // // // // // //           id: domainId,\n// // // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // // //           description: 'Loading domain details...',\n// // // // // // // // //           projectCount: 0\n// // // // // // // // //         };\n// // // // // // // // //       }\n\n// // // // // // // // //       setDomain(domainData);\n\n// // // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // // //       try {\n// // // // // // // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // // // //         // Auto-expand first level\n// // // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // //         }\n// // // // // // // // //       } catch (hierarchyError) {\n// // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // // //         setSubDomains([]);\n// // // // // // // // //       }\n\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // // // // //       // Create fallback domain\n// // // // // // // // //       setDomain({\n// // // // // // // // //         id: domainId,\n// // // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // // //         description: 'Error loading domain details',\n// // // // // // // // //         projectCount: 0\n// // // // // // // // //       });\n// // // // // // // // //       setSubDomains([]);\n// // // // // // // // //     } finally {\n// // // // // // // // //       setLoading(false);\n// // // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // //     setShowAddModal(true);\n\n// // // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // //       showAddModal: true, \n// // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // //       editingSubDomain: null \n// // // // // // // // //     });\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // // // //     setSelectedParent(null);\n// // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // //     setShowAddModal(true);\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // //     if (hasChildren) {\n// // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // //     }\n// // // // // // // // //     if (hasProjects) {\n// // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // //     }\n\n// // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // //       return;\n// // // // // // // // //     }\n\n// // // // // // // // //     try {\n// // // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // //     } else {\n// // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // //     }\n// // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // //   };\n\n// // // // // // // // //   if (loading) {\n// // // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // // // //     return (\n// // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // //       </div>\n// // // // // // // // //     );\n// // // // // // // // //   }\n\n// // // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // //             <button \n// // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // //             >\n// // // // // // // // //               <FiArrowLeft />\n// // // // // // // // //               Domains\n// // // // // // // // //             </button>\n// // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // // //         </div>\n// // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // //           <button \n// // // // // // // // //             className=\"primary-button\" \n// // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // //           >\n// // // // // // // // //             <FiPlus />\n// // // // // // // // //             Add Root SubDomain\n// // // // // // // // //           </button>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // //       {domain && (\n// // // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // // //             <FiFolder />\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"domain-details\">\n// // // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // // //             <p>{domain.description}</p>\n// // // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // //               </span>\n// // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // //               </span>\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       )}\n\n// // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // //               Has children\n// // // // // // // // //             </span>\n// // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // //               Leaf (can have projects)\n// // // // // // // // //             </span>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n\n// // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // //               <SubDomainNode\n// // // // // // // // //                 key={subDomain.id}\n// // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // //                 level={0}\n// // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // //               />\n// // // // // // // // //             ))}\n// // // // // // // // //           </div>\n// // // // // // // // //         ) : (\n// // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // // //               </div>\n// // // // // // // // //             </div>\n// // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // //               <button \n// // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // //               >\n// // // // // // // // //                 <FiPlus />\n// // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // //               </button>\n// // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // //               </p>\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         )}\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // //       {showAddModal && (\n// // // // // // // // //         <SubDomainModal\n// // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // //           parent={selectedParent}\n// // // // // // // // //           domain={domain}\n// // // // // // // // //           onClose={() => {\n// // // // // // // // //             setShowAddModal(false);\n// // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // //             setSelectedParent(null);\n// // // // // // // // //           }}\n// // // // // // // // //           onSave={() => {\n// // // // // // // // //             setShowAddModal(false);\n// // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // //             setSelectedParent(null);\n// // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // //           }}\n// // // // // // // // //         />\n// // // // // // // // //       )}\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // // SubDomain Node Component\n// // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // //   subDomain, \n// // // // // // // // //   level, \n// // // // // // // // //   isExpanded, \n// // // // // // // // //   onToggleExpanded, \n// // // // // // // // //   onEdit, \n// // // // // // // // //   onDelete, \n// // // // // // // // //   onAddChild,\n// // // // // // // // //   expandedNodes \n// // // // // // // // // }) => {\n// // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // //     title: subDomain.title,\n// // // // // // // // //     level,\n// // // // // // // // //     hasChildren,\n// // // // // // // // //     isLeaf,\n// // // // // // // // //     isExpanded,\n// // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // //   });\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // //           {hasChildren ? (\n// // // // // // // // //             <button \n// // // // // // // // //               className=\"expand-button\"\n// // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // //             >\n// // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // //             </button>\n// // // // // // // // //           ) : (\n// // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // //           )}\n\n// // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // //           </div>\n\n// // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // //               {hasChildren && (\n// // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //               {isLeaf && (\n// // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // //                   Can have projects\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n\n// // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // //           <button \n// // // // // // // // //             className=\"action-button add\" \n// // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // //           >\n// // // // // // // // //             <FiPlus />\n// // // // // // // // //           </button>\n// // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // //             <button \n// // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // //               title=\"More actions\"\n// // // // // // // // //             >\n// // // // // // // // //               <FiMoreVertical />\n// // // // // // // // //             </button>\n// // // // // // // // //             {showMenu && (\n// // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onEdit(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }}>\n// // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // //                 </button>\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onAddChild(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }}>\n// // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // //                 </button>\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onDelete(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }} className=\"danger\">\n// // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // //                 </button>\n// // // // // // // // //               </div>\n// // // // // // // // //             )}\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Children */}\n// // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // //             <SubDomainNode\n// // // // // // // // //               key={child.id}\n// // // // // // // // //               subDomain={child}\n// // // // // // // // //               level={level + 1}\n// // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // //               onEdit={onEdit}\n// // // // // // // // //               onDelete={onDelete}\n// // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // //             />\n// // // // // // // // //           ))}\n// // // // // // // // //         </div>\n// // // // // // // // //       )}\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // //   });\n// // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // //     formData\n// // // // // // // // //   });\n\n// // // // // // // // //   // Generate slug preview\n// // // // // // // // //   const generateSlug = (title) => {\n// // // // // // // // //     return title\n// // // // // // // // //       .toLowerCase()\n// // // // // // // // //       .replace(/[^a-z0-9]/g, '-')\n// // // // // // // // //       .replace(/-+/g, '-')\n// // // // // // // // //       .replace(/^-|-$/g, '');\n// // // // // // // // //   };\n\n// // // // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // //     e.preventDefault();\n// // // // // // // // //     setLoading(true);\n\n// // // // // // // // //     try {\n// // // // // // // // //       // Generate slug from title\n// // // // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // // // //       const requestData = {\n// // // // // // // // //         ...formData,\n// // // // // // // // //         // slug: slug,\n// // // // // // // // //         domainId: domain.id,\n// // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // //       };\n\n// // // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Generated slug:', slug);\n// // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // //       if (subDomain) {\n// // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // //       } else {\n// // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // //       }\n\n// // // // // // // // //       onSave();\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // //     } finally {\n// // // // // // // // //       setLoading(false);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // //     if (subDomain) {\n// // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // //     }\n// // // // // // // // //     if (parent) {\n// // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // //     }\n// // // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // // //   };\n\n// // // // // // // // //   const getLevel = () => {\n// // // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // // //     // This is a simplified level calculation\n// // // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // // //   };\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // //       <div className=\"modal\">\n// // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // // //         </div>\n\n// // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={formData.title}\n// // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // //               required\n// // // // // // // // //             />\n// // // // // // // // //             {formData.title && (\n// // // // // // // // //               <div className=\"slug-preview\">\n// // // // // // // // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // // // // // // // //               </div>\n// // // // // // // // //             )}\n// // // // // // // // //           </div>\n\n// // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // //             <textarea\n// // // // // // // // //               value={formData.description}\n// // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // //               rows={3}\n// // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // //             />\n// // // // // // // // //           </div>\n\n// // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // // //             {parent && (\n// // // // // // // // //               <>\n// // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // //               </>\n// // // // // // // // //             )}\n// // // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // // //           </div>\n\n// // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // //               Cancel\n// // // // // // // // //             </button>\n// // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // //             </button>\n// // // // // // // // //           </div>\n// // // // // // // // //         </form>\n// // // // // // // // //       </div>\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // export default SubDomainManagement;\n\n// // // // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // // import {\n// // // // // // // // // //   FiPlus,\n// // // // // // // // // //   FiEdit,\n// // // // // // // // // //   FiTrash2,\n// // // // // // // // // //   FiChevronDown,\n// // // // // // // // // //   FiChevronRight,\n// // // // // // // // // //   FiFolder,\n// // // // // // // // // //   FiFolderPlus,\n// // // // // // // // // //   FiFileText,\n// // // // // // // // // //   FiArrowLeft,\n// // // // // // // // // //   FiMoreVertical,\n// // // // // // // // // //   FiMove,\n// // // // // // // // // //   FiTarget\n// // // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // // //   const navigate = useNavigate();\n\n// // // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // // //     domainId,\n// // // // // // // // // //     domain: domain?.title,\n// // // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // // //     loading,\n// // // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // // //   });\n\n// // // // // // // // // //   useEffect(() => {\n// // // // // // // // // //     if (domainId) {\n// // // // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // //     }\n// // // // // // // // // //   }, [domainId]);\n\n// // // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       setLoading(true);\n\n// // // // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // // // // //       // First, let's try to get domain details\n// // // // // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // // // // // //       // Extract domain from response\n// // // // // // // // // //       let domainData = null;\n// // // // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // // // //       }\n\n// // // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // // // //       if (!domainData) {\n// // // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // // // //         domainData = {\n// // // // // // // // // //           id: domainId,\n// // // // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // // // //           description: 'Loading domain details...',\n// // // // // // // // // //           projectCount: 0\n// // // // // // // // // //         };\n// // // // // // // // // //       }\n\n// // // // // // // // // //       setDomain(domainData);\n\n// // // // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // // // //       try {\n// // // // // // // // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // // // // //         // Auto-expand first level\n// // // // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // // //         }\n// // // // // // // // // //       } catch (hierarchyError) {\n// // // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // // // //         setSubDomains([]);\n// // // // // // // // // //       }\n\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // // // // // //       // Create fallback domain\n// // // // // // // // // //       setDomain({\n// // // // // // // // // //         id: domainId,\n// // // // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // // // //         description: 'Error loading domain details',\n// // // // // // // // // //         projectCount: 0\n// // // // // // // // // //       });\n// // // // // // // // // //       setSubDomains([]);\n// // // // // // // // // //     } finally {\n// // // // // // // // // //       setLoading(false);\n// // // // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // // //     setShowAddModal(true);\n\n// // // // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // // //       showAddModal: true, \n// // // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // // //       editingSubDomain: null \n// // // // // // // // // //     });\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // // // // //     setSelectedParent(null);\n// // // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // // //     setShowAddModal(true);\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // // //     if (hasChildren) {\n// // // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // // //     }\n// // // // // // // // // //     if (hasProjects) {\n// // // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // // //     }\n\n// // // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // // //       return;\n// // // // // // // // // //     }\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // // //     } else {\n// // // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // // //     }\n// // // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // // //   };\n\n// // // // // // // // // //   if (loading) {\n// // // // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // // // // //     return (\n// // // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     );\n// // // // // // // // // //   }\n\n// // // // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // // //             <button \n// // // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // // //             >\n// // // // // // // // // //               <FiArrowLeft />\n// // // // // // // // // //               Domains\n// // // // // // // // // //             </button>\n// // // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // // // //         </div>\n// // // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // // //           <button \n// // // // // // // // // //             className=\"primary-button\" \n// // // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // // //           >\n// // // // // // // // // //             <FiPlus />\n// // // // // // // // // //             Add Root SubDomain\n// // // // // // // // // //           </button>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // // //       {domain && (\n// // // // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // // // //             <FiFolder />\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"domain-details\">\n// // // // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // // // //             <p>{domain.description}</p>\n// // // // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // // //               </span>\n// // // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // // //               </span>\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       )}\n\n// // // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // // //               Has children\n// // // // // // // // // //             </span>\n// // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // // //               Leaf (can have projects)\n// // // // // // // // // //             </span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n\n// // // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // // //               <SubDomainNode\n// // // // // // // // // //                 key={subDomain.id}\n// // // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // // //                 level={0}\n// // // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // // //               />\n// // // // // // // // // //             ))}\n// // // // // // // // // //           </div>\n// // // // // // // // // //         ) : (\n// // // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             </div>\n// // // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // // //               <button \n// // // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // // //               >\n// // // // // // // // // //                 <FiPlus />\n// // // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // // //               </button>\n// // // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // // //               </p>\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         )}\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // // //       {showAddModal && (\n// // // // // // // // // //         <SubDomainModal\n// // // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // // //           parent={selectedParent}\n// // // // // // // // // //           domain={domain}\n// // // // // // // // // //           onClose={() => {\n// // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // //           }}\n// // // // // // // // // //           onSave={() => {\n// // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // // //           }}\n// // // // // // // // // //         />\n// // // // // // // // // //       )}\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // SubDomain Node Component\n// // // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // // //   subDomain, \n// // // // // // // // // //   level, \n// // // // // // // // // //   isExpanded, \n// // // // // // // // // //   onToggleExpanded, \n// // // // // // // // // //   onEdit, \n// // // // // // // // // //   onDelete, \n// // // // // // // // // //   onAddChild,\n// // // // // // // // // //   expandedNodes \n// // // // // // // // // // }) => {\n// // // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // // //     title: subDomain.title,\n// // // // // // // // // //     level,\n// // // // // // // // // //     hasChildren,\n// // // // // // // // // //     isLeaf,\n// // // // // // // // // //     isExpanded,\n// // // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // // //   });\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // // //           {hasChildren ? (\n// // // // // // // // // //             <button \n// // // // // // // // // //               className=\"expand-button\"\n// // // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // // //             >\n// // // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // // //             </button>\n// // // // // // // // // //           ) : (\n// // // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // // //           )}\n\n// // // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // // //           </div>\n\n// // // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // // //               {hasChildren && (\n// // // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //               {isLeaf && (\n// // // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // // //                   Can have projects\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n\n// // // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // // //           <button \n// // // // // // // // // //             className=\"action-button add\" \n// // // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // // //           >\n// // // // // // // // // //             <FiPlus />\n// // // // // // // // // //           </button>\n// // // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // // //             <button \n// // // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // // //               title=\"More actions\"\n// // // // // // // // // //             >\n// // // // // // // // // //               <FiMoreVertical />\n// // // // // // // // // //             </button>\n// // // // // // // // // //             {showMenu && (\n// // // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // //                   onEdit(subDomain);\n// // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // //                 }}>\n// // // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // // //                 </button>\n// // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // //                   onAddChild(subDomain);\n// // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // //                 }}>\n// // // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // // //                 </button>\n// // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // //                   onDelete(subDomain);\n// // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // //                 }} className=\"danger\">\n// // // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // // //                 </button>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             )}\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Children */}\n// // // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // // //             <SubDomainNode\n// // // // // // // // // //               key={child.id}\n// // // // // // // // // //               subDomain={child}\n// // // // // // // // // //               level={level + 1}\n// // // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // // //               onEdit={onEdit}\n// // // // // // // // // //               onDelete={onDelete}\n// // // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // // //             />\n// // // // // // // // // //           ))}\n// // // // // // // // // //         </div>\n// // // // // // // // // //       )}\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // // //   });\n// // // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // // //     formData\n// // // // // // // // // //   });\n\n// // // // // // // // // //   // Generate slug preview\n// // // // // // // // // //   const generateSlug = (title) => {\n// // // // // // // // // //     return title\n// // // // // // // // // //       .toLowerCase()\n// // // // // // // // // //       .replace(/[^a-z0-9]/g, '-')\n// // // // // // // // // //       .replace(/-+/g, '-')\n// // // // // // // // // //       .replace(/^-|-$/g, '');\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // // //     e.preventDefault();\n// // // // // // // // // //     setLoading(true);\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       // Generate slug from title\n// // // // // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // // // // //       const requestData = {\n// // // // // // // // // //         ...formData,\n// // // // // // // // // //         slug: slug,\n// // // // // // // // // //         domainId: domain.id,\n// // // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // // //       };\n\n// // // // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Generated slug:', slug);\n// // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // // //       if (subDomain) {\n// // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // // //       } else {\n// // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // // //       }\n\n// // // // // // // // // //       onSave();\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // // //     } finally {\n// // // // // // // // // //       setLoading(false);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // // //     if (subDomain) {\n// // // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // // //     }\n// // // // // // // // // //     if (parent) {\n// // // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // // //     }\n// // // // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const getLevel = () => {\n// // // // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // // // //     // This is a simplified level calculation\n// // // // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // // //       <div className=\"modal\">\n// // // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // // // //         </div>\n\n// // // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={formData.title}\n// // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // // //               required\n// // // // // // // // // //             />\n// // // // // // // // // //             {formData.title && (\n// // // // // // // // // //               <div className=\"slug-preview\">\n// // // // // // // // // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             )}\n// // // // // // // // // //           </div>\n\n// // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // // //             <textarea\n// // // // // // // // // //               value={formData.description}\n// // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // // //               rows={3}\n// // // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // // //             />\n// // // // // // // // // //           </div>\n\n// // // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // // // //             {parent && (\n// // // // // // // // // //               <>\n// // // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // // //               </>\n// // // // // // // // // //             )}\n// // // // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // // // //           </div>\n\n// // // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // // //               Cancel\n// // // // // // // // // //             </button>\n// // // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // // //             </button>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </form>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // export default SubDomainManagement;\n\n// // // // // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // // // import {\n// // // // // // // // // // //   FiPlus,\n// // // // // // // // // // //   FiEdit,\n// // // // // // // // // // //   FiTrash2,\n// // // // // // // // // // //   FiChevronDown,\n// // // // // // // // // // //   FiChevronRight,\n// // // // // // // // // // //   FiFolder,\n// // // // // // // // // // //   FiFolderPlus,\n// // // // // // // // // // //   FiFileText,\n// // // // // // // // // // //   FiArrowLeft,\n// // // // // // // // // // //   FiMoreVertical,\n// // // // // // // // // // //   FiMove,\n// // // // // // // // // // //   FiTarget\n// // // // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // // // //   const navigate = useNavigate();\n\n// // // // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // // // //     domainId,\n// // // // // // // // // // //     domain: domain?.title,\n// // // // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // // // //     loading,\n// // // // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // // // //   });\n\n// // // // // // // // // // //   useEffect(() => {\n// // // // // // // // // // //     if (domainId) {\n// // // // // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // // //     }\n// // // // // // // // // // //   }, [domainId]);\n\n// // // // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // // // //     try {\n// // // // // // // // // // //       setLoading(true);\n\n// // // // // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // // // // // //       // First, let's try to get domain details\n// // // // // // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // // // // // // // // //       // Extract domain from response\n// // // // // // // // // // //       let domainData = null;\n// // // // // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // // // // //       }\n\n// // // // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // // // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // // // // //       if (!domainData) {\n// // // // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // // // // //         domainData = {\n// // // // // // // // // // //           id: domainId,\n// // // // // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // // // // //           description: 'Loading domain details...',\n// // // // // // // // // // //           projectCount: 0\n// // // // // // // // // // //         };\n// // // // // // // // // // //       }\n\n// // // // // // // // // // //       setDomain(domainData);\n\n// // // // // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // // // // //       try {\n// // // // // // // // // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // // // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // // // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // // // // // //         // Auto-expand first level\n// // // // // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // // // //         }\n// // // // // // // // // // //       } catch (hierarchyError) {\n// // // // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // // // // //         setSubDomains([]);\n// // // // // // // // // // //       }\n\n// // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // // // //       toast.error('Failed to fetch domain information');\n\n// // // // // // // // // // //       // Create fallback domain\n// // // // // // // // // // //       setDomain({\n// // // // // // // // // // //         id: domainId,\n// // // // // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // // // // //         description: 'Error loading domain details',\n// // // // // // // // // // //         projectCount: 0\n// // // // // // // // // // //       });\n// // // // // // // // // // //       setSubDomains([]);\n// // // // // // // // // // //     } finally {\n// // // // // // // // // // //       setLoading(false);\n// // // // // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // // // //     }\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // // // //     setShowAddModal(true);\n\n// // // // // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // // // //       showAddModal: true, \n// // // // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // // // //       editingSubDomain: null \n// // // // // // // // // // //     });\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // // // // // //     setSelectedParent(null);\n// // // // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // // // //     setShowAddModal(true);\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // // // //     if (hasChildren) {\n// // // // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // // // //     }\n// // // // // // // // // // //     if (hasProjects) {\n// // // // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // // // //     }\n\n// // // // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // // // //       return;\n// // // // // // // // // // //     }\n\n// // // // // // // // // // //     try {\n// // // // // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // // // //     }\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // // // //     } else {\n// // // // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // // // //     }\n// // // // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   if (loading) {\n// // // // // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // // // // // //     return (\n// // // // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // // // //       </div>\n// // // // // // // // // // //     );\n// // // // // // // // // // //   }\n\n// // // // // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // // // //   return (\n// // // // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // // // //             <button \n// // // // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // // // //             >\n// // // // // // // // // // //               <FiArrowLeft />\n// // // // // // // // // // //               Domains\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // // // //           <button \n// // // // // // // // // // //             className=\"primary-button\" \n// // // // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // // // //           >\n// // // // // // // // // // //             <FiPlus />\n// // // // // // // // // // //             Add Root SubDomain\n// // // // // // // // // // //           </button>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       </div>\n\n// // // // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       </div>\n\n// // // // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // // // //       {domain && (\n// // // // // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // // // // //             <FiFolder />\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //           <div className=\"domain-details\">\n// // // // // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // // // // //             <p>{domain.description}</p>\n// // // // // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // // // //               </span>\n// // // // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // // // //               </span>\n// // // // // // // // // // //             </div>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       )}\n\n// // // // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // // // //               Has children\n// // // // // // // // // // //             </span>\n// // // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // // // //               Leaf (can have projects)\n// // // // // // // // // // //             </span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n\n// // // // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // // // //               <SubDomainNode\n// // // // // // // // // // //                 key={subDomain.id}\n// // // // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // // // //                 level={0}\n// // // // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // // // //               />\n// // // // // // // // // // //             ))}\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         ) : (\n// // // // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // // // // //               </div>\n// // // // // // // // // // //             </div>\n// // // // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // // // //               <button \n// // // // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // // // //               >\n// // // // // // // // // // //                 <FiPlus />\n// // // // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // // // //               </button>\n// // // // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // // // //               </p>\n// // // // // // // // // // //             </div>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         )}\n// // // // // // // // // // //       </div>\n\n// // // // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // // // //       {showAddModal && (\n// // // // // // // // // // //         <SubDomainModal\n// // // // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // // // //           parent={selectedParent}\n// // // // // // // // // // //           domain={domain}\n// // // // // // // // // // //           onClose={() => {\n// // // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // // //           }}\n// // // // // // // // // // //           onSave={() => {\n// // // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // // // //           }}\n// // // // // // // // // // //         />\n// // // // // // // // // // //       )}\n// // // // // // // // // // //     </div>\n// // // // // // // // // // //   );\n// // // // // // // // // // // };\n\n// // // // // // // // // // // // SubDomain Node Component\n// // // // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // // // //   subDomain, \n// // // // // // // // // // //   level, \n// // // // // // // // // // //   isExpanded, \n// // // // // // // // // // //   onToggleExpanded, \n// // // // // // // // // // //   onEdit, \n// // // // // // // // // // //   onDelete, \n// // // // // // // // // // //   onAddChild,\n// // // // // // // // // // //   expandedNodes \n// // // // // // // // // // // }) => {\n// // // // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // // // //     title: subDomain.title,\n// // // // // // // // // // //     level,\n// // // // // // // // // // //     hasChildren,\n// // // // // // // // // // //     isLeaf,\n// // // // // // // // // // //     isExpanded,\n// // // // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // // // //   });\n\n// // // // // // // // // // //   return (\n// // // // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // // // //           {hasChildren ? (\n// // // // // // // // // // //             <button \n// // // // // // // // // // //               className=\"expand-button\"\n// // // // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // // // //             >\n// // // // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //           ) : (\n// // // // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // // // //           )}\n\n// // // // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // // // //           </div>\n\n// // // // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // // // //               {hasChildren && (\n// // // // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // // // //                 </span>\n// // // // // // // // // // //               )}\n// // // // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // // // //                 </span>\n// // // // // // // // // // //               )}\n// // // // // // // // // // //               {isLeaf && (\n// // // // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // // // //                   Can have projects\n// // // // // // // // // // //                 </span>\n// // // // // // // // // // //               )}\n// // // // // // // // // // //             </div>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n\n// // // // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // // // //           <button \n// // // // // // // // // // //             className=\"action-button add\" \n// // // // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // // // //           >\n// // // // // // // // // // //             <FiPlus />\n// // // // // // // // // // //           </button>\n// // // // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // // // //             <button \n// // // // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // // // //               title=\"More actions\"\n// // // // // // // // // // //             >\n// // // // // // // // // // //               <FiMoreVertical />\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //             {showMenu && (\n// // // // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // // //                   onEdit(subDomain);\n// // // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // // //                 }}>\n// // // // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // // // //                 </button>\n// // // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // // //                   onAddChild(subDomain);\n// // // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // // //                 }}>\n// // // // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // // // //                 </button>\n// // // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // // //                   onDelete(subDomain);\n// // // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // // //                 }} className=\"danger\">\n// // // // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // // // //                 </button>\n// // // // // // // // // // //               </div>\n// // // // // // // // // // //             )}\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       </div>\n\n// // // // // // // // // // //       {/* Children */}\n// // // // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // // // //             <SubDomainNode\n// // // // // // // // // // //               key={child.id}\n// // // // // // // // // // //               subDomain={child}\n// // // // // // // // // // //               level={level + 1}\n// // // // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // // // //               onEdit={onEdit}\n// // // // // // // // // // //               onDelete={onDelete}\n// // // // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // // // //             />\n// // // // // // // // // // //           ))}\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       )}\n// // // // // // // // // // //     </div>\n// // // // // // // // // // //   );\n// // // // // // // // // // // };\n\n// // // // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // // // //   });\n// // // // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // // // //     formData\n// // // // // // // // // // //   });\n\n// // // // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // // // //     e.preventDefault();\n// // // // // // // // // // //     setLoading(true);\n\n// // // // // // // // // // //     try {\n// // // // // // // // // // //       const requestData = {\n// // // // // // // // // // //         ...formData,\n// // // // // // // // // // //         domainId: domain.id,\n// // // // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // // // //       };\n\n// // // // // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // // // //       if (subDomain) {\n// // // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // // // //       } else {\n// // // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // // // //       }\n\n// // // // // // // // // // //       onSave();\n// // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // // // //     } finally {\n// // // // // // // // // // //       setLoading(false);\n// // // // // // // // // // //     }\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // // // //     if (subDomain) {\n// // // // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // // // //     }\n// // // // // // // // // // //     if (parent) {\n// // // // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // // // //     }\n// // // // // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const getLevel = () => {\n// // // // // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // // // // //     // This is a simplified level calculation\n// // // // // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   return (\n// // // // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // // // //       <div className=\"modal\">\n// // // // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // // // // //         </div>\n\n// // // // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // // // //             <input\n// // // // // // // // // // //               type=\"text\"\n// // // // // // // // // // //               value={formData.title}\n// // // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // // // //               required\n// // // // // // // // // // //             />\n// // // // // // // // // // //           </div>\n\n// // // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // // // //             <textarea\n// // // // // // // // // // //               value={formData.description}\n// // // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // // // //               rows={3}\n// // // // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // // // //             />\n// // // // // // // // // // //           </div>\n\n// // // // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // // // // //             {parent && (\n// // // // // // // // // // //               <>\n// // // // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // // // //               </>\n// // // // // // // // // // //             )}\n// // // // // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // // // // //           </div>\n\n// // // // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // // // //               Cancel\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </form>\n// // // // // // // // // // //       </div>\n// // // // // // // // // // //     </div>\n// // // // // // // // // // //   );\n// // // // // // // // // // // };\n\n// // // // // // // // // // // export default SubDomainManagement;\n\n// // // // // // // // // // // // // src/components/domains/SubDomainManagement.js - NEW FILE\n// // // // // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // // // // import {\n// // // // // // // // // // // //   FiPlus,\n// // // // // // // // // // // //   FiEdit,\n// // // // // // // // // // // //   FiTrash2,\n// // // // // // // // // // // //   FiChevronDown,\n// // // // // // // // // // // //   FiChevronRight,\n// // // // // // // // // // // //   FiFolder,\n// // // // // // // // // // // //   FiFolderPlus,\n// // // // // // // // // // // //   FiFileText,\n// // // // // // // // // // // //   FiArrowLeft,\n// // // // // // // // // // // //   FiMoreVertical,\n// // // // // // // // // // // //   FiMove,\n// // // // // // // // // // // //   FiTarget\n// // // // // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // // // // //   const navigate = useNavigate();\n\n// // // // // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // // // // //     domainId,\n// // // // // // // // // // // //     domain: domain?.title,\n// // // // // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // // // // //     loading,\n// // // // // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // // // // //   });\n\n// // // // // // // // // // // //   useEffect(() => {\n// // // // // // // // // // // //     if (domainId) {\n// // // // // // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //   }, [domainId]);\n\n// // // // // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // // // // //     try {\n// // // // // // // // // // // //       setLoading(true);\n\n// // // // // // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // // // // // // // // //       // Fetch domain details and hierarchy\n// // // // // // // // // // // //       const [domainResponse, hierarchyResponse] = await Promise.all([\n// // // // // // // // // // // //         authService.getDomains({ id: domainId }),\n// // // // // // // // // // // //         authService.getDomainHierarchy(domainId)\n// // // // // // // // // // // //       ]);\n\n// // // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domain response:', domainResponse.data);\n// // // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // // // // // // // // //       const domainData = domainResponse.data?.domains?.[0] || \n// // // // // // // // // // // //                         domainResponse.data?.data?.domains?.[0] || \n// // // // // // // // // // // //                         domainResponse.data;\n\n// // // // // // // // // // // //       const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n\n// // // // // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n// // // // // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy:', hierarchyData);\n\n// // // // // // // // // // // //       setDomain(domainData);\n// // // // // // // // // // // //       setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // // // // // // // // //       // Auto-expand first level\n// // // // // // // // // // // //       if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // // // // //         const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // // // // //         console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // // // // //       }\n\n// // // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // // // // //       toast.error('Failed to fetch sub-domains');\n// // // // // // // // // // // //     } finally {\n// // // // // // // // // // // //       setLoading(false);\n// // // // // // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // // // // //     setShowAddModal(true);\n\n// // // // // // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // // // // //       showAddModal: true, \n// // // // // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // // // // //       editingSubDomain: null \n// // // // // // // // // // // //     });\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // // // // // // // // //     setSelectedParent(null);\n// // // // // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // // // // //     setShowAddModal(true);\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // // // // //     if (hasChildren) {\n// // // // // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //     if (hasProjects) {\n// // // // // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // // // // //     }\n\n// // // // // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // // // // //       return;\n// // // // // // // // // // // //     }\n\n// // // // // // // // // // // //     try {\n// // // // // // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // // // // //     } else {\n// // // // // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const isLeafNode = (subDomain) => {\n// // // // // // // // // // // //     return !subDomain.children || subDomain.children.length === 0;\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const getNodeLevel = (subDomain, level = 0) => {\n// // // // // // // // // // // //     return level;\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   if (loading) {\n// // // // // // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // // // // // // // // //     return (\n// // // // // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // // // // //       </div>\n// // // // // // // // // // // //     );\n// // // // // // // // // // // //   }\n\n// // // // // // // // // // // //   if (!domain) {\n// // // // // // // // // // // //     console.log('‚ùå SUBDOMAIN MANAGEMENT - Domain not found');\n\n// // // // // // // // // // // //     return (\n// // // // // // // // // // // //       <div className=\"empty-state\">\n// // // // // // // // // // // //         <h3>Domain not found</h3>\n// // // // // // // // // // // //         <p>The requested domain could not be loaded.</p>\n// // // // // // // // // // // //         <button \n// // // // // // // // // // // //           className=\"primary-button\" \n// // // // // // // // // // // //           onClick={() => navigate('/domains')}\n// // // // // // // // // // // //         >\n// // // // // // // // // // // //           <FiArrowLeft />\n// // // // // // // // // // // //           Back to Domains\n// // // // // // // // // // // //         </button>\n// // // // // // // // // // // //       </div>\n// // // // // // // // // // // //     );\n// // // // // // // // // // // //   }\n\n// // // // // // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // // // // //   return (\n// // // // // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // // // // //             <button \n// // // // // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // // // // //             >\n// // // // // // // // // // // //               <FiArrowLeft />\n// // // // // // // // // // // //               Domains\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // // // // //             <span className=\"breadcrumb-current\">{domain.title}</span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // // // // //           <p>Manage the hierarchical structure of {domain.title}</p>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // // // // //           <button \n// // // // // // // // // // // //             className=\"primary-button\" \n// // // // // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // // // // //           >\n// // // // // // // // // // // //             <FiPlus />\n// // // // // // // // // // // //             Add Root SubDomain\n// // // // // // // // // // // //           </button>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // // // // //         <h3>How to Add SubDomains:</h3>\n// // // // // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // // // // //       <div className=\"domain-info-card\">\n// // // // // // // // // // // //         <div className=\"domain-icon\">\n// // // // // // // // // // // //           <FiFolder />\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //         <div className=\"domain-details\">\n// // // // // // // // // // // //           <h3>{domain.title}</h3>\n// // // // // // // // // // // //           <p>{domain.description}</p>\n// // // // // // // // // // // //           <div className=\"domain-stats\">\n// // // // // // // // // // // //             <span className=\"stat-item\">\n// // // // // // // // // // // //               <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // // // // //             </span>\n// // // // // // // // // // // //             <span className=\"stat-item\">\n// // // // // // // // // // // //               <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // // // // //             </span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // // // // //               Has children\n// // // // // // // // // // // //             </span>\n// // // // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // // // // //               Leaf (can have projects)\n// // // // // // // // // // // //             </span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n\n// // // // // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // // // // //               <SubDomainNode\n// // // // // // // // // // // //                 key={subDomain.id}\n// // // // // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // // // // //                 level={0}\n// // // // // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // // // // //               />\n// // // // // // // // // // // //             ))}\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         ) : (\n// // // // // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // // // // //             <p>Start organizing your {domain.title} projects by creating subdomains</p>\n// // // // // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // // // // // //               </div>\n// // // // // // // // // // // //             </div>\n// // // // // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // // // // //               <button \n// // // // // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // // // // //               >\n// // // // // // // // // // // //                 <FiPlus />\n// // // // // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // // // // //               </button>\n// // // // // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // // // // //               </p>\n// // // // // // // // // // // //             </div>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         )}\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // // // // //       {showAddModal && (\n// // // // // // // // // // // //         <SubDomainModal\n// // // // // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // // // // //           parent={selectedParent}\n// // // // // // // // // // // //           domain={domain}\n// // // // // // // // // // // //           onClose={() => {\n// // // // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // // // //           }}\n// // // // // // // // // // // //           onSave={() => {\n// // // // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // // // // //           }}\n// // // // // // // // // // // //         />\n// // // // // // // // // // // //       )}\n// // // // // // // // // // // //     </div>\n// // // // // // // // // // // //   );\n// // // // // // // // // // // // };\n\n// // // // // // // // // // // // // SubDomain Node Component\n// // // // // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // // // // //   subDomain, \n// // // // // // // // // // // //   level, \n// // // // // // // // // // // //   isExpanded, \n// // // // // // // // // // // //   onToggleExpanded, \n// // // // // // // // // // // //   onEdit, \n// // // // // // // // // // // //   onDelete, \n// // // // // // // // // // // //   onAddChild,\n// // // // // // // // // // // //   expandedNodes \n// // // // // // // // // // // // }) => {\n// // // // // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // // // // //     title: subDomain.title,\n// // // // // // // // // // // //     level,\n// // // // // // // // // // // //     hasChildren,\n// // // // // // // // // // // //     isLeaf,\n// // // // // // // // // // // //     isExpanded,\n// // // // // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // // // // //   });\n\n// // // // // // // // // // // //   return (\n// // // // // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // // // // //           {hasChildren ? (\n// // // // // // // // // // // //             <button \n// // // // // // // // // // // //               className=\"expand-button\"\n// // // // // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // // // // //             >\n// // // // // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //           ) : (\n// // // // // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // // // // //           )}\n\n// // // // // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // // // // //           </div>\n\n// // // // // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // // // // //               {hasChildren && (\n// // // // // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // // // // //                 </span>\n// // // // // // // // // // // //               )}\n// // // // // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // // // // //                 </span>\n// // // // // // // // // // // //               )}\n// // // // // // // // // // // //               {isLeaf && (\n// // // // // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // // // // //                   Can have projects\n// // // // // // // // // // // //                 </span>\n// // // // // // // // // // // //               )}\n// // // // // // // // // // // //             </div>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n\n// // // // // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // // // // //           <button \n// // // // // // // // // // // //             className=\"action-button add\" \n// // // // // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // // // // //           >\n// // // // // // // // // // // //             <FiPlus />\n// // // // // // // // // // // //           </button>\n// // // // // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // // // // //             <button \n// // // // // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // // // // //               title=\"More actions\"\n// // // // // // // // // // // //             >\n// // // // // // // // // // // //               <FiMoreVertical />\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //             {showMenu && (\n// // // // // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // // // // //                 <button onClick={() => onEdit(subDomain)}>\n// // // // // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // // // // //                 </button>\n// // // // // // // // // // // //                 <button onClick={() => onAddChild(subDomain)}>\n// // // // // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // // // // //                 </button>\n// // // // // // // // // // // //                 <button onClick={() => onDelete(subDomain)} className=\"danger\">\n// // // // // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // // // // //                 </button>\n// // // // // // // // // // // //               </div>\n// // // // // // // // // // // //             )}\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* Children */}\n// // // // // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // // // // //             <SubDomainNode\n// // // // // // // // // // // //               key={child.id}\n// // // // // // // // // // // //               subDomain={child}\n// // // // // // // // // // // //               level={level + 1}\n// // // // // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // // // // //               onEdit={onEdit}\n// // // // // // // // // // // //               onDelete={onDelete}\n// // // // // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // // // // //             />\n// // // // // // // // // // // //           ))}\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       )}\n// // // // // // // // // // // //     </div>\n// // // // // // // // // // // //   );\n// // // // // // // // // // // // };\n\n// // // // // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // // // // //   });\n// // // // // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // // // // //     formData\n// // // // // // // // // // // //   });\n\n// // // // // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // // // // //     e.preventDefault();\n// // // // // // // // // // // //     setLoading(true);\n\n// // // // // // // // // // // //     try {\n// // // // // // // // // // // //       const requestData = {\n// // // // // // // // // // // //         ...formData,\n// // // // // // // // // // // //         domainId: domain.id,\n// // // // // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // // // // //       };\n\n// // // // // // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // // // // //       if (subDomain) {\n// // // // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // // // // //       } else {\n// // // // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // // // // //       }\n\n// // // // // // // // // // // //       onSave();\n// // // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // // // // //     } finally {\n// // // // // // // // // // // //       setLoading(false);\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // // // // //     if (subDomain) {\n// // // // // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //     if (parent) {\n// // // // // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //     return `Add Root SubDomain in: ${domain.title}`;\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   return (\n// // // // // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // // // // //       <div className=\"modal\">\n// // // // // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // // // // // //         </div>\n\n// // // // // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // // // // //             <input\n// // // // // // // // // // // //               type=\"text\"\n// // // // // // // // // // // //               value={formData.title}\n// // // // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // // // // //               required\n// // // // // // // // // // // //             />\n// // // // // // // // // // // //           </div>\n\n// // // // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // // // // //             <textarea\n// // // // // // // // // // // //               value={formData.description}\n// // // // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // // // // //               rows={3}\n// // // // // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // // // // //             />\n// // // // // // // // // // // //           </div>\n\n// // // // // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // // // // //             <strong>Domain:</strong> {domain.title}<br />\n// // // // // // // // // // // //             {parent && (\n// // // // // // // // // // // //               <>\n// // // // // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // // // // //               </>\n// // // // // // // // // // // //             )}\n// // // // // // // // // // // //             <strong>Level:</strong> {parent ? `Level ${getLevel(parent) + 1}` : 'Root Level'}\n// // // // // // // // // // // //           </div>\n\n// // // // // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // // // // //               Cancel\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </form>\n// // // // // // // // // // // //       </div>\n// // // // // // // // // // // //     </div>\n// // // // // // // // // // // //   );\n// // // // // // // // // // // // };\n\n// // // // // // // // // // // // // Helper function to get level\n// // // // // // // // // // // // const getLevel = (subDomain, level = 0) => {\n// // // // // // // // // // // //   // This would need to be calculated based on the hierarchy\n// // // // // // // // // // // //   return level + 1;\n// // // // // // // // // // // // };\n\n// // // // // // // // // // // // export default SubDomainManagement;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"SubDomainManagement\");\n$RefreshReg$(_c2, \"SubDomainNode\");\n$RefreshReg$(_c3, \"SubDomainModal\");\n$RefreshReg$(_c4, \"ProjectModal\");\n$RefreshReg$(_c5, \"ProjectsListModal\");\n$RefreshReg$(_c6, \"ProjectListItem\");\n$RefreshReg$(_c7, \"ProjectEditModal\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","authService","toast","FiPlus","FiEdit","FiTrash2","FiChevronDown","FiChevronRight","FiFolder","FiFolderPlus","FiFileText","FiArrowLeft","FiMoreVertical","FiMove","FiTarget","FiEye","FiStar","FiArchive","FiList","FiX","jsxDEV","_jsxDEV","Fragment","_Fragment","SubDomainManagement","_s","console","log","domainId","navigate","domain","setDomain","subDomains","setSubDomains","loading","setLoading","showAddModal","setShowAddModal","editingSubDomain","setEditingSubDomain","selectedParent","setSelectedParent","expandedNodes","setExpandedNodes","Set","showProjectModal","setShowProjectModal","selectedSubDomainForProject","setSelectedSubDomainForProject","showProjectsModal","setShowProjectsModal","selectedSubDomainForProjectsView","setSelectedSubDomainForProjectsView","projectsInSubDomain","setProjectsInSubDomain","editingProject","setEditingProject","showProjectEditModal","setShowProjectEditModal","projectsLoading","setProjectsLoading","title","subDomainsCount","length","expandedCount","size","projectsInSubDomainCount","fetchDomainAndSubDomains","_domainsResponse$data","_domainsResponse$data2","_domainsResponse$data3","_subDomainsResponse$d","_subDomainsResponse$d2","_subDomainsResponse$d3","domainsResponse","getDomains","data","domainData","domains","find","d","id","description","projectCount","subDomainsResponse","getSubDomains","Object","keys","subDomainsData","forEach","subdomain","index","_subdomain$children","hasChildren","children","childrenCount","isLeaf","fullObject","firstLevelIds","map","sd","_hierarchyResponse$da","hierarchyResponse","getDomainHierarchy","hierarchyData","_subdomain$children2","includes","prev","hierarchyError","response","error","_error$response","_error$response2","_error$response2$data","message","handleAddSubDomain","parent","handleEditSubDomain","subDomain","handleAddProjectToSubDomain","handleViewProjectsInSubDomain","info","fetchProjectsInSubDomain","subDomainId","_response$data","_response$data2","_response$data2$data","getProjects","limit","status","projects","_error$response3","_error$response4","_error$response4$data","handleEditProject","project","handleDeleteProject","confirmMessage","userConfirmed","window","confirm","deleteProject","success","_error$response5","_error$response6","_error$response7","_error$response7$data","stack","errorMessage","handleArchiveProject","isArchiving","isActive","action","archiveProject","archive","reason","handleToggleProjectFeatured","updateProject","isFeatured","handleDeleteSubDomain","_subDomain$children","hasProjects","deleteSubDomain","_error$response8","_error$response9","_error$response0","_error$response0$data","toggleExpanded","nodeId","newExpanded","has","delete","add","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","color","padding","border","borderRadius","cursor","fontSize","fontWeight","marginRight","SubDomainNode","level","isExpanded","onToggleExpanded","onEdit","onDelete","onAddChild","onAddProject","onViewProjects","SubDomainModal","onClose","onSave","ProjectModal","ProjectsListModal","onArchive","onToggleFeatured","ProjectEditModal","_c","_s2","_subDomain$children2","showMenu","setShowMenu","childrenLength","subDomainFullObject","shouldShowViewButton","shouldShowAddButton","marginBottom","toString","marginLeft","child","_c2","_s3","formData","setFormData","handleSubmit","e","preventDefault","requestData","trim","parentId","updateSubDomain","createSubDomain","_error$response1","_error$response1$data","getModalTitle","onSubmit","type","value","onChange","target","placeholder","required","minLength","maxLength","rows","disabled","_c3","_s4","abstract","specifications","learningOutcomes","generateSlug","toLowerCase","replace","projectData","createProject","_error$response10","_error$response11","_error$response11$dat","checked","_c4","projectsCount","firstProject","marginTop","JSON","stringify","ProjectListItem","_c5","_s5","_project$abstract","_project$abstract2","substring","viewCount","createdAt","updatedAt","fullProject","Date","toLocaleDateString","margin","zIndex","display","width","_c6","_s6","_project$subDomain","_project$subDomain$do","_project$subDomain2","_c7","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/SubDomainManagement.js"],"sourcesContent":["// src/components/domains/SubDomainManagement.js - ENHANCED WITH PROJECT VIEW/EDIT/DELETE\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport {\n  FiPlus,\n  FiEdit,\n  FiTrash2,\n  FiChevronDown,\n  FiChevronRight,\n  FiFolder,\n  FiFolderPlus,\n  FiFileText,\n  FiArrowLeft,\n  FiMoreVertical,\n  FiMove,\n  FiTarget,\n  FiEye,\n  FiStar,\n  FiArchive,\n  FiList,\n  FiX\n} from 'react-icons/fi';\n\nconst SubDomainManagement = () => {\n  console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n  const { domainId } = useParams();\n  const navigate = useNavigate();\n  \n  const [domain, setDomain] = useState(null);\n  const [subDomains, setSubDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSubDomain, setEditingSubDomain] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n  // Project creation state\n  const [showProjectModal, setShowProjectModal] = useState(false);\n  const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n  // NEW: Project management states\n  const [showProjectsModal, setShowProjectsModal] = useState(false);\n  const [selectedSubDomainForProjectsView, setSelectedSubDomainForProjectsView] = useState(null);\n  const [projectsInSubDomain, setProjectsInSubDomain] = useState([]);\n  const [editingProject, setEditingProject] = useState(null);\n  const [showProjectEditModal, setShowProjectEditModal] = useState(false);\n  const [projectsLoading, setProjectsLoading] = useState(false);\n\n  console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n    domainId,\n    domain: domain?.title,\n    subDomainsCount: subDomains.length,\n    loading,\n    selectedParent: selectedParent?.title,\n    expandedCount: expandedNodes.size,\n    showProjectModal,\n    selectedSubDomainForProject: selectedSubDomainForProject?.title,\n    // NEW states\n    showProjectsModal,\n    selectedSubDomainForProjectsView: selectedSubDomainForProjectsView?.title,\n    projectsInSubDomainCount: projectsInSubDomain.length,\n    editingProject: editingProject?.title\n  });\n\n  useEffect(() => {\n    if (domainId) {\n      console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n      fetchDomainAndSubDomains();\n    }\n  }, [domainId]);\n\n  const fetchDomainAndSubDomains = async () => {\n    try {\n      setLoading(true);\n      \n      console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n      // Get domain details\n      const domainsResponse = await authService.getDomains();\n      console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n      let domainData = null;\n      const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n      if (domains.length > 0) {\n        domainData = domains.find(d => d.id == domainId);\n        console.log('üéØ SUBDOMAIN FETCH - Found domain data:', domainData);\n      }\n      \n      if (!domainData) {\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Domain not found, creating fallback');\n        domainData = {\n          id: domainId,\n          title: `Domain ${domainId}`,\n          description: 'Domain not found in list',\n          projectCount: 0\n        };\n      }\n      \n      setDomain(domainData);\n      \n      // Get subdomains\n      console.log('üì° SUBDOMAIN FETCH - Fetching subdomains with domainId:', domainId);\n      const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse);\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response.data:', subDomainsResponse.data);\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response data type:', typeof subDomainsResponse.data);\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response data keys:', Object.keys(subDomainsResponse.data || {}));\n      \n      const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n      console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains data:', subDomainsData);\n      console.log('üéØ SUBDOMAIN FETCH - Subdomains count:', subDomainsData.length);\n      \n      // üîç DEBUGGING: Log each subdomain's project count\n      subDomainsData.forEach((subdomain, index) => {\n        console.log(`üìä SUBDOMAIN ${index + 1} [${subdomain.title}]:`, {\n          id: subdomain.id,\n          title: subdomain.title,\n          projectCount: subdomain.projectCount,\n          hasChildren: subdomain.children && subdomain.children.length > 0,\n          childrenCount: subdomain.children?.length || 0,\n          isLeaf: !subdomain.children || subdomain.children.length === 0,\n          fullObject: subdomain\n        });\n      });\n      \n      setSubDomains(subDomainsData);\n      \n      // Auto-expand first level\n      if (subDomainsData.length > 0) {\n        const firstLevelIds = subDomainsData.map(sd => sd.id);\n        setExpandedNodes(new Set(firstLevelIds));\n        console.log('üîÑ SUBDOMAIN FETCH - Auto-expanded first level IDs:', firstLevelIds);\n      }\n      \n      // Try hierarchy API as fallback\n      try {\n        console.log('üì° SUBDOMAIN FETCH - Trying hierarchy API as fallback');\n        const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n        console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse);\n        console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response.data:', hierarchyResponse.data);\n        \n        const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n        console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n        if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n          console.log('üîÑ SUBDOMAIN FETCH - Using hierarchy data instead');\n          console.log('üîÑ SUBDOMAIN FETCH - Hierarchy subdomains:', hierarchyData.subDomains);\n          \n          // üîç DEBUGGING: Log hierarchy subdomain project counts\n          hierarchyData.subDomains.forEach((subdomain, index) => {\n            console.log(`üìä HIERARCHY SUBDOMAIN ${index + 1} [${subdomain.title}]:`, {\n              id: subdomain.id,\n              title: subdomain.title,\n              projectCount: subdomain.projectCount,\n              hasChildren: subdomain.children && subdomain.children.length > 0,\n              childrenCount: subdomain.children?.length || 0,\n              isLeaf: !subdomain.children || subdomain.children.length === 0,\n              fullObject: subdomain\n            });\n          });\n          \n          setSubDomains(hierarchyData.subDomains);\n          if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n            setDomain(prev => ({ ...prev, ...hierarchyData }));\n          }\n        }\n      } catch (hierarchyError) {\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy error response:', hierarchyError.response);\n      }\n      \n    } catch (error) {\n      console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n      console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n      console.error('‚ùå SUBDOMAIN FETCH - Error response data:', error.response?.data);\n      console.error('‚ùå SUBDOMAIN FETCH - Error message:', error.message);\n      toast.error('Failed to fetch domain information: ' + (error.response?.data?.message || error.message));\n      \n      setDomain({\n        id: domainId,\n        title: `Domain ${domainId}`,\n        description: 'Error loading domain details',\n        projectCount: 0\n      });\n      setSubDomains([]);\n    } finally {\n      setLoading(false);\n      console.log('üèÅ SUBDOMAIN FETCH - Loading set to false');\n    }\n  };\n\n  const handleAddSubDomain = (parent = null) => {\n    console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n    setSelectedParent(parent);\n    setEditingSubDomain(null);\n    setShowAddModal(true);\n  };\n\n  const handleEditSubDomain = (subDomain) => {\n    console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n    setSelectedParent(null);\n    setEditingSubDomain(subDomain);\n    setShowAddModal(true);\n  };\n\n  // Handle adding project to subdomain\n  const handleAddProjectToSubDomain = (subDomain) => {\n    console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n    console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n    if (subDomain.children && subDomain.children.length > 0) {\n      toast.error('Projects can only be added to leaf sub-domains (those without children)');\n      return;\n    }\n    \n    setSelectedSubDomainForProject(subDomain);\n    setShowProjectModal(true);\n  };\n\n  // NEW: Handle viewing projects in subdomain\n  const handleViewProjectsInSubDomain = async (subDomain) => {\n    console.log('üëÅÔ∏è VIEW PROJECTS - Starting for subdomain:', subDomain.title);\n    console.log('üîç VIEW PROJECTS - SubDomain object:', subDomain);\n    console.log('üîç VIEW PROJECTS - Has children?', subDomain.children && subDomain.children.length > 0);\n    console.log('üîç VIEW PROJECTS - Project count:', subDomain.projectCount);\n    console.log('üîç VIEW PROJECTS - Is leaf?', !subDomain.children || subDomain.children.length === 0);\n    \n    if (subDomain.children && subDomain.children.length > 0) {\n      console.log('‚ùå VIEW PROJECTS - Not a leaf subdomain');\n      toast.error('Only leaf sub-domains have projects to view');\n      return;\n    }\n    \n    if (!subDomain.projectCount || subDomain.projectCount === 0) {\n      console.log('‚ùå VIEW PROJECTS - No projects in subdomain');\n      toast.info('This sub-domain has no projects yet. Let\\'s fetch anyway to check...');\n      // Don't return - still try to fetch in case the count is wrong\n    }\n    \n    console.log('‚úÖ VIEW PROJECTS - Proceeding to fetch projects');\n    setSelectedSubDomainForProjectsView(subDomain);\n    await fetchProjectsInSubDomain(subDomain.id);\n    setShowProjectsModal(true);\n  };\n\n  // NEW: Fetch projects for a specific subdomain\n  const fetchProjectsInSubDomain = async (subDomainId) => {\n    try {\n      setProjectsLoading(true);\n      console.log('üì° FETCH PROJECTS - For subdomain ID:', subDomainId);\n      console.log('üì° FETCH PROJECTS - Making API call to authService.getProjects()');\n      \n      const response = await authService.getProjects({ \n        subDomainId: subDomainId,\n        limit: 100 // Get all projects for this subdomain\n      });\n      \n      console.log('‚úÖ FETCH PROJECTS - Full API Response:', response);\n      console.log('‚úÖ FETCH PROJECTS - Response status:', response.status);\n      console.log('‚úÖ FETCH PROJECTS - Response data:', response.data);\n      console.log('‚úÖ FETCH PROJECTS - Response data type:', typeof response.data);\n      console.log('‚úÖ FETCH PROJECTS - Response data keys:', Object.keys(response.data || {}));\n      \n      const projects = response.data?.projects || response.data?.data?.projects || [];\n      console.log('üéØ FETCH PROJECTS - Extracted projects:', projects);\n      console.log('üéØ FETCH PROJECTS - Projects count:', projects.length);\n      console.log('üéØ FETCH PROJECTS - First project (if any):', projects[0]);\n      \n      setProjectsInSubDomain(projects);\n      \n      if (projects.length === 0) {\n        console.log('‚ö†Ô∏è FETCH PROJECTS - No projects found for subdomain:', subDomainId);\n        toast.info(`No projects found in this subdomain. API returned ${projects.length} projects.`);\n      } else {\n        console.log('üéâ FETCH PROJECTS - Successfully loaded', projects.length, 'projects');\n      }\n      \n    } catch (error) {\n      console.error('‚ùå FETCH PROJECTS - Error occurred:', error);\n      console.error('‚ùå FETCH PROJECTS - Error response:', error.response);\n      console.error('‚ùå FETCH PROJECTS - Error response data:', error.response?.data);\n      console.error('‚ùå FETCH PROJECTS - Error message:', error.message);\n      toast.error('Failed to fetch projects: ' + (error.response?.data?.message || error.message));\n      setProjectsInSubDomain([]);\n    } finally {\n      setProjectsLoading(false);\n      console.log('üèÅ FETCH PROJECTS - Loading set to false');\n    }\n  };\n\n  // NEW: Handle editing a project\n  const handleEditProject = (project) => {\n    console.log('‚úèÔ∏è EDIT PROJECT - Starting for:', project.title);\n    setEditingProject(project);\n    setShowProjectEditModal(true);\n  };\n\n  // NEW: Handle deleting a project\n  const handleDeleteProject = async (project) => {\n    console.log('üóëÔ∏è DELETE PROJECT - Starting deletion process for:', project.title);\n    console.log('üóëÔ∏è DELETE PROJECT - Project ID:', project.id);\n    console.log('üóëÔ∏è DELETE PROJECT - Full project object:', project);\n    \n    const confirmMessage = `Are you sure you want to delete the project \"${project.title}\"?\\n\\nThis action cannot be undone.`;\n    const userConfirmed = window.confirm(confirmMessage);\n    \n    console.log('üóëÔ∏è DELETE PROJECT - User confirmation:', userConfirmed);\n    \n    if (!userConfirmed) {\n      console.log('‚ùå DELETE PROJECT - Cancelled by user');\n      return;\n    }\n\n    try {\n      console.log('üì° DELETE PROJECT - Making API call to authService.deleteProject()');\n      console.log('üì° DELETE PROJECT - API endpoint will be: /admin/projects/' + project.id);\n      \n      const response = await authService.deleteProject(project.id);\n      \n      console.log('‚úÖ DELETE PROJECT - API Response received:', response);\n      console.log('‚úÖ DELETE PROJECT - Response status:', response.status);\n      console.log('‚úÖ DELETE PROJECT - Response data:', response.data);\n      \n      toast.success('Project deleted successfully');\n      console.log('üéâ DELETE PROJECT - Success toast shown');\n      \n      // Refresh projects list and subdomain data\n      console.log('üîÑ DELETE PROJECT - Refreshing projects list for subdomain:', selectedSubDomainForProjectsView.id);\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n      console.log('üîÑ DELETE PROJECT - Refreshing domain and subdomains to update counts');\n      await fetchDomainAndSubDomains(); // Refresh to update project counts\n      \n    } catch (error) {\n      console.error('‚ùå DELETE PROJECT - Error occurred:', error);\n      console.error('‚ùå DELETE PROJECT - Error type:', typeof error);\n      console.error('‚ùå DELETE PROJECT - Error message:', error.message);\n      console.error('‚ùå DELETE PROJECT - Error response:', error.response);\n      console.error('‚ùå DELETE PROJECT - Error response status:', error.response?.status);\n      console.error('‚ùå DELETE PROJECT - Error response data:', error.response?.data);\n      console.error('‚ùå DELETE PROJECT - Error stack:', error.stack);\n      \n      const errorMessage = error.response?.data?.message || error.message || 'Unknown error occurred';\n      toast.error('Failed to delete project: ' + errorMessage);\n      console.log('‚ùå DELETE PROJECT - Error toast shown with message:', errorMessage);\n    }\n  };\n\n  // NEW: Handle archiving a project\n  const handleArchiveProject = async (project) => {\n    const isArchiving = project.isActive;\n    const action = isArchiving ? 'archive' : 'restore';\n    \n    console.log('üìÅ ARCHIVE PROJECT - Action:', action, 'for:', project.title);\n    \n    if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n      return;\n    }\n\n    try {\n      await authService.archiveProject(project.id, {\n        archive: isArchiving,\n        reason: `${action} via subdomain management`\n      });\n      console.log('‚úÖ ARCHIVE PROJECT - Success');\n      toast.success(`Project ${action}d successfully`);\n      \n      // Refresh projects list\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n    } catch (error) {\n      console.error('‚ùå ARCHIVE PROJECT - Error:', error);\n      toast.error(`Failed to ${action} project`);\n    }\n  };\n\n  // NEW: Handle toggling featured status\n  const handleToggleProjectFeatured = async (project) => {\n    console.log('‚≠ê TOGGLE FEATURED - For project:', project.title);\n    \n    try {\n      await authService.updateProject(project.id, {\n        isFeatured: !project.isFeatured\n      });\n      console.log('‚úÖ TOGGLE FEATURED - Success');\n      toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n      \n      // Refresh projects list\n      await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n    } catch (error) {\n      console.error('‚ùå TOGGLE FEATURED - Error:', error);\n      toast.error('Failed to update featured status');\n    }\n  };\n\n  const handleDeleteSubDomain = async (subDomain) => {\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting deletion process for:', subDomain.title);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - SubDomain ID:', subDomain.id);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Full subdomain object:', subDomain);\n    \n    const hasChildren = subDomain.children && subDomain.children.length > 0;\n    const hasProjects = subDomain.projectCount > 0;\n    \n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Has children:', hasChildren);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Has projects:', hasProjects);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Children count:', subDomain.children?.length || 0);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - Project count:', subDomain.projectCount || 0);\n    \n    let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n    if (hasChildren) {\n      confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n    }\n    if (hasProjects) {\n      confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n    }\n    confirmMessage += '\\n\\nThis action cannot be undone.';\n    \n    const userConfirmed = window.confirm(confirmMessage);\n    console.log('üóëÔ∏è SUBDOMAIN DELETE - User confirmation:', userConfirmed);\n    \n    if (!userConfirmed) {\n      console.log('‚ùå SUBDOMAIN DELETE - Cancelled by user');\n      return;\n    }\n\n    try {\n      console.log('üì° SUBDOMAIN DELETE - Making API call to authService.deleteSubDomain()');\n      console.log('üì° SUBDOMAIN DELETE - API endpoint will be: /admin/subdomains/' + subDomain.id);\n      \n      const response = await authService.deleteSubDomain(subDomain.id);\n      \n      console.log('‚úÖ SUBDOMAIN DELETE - API Response received:', response);\n      console.log('‚úÖ SUBDOMAIN DELETE - Response status:', response.status);\n      console.log('‚úÖ SUBDOMAIN DELETE - Response data:', response.data);\n      \n      toast.success('Sub-domain deleted successfully');\n      console.log('üéâ SUBDOMAIN DELETE - Success toast shown');\n      \n      console.log('üîÑ SUBDOMAIN DELETE - Refreshing domain and subdomains');\n      fetchDomainAndSubDomains();\n      \n    } catch (error) {\n      console.error('‚ùå SUBDOMAIN DELETE - Error occurred:', error);\n      console.error('‚ùå SUBDOMAIN DELETE - Error type:', typeof error);\n      console.error('‚ùå SUBDOMAIN DELETE - Error message:', error.message);\n      console.error('‚ùå SUBDOMAIN DELETE - Error response:', error.response);\n      console.error('‚ùå SUBDOMAIN DELETE - Error response status:', error.response?.status);\n      console.error('‚ùå SUBDOMAIN DELETE - Error response data:', error.response?.data);\n      console.error('‚ùå SUBDOMAIN DELETE - Error stack:', error.stack);\n      \n      const errorMessage = error.response?.data?.message || error.message || 'Unknown error occurred';\n      toast.error('Failed to delete sub-domain: ' + errorMessage);\n      console.log('‚ùå SUBDOMAIN DELETE - Error toast shown with message:', errorMessage);\n    }\n  };\n\n  const toggleExpanded = (nodeId) => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n    } else {\n      newExpanded.add(nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading sub-domains...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"subdomain-management\">\n      {/* Header with Breadcrumb */}\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <div className=\"breadcrumb\">\n            <button \n              className=\"breadcrumb-link\"\n              onClick={() => navigate('/domains')}\n            >\n              <FiArrowLeft />\n              Domains\n            </button>\n            <span className=\"breadcrumb-separator\">/</span>\n            <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n          </div>\n          <h1>SubDomain Management</h1>\n          <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            className=\"primary-button\" \n            onClick={() => handleAddSubDomain()}\n            style={{\n              backgroundColor: '#3b82f6',\n              color: 'white',\n              padding: '12px 16px',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500'\n            }}\n          >\n            <FiPlus style={{marginRight: '6px'}} />\n            Add Root SubDomain\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Guide */}\n      <div className=\"quick-guide\">\n        <h3>How to Build Your SubDomain Hierarchy:</h3>\n        <div className=\"guide-steps\">\n          <div className=\"guide-step\">\n            <span className=\"step-number\">1</span>\n            <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">2</span>\n            <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">3</span>\n            <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">4</span>\n            <span className=\"step-text\">Click <strong>\"Add Project\"</strong> or <strong>\"View Projects\"</strong> on leaf subdomains</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Domain Info Card */}\n      {domain && (\n        <div className=\"domain-info-card\">\n          <div className=\"domain-icon\">\n            <FiFolder />\n          </div>\n          <div className=\"domain-details\">\n            <h3>{domain.title}</h3>\n            <p>{domain.description}</p>\n            <div className=\"domain-stats\">\n              <span className=\"stat-item\">\n                <strong>{subDomains.length}</strong> root sub-domains\n              </span>\n              <span className=\"stat-item\">\n                <strong>{domain.projectCount || 0}</strong> total projects\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* SubDomain Tree */}\n      <div className=\"subdomain-tree-container\">\n        <div className=\"tree-header\">\n          <h2>SubDomain Hierarchy</h2>\n          <div className=\"tree-legend\">\n            <span className=\"legend-item\">\n              <FiFolder className=\"folder-icon\" />\n              Has children\n            </span>\n            <span className=\"legend-item\">\n              <FiTarget className=\"leaf-icon\" />\n              Leaf (can have projects)\n            </span>\n            <span className=\"legend-item\">\n              <FiFileText className=\"project-icon\" />\n              Add Project\n            </span>\n            <span className=\"legend-item\">\n              <FiList className=\"view-icon\" />\n              View Projects\n            </span>\n          </div>\n        </div>\n\n        {subDomains.length > 0 ? (\n          <div className=\"subdomain-tree\">\n            {subDomains.map((subDomain) => (\n              <SubDomainNode\n                key={subDomain.id}\n                subDomain={subDomain}\n                level={0}\n                isExpanded={expandedNodes.has(subDomain.id)}\n                onToggleExpanded={toggleExpanded}\n                onEdit={handleEditSubDomain}\n                onDelete={handleDeleteSubDomain}\n                onAddChild={handleAddSubDomain}\n                onAddProject={handleAddProjectToSubDomain}\n                onViewProjects={handleViewProjectsInSubDomain} // NEW\n                expandedNodes={expandedNodes}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"empty-tree-state\">\n            <FiFolderPlus size={64} />\n            <h3>No SubDomains Yet</h3>\n            <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n            <div className=\"empty-state-examples\">\n              <h4>Example Structure:</h4>\n              <div className=\"example-tree\">\n                <div className=\"example-item\">üìÇ Machine Learning</div>\n                <div className=\"example-item nested\">üéØ Deep Learning</div>\n                <div className=\"example-item nested\">üéØ Computer Vision</div>\n                <div className=\"example-item\">üéØ Data Science</div>\n              </div>\n            </div>\n            <div className=\"empty-state-actions\">\n              <button \n                className=\"primary-button large\" \n                onClick={() => handleAddSubDomain()}\n                style={{\n                  backgroundColor: '#3b82f6',\n                  color: 'white',\n                  padding: '14px 20px',\n                  border: 'none',\n                  borderRadius: '8px',\n                  cursor: 'pointer',\n                  fontSize: '16px',\n                  fontWeight: '600'\n                }}\n              >\n                <FiPlus style={{marginRight: '8px'}} />\n                Create Your First SubDomain\n              </button>\n              <p className=\"help-text\">\n                üí° Tip: Start with broad categories, then add specific subcategories as needed\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add/Edit SubDomain Modal */}\n      {showAddModal && (\n        <SubDomainModal\n          subDomain={editingSubDomain}\n          parent={selectedParent}\n          domain={domain}\n          onClose={() => {\n            setShowAddModal(false);\n            setEditingSubDomain(null);\n            setSelectedParent(null);\n          }}\n          onSave={() => {\n            setShowAddModal(false);\n            setEditingSubDomain(null);\n            setSelectedParent(null);\n            fetchDomainAndSubDomains();\n          }}\n        />\n      )}\n\n      {/* Project Creation Modal */}\n      {showProjectModal && (\n        <ProjectModal\n          subDomain={selectedSubDomainForProject}\n          domain={domain}\n          onClose={() => {\n            setShowProjectModal(false);\n            setSelectedSubDomainForProject(null);\n          }}\n          onSave={() => {\n            setShowProjectModal(false);\n            setSelectedSubDomainForProject(null);\n            toast.success('Project created successfully!');\n            fetchDomainAndSubDomains(); // Refresh to update project counts\n          }}\n        />\n      )}\n\n      {/* NEW: Projects List Modal */}\n      {showProjectsModal && (\n        <ProjectsListModal\n          subDomain={selectedSubDomainForProjectsView}\n          projects={projectsInSubDomain}\n          loading={projectsLoading}\n          onClose={() => {\n            setShowProjectsModal(false);\n            setSelectedSubDomainForProjectsView(null);\n            setProjectsInSubDomain([]);\n          }}\n          onEdit={handleEditProject}\n          onDelete={handleDeleteProject}\n          onArchive={handleArchiveProject}\n          onToggleFeatured={handleToggleProjectFeatured}\n          onAddProject={() => {\n            setShowProjectsModal(false);\n            setSelectedSubDomainForProject(selectedSubDomainForProjectsView);\n            setShowProjectModal(true);\n          }}\n        />\n      )}\n\n      {/* NEW: Project Edit Modal */}\n      {showProjectEditModal && editingProject && (\n        <ProjectEditModal\n          project={editingProject}\n          onClose={() => {\n            setShowProjectEditModal(false);\n            setEditingProject(null);\n          }}\n          onSave={() => {\n            setShowProjectEditModal(false);\n            setEditingProject(null);\n            // Refresh projects list and subdomain data\n            fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n            fetchDomainAndSubDomains();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\n// UPDATED SubDomain Node Component with View Projects functionality\nconst SubDomainNode = ({ \n  subDomain, \n  level, \n  isExpanded, \n  onToggleExpanded, \n  onEdit, \n  onDelete, \n  onAddChild,\n  onAddProject,\n  onViewProjects, // NEW\n  expandedNodes \n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const hasChildren = subDomain.children && subDomain.children.length > 0;\n  const isLeaf = !hasChildren;\n  const hasProjects = subDomain.projectCount > 0;\n\n  console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n    title: subDomain.title,\n    level,\n    hasChildren,\n    isLeaf,\n    isExpanded,\n    projectCount: subDomain.projectCount,\n    hasProjects,\n    children: subDomain.children,\n    childrenLength: subDomain.children?.length,\n    subDomainFullObject: subDomain\n  });\n\n  // üîç DEBUGGING: Log button visibility conditions\n  console.log('üîç BUTTON VISIBILITY DEBUG for', subDomain.title, ':', {\n    isLeaf,\n    hasProjects,\n    projectCount: subDomain.projectCount,\n    shouldShowViewButton: isLeaf && hasProjects,\n    shouldShowAddButton: isLeaf\n  });\n\n  return (\n    <div className={`subdomain-node level-${level}`}>\n      <div className=\"node-content\">\n        <div className=\"node-main\">\n          {hasChildren ? (\n            <button \n              className=\"expand-button\"\n              onClick={() => onToggleExpanded(subDomain.id)}\n            >\n              {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n            </button>\n          ) : (\n            <div className=\"expand-placeholder\" />\n          )}\n          \n          <div className=\"node-icon\">\n            {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n          </div>\n          \n          <div className=\"node-info\">\n            <h4 className=\"node-title\">{subDomain.title}</h4>\n            <p className=\"node-description\">{subDomain.description}</p>\n            <div className=\"node-stats\">\n              {hasChildren && (\n                <span className=\"stat-badge\">\n                  {subDomain.children.length} sub-domains\n                </span>\n              )}\n              {hasProjects && (\n                <span className=\"stat-badge projects\">\n                  {subDomain.projectCount} projects\n                </span>\n              )}\n              {isLeaf && !hasProjects && (\n                <span className=\"stat-badge leaf\">\n                  Can have projects\n                </span>\n              )}\n              {/* üîç DEBUGGING: Always show project count for debugging */}\n              <span className=\"stat-badge debug\" style={{backgroundColor: '#ff9999', color: '#000'}}>\n                DEBUG: Count={subDomain.projectCount || 0}\n              </span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"node-actions\">\n          {/* üîç DEBUGGING: Always show this section with debug info */}\n          <div style={{fontSize: '10px', color: '#666', marginBottom: '5px'}}>\n            DEBUG: isLeaf={isLeaf.toString()}, hasProjects={hasProjects.toString()}, count={subDomain.projectCount}\n          </div>\n          \n          {/* NEW: View Projects button for leaf nodes - ALWAYS SHOW IF LEAF FOR DEBUGGING */}\n          {isLeaf && (\n            <button \n              className=\"action-button view\" \n              onClick={() => {\n                console.log('üéØ VIEW BUTTON CLICKED for:', subDomain.title);\n                onViewProjects(subDomain);\n              }}\n              title={`View projects in \"${subDomain.title}\" (Count: ${subDomain.projectCount || 0})`}\n              style={{backgroundColor: hasProjects ? '#10b981' : '#6b7280'}}\n            >\n              <FiList />\n              <span style={{fontSize: '10px', marginLeft: '2px'}}>\n                {subDomain.projectCount || 0}\n              </span>\n            </button>\n          )}\n          \n          {isLeaf && (\n            <button \n              className=\"action-button project\" \n              onClick={() => {\n                console.log('üéØ ADD PROJECT BUTTON CLICKED for:', subDomain.title);\n                onAddProject(subDomain);\n              }}\n              title={`Add project to \"${subDomain.title}\"`}\n            >\n              <FiFileText />\n            </button>\n          )}\n          \n          <button \n            className=\"action-button add\" \n            onClick={() => onAddChild(subDomain)}\n            title={`Add child subdomain under \"${subDomain.title}\"`}\n          >\n            <FiPlus />\n          </button>\n          \n          <div className=\"action-menu\">\n            <button \n              onClick={() => setShowMenu(!showMenu)}\n              title=\"More actions\"\n            >\n              <FiMoreVertical />\n            </button>\n            {showMenu && (\n              <div className=\"dropdown-menu\">\n                {/* üîç DEBUGGING: Always show view projects option for leaf nodes */}\n                {isLeaf && (\n                  <button \n                    onClick={() => {\n                      console.log('üéØ DROPDOWN VIEW PROJECTS CLICKED for:', subDomain.title);\n                      onViewProjects(subDomain);\n                      setShowMenu(false);\n                    }}\n                    className=\"primary-option\"\n                    style={{backgroundColor: hasProjects ? '#dff0d8' : '#f8f9fa'}}\n                  >\n                    <FiList /> View Projects ({subDomain.projectCount || 0})\n                  </button>\n                )}\n                {isLeaf && (\n                  <button \n                    onClick={() => {\n                      onAddProject(subDomain);\n                      setShowMenu(false);\n                    }}\n                    className=\"primary-option\"\n                  >\n                    <FiFileText /> Add Project\n                  </button>\n                )}\n                <button onClick={() => {\n                  onEdit(subDomain);\n                  setShowMenu(false);\n                }}>\n                  <FiEdit /> Edit SubDomain\n                </button>\n                <button onClick={() => {\n                  onAddChild(subDomain);\n                  setShowMenu(false);\n                }}>\n                  <FiPlus /> Add Child SubDomain\n                </button>\n                <button onClick={() => {\n                  onDelete(subDomain);\n                  setShowMenu(false);\n                }} className=\"danger\">\n                  <FiTrash2 /> Delete SubDomain\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* Children */}\n      {hasChildren && isExpanded && (\n        <div className=\"node-children\">\n          {subDomain.children.map((child) => (\n            <SubDomainNode\n              key={child.id}\n              subDomain={child}\n              level={level + 1}\n              isExpanded={expandedNodes.has(child.id)}\n              onToggleExpanded={onToggleExpanded}\n              onEdit={onEdit}\n              onDelete={onDelete}\n              onAddChild={onAddChild}\n              onAddProject={onAddProject}\n              onViewProjects={onViewProjects} // NEW\n              expandedNodes={expandedNodes}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// SubDomain Modal Component (unchanged)\nconst SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: subDomain?.title || '',\n    description: subDomain?.description || ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const requestData = {\n        title: formData.title.trim(),\n        description: formData.description.trim(),\n        domainId: domain.id,\n        parentId: parent?.id || null\n      };\n\n      console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n      if (subDomain) {\n        const response = await authService.updateSubDomain(subDomain.id, requestData);\n        toast.success('Sub-domain updated successfully');\n      } else {\n        const response = await authService.createSubDomain(requestData);\n        toast.success('Sub-domain created successfully');\n      }\n\n      onSave();\n    } catch (error) {\n      console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getModalTitle = () => {\n    if (subDomain) {\n      return `Edit SubDomain: ${subDomain.title}`;\n    }\n    if (parent) {\n      return `Add SubDomain under: ${parent.title}`;\n    }\n    return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <h2>{getModalTitle()}</h2>\n          <button onClick={onClose}>√ó</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>SubDomain Title *</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              placeholder=\"e.g., Machine Learning, Deep Learning\"\n              required\n              minLength={3}\n              maxLength={100}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Description (Optional)</label>\n            <textarea\n              value={formData.description}\n              onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              rows={3}\n              placeholder=\"Describe what this sub-domain covers...\"\n              maxLength={500}\n            />\n          </div>\n          \n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n            {parent && (\n              <>\n                <strong>Parent SubDomain:</strong> {parent.title}<br />\n              </>\n            )}\n            <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              className=\"primary-button\" \n              disabled={loading || !formData.title.trim()}\n            >\n              {loading ? 'Saving...' : 'Save SubDomain'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Project Creation Modal Component (unchanged)\nconst ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    abstract: '',\n    specifications: '',\n    learningOutcomes: '',\n    subDomainId: subDomain?.id || '',\n    isFeatured: false\n  });\n  const [loading, setLoading] = useState(false);\n\n  console.log('üìù PROJECT MODAL - Props:', {\n    subDomain: subDomain?.title,\n    domain: domain?.title,\n    formData\n  });\n\n  // Slug generation function\n  const generateSlug = (title) => {\n    return title\n      .toLowerCase()\n      .trim()\n      .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n      .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n      .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      // Don't send slug - let backend auto-generate it\n      const projectData = {\n        title: formData.title.trim(),\n        abstract: formData.abstract.trim(),\n        specifications: formData.specifications.trim(),\n        learningOutcomes: formData.learningOutcomes.trim(),\n        subDomainId: formData.subDomainId,\n        isFeatured: formData.isFeatured\n      };\n\n      console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n      console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n      \n      const response = await authService.createProject(projectData);\n      console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n      \n      onSave();\n    } catch (error) {\n      console.error('‚ùå PROJECT SAVE - Error:', error);\n      console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n      \n      // Show more specific error message if available\n      const errorMessage = error.response?.data?.message || 'Failed to create project';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Add Project to: {subDomain?.title}</h2>\n          <button onClick={onClose}>√ó</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Project Title *</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              placeholder=\"Enter project title...\"\n              required\n              minLength={3}\n              maxLength={200}\n            />\n            {/* Show slug preview (for user reference only) */}\n            {formData.title && (\n              <div className=\"slug-preview\">\n                <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n            <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n            <span className=\"info-note\">\n              <FiTarget /> This is a leaf subdomain - perfect for projects!\n            </span>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Abstract *</label>\n            <textarea\n              value={formData.abstract}\n              onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n              rows={4}\n              placeholder=\"Brief description of the project...\"\n              required\n              minLength={10}\n              maxLength={1000}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Specifications *</label>\n            <textarea\n              value={formData.specifications}\n              onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n              rows={6}\n              placeholder=\"Technical specifications and requirements...\"\n              required\n              minLength={10}\n              maxLength={5000}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Learning Outcomes *</label>\n            <textarea\n              value={formData.learningOutcomes}\n              onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n              rows={4}\n              placeholder=\"What will students learn from this project...\"\n              required\n              minLength={10}\n              maxLength={2000}\n            />\n          </div>\n          \n          <div className=\"form-group checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={formData.isFeatured}\n                onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n              />\n              <FiTarget />\n              Featured Project\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              className=\"primary-button\" \n              disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n            >\n              {loading ? 'Creating...' : 'Create Project'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// NEW: Projects List Modal Component\nconst ProjectsListModal = ({ \n  subDomain, \n  projects, \n  loading, \n  onClose, \n  onEdit, \n  onDelete, \n  onArchive, \n  onToggleFeatured,\n  onAddProject \n}) => {\n  console.log('üìã PROJECTS LIST MODAL - Rendering with props:', {\n    subDomain: subDomain?.title,\n    subDomainId: subDomain?.id,\n    projectsCount: projects.length,\n    loading,\n    projects: projects,\n    firstProject: projects[0]\n  });\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Projects in: {subDomain?.title}</h2>\n          <button onClick={onClose}>\n            <FiX />\n          </button>\n        </div>\n        \n        <div className=\"projects-list-content\">\n          <div className=\"projects-list-header\">\n            <div className=\"list-info\">\n              <p><strong>SubDomain:</strong> {subDomain?.title}</p>\n              <p><strong>Total Projects:</strong> {projects.length}</p>\n              {/* üîç DEBUGGING: Show debug info */}\n              <div style={{fontSize: '12px', color: '#666', marginTop: '10px', padding: '10px', backgroundColor: '#f0f0f0'}}>\n                <strong>DEBUG INFO:</strong><br/>\n                SubDomain ID: {subDomain?.id}<br/>\n                Projects Array Length: {projects.length}<br/>\n                Loading: {loading.toString()}<br/>\n                Projects Data: {JSON.stringify(projects, null, 2)}\n              </div>\n            </div>\n            <button \n              className=\"primary-button\" \n              onClick={() => {\n                console.log('üéØ ADD NEW PROJECT CLICKED from modal');\n                onAddProject();\n              }}\n              style={{\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                padding: '10px 14px',\n                border: 'none',\n                borderRadius: '6px',\n                cursor: 'pointer',\n                fontSize: '14px',\n                fontWeight: '500'\n              }}\n            >\n              <FiPlus style={{marginRight: '6px'}} />\n              Add New Project\n            </button>\n          </div>\n          \n          {loading ? (\n            <div className=\"loading-container\">\n              <div className=\"loading-spinner\"></div>\n              <p>Loading projects...</p>\n            </div>\n          ) : projects.length > 0 ? (\n            <div className=\"projects-list\">\n              {projects.map((project, index) => {\n                console.log(`üìÑ RENDERING PROJECT ${index + 1}:`, project);\n                return (\n                  <ProjectListItem\n                    key={project.id}\n                    project={project}\n                    onEdit={onEdit}\n                    onDelete={onDelete}\n                    onArchive={onArchive}\n                    onToggleFeatured={onToggleFeatured}\n                  />\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"empty-projects-state\">\n              <FiFileText size={48} />\n              <h3>No Projects Found</h3>\n              <p>This subdomain doesn't have any projects yet.</p>\n              <div style={{fontSize: '12px', color: '#666', marginTop: '10px'}}>\n                <strong>DEBUG:</strong> API returned {projects.length} projects for subdomain {subDomain?.id}\n              </div>\n              <button \n                className=\"primary-button\" \n                onClick={() => {\n                  console.log('üéØ ADD FIRST PROJECT CLICKED from empty state');\n                  onAddProject();\n                }}\n                style={{\n                  backgroundColor: '#3b82f6',\n                  color: 'white',\n                  padding: '12px 16px',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontSize: '14px',\n                  fontWeight: '500'\n                }}\n              >\n                <FiPlus style={{marginRight: '6px'}} />\n                Add First Project\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// NEW: Project List Item Component\nconst ProjectListItem = ({ \n  project, \n  onEdit, \n  onDelete, \n  onArchive, \n  onToggleFeatured \n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  console.log('üìÑ PROJECT LIST ITEM - Rendering project:', {\n    id: project.id,\n    title: project.title,\n    abstract: project.abstract?.substring(0, 50),\n    isActive: project.isActive,\n    isFeatured: project.isFeatured,\n    viewCount: project.viewCount,\n    createdAt: project.createdAt,\n    updatedAt: project.updatedAt,\n    fullProject: project\n  });\n\n  return (\n    <div className={`project-list-item ${!project.isActive ? 'archived' : ''}`}>\n      <div className=\"project-info\">\n        <div className=\"project-title-section\">\n          <h4 className=\"project-title\">{project.title}</h4>\n          <div className=\"project-badges\">\n            {project.isFeatured && (\n              <span className=\"badge featured\">\n                <FiStar /> Featured\n              </span>\n            )}\n            {!project.isActive && (\n              <span className=\"badge archived\">Archived</span>\n            )}\n            {/* üîç DEBUGGING: Always show project ID */}\n            <span className=\"badge debug\" style={{backgroundColor: '#e3f2fd', color: '#1976d2'}}>\n              ID: {project.id}\n            </span>\n          </div>\n        </div>\n        <p className=\"project-abstract\">\n          {project.abstract?.substring(0, 150) || 'No abstract available'}...\n        </p>\n        <div className=\"project-stats\">\n          <span className=\"stat\">\n            <FiEye /> {project.viewCount || 0} views\n          </span>\n          <span className=\"stat\">\n            Created: {project.createdAt ? new Date(project.createdAt).toLocaleDateString() : 'Unknown'}\n          </span>\n          <span className=\"stat\">\n            Updated: {project.updatedAt ? new Date(project.updatedAt).toLocaleDateString() : 'Unknown'}\n          </span>\n        </div>\n      </div>\n      \n      <div className=\"project-actions\">\n        {/* üîç DEBUGGING: Always show edit button with debug styling */}\n        <button \n          className=\"action-button primary\" \n          onClick={() => {\n            console.log('üéØ EDIT BUTTON CLICKED for project:', project.title);\n            onEdit(project);\n          }}\n          title=\"Edit project\"\n          style={{\n            backgroundColor: '#10b981', \n            color: 'white', \n            padding: '8px 12px', \n            margin: '2px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          }}\n        >\n          <FiEdit style={{marginRight: '4px'}} />\n          Edit Project\n        </button>\n        \n        {/* üîç DEBUGGING: Always show delete button with debug styling */}\n        <button \n          className=\"action-button danger\" \n          onClick={() => {\n            console.log('üéØ DELETE BUTTON CLICKED for project:', project.title);\n            onDelete(project);\n          }}\n          title=\"Delete project\"\n          style={{\n            backgroundColor: '#ef4444', \n            color: 'white', \n            padding: '8px 12px', \n            margin: '2px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          }}\n        >\n          <FiTrash2 style={{marginRight: '4px'}} />\n          Delete Project\n        </button>\n        \n        {/* Toggle Featured Button */}\n        <button \n          className=\"action-button featured\" \n          onClick={() => {\n            console.log('üéØ TOGGLE FEATURED BUTTON CLICKED for project:', project.title);\n            onToggleFeatured(project);\n          }}\n          title={project.isFeatured ? \"Remove from featured\" : \"Make featured\"}\n          style={{\n            backgroundColor: project.isFeatured ? '#f59e0b' : '#6b7280', \n            color: 'white', \n            padding: '8px 12px', \n            margin: '2px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          }}\n        >\n          <FiStar style={{marginRight: '4px'}} />\n          {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n        </button>\n        \n        {/* Archive/Restore Button */}\n        <button \n          className=\"action-button archive\" \n          onClick={() => {\n            console.log('üéØ ARCHIVE BUTTON CLICKED for project:', project.title);\n            onArchive(project);\n          }}\n          title={project.isActive ? \"Archive project\" : \"Restore project\"}\n          style={{\n            backgroundColor: project.isActive ? '#6b7280' : '#059669', \n            color: 'white', \n            padding: '8px 12px', \n            margin: '2px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          }}\n        >\n          <FiArchive style={{marginRight: '4px'}} />\n          {project.isActive ? 'Archive' : 'Restore'}\n        </button>\n        \n        <div className=\"action-menu\">\n          <button \n            onClick={() => {\n              console.log('üéØ MORE MENU CLICKED for project:', project.title);\n              setShowMenu(!showMenu);\n            }}\n            title=\"More actions\"\n            style={{\n              backgroundColor: '#6b7280', \n              color: 'white', \n              padding: '8px 12px', \n              margin: '2px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '12px'\n            }}\n          >\n            <FiMoreVertical style={{marginRight: '4px'}} />\n            More Options\n          </button>\n          {showMenu && (\n            <div className=\"dropdown-menu\" style={{zIndex: 1000, backgroundColor: 'white', border: '1px solid #ccc', borderRadius: '4px', padding: '5px'}}>\n              <button onClick={() => {\n                console.log('üéØ DROPDOWN EDIT CLICKED for project:', project.title);\n                onEdit(project);\n                setShowMenu(false);\n              }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n                <FiEdit /> Edit Project\n              </button>\n              <button onClick={() => {\n                console.log('üéØ DROPDOWN TOGGLE FEATURED CLICKED for project:', project.title);\n                onToggleFeatured(project);\n                setShowMenu(false);\n              }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n                <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n              </button>\n              <button onClick={() => {\n                console.log('üéØ DROPDOWN ARCHIVE CLICKED for project:', project.title);\n                onArchive(project);\n                setShowMenu(false);\n              }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n                <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n              </button>\n              <button onClick={() => {\n                console.log('üéØ DROPDOWN DELETE CLICKED for project:', project.title);\n                onDelete(project);\n                setShowMenu(false);\n              }} className=\"danger\" style={{display: 'block', width: '100%', padding: '5px', margin: '2px', backgroundColor: '#ef4444', color: 'white'}}>\n                <FiTrash2 /> Delete Project\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// NEW: Project Edit Modal Component\nconst ProjectEditModal = ({ project, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: project?.title || '',\n    abstract: project?.abstract || '',\n    specifications: project?.specifications || '',\n    learningOutcomes: project?.learningOutcomes || '',\n    isFeatured: project?.isFeatured || false\n  });\n  const [loading, setLoading] = useState(false);\n\n  console.log('üìù PROJECT EDIT MODAL - Project:', project.title);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      console.log('üíæ PROJECT UPDATE - Starting with data:', formData);\n      await authService.updateProject(project.id, formData);\n      console.log('‚úÖ PROJECT UPDATE - Success');\n      toast.success('Project updated successfully');\n      onSave();\n    } catch (error) {\n      console.error('‚ùå PROJECT UPDATE - Error:', error);\n      toast.error('Failed to update project');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Edit Project: {project.title}</h2>\n          <button onClick={onClose}>√ó</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Project Title</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {project.subDomain?.domain?.title || 'Unknown'}<br />\n            <strong>SubDomain:</strong> {project.subDomain?.title || 'Unknown'}<br />\n            <span className=\"info-note\">\n              üí° To move this project to a different domain/subdomain, contact your administrator\n            </span>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Abstract</label>\n            <textarea\n              value={formData.abstract}\n              onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n              rows={4}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Specifications</label>\n            <textarea\n              value={formData.specifications}\n              onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n              rows={6}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Learning Outcomes</label>\n            <textarea\n              value={formData.learningOutcomes}\n              onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n              rows={4}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={formData.isFeatured}\n                onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n              />\n              Featured Project\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n              {loading ? 'Updating...' : 'Update Project'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SubDomainManagement;\n// // src/components/domains/SubDomainManagement.js - ENHANCED WITH PROJECT VIEW/EDIT/DELETE\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiChevronDown,\n//   FiChevronRight,\n//   FiFolder,\n//   FiFolderPlus,\n//   FiFileText,\n//   FiArrowLeft,\n//   FiMoreVertical,\n//   FiMove,\n//   FiTarget,\n//   FiEye,\n//   FiStar,\n//   FiArchive,\n//   FiList,\n//   FiX\n// } from 'react-icons/fi';\n\n// const SubDomainManagement = () => {\n//   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n//   const { domainId } = useParams();\n//   const navigate = useNavigate();\n  \n//   const [domain, setDomain] = useState(null);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingSubDomain, setEditingSubDomain] = useState(null);\n//   const [selectedParent, setSelectedParent] = useState(null);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n//   // Project creation state\n//   const [showProjectModal, setShowProjectModal] = useState(false);\n//   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n//   // NEW: Project management states\n//   const [showProjectsModal, setShowProjectsModal] = useState(false);\n//   const [selectedSubDomainForProjectsView, setSelectedSubDomainForProjectsView] = useState(null);\n//   const [projectsInSubDomain, setProjectsInSubDomain] = useState([]);\n//   const [editingProject, setEditingProject] = useState(null);\n//   const [showProjectEditModal, setShowProjectEditModal] = useState(false);\n//   const [projectsLoading, setProjectsLoading] = useState(false);\n\n//   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n//     domainId,\n//     domain: domain?.title,\n//     subDomainsCount: subDomains.length,\n//     loading,\n//     selectedParent: selectedParent?.title,\n//     expandedCount: expandedNodes.size,\n//     showProjectModal,\n//     selectedSubDomainForProject: selectedSubDomainForProject?.title,\n//     // NEW states\n//     showProjectsModal,\n//     selectedSubDomainForProjectsView: selectedSubDomainForProjectsView?.title,\n//     projectsInSubDomainCount: projectsInSubDomain.length,\n//     editingProject: editingProject?.title\n//   });\n\n//   useEffect(() => {\n//     if (domainId) {\n//       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n//       fetchDomainAndSubDomains();\n//     }\n//   }, [domainId]);\n\n//   const fetchDomainAndSubDomains = async () => {\n//     try {\n//       setLoading(true);\n      \n//       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n//       // Get domain details\n//       const domainsResponse = await authService.getDomains();\n//       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n//       let domainData = null;\n//       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n//       if (domains.length > 0) {\n//         domainData = domains.find(d => d.id == domainId);\n//         console.log('üéØ SUBDOMAIN FETCH - Found domain data:', domainData);\n//       }\n      \n//       if (!domainData) {\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Domain not found, creating fallback');\n//         domainData = {\n//           id: domainId,\n//           title: `Domain ${domainId}`,\n//           description: 'Domain not found in list',\n//           projectCount: 0\n//         };\n//       }\n      \n//       setDomain(domainData);\n      \n//       // Get subdomains\n//       console.log('üì° SUBDOMAIN FETCH - Fetching subdomains with domainId:', domainId);\n//       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n//       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse);\n//       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response.data:', subDomainsResponse.data);\n//       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response data type:', typeof subDomainsResponse.data);\n//       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response data keys:', Object.keys(subDomainsResponse.data || {}));\n      \n//       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n//       console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains data:', subDomainsData);\n//       console.log('üéØ SUBDOMAIN FETCH - Subdomains count:', subDomainsData.length);\n      \n//       // üîç DEBUGGING: Log each subdomain's project count\n//       subDomainsData.forEach((subdomain, index) => {\n//         console.log(`üìä SUBDOMAIN ${index + 1} [${subdomain.title}]:`, {\n//           id: subdomain.id,\n//           title: subdomain.title,\n//           projectCount: subdomain.projectCount,\n//           hasChildren: subdomain.children && subdomain.children.length > 0,\n//           childrenCount: subdomain.children?.length || 0,\n//           isLeaf: !subdomain.children || subdomain.children.length === 0,\n//           fullObject: subdomain\n//         });\n//       });\n      \n//       setSubDomains(subDomainsData);\n      \n//       // Auto-expand first level\n//       if (subDomainsData.length > 0) {\n//         const firstLevelIds = subDomainsData.map(sd => sd.id);\n//         setExpandedNodes(new Set(firstLevelIds));\n//         console.log('üîÑ SUBDOMAIN FETCH - Auto-expanded first level IDs:', firstLevelIds);\n//       }\n      \n//       // Try hierarchy API as fallback\n//       try {\n//         console.log('üì° SUBDOMAIN FETCH - Trying hierarchy API as fallback');\n//         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n//         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse);\n//         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response.data:', hierarchyResponse.data);\n        \n//         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n//         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n//         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n//           console.log('üîÑ SUBDOMAIN FETCH - Using hierarchy data instead');\n//           console.log('üîÑ SUBDOMAIN FETCH - Hierarchy subdomains:', hierarchyData.subDomains);\n          \n//           // üîç DEBUGGING: Log hierarchy subdomain project counts\n//           hierarchyData.subDomains.forEach((subdomain, index) => {\n//             console.log(`üìä HIERARCHY SUBDOMAIN ${index + 1} [${subdomain.title}]:`, {\n//               id: subdomain.id,\n//               title: subdomain.title,\n//               projectCount: subdomain.projectCount,\n//               hasChildren: subdomain.children && subdomain.children.length > 0,\n//               childrenCount: subdomain.children?.length || 0,\n//               isLeaf: !subdomain.children || subdomain.children.length === 0,\n//               fullObject: subdomain\n//             });\n//           });\n          \n//           setSubDomains(hierarchyData.subDomains);\n//           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n//             setDomain(prev => ({ ...prev, ...hierarchyData }));\n//           }\n//         }\n//       } catch (hierarchyError) {\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy error response:', hierarchyError.response);\n//       }\n      \n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n//       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n//       console.error('‚ùå SUBDOMAIN FETCH - Error response data:', error.response?.data);\n//       console.error('‚ùå SUBDOMAIN FETCH - Error message:', error.message);\n//       toast.error('Failed to fetch domain information: ' + (error.response?.data?.message || error.message));\n      \n//       setDomain({\n//         id: domainId,\n//         title: `Domain ${domainId}`,\n//         description: 'Error loading domain details',\n//         projectCount: 0\n//       });\n//       setSubDomains([]);\n//     } finally {\n//       setLoading(false);\n//       console.log('üèÅ SUBDOMAIN FETCH - Loading set to false');\n//     }\n//   };\n\n//   const handleAddSubDomain = (parent = null) => {\n//     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n//     setSelectedParent(parent);\n//     setEditingSubDomain(null);\n//     setShowAddModal(true);\n//   };\n\n//   const handleEditSubDomain = (subDomain) => {\n//     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n//     setSelectedParent(null);\n//     setEditingSubDomain(subDomain);\n//     setShowAddModal(true);\n//   };\n\n//   // Handle adding project to subdomain\n//   const handleAddProjectToSubDomain = (subDomain) => {\n//     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n//     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n//     if (subDomain.children && subDomain.children.length > 0) {\n//       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n//       return;\n//     }\n    \n//     setSelectedSubDomainForProject(subDomain);\n//     setShowProjectModal(true);\n//   };\n\n//   // NEW: Handle viewing projects in subdomain\n//   const handleViewProjectsInSubDomain = async (subDomain) => {\n//     console.log('üëÅÔ∏è VIEW PROJECTS - Starting for subdomain:', subDomain.title);\n//     console.log('üîç VIEW PROJECTS - SubDomain object:', subDomain);\n//     console.log('üîç VIEW PROJECTS - Has children?', subDomain.children && subDomain.children.length > 0);\n//     console.log('üîç VIEW PROJECTS - Project count:', subDomain.projectCount);\n//     console.log('üîç VIEW PROJECTS - Is leaf?', !subDomain.children || subDomain.children.length === 0);\n    \n//     if (subDomain.children && subDomain.children.length > 0) {\n//       console.log('‚ùå VIEW PROJECTS - Not a leaf subdomain');\n//       toast.error('Only leaf sub-domains have projects to view');\n//       return;\n//     }\n    \n//     if (!subDomain.projectCount || subDomain.projectCount === 0) {\n//       console.log('‚ùå VIEW PROJECTS - No projects in subdomain');\n//       toast.info('This sub-domain has no projects yet. Let\\'s fetch anyway to check...');\n//       // Don't return - still try to fetch in case the count is wrong\n//     }\n    \n//     console.log('‚úÖ VIEW PROJECTS - Proceeding to fetch projects');\n//     setSelectedSubDomainForProjectsView(subDomain);\n//     await fetchProjectsInSubDomain(subDomain.id);\n//     setShowProjectsModal(true);\n//   };\n\n//   // NEW: Fetch projects for a specific subdomain\n//   const fetchProjectsInSubDomain = async (subDomainId) => {\n//     try {\n//       setProjectsLoading(true);\n//       console.log('üì° FETCH PROJECTS - For subdomain ID:', subDomainId);\n//       console.log('üì° FETCH PROJECTS - Making API call to authService.getProjects()');\n      \n//       const response = await authService.getProjects({ \n//         subDomainId: subDomainId,\n//         limit: 100 // Get all projects for this subdomain\n//       });\n      \n//       console.log('‚úÖ FETCH PROJECTS - Full API Response:', response);\n//       console.log('‚úÖ FETCH PROJECTS - Response status:', response.status);\n//       console.log('‚úÖ FETCH PROJECTS - Response data:', response.data);\n//       console.log('‚úÖ FETCH PROJECTS - Response data type:', typeof response.data);\n//       console.log('‚úÖ FETCH PROJECTS - Response data keys:', Object.keys(response.data || {}));\n      \n//       const projects = response.data?.projects || response.data?.data?.projects || [];\n//       console.log('üéØ FETCH PROJECTS - Extracted projects:', projects);\n//       console.log('üéØ FETCH PROJECTS - Projects count:', projects.length);\n//       console.log('üéØ FETCH PROJECTS - First project (if any):', projects[0]);\n      \n//       setProjectsInSubDomain(projects);\n      \n//       if (projects.length === 0) {\n//         console.log('‚ö†Ô∏è FETCH PROJECTS - No projects found for subdomain:', subDomainId);\n//         toast.info(`No projects found in this subdomain. API returned ${projects.length} projects.`);\n//       } else {\n//         console.log('üéâ FETCH PROJECTS - Successfully loaded', projects.length, 'projects');\n//       }\n      \n//     } catch (error) {\n//       console.error('‚ùå FETCH PROJECTS - Error occurred:', error);\n//       console.error('‚ùå FETCH PROJECTS - Error response:', error.response);\n//       console.error('‚ùå FETCH PROJECTS - Error response data:', error.response?.data);\n//       console.error('‚ùå FETCH PROJECTS - Error message:', error.message);\n//       toast.error('Failed to fetch projects: ' + (error.response?.data?.message || error.message));\n//       setProjectsInSubDomain([]);\n//     } finally {\n//       setProjectsLoading(false);\n//       console.log('üèÅ FETCH PROJECTS - Loading set to false');\n//     }\n//   };\n\n//   // NEW: Handle editing a project\n//   const handleEditProject = (project) => {\n//     console.log('‚úèÔ∏è EDIT PROJECT - Starting for:', project.title);\n//     setEditingProject(project);\n//     setShowProjectEditModal(true);\n//   };\n\n//   // NEW: Handle deleting a project\n//   const handleDeleteProject = async (project) => {\n//     console.log('üóëÔ∏è DELETE PROJECT - Requesting deletion:', project.title);\n    \n//     if (!window.confirm(`Are you sure you want to delete the project \"${project.title}\"?`)) {\n//       console.log('‚ùå DELETE PROJECT - Cancelled by user');\n//       return;\n//     }\n\n//     try {\n//       console.log('üì° DELETE PROJECT - API call for:', project.id);\n//       await authService.deleteProject(project.id);\n//       console.log('‚úÖ DELETE PROJECT - Success');\n//       toast.success('Project deleted successfully');\n      \n//       // Refresh projects list and subdomain data\n//       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n//       await fetchDomainAndSubDomains(); // Refresh to update project counts\n      \n//     } catch (error) {\n//       console.error('‚ùå DELETE PROJECT - Error:', error);\n//       toast.error('Failed to delete project');\n//     }\n//   };\n\n//   // NEW: Handle archiving a project\n//   const handleArchiveProject = async (project) => {\n//     const isArchiving = project.isActive;\n//     const action = isArchiving ? 'archive' : 'restore';\n    \n//     console.log('üìÅ ARCHIVE PROJECT - Action:', action, 'for:', project.title);\n    \n//     if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n//       return;\n//     }\n\n//     try {\n//       await authService.archiveProject(project.id, {\n//         archive: isArchiving,\n//         reason: `${action} via subdomain management`\n//       });\n//       console.log('‚úÖ ARCHIVE PROJECT - Success');\n//       toast.success(`Project ${action}d successfully`);\n      \n//       // Refresh projects list\n//       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n//     } catch (error) {\n//       console.error('‚ùå ARCHIVE PROJECT - Error:', error);\n//       toast.error(`Failed to ${action} project`);\n//     }\n//   };\n\n//   // NEW: Handle toggling featured status\n//   const handleToggleProjectFeatured = async (project) => {\n//     console.log('‚≠ê TOGGLE FEATURED - For project:', project.title);\n    \n//     try {\n//       await authService.updateProject(project.id, {\n//         isFeatured: !project.isFeatured\n//       });\n//       console.log('‚úÖ TOGGLE FEATURED - Success');\n//       toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n      \n//       // Refresh projects list\n//       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n//     } catch (error) {\n//       console.error('‚ùå TOGGLE FEATURED - Error:', error);\n//       toast.error('Failed to update featured status');\n//     }\n//   };\n\n//   const handleDeleteSubDomain = async (subDomain) => {\n//     const hasChildren = subDomain.children && subDomain.children.length > 0;\n//     const hasProjects = subDomain.projectCount > 0;\n    \n//     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n//     if (hasChildren) {\n//       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n//     }\n//     if (hasProjects) {\n//       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n//     }\n    \n//     if (!window.confirm(confirmMessage)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n//       const response = await authService.deleteSubDomain(subDomain.id);\n//       toast.success('Sub-domain deleted successfully');\n//       fetchDomainAndSubDomains();\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n//       toast.error('Failed to delete sub-domain');\n//     }\n//   };\n\n//   const toggleExpanded = (nodeId) => {\n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading sub-domains...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"subdomain-management\">\n//       {/* Header with Breadcrumb */}\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <div className=\"breadcrumb\">\n//             <button \n//               className=\"breadcrumb-link\"\n//               onClick={() => navigate('/domains')}\n//             >\n//               <FiArrowLeft />\n//               Domains\n//             </button>\n//             <span className=\"breadcrumb-separator\">/</span>\n//             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n//           </div>\n//           <h1>SubDomain Management</h1>\n//           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n//         </div>\n//         <div className=\"header-actions\">\n//           <button \n//             className=\"primary-button\" \n//             onClick={() => handleAddSubDomain()}\n//           >\n//             <FiPlus />\n//             Add Root SubDomain\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Quick Guide */}\n//       <div className=\"quick-guide\">\n//         <h3>How to Build Your SubDomain Hierarchy:</h3>\n//         <div className=\"guide-steps\">\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">1</span>\n//             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">2</span>\n//             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">3</span>\n//             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">4</span>\n//             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> or <strong>\"View Projects\"</strong> on leaf subdomains</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domain Info Card */}\n//       {domain && (\n//         <div className=\"domain-info-card\">\n//           <div className=\"domain-icon\">\n//             <FiFolder />\n//           </div>\n//           <div className=\"domain-details\">\n//             <h3>{domain.title}</h3>\n//             <p>{domain.description}</p>\n//             <div className=\"domain-stats\">\n//               <span className=\"stat-item\">\n//                 <strong>{subDomains.length}</strong> root sub-domains\n//               </span>\n//               <span className=\"stat-item\">\n//                 <strong>{domain.projectCount || 0}</strong> total projects\n//               </span>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* SubDomain Tree */}\n//       <div className=\"subdomain-tree-container\">\n//         <div className=\"tree-header\">\n//           <h2>SubDomain Hierarchy</h2>\n//           <div className=\"tree-legend\">\n//             <span className=\"legend-item\">\n//               <FiFolder className=\"folder-icon\" />\n//               Has children\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiTarget className=\"leaf-icon\" />\n//               Leaf (can have projects)\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiFileText className=\"project-icon\" />\n//               Add Project\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiList className=\"view-icon\" />\n//               View Projects\n//             </span>\n//           </div>\n//         </div>\n\n//         {subDomains.length > 0 ? (\n//           <div className=\"subdomain-tree\">\n//             {subDomains.map((subDomain) => (\n//               <SubDomainNode\n//                 key={subDomain.id}\n//                 subDomain={subDomain}\n//                 level={0}\n//                 isExpanded={expandedNodes.has(subDomain.id)}\n//                 onToggleExpanded={toggleExpanded}\n//                 onEdit={handleEditSubDomain}\n//                 onDelete={handleDeleteSubDomain}\n//                 onAddChild={handleAddSubDomain}\n//                 onAddProject={handleAddProjectToSubDomain}\n//                 onViewProjects={handleViewProjectsInSubDomain} // NEW\n//                 expandedNodes={expandedNodes}\n//               />\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"empty-tree-state\">\n//             <FiFolderPlus size={64} />\n//             <h3>No SubDomains Yet</h3>\n//             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n//             <div className=\"empty-state-examples\">\n//               <h4>Example Structure:</h4>\n//               <div className=\"example-tree\">\n//                 <div className=\"example-item\">üìÇ Machine Learning</div>\n//                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n//                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n//                 <div className=\"example-item\">üéØ Data Science</div>\n//               </div>\n//             </div>\n//             <div className=\"empty-state-actions\">\n//               <button \n//                 className=\"primary-button large\" \n//                 onClick={() => handleAddSubDomain()}\n//               >\n//                 <FiPlus />\n//                 Create Your First SubDomain\n//               </button>\n//               <p className=\"help-text\">\n//                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit SubDomain Modal */}\n//       {showAddModal && (\n//         <SubDomainModal\n//           subDomain={editingSubDomain}\n//           parent={selectedParent}\n//           domain={domain}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//           }}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n\n//       {/* Project Creation Modal */}\n//       {showProjectModal && (\n//         <ProjectModal\n//           subDomain={selectedSubDomainForProject}\n//           domain={domain}\n//           onClose={() => {\n//             setShowProjectModal(false);\n//             setSelectedSubDomainForProject(null);\n//           }}\n//           onSave={() => {\n//             setShowProjectModal(false);\n//             setSelectedSubDomainForProject(null);\n//             toast.success('Project created successfully!');\n//             fetchDomainAndSubDomains(); // Refresh to update project counts\n//           }}\n//         />\n//       )}\n\n//       {/* NEW: Projects List Modal */}\n//       {showProjectsModal && (\n//         <ProjectsListModal\n//           subDomain={selectedSubDomainForProjectsView}\n//           projects={projectsInSubDomain}\n//           loading={projectsLoading}\n//           onClose={() => {\n//             setShowProjectsModal(false);\n//             setSelectedSubDomainForProjectsView(null);\n//             setProjectsInSubDomain([]);\n//           }}\n//           onEdit={handleEditProject}\n//           onDelete={handleDeleteProject}\n//           onArchive={handleArchiveProject}\n//           onToggleFeatured={handleToggleProjectFeatured}\n//           onAddProject={() => {\n//             setShowProjectsModal(false);\n//             setSelectedSubDomainForProject(selectedSubDomainForProjectsView);\n//             setShowProjectModal(true);\n//           }}\n//         />\n//       )}\n\n//       {/* NEW: Project Edit Modal */}\n//       {showProjectEditModal && editingProject && (\n//         <ProjectEditModal\n//           project={editingProject}\n//           onClose={() => {\n//             setShowProjectEditModal(false);\n//             setEditingProject(null);\n//           }}\n//           onSave={() => {\n//             setShowProjectEditModal(false);\n//             setEditingProject(null);\n//             // Refresh projects list and subdomain data\n//             fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // UPDATED SubDomain Node Component with View Projects functionality\n// const SubDomainNode = ({ \n//   subDomain, \n//   level, \n//   isExpanded, \n//   onToggleExpanded, \n//   onEdit, \n//   onDelete, \n//   onAddChild,\n//   onAddProject,\n//   onViewProjects, // NEW\n//   expandedNodes \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n//   const hasChildren = subDomain.children && subDomain.children.length > 0;\n//   const isLeaf = !hasChildren;\n//   const hasProjects = subDomain.projectCount > 0;\n\n//   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n//     title: subDomain.title,\n//     level,\n//     hasChildren,\n//     isLeaf,\n//     isExpanded,\n//     projectCount: subDomain.projectCount,\n//     hasProjects,\n//     children: subDomain.children,\n//     childrenLength: subDomain.children?.length,\n//     subDomainFullObject: subDomain\n//   });\n\n//   // üîç DEBUGGING: Log button visibility conditions\n//   console.log('üîç BUTTON VISIBILITY DEBUG for', subDomain.title, ':', {\n//     isLeaf,\n//     hasProjects,\n//     projectCount: subDomain.projectCount,\n//     shouldShowViewButton: isLeaf && hasProjects,\n//     shouldShowAddButton: isLeaf\n//   });\n\n//   return (\n//     <div className={`subdomain-node level-${level}`}>\n//       <div className=\"node-content\">\n//         <div className=\"node-main\">\n//           {hasChildren ? (\n//             <button \n//               className=\"expand-button\"\n//               onClick={() => onToggleExpanded(subDomain.id)}\n//             >\n//               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n//             </button>\n//           ) : (\n//             <div className=\"expand-placeholder\" />\n//           )}\n          \n//           <div className=\"node-icon\">\n//             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n//           </div>\n          \n//           <div className=\"node-info\">\n//             <h4 className=\"node-title\">{subDomain.title}</h4>\n//             <p className=\"node-description\">{subDomain.description}</p>\n//             <div className=\"node-stats\">\n//               {hasChildren && (\n//                 <span className=\"stat-badge\">\n//                   {subDomain.children.length} sub-domains\n//                 </span>\n//               )}\n//               {hasProjects && (\n//                 <span className=\"stat-badge projects\">\n//                   {subDomain.projectCount} projects\n//                 </span>\n//               )}\n//               {isLeaf && !hasProjects && (\n//                 <span className=\"stat-badge leaf\">\n//                   Can have projects\n//                 </span>\n//               )}\n//               {/* üîç DEBUGGING: Always show project count for debugging */}\n//               <span className=\"stat-badge debug\" style={{backgroundColor: '#ff9999', color: '#000'}}>\n//                 DEBUG: Count={subDomain.projectCount || 0}\n//               </span>\n//             </div>\n//           </div>\n//         </div>\n        \n//         <div className=\"node-actions\">\n//           {/* üîç DEBUGGING: Always show this section with debug info */}\n//           <div style={{fontSize: '10px', color: '#666', marginBottom: '5px'}}>\n//             DEBUG: isLeaf={isLeaf.toString()}, hasProjects={hasProjects.toString()}, count={subDomain.projectCount}\n//           </div>\n          \n//           {/* NEW: View Projects button for leaf nodes - ALWAYS SHOW IF LEAF FOR DEBUGGING */}\n//           {isLeaf && (\n//             <button \n//               className=\"action-button view\" \n//               onClick={() => {\n//                 console.log('üéØ VIEW BUTTON CLICKED for:', subDomain.title);\n//                 onViewProjects(subDomain);\n//               }}\n//               title={`View projects in \"${subDomain.title}\" (Count: ${subDomain.projectCount || 0})`}\n//               style={{backgroundColor: hasProjects ? '#10b981' : '#6b7280'}}\n//             >\n//               <FiList />\n//               <span style={{fontSize: '10px', marginLeft: '2px'}}>\n//                 {subDomain.projectCount || 0}\n//               </span>\n//             </button>\n//           )}\n          \n//           {isLeaf && (\n//             <button \n//               className=\"action-button project\" \n//               onClick={() => {\n//                 console.log('üéØ ADD PROJECT BUTTON CLICKED for:', subDomain.title);\n//                 onAddProject(subDomain);\n//               }}\n//               title={`Add project to \"${subDomain.title}\"`}\n//             >\n//               <FiFileText />\n//             </button>\n//           )}\n          \n//           <button \n//             className=\"action-button add\" \n//             onClick={() => onAddChild(subDomain)}\n//             title={`Add child subdomain under \"${subDomain.title}\"`}\n//           >\n//             <FiPlus />\n//           </button>\n          \n//           <div className=\"action-menu\">\n//             <button \n//               onClick={() => setShowMenu(!showMenu)}\n//               title=\"More actions\"\n//             >\n//               <FiMoreVertical />\n//             </button>\n//             {showMenu && (\n//               <div className=\"dropdown-menu\">\n//                 {/* üîç DEBUGGING: Always show view projects option for leaf nodes */}\n//                 {isLeaf && (\n//                   <button \n//                     onClick={() => {\n//                       console.log('üéØ DROPDOWN VIEW PROJECTS CLICKED for:', subDomain.title);\n//                       onViewProjects(subDomain);\n//                       setShowMenu(false);\n//                     }}\n//                     className=\"primary-option\"\n//                     style={{backgroundColor: hasProjects ? '#dff0d8' : '#f8f9fa'}}\n//                   >\n//                     <FiList /> View Projects ({subDomain.projectCount || 0})\n//                   </button>\n//                 )}\n//                 {isLeaf && (\n//                   <button \n//                     onClick={() => {\n//                       onAddProject(subDomain);\n//                       setShowMenu(false);\n//                     }}\n//                     className=\"primary-option\"\n//                   >\n//                     <FiFileText /> Add Project\n//                   </button>\n//                 )}\n//                 <button onClick={() => {\n//                   onEdit(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiEdit /> Edit SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onAddChild(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiPlus /> Add Child SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onDelete(subDomain);\n//                   setShowMenu(false);\n//                 }} className=\"danger\">\n//                   <FiTrash2 /> Delete SubDomain\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n      \n//       {/* Children */}\n//       {hasChildren && isExpanded && (\n//         <div className=\"node-children\">\n//           {subDomain.children.map((child) => (\n//             <SubDomainNode\n//               key={child.id}\n//               subDomain={child}\n//               level={level + 1}\n//               isExpanded={expandedNodes.has(child.id)}\n//               onToggleExpanded={onToggleExpanded}\n//               onEdit={onEdit}\n//               onDelete={onDelete}\n//               onAddChild={onAddChild}\n//               onAddProject={onAddProject}\n//               onViewProjects={onViewProjects} // NEW\n//               expandedNodes={expandedNodes}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Modal Component (unchanged)\n// const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: subDomain?.title || '',\n//     description: subDomain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       const requestData = {\n//         title: formData.title.trim(),\n//         description: formData.description.trim(),\n//         domainId: domain.id,\n//         parentId: parent?.id || null\n//       };\n\n//       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n//       if (subDomain) {\n//         const response = await authService.updateSubDomain(subDomain.id, requestData);\n//         toast.success('Sub-domain updated successfully');\n//       } else {\n//         const response = await authService.createSubDomain(requestData);\n//         toast.success('Sub-domain created successfully');\n//       }\n\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n//       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n//       toast.error(errorMessage);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const getModalTitle = () => {\n//     if (subDomain) {\n//       return `Edit SubDomain: ${subDomain.title}`;\n//     }\n//     if (parent) {\n//       return `Add SubDomain under: ${parent.title}`;\n//     }\n//     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{getModalTitle()}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>SubDomain Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"e.g., Machine Learning, Deep Learning\"\n//               required\n//               minLength={3}\n//               maxLength={100}\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//               placeholder=\"Describe what this sub-domain covers...\"\n//               maxLength={500}\n//             />\n//           </div>\n          \n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             {parent && (\n//               <>\n//                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n//               </>\n//             )}\n//             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title.trim()}\n//             >\n//               {loading ? 'Saving...' : 'Save SubDomain'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Project Creation Modal Component (unchanged)\n// const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: '',\n//     abstract: '',\n//     specifications: '',\n//     learningOutcomes: '',\n//     subDomainId: subDomain?.id || '',\n//     isFeatured: false\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('üìù PROJECT MODAL - Props:', {\n//     subDomain: subDomain?.title,\n//     domain: domain?.title,\n//     formData\n//   });\n\n//   // Slug generation function\n//   const generateSlug = (title) => {\n//     return title\n//       .toLowerCase()\n//       .trim()\n//       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n//       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n//       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       // Don't send slug - let backend auto-generate it\n//       const projectData = {\n//         title: formData.title.trim(),\n//         abstract: formData.abstract.trim(),\n//         specifications: formData.specifications.trim(),\n//         learningOutcomes: formData.learningOutcomes.trim(),\n//         subDomainId: formData.subDomainId,\n//         isFeatured: formData.isFeatured\n//       };\n\n//       console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n//       console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n      \n//       const response = await authService.createProject(projectData);\n//       console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n      \n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå PROJECT SAVE - Error:', error);\n//       console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n      \n//       // Show more specific error message if available\n//       const errorMessage = error.response?.data?.message || 'Failed to create project';\n//       toast.error(errorMessage);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Add Project to: {subDomain?.title}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Project Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"Enter project title...\"\n//               required\n//               minLength={3}\n//               maxLength={200}\n//             />\n//             {/* Show slug preview (for user reference only) */}\n//             {formData.title && (\n//               <div className=\"slug-preview\">\n//                 <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n//               </div>\n//             )}\n//           </div>\n          \n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n//             <span className=\"info-note\">\n//               <FiTarget /> This is a leaf subdomain - perfect for projects!\n//             </span>\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Abstract *</label>\n//             <textarea\n//               value={formData.abstract}\n//               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n//               rows={4}\n//               placeholder=\"Brief description of the project...\"\n//               required\n//               minLength={10}\n//               maxLength={1000}\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Specifications *</label>\n//             <textarea\n//               value={formData.specifications}\n//               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n//               rows={6}\n//               placeholder=\"Technical specifications and requirements...\"\n//               required\n//               minLength={10}\n//               maxLength={5000}\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Learning Outcomes *</label>\n//             <textarea\n//               value={formData.learningOutcomes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n//               rows={4}\n//               placeholder=\"What will students learn from this project...\"\n//               required\n//               minLength={10}\n//               maxLength={2000}\n//             />\n//           </div>\n          \n//           <div className=\"form-group checkbox\">\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={formData.isFeatured}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n//               />\n//               <FiTarget />\n//               Featured Project\n//             </label>\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n//             >\n//               {loading ? 'Creating...' : 'Create Project'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // NEW: Projects List Modal Component\n// const ProjectsListModal = ({ \n//   subDomain, \n//   projects, \n//   loading, \n//   onClose, \n//   onEdit, \n//   onDelete, \n//   onArchive, \n//   onToggleFeatured,\n//   onAddProject \n// }) => {\n//   console.log('üìã PROJECTS LIST MODAL - Rendering with props:', {\n//     subDomain: subDomain?.title,\n//     subDomainId: subDomain?.id,\n//     projectsCount: projects.length,\n//     loading,\n//     projects: projects,\n//     firstProject: projects[0]\n//   });\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Projects in: {subDomain?.title}</h2>\n//           <button onClick={onClose}>\n//             <FiX />\n//           </button>\n//         </div>\n        \n//         <div className=\"projects-list-content\">\n//           <div className=\"projects-list-header\">\n//             <div className=\"list-info\">\n//               <p><strong>SubDomain:</strong> {subDomain?.title}</p>\n//               <p><strong>Total Projects:</strong> {projects.length}</p>\n//               {/* üîç DEBUGGING: Show debug info */}\n//               <div style={{fontSize: '12px', color: '#666', marginTop: '10px', padding: '10px', backgroundColor: '#f0f0f0'}}>\n//                 <strong>DEBUG INFO:</strong><br/>\n//                 SubDomain ID: {subDomain?.id}<br/>\n//                 Projects Array Length: {projects.length}<br/>\n//                 Loading: {loading.toString()}<br/>\n//                 Projects Data: {JSON.stringify(projects, null, 2)}\n//               </div>\n//             </div>\n//             <button \n//               className=\"primary-button\" \n//               onClick={() => {\n//                 console.log('üéØ ADD NEW PROJECT CLICKED from modal');\n//                 onAddProject();\n//               }}\n//             >\n//               <FiPlus />\n//               Add New Project\n//             </button>\n//           </div>\n          \n//           {loading ? (\n//             <div className=\"loading-container\">\n//               <div className=\"loading-spinner\"></div>\n//               <p>Loading projects...</p>\n//             </div>\n//           ) : projects.length > 0 ? (\n//             <div className=\"projects-list\">\n//               {projects.map((project, index) => {\n//                 console.log(`üìÑ RENDERING PROJECT ${index + 1}:`, project);\n//                 return (\n//                   <ProjectListItem\n//                     key={project.id}\n//                     project={project}\n//                     onEdit={onEdit}\n//                     onDelete={onDelete}\n//                     onArchive={onArchive}\n//                     onToggleFeatured={onToggleFeatured}\n//                   />\n//                 );\n//               })}\n//             </div>\n//           ) : (\n//             <div className=\"empty-projects-state\">\n//               <FiFileText size={48} />\n//               <h3>No Projects Found</h3>\n//               <p>This subdomain doesn't have any projects yet.</p>\n//               <div style={{fontSize: '12px', color: '#666', marginTop: '10px'}}>\n//                 <strong>DEBUG:</strong> API returned {projects.length} projects for subdomain {subDomain?.id}\n//               </div>\n//               <button \n//                 className=\"primary-button\" \n//                 onClick={() => {\n//                   console.log('üéØ ADD FIRST PROJECT CLICKED from empty state');\n//                   onAddProject();\n//                 }}\n//               >\n//                 <FiPlus />\n//                 Add First Project\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // NEW: Project List Item Component\n// const ProjectListItem = ({ \n//   project, \n//   onEdit, \n//   onDelete, \n//   onArchive, \n//   onToggleFeatured \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   console.log('üìÑ PROJECT LIST ITEM - Rendering project:', {\n//     id: project.id,\n//     title: project.title,\n//     abstract: project.abstract?.substring(0, 50),\n//     isActive: project.isActive,\n//     isFeatured: project.isFeatured,\n//     viewCount: project.viewCount,\n//     createdAt: project.createdAt,\n//     updatedAt: project.updatedAt,\n//     fullProject: project\n//   });\n\n//   return (\n//     <div className={`project-list-item ${!project.isActive ? 'archived' : ''}`}>\n//       <div className=\"project-info\">\n//         <div className=\"project-title-section\">\n//           <h4 className=\"project-title\">{project.title}</h4>\n//           <div className=\"project-badges\">\n//             {project.isFeatured && (\n//               <span className=\"badge featured\">\n//                 <FiStar /> Featured\n//               </span>\n//             )}\n//             {!project.isActive && (\n//               <span className=\"badge archived\">Archived</span>\n//             )}\n//             {/* üîç DEBUGGING: Always show project ID */}\n//             <span className=\"badge debug\" style={{backgroundColor: '#e3f2fd', color: '#1976d2'}}>\n//               ID: {project.id}\n//             </span>\n//           </div>\n//         </div>\n//         <p className=\"project-abstract\">\n//           {project.abstract?.substring(0, 150) || 'No abstract available'}...\n//         </p>\n//         <div className=\"project-stats\">\n//           <span className=\"stat\">\n//             <FiEye /> {project.viewCount || 0} views\n//           </span>\n//           <span className=\"stat\">\n//             Created: {project.createdAt ? new Date(project.createdAt).toLocaleDateString() : 'Unknown'}\n//           </span>\n//           <span className=\"stat\">\n//             Updated: {project.updatedAt ? new Date(project.updatedAt).toLocaleDateString() : 'Unknown'}\n//           </span>\n//         </div>\n//       </div>\n      \n//       <div className=\"project-actions\">\n//         {/* üîç DEBUGGING: Always show edit button with debug styling */}\n//         <button \n//           className=\"action-button primary\" \n//           onClick={() => {\n//             console.log('üéØ EDIT BUTTON CLICKED for project:', project.title);\n//             onEdit(project);\n//           }}\n//           title=\"Edit project\"\n//           style={{backgroundColor: '#10b981', color: 'white', padding: '8px', margin: '2px'}}\n//         >\n//           <FiEdit />\n//           <span style={{fontSize: '10px', marginLeft: '2px'}}>EDIT</span>\n//         </button>\n        \n//         {/* üîç DEBUGGING: Always show delete button with debug styling */}\n//         <button \n//           className=\"action-button danger\" \n//           onClick={() => {\n//             console.log('üéØ DELETE BUTTON CLICKED for project:', project.title);\n//             onDelete(project);\n//           }}\n//           title=\"Delete project\"\n//           style={{backgroundColor: '#ef4444', color: 'white', padding: '8px', margin: '2px'}}\n//         >\n//           <FiTrash2 />\n//           <span style={{fontSize: '10px', marginLeft: '2px'}}>DEL</span>\n//         </button>\n        \n//         <div className=\"action-menu\">\n//           <button \n//             onClick={() => {\n//               console.log('üéØ MORE MENU CLICKED for project:', project.title);\n//               setShowMenu(!showMenu);\n//             }}\n//             title=\"More actions\"\n//             style={{backgroundColor: '#6b7280', color: 'white', padding: '8px', margin: '2px'}}\n//           >\n//             <FiMoreVertical />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\" style={{zIndex: 1000, backgroundColor: 'white', border: '1px solid #ccc', borderRadius: '4px', padding: '5px'}}>\n//               <button onClick={() => {\n//                 console.log('üéØ DROPDOWN EDIT CLICKED for project:', project.title);\n//                 onEdit(project);\n//                 setShowMenu(false);\n//               }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n//                 <FiEdit /> Edit Project\n//               </button>\n//               <button onClick={() => {\n//                 console.log('üéØ DROPDOWN TOGGLE FEATURED CLICKED for project:', project.title);\n//                 onToggleFeatured(project);\n//                 setShowMenu(false);\n//               }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n//                 <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n//               </button>\n//               <button onClick={() => {\n//                 console.log('üéØ DROPDOWN ARCHIVE CLICKED for project:', project.title);\n//                 onArchive(project);\n//                 setShowMenu(false);\n//               }} style={{display: 'block', width: '100%', padding: '5px', margin: '2px'}}>\n//                 <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n//               </button>\n//               <button onClick={() => {\n//                 console.log('üéØ DROPDOWN DELETE CLICKED for project:', project.title);\n//                 onDelete(project);\n//                 setShowMenu(false);\n//               }} className=\"danger\" style={{display: 'block', width: '100%', padding: '5px', margin: '2px', backgroundColor: '#ef4444', color: 'white'}}>\n//                 <FiTrash2 /> Delete Project\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // NEW: Project Edit Modal Component\n// const ProjectEditModal = ({ project, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: project?.title || '',\n//     abstract: project?.abstract || '',\n//     specifications: project?.specifications || '',\n//     learningOutcomes: project?.learningOutcomes || '',\n//     isFeatured: project?.isFeatured || false\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('üìù PROJECT EDIT MODAL - Project:', project.title);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       console.log('üíæ PROJECT UPDATE - Starting with data:', formData);\n//       await authService.updateProject(project.id, formData);\n//       console.log('‚úÖ PROJECT UPDATE - Success');\n//       toast.success('Project updated successfully');\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå PROJECT UPDATE - Error:', error);\n//       toast.error('Failed to update project');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>Edit Project: {project.title}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>Project Title</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {project.subDomain?.domain?.title || 'Unknown'}<br />\n//             <strong>SubDomain:</strong> {project.subDomain?.title || 'Unknown'}<br />\n//             <span className=\"info-note\">\n//               üí° To move this project to a different domain/subdomain, contact your administrator\n//             </span>\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Abstract</label>\n//             <textarea\n//               value={formData.abstract}\n//               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n//               rows={4}\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Specifications</label>\n//             <textarea\n//               value={formData.specifications}\n//               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n//               rows={6}\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Learning Outcomes</label>\n//             <textarea\n//               value={formData.learningOutcomes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n//               rows={4}\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group checkbox\">\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={formData.isFeatured}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n//               />\n//               Featured Project\n//             </label>\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Updating...' : 'Update Project'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SubDomainManagement;\n\n\n// // // src/components/domains/SubDomainManagement.js - ENHANCED WITH PROJECT VIEW/EDIT/DELETE\n// // import React, { useState, useEffect } from 'react';\n// // import { useParams, useNavigate } from 'react-router-dom';\n// // import { authService } from '../../services/authService';\n// // import { toast } from 'react-toastify';\n// // import {\n// //   FiPlus,\n// //   FiEdit,\n// //   FiTrash2,\n// //   FiChevronDown,\n// //   FiChevronRight,\n// //   FiFolder,\n// //   FiFolderPlus,\n// //   FiFileText,\n// //   FiArrowLeft,\n// //   FiMoreVertical,\n// //   FiMove,\n// //   FiTarget,\n// //   FiEye,\n// //   FiStar,\n// //   FiArchive,\n// //   FiList,\n// //   FiX\n// // } from 'react-icons/fi';\n\n// // const SubDomainManagement = () => {\n// //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// //   const { domainId } = useParams();\n// //   const navigate = useNavigate();\n  \n// //   const [domain, setDomain] = useState(null);\n// //   const [subDomains, setSubDomains] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [showAddModal, setShowAddModal] = useState(false);\n// //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// //   const [selectedParent, setSelectedParent] = useState(null);\n// //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// //   // Project creation state\n// //   const [showProjectModal, setShowProjectModal] = useState(false);\n// //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// //   // NEW: Project management states\n// //   const [showProjectsModal, setShowProjectsModal] = useState(false);\n// //   const [selectedSubDomainForProjectsView, setSelectedSubDomainForProjectsView] = useState(null);\n// //   const [projectsInSubDomain, setProjectsInSubDomain] = useState([]);\n// //   const [editingProject, setEditingProject] = useState(null);\n// //   const [showProjectEditModal, setShowProjectEditModal] = useState(false);\n// //   const [projectsLoading, setProjectsLoading] = useState(false);\n\n// //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// //     domainId,\n// //     domain: domain?.title,\n// //     subDomainsCount: subDomains.length,\n// //     loading,\n// //     selectedParent: selectedParent?.title,\n// //     expandedCount: expandedNodes.size,\n// //     showProjectModal,\n// //     selectedSubDomainForProject: selectedSubDomainForProject?.title,\n// //     // NEW states\n// //     showProjectsModal,\n// //     selectedSubDomainForProjectsView: selectedSubDomainForProjectsView?.title,\n// //     projectsInSubDomainCount: projectsInSubDomain.length,\n// //     editingProject: editingProject?.title\n// //   });\n\n// //   useEffect(() => {\n// //     if (domainId) {\n// //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// //       fetchDomainAndSubDomains();\n// //     }\n// //   }, [domainId]);\n\n// //   const fetchDomainAndSubDomains = async () => {\n// //     try {\n// //       setLoading(true);\n      \n// //       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n// //       // Get domain details\n// //       const domainsResponse = await authService.getDomains();\n// //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// //       let domainData = null;\n// //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// //       if (domains.length > 0) {\n// //         domainData = domains.find(d => d.id == domainId);\n// //       }\n      \n// //       if (!domainData) {\n// //         domainData = {\n// //           id: domainId,\n// //           title: `Domain ${domainId}`,\n// //           description: 'Domain not found in list',\n// //           projectCount: 0\n// //         };\n// //       }\n      \n// //       setDomain(domainData);\n      \n// //       // Get subdomains\n// //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// //       setSubDomains(subDomainsData);\n      \n// //       // Auto-expand first level\n// //       if (subDomainsData.length > 0) {\n// //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// //         setExpandedNodes(new Set(firstLevelIds));\n// //       }\n      \n// //       // Try hierarchy API as fallback\n// //       try {\n// //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// //           setSubDomains(hierarchyData.subDomains);\n// //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// //           }\n// //         }\n// //       } catch (hierarchyError) {\n// //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// //       }\n      \n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// //       toast.error('Failed to fetch domain information');\n      \n// //       setDomain({\n// //         id: domainId,\n// //         title: `Domain ${domainId}`,\n// //         description: 'Error loading domain details',\n// //         projectCount: 0\n// //       });\n// //       setSubDomains([]);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const handleAddSubDomain = (parent = null) => {\n// //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// //     setSelectedParent(parent);\n// //     setEditingSubDomain(null);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleEditSubDomain = (subDomain) => {\n// //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// //     setSelectedParent(null);\n// //     setEditingSubDomain(subDomain);\n// //     setShowAddModal(true);\n// //   };\n\n// //   // Handle adding project to subdomain\n// //   const handleAddProjectToSubDomain = (subDomain) => {\n// //     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n// //     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n// //     if (subDomain.children && subDomain.children.length > 0) {\n// //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// //       return;\n// //     }\n    \n// //     setSelectedSubDomainForProject(subDomain);\n// //     setShowProjectModal(true);\n// //   };\n\n// //   // NEW: Handle viewing projects in subdomain\n// //   const handleViewProjectsInSubDomain = async (subDomain) => {\n// //     console.log('üëÅÔ∏è VIEW PROJECTS - Starting for subdomain:', subDomain.title);\n    \n// //     if (subDomain.children && subDomain.children.length > 0) {\n// //       toast.error('Only leaf sub-domains have projects to view');\n// //       return;\n// //     }\n    \n// //     if (!subDomain.projectCount || subDomain.projectCount === 0) {\n// //       toast.info('This sub-domain has no projects yet');\n// //       return;\n// //     }\n    \n// //     setSelectedSubDomainForProjectsView(subDomain);\n// //     await fetchProjectsInSubDomain(subDomain.id);\n// //     setShowProjectsModal(true);\n// //   };\n\n// //   // NEW: Fetch projects for a specific subdomain\n// //   const fetchProjectsInSubDomain = async (subDomainId) => {\n// //     try {\n// //       setProjectsLoading(true);\n// //       console.log('üì° FETCH PROJECTS - For subdomain:', subDomainId);\n      \n// //       const response = await authService.getProjects({ \n// //         subDomainId: subDomainId,\n// //         limit: 100 // Get all projects for this subdomain\n// //       });\n      \n// //       console.log('‚úÖ FETCH PROJECTS - Response:', response.data);\n// //       const projects = response.data?.projects || [];\n// //       setProjectsInSubDomain(projects);\n      \n// //     } catch (error) {\n// //       console.error('‚ùå FETCH PROJECTS - Error:', error);\n// //       toast.error('Failed to fetch projects');\n// //       setProjectsInSubDomain([]);\n// //     } finally {\n// //       setProjectsLoading(false);\n// //     }\n// //   };\n\n// //   // NEW: Handle editing a project\n// //   const handleEditProject = (project) => {\n// //     console.log('‚úèÔ∏è EDIT PROJECT - Starting for:', project.title);\n// //     setEditingProject(project);\n// //     setShowProjectEditModal(true);\n// //   };\n\n// //   // NEW: Handle deleting a project\n// //   const handleDeleteProject = async (project) => {\n// //     console.log('üóëÔ∏è DELETE PROJECT - Requesting deletion:', project.title);\n    \n// //     if (!window.confirm(`Are you sure you want to delete the project \"${project.title}\"?`)) {\n// //       console.log('‚ùå DELETE PROJECT - Cancelled by user');\n// //       return;\n// //     }\n\n// //     try {\n// //       console.log('üì° DELETE PROJECT - API call for:', project.id);\n// //       await authService.deleteProject(project.id);\n// //       console.log('‚úÖ DELETE PROJECT - Success');\n// //       toast.success('Project deleted successfully');\n      \n// //       // Refresh projects list and subdomain data\n// //       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n// //       await fetchDomainAndSubDomains(); // Refresh to update project counts\n      \n// //     } catch (error) {\n// //       console.error('‚ùå DELETE PROJECT - Error:', error);\n// //       toast.error('Failed to delete project');\n// //     }\n// //   };\n\n// //   // NEW: Handle archiving a project\n// //   const handleArchiveProject = async (project) => {\n// //     const isArchiving = project.isActive;\n// //     const action = isArchiving ? 'archive' : 'restore';\n    \n// //     console.log('üìÅ ARCHIVE PROJECT - Action:', action, 'for:', project.title);\n    \n// //     if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       await authService.archiveProject(project.id, {\n// //         archive: isArchiving,\n// //         reason: `${action} via subdomain management`\n// //       });\n// //       console.log('‚úÖ ARCHIVE PROJECT - Success');\n// //       toast.success(`Project ${action}d successfully`);\n      \n// //       // Refresh projects list\n// //       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n// //     } catch (error) {\n// //       console.error('‚ùå ARCHIVE PROJECT - Error:', error);\n// //       toast.error(`Failed to ${action} project`);\n// //     }\n// //   };\n\n// //   // NEW: Handle toggling featured status\n// //   const handleToggleProjectFeatured = async (project) => {\n// //     console.log('‚≠ê TOGGLE FEATURED - For project:', project.title);\n    \n// //     try {\n// //       await authService.updateProject(project.id, {\n// //         isFeatured: !project.isFeatured\n// //       });\n// //       console.log('‚úÖ TOGGLE FEATURED - Success');\n// //       toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n      \n// //       // Refresh projects list\n// //       await fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n      \n// //     } catch (error) {\n// //       console.error('‚ùå TOGGLE FEATURED - Error:', error);\n// //       toast.error('Failed to update featured status');\n// //     }\n// //   };\n\n// //   const handleDeleteSubDomain = async (subDomain) => {\n// //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //     const hasProjects = subDomain.projectCount > 0;\n    \n// //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// //     if (hasChildren) {\n// //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// //     }\n// //     if (hasProjects) {\n// //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// //     }\n    \n// //     if (!window.confirm(confirmMessage)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// //       const response = await authService.deleteSubDomain(subDomain.id);\n// //       toast.success('Sub-domain deleted successfully');\n// //       fetchDomainAndSubDomains();\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// //       toast.error('Failed to delete sub-domain');\n// //     }\n// //   };\n\n// //   const toggleExpanded = (nodeId) => {\n// //     const newExpanded = new Set(expandedNodes);\n// //     if (newExpanded.has(nodeId)) {\n// //       newExpanded.delete(nodeId);\n// //     } else {\n// //       newExpanded.add(nodeId);\n// //     }\n// //     setExpandedNodes(newExpanded);\n// //   };\n\n// //   if (loading) {\n// //     return (\n// //       <div className=\"loading-container\">\n// //         <div className=\"loading-spinner\"></div>\n// //         <p>Loading sub-domains...</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"subdomain-management\">\n// //       {/* Header with Breadcrumb */}\n// //       <div className=\"page-header\">\n// //         <div className=\"header-content\">\n// //           <div className=\"breadcrumb\">\n// //             <button \n// //               className=\"breadcrumb-link\"\n// //               onClick={() => navigate('/domains')}\n// //             >\n// //               <FiArrowLeft />\n// //               Domains\n// //             </button>\n// //             <span className=\"breadcrumb-separator\">/</span>\n// //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// //           </div>\n// //           <h1>SubDomain Management</h1>\n// //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// //         </div>\n// //         <div className=\"header-actions\">\n// //           <button \n// //             className=\"primary-button\" \n// //             onClick={() => handleAddSubDomain()}\n// //           >\n// //             <FiPlus />\n// //             Add Root SubDomain\n// //           </button>\n// //         </div>\n// //       </div>\n\n// //       {/* Quick Guide */}\n// //       <div className=\"quick-guide\">\n// //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// //         <div className=\"guide-steps\">\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">1</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">2</span>\n// //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">3</span>\n// //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">4</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> or <strong>\"View Projects\"</strong> on leaf subdomains</span>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Domain Info Card */}\n// //       {domain && (\n// //         <div className=\"domain-info-card\">\n// //           <div className=\"domain-icon\">\n// //             <FiFolder />\n// //           </div>\n// //           <div className=\"domain-details\">\n// //             <h3>{domain.title}</h3>\n// //             <p>{domain.description}</p>\n// //             <div className=\"domain-stats\">\n// //               <span className=\"stat-item\">\n// //                 <strong>{subDomains.length}</strong> root sub-domains\n// //               </span>\n// //               <span className=\"stat-item\">\n// //                 <strong>{domain.projectCount || 0}</strong> total projects\n// //               </span>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       )}\n\n// //       {/* SubDomain Tree */}\n// //       <div className=\"subdomain-tree-container\">\n// //         <div className=\"tree-header\">\n// //           <h2>SubDomain Hierarchy</h2>\n// //           <div className=\"tree-legend\">\n// //             <span className=\"legend-item\">\n// //               <FiFolder className=\"folder-icon\" />\n// //               Has children\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiTarget className=\"leaf-icon\" />\n// //               Leaf (can have projects)\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiFileText className=\"project-icon\" />\n// //               Add Project\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiList className=\"view-icon\" />\n// //               View Projects\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {subDomains.length > 0 ? (\n// //           <div className=\"subdomain-tree\">\n// //             {subDomains.map((subDomain) => (\n// //               <SubDomainNode\n// //                 key={subDomain.id}\n// //                 subDomain={subDomain}\n// //                 level={0}\n// //                 isExpanded={expandedNodes.has(subDomain.id)}\n// //                 onToggleExpanded={toggleExpanded}\n// //                 onEdit={handleEditSubDomain}\n// //                 onDelete={handleDeleteSubDomain}\n// //                 onAddChild={handleAddSubDomain}\n// //                 onAddProject={handleAddProjectToSubDomain}\n// //                 onViewProjects={handleViewProjectsInSubDomain} // NEW\n// //                 expandedNodes={expandedNodes}\n// //               />\n// //             ))}\n// //           </div>\n// //         ) : (\n// //           <div className=\"empty-tree-state\">\n// //             <FiFolderPlus size={64} />\n// //             <h3>No SubDomains Yet</h3>\n// //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// //             <div className=\"empty-state-examples\">\n// //               <h4>Example Structure:</h4>\n// //               <div className=\"example-tree\">\n// //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// //                 <div className=\"example-item\">üéØ Data Science</div>\n// //               </div>\n// //             </div>\n// //             <div className=\"empty-state-actions\">\n// //               <button \n// //                 className=\"primary-button large\" \n// //                 onClick={() => handleAddSubDomain()}\n// //               >\n// //                 <FiPlus />\n// //                 Create Your First SubDomain\n// //               </button>\n// //               <p className=\"help-text\">\n// //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// //               </p>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Add/Edit SubDomain Modal */}\n// //       {showAddModal && (\n// //         <SubDomainModal\n// //           subDomain={editingSubDomain}\n// //           parent={selectedParent}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //             fetchDomainAndSubDomains();\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* Project Creation Modal */}\n// //       {showProjectModal && (\n// //         <ProjectModal\n// //           subDomain={selectedSubDomainForProject}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowProjectModal(false);\n// //             setSelectedSubDomainForProject(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowProjectModal(false);\n// //             setSelectedSubDomainForProject(null);\n// //             toast.success('Project created successfully!');\n// //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* NEW: Projects List Modal */}\n// //       {showProjectsModal && (\n// //         <ProjectsListModal\n// //           subDomain={selectedSubDomainForProjectsView}\n// //           projects={projectsInSubDomain}\n// //           loading={projectsLoading}\n// //           onClose={() => {\n// //             setShowProjectsModal(false);\n// //             setSelectedSubDomainForProjectsView(null);\n// //             setProjectsInSubDomain([]);\n// //           }}\n// //           onEdit={handleEditProject}\n// //           onDelete={handleDeleteProject}\n// //           onArchive={handleArchiveProject}\n// //           onToggleFeatured={handleToggleProjectFeatured}\n// //           onAddProject={() => {\n// //             setShowProjectsModal(false);\n// //             setSelectedSubDomainForProject(selectedSubDomainForProjectsView);\n// //             setShowProjectModal(true);\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* NEW: Project Edit Modal */}\n// //       {showProjectEditModal && editingProject && (\n// //         <ProjectEditModal\n// //           project={editingProject}\n// //           onClose={() => {\n// //             setShowProjectEditModal(false);\n// //             setEditingProject(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowProjectEditModal(false);\n// //             setEditingProject(null);\n// //             // Refresh projects list and subdomain data\n// //             fetchProjectsInSubDomain(selectedSubDomainForProjectsView.id);\n// //             fetchDomainAndSubDomains();\n// //           }}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // UPDATED SubDomain Node Component with View Projects functionality\n// // const SubDomainNode = ({ \n// //   subDomain, \n// //   level, \n// //   isExpanded, \n// //   onToggleExpanded, \n// //   onEdit, \n// //   onDelete, \n// //   onAddChild,\n// //   onAddProject,\n// //   onViewProjects, // NEW\n// //   expandedNodes \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n// //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //   const isLeaf = !hasChildren;\n// //   const hasProjects = subDomain.projectCount > 0;\n\n// //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// //     title: subDomain.title,\n// //     level,\n// //     hasChildren,\n// //     isLeaf,\n// //     isExpanded,\n// //     projectCount: subDomain.projectCount,\n// //     hasProjects\n// //   });\n\n// //   return (\n// //     <div className={`subdomain-node level-${level}`}>\n// //       <div className=\"node-content\">\n// //         <div className=\"node-main\">\n// //           {hasChildren ? (\n// //             <button \n// //               className=\"expand-button\"\n// //               onClick={() => onToggleExpanded(subDomain.id)}\n// //             >\n// //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// //             </button>\n// //           ) : (\n// //             <div className=\"expand-placeholder\" />\n// //           )}\n          \n// //           <div className=\"node-icon\">\n// //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// //           </div>\n          \n// //           <div className=\"node-info\">\n// //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// //             <p className=\"node-description\">{subDomain.description}</p>\n// //             <div className=\"node-stats\">\n// //               {hasChildren && (\n// //                 <span className=\"stat-badge\">\n// //                   {subDomain.children.length} sub-domains\n// //                 </span>\n// //               )}\n// //               {hasProjects && (\n// //                 <span className=\"stat-badge projects\">\n// //                   {subDomain.projectCount} projects\n// //                 </span>\n// //               )}\n// //               {isLeaf && !hasProjects && (\n// //                 <span className=\"stat-badge leaf\">\n// //                   Can have projects\n// //                 </span>\n// //               )}\n// //             </div>\n// //           </div>\n// //         </div>\n        \n// //         <div className=\"node-actions\">\n// //           {/* NEW: View Projects button for leaf nodes with projects */}\n// //           {isLeaf && hasProjects && (\n// //             <button \n// //               className=\"action-button view\" \n// //               onClick={() => onViewProjects(subDomain)}\n// //               title={`View ${subDomain.projectCount} project(s) in \"${subDomain.title}\"`}\n// //             >\n// //               <FiList />\n// //             </button>\n// //           )}\n          \n// //           {isLeaf && (\n// //             <button \n// //               className=\"action-button project\" \n// //               onClick={() => onAddProject(subDomain)}\n// //               title={`Add project to \"${subDomain.title}\"`}\n// //             >\n// //               <FiFileText />\n// //             </button>\n// //           )}\n          \n// //           <button \n// //             className=\"action-button add\" \n// //             onClick={() => onAddChild(subDomain)}\n// //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// //           >\n// //             <FiPlus />\n// //           </button>\n          \n// //           <div className=\"action-menu\">\n// //             <button \n// //               onClick={() => setShowMenu(!showMenu)}\n// //               title=\"More actions\"\n// //             >\n// //               <FiMoreVertical />\n// //             </button>\n// //             {showMenu && (\n// //               <div className=\"dropdown-menu\">\n// //                 {/* NEW: View Projects option */}\n// //                 {isLeaf && hasProjects && (\n// //                   <button \n// //                     onClick={() => {\n// //                       onViewProjects(subDomain);\n// //                       setShowMenu(false);\n// //                     }}\n// //                     className=\"primary-option\"\n// //                   >\n// //                     <FiList /> View Projects ({subDomain.projectCount})\n// //                   </button>\n// //                 )}\n// //                 {isLeaf && (\n// //                   <button \n// //                     onClick={() => {\n// //                       onAddProject(subDomain);\n// //                       setShowMenu(false);\n// //                     }}\n// //                     className=\"primary-option\"\n// //                   >\n// //                     <FiFileText /> Add Project\n// //                   </button>\n// //                 )}\n// //                 <button onClick={() => {\n// //                   onEdit(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiEdit /> Edit SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onAddChild(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiPlus /> Add Child SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onDelete(subDomain);\n// //                   setShowMenu(false);\n// //                 }} className=\"danger\">\n// //                   <FiTrash2 /> Delete SubDomain\n// //                 </button>\n// //               </div>\n// //             )}\n// //           </div>\n// //         </div>\n// //       </div>\n      \n// //       {/* Children */}\n// //       {hasChildren && isExpanded && (\n// //         <div className=\"node-children\">\n// //           {subDomain.children.map((child) => (\n// //             <SubDomainNode\n// //               key={child.id}\n// //               subDomain={child}\n// //               level={level + 1}\n// //               isExpanded={expandedNodes.has(child.id)}\n// //               onToggleExpanded={onToggleExpanded}\n// //               onEdit={onEdit}\n// //               onDelete={onDelete}\n// //               onAddChild={onAddChild}\n// //               onAddProject={onAddProject}\n// //               onViewProjects={onViewProjects} // NEW\n// //               expandedNodes={expandedNodes}\n// //             />\n// //           ))}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // SubDomain Modal Component (unchanged)\n// // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: subDomain?.title || '',\n// //     description: subDomain?.description || ''\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       const requestData = {\n// //         title: formData.title.trim(),\n// //         description: formData.description.trim(),\n// //         domainId: domain.id,\n// //         parentId: parent?.id || null\n// //       };\n\n// //       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n// //       if (subDomain) {\n// //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// //         toast.success('Sub-domain updated successfully');\n// //       } else {\n// //         const response = await authService.createSubDomain(requestData);\n// //         toast.success('Sub-domain created successfully');\n// //       }\n\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// //       toast.error(errorMessage);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const getModalTitle = () => {\n// //     if (subDomain) {\n// //       return `Edit SubDomain: ${subDomain.title}`;\n// //     }\n// //     if (parent) {\n// //       return `Add SubDomain under: ${parent.title}`;\n// //     }\n// //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal\">\n// //         <div className=\"modal-header\">\n// //           <h2>{getModalTitle()}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n        \n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>SubDomain Title *</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// //               required\n// //               minLength={3}\n// //               maxLength={100}\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Description (Optional)</label>\n// //             <textarea\n// //               value={formData.description}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// //               rows={3}\n// //               placeholder=\"Describe what this sub-domain covers...\"\n// //               maxLength={500}\n// //             />\n// //           </div>\n          \n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             {parent && (\n// //               <>\n// //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// //               </>\n// //             )}\n// //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// //           </div>\n          \n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button \n// //               type=\"submit\" \n// //               className=\"primary-button\" \n// //               disabled={loading || !formData.title.trim()}\n// //             >\n// //               {loading ? 'Saving...' : 'Save SubDomain'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // Project Creation Modal Component (unchanged)\n// // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: '',\n// //     abstract: '',\n// //     specifications: '',\n// //     learningOutcomes: '',\n// //     subDomainId: subDomain?.id || '',\n// //     isFeatured: false\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   console.log('üìù PROJECT MODAL - Props:', {\n// //     subDomain: subDomain?.title,\n// //     domain: domain?.title,\n// //     formData\n// //   });\n\n// //   // Slug generation function\n// //   const generateSlug = (title) => {\n// //     return title\n// //       .toLowerCase()\n// //       .trim()\n// //       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n// //       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n// //       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       // Don't send slug - let backend auto-generate it\n// //       const projectData = {\n// //         title: formData.title.trim(),\n// //         abstract: formData.abstract.trim(),\n// //         specifications: formData.specifications.trim(),\n// //         learningOutcomes: formData.learningOutcomes.trim(),\n// //         subDomainId: formData.subDomainId,\n// //         isFeatured: formData.isFeatured\n// //       };\n\n// //       console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n// //       console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n      \n// //       const response = await authService.createProject(projectData);\n// //       console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n      \n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå PROJECT SAVE - Error:', error);\n// //       console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n      \n// //       // Show more specific error message if available\n// //       const errorMessage = error.response?.data?.message || 'Failed to create project';\n// //       toast.error(errorMessage);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>Add Project to: {subDomain?.title}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n        \n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>Project Title *</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"Enter project title...\"\n// //               required\n// //               minLength={3}\n// //               maxLength={200}\n// //             />\n// //             {/* Show slug preview (for user reference only) */}\n// //             {formData.title && (\n// //               <div className=\"slug-preview\">\n// //                 <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n// //               </div>\n// //             )}\n// //           </div>\n          \n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// //             <span className=\"info-note\">\n// //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// //             </span>\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Abstract *</label>\n// //             <textarea\n// //               value={formData.abstract}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// //               rows={4}\n// //               placeholder=\"Brief description of the project...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={1000}\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Specifications *</label>\n// //             <textarea\n// //               value={formData.specifications}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// //               rows={6}\n// //               placeholder=\"Technical specifications and requirements...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={5000}\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Learning Outcomes *</label>\n// //             <textarea\n// //               value={formData.learningOutcomes}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// //               rows={4}\n// //               placeholder=\"What will students learn from this project...\"\n// //               required\n// //               minLength={10}\n// //               maxLength={2000}\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group checkbox\">\n// //             <label>\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={formData.isFeatured}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// //               />\n// //               <FiTarget />\n// //               Featured Project\n// //             </label>\n// //           </div>\n          \n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button \n// //               type=\"submit\" \n// //               className=\"primary-button\" \n// //               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n// //             >\n// //               {loading ? 'Creating...' : 'Create Project'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // NEW: Projects List Modal Component\n// // const ProjectsListModal = ({ \n// //   subDomain, \n// //   projects, \n// //   loading, \n// //   onClose, \n// //   onEdit, \n// //   onDelete, \n// //   onArchive, \n// //   onToggleFeatured,\n// //   onAddProject \n// // }) => {\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>Projects in: {subDomain?.title}</h2>\n// //           <button onClick={onClose}>\n// //             <FiX />\n// //           </button>\n// //         </div>\n        \n// //         <div className=\"projects-list-content\">\n// //           <div className=\"projects-list-header\">\n// //             <div className=\"list-info\">\n// //               <p><strong>SubDomain:</strong> {subDomain?.title}</p>\n// //               <p><strong>Total Projects:</strong> {projects.length}</p>\n// //             </div>\n// //             <button \n// //               className=\"primary-button\" \n// //               onClick={onAddProject}\n// //             >\n// //               <FiPlus />\n// //               Add New Project\n// //             </button>\n// //           </div>\n          \n// //           {loading ? (\n// //             <div className=\"loading-container\">\n// //               <div className=\"loading-spinner\"></div>\n// //               <p>Loading projects...</p>\n// //             </div>\n// //           ) : projects.length > 0 ? (\n// //             <div className=\"projects-list\">\n// //               {projects.map((project) => (\n// //                 <ProjectListItem\n// //                   key={project.id}\n// //                   project={project}\n// //                   onEdit={onEdit}\n// //                   onDelete={onDelete}\n// //                   onArchive={onArchive}\n// //                   onToggleFeatured={onToggleFeatured}\n// //                 />\n// //               ))}\n// //             </div>\n// //           ) : (\n// //             <div className=\"empty-projects-state\">\n// //               <FiFileText size={48} />\n// //               <h3>No Projects Yet</h3>\n// //               <p>This subdomain doesn't have any projects yet.</p>\n// //               <button \n// //                 className=\"primary-button\" \n// //                 onClick={onAddProject}\n// //               >\n// //                 <FiPlus />\n// //                 Add First Project\n// //               </button>\n// //             </div>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // NEW: Project List Item Component\n// // const ProjectListItem = ({ \n// //   project, \n// //   onEdit, \n// //   onDelete, \n// //   onArchive, \n// //   onToggleFeatured \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n\n// //   return (\n// //     <div className={`project-list-item ${!project.isActive ? 'archived' : ''}`}>\n// //       <div className=\"project-info\">\n// //         <div className=\"project-title-section\">\n// //           <h4 className=\"project-title\">{project.title}</h4>\n// //           <div className=\"project-badges\">\n// //             {project.isFeatured && (\n// //               <span className=\"badge featured\">\n// //                 <FiStar /> Featured\n// //               </span>\n// //             )}\n// //             {!project.isActive && (\n// //               <span className=\"badge archived\">Archived</span>\n// //             )}\n// //           </div>\n// //         </div>\n// //         <p className=\"project-abstract\">\n// //           {project.abstract?.substring(0, 150)}...\n// //         </p>\n// //         <div className=\"project-stats\">\n// //           <span className=\"stat\">\n// //             <FiEye /> {project.viewCount || 0} views\n// //           </span>\n// //           <span className=\"stat\">\n// //             Created: {new Date(project.createdAt).toLocaleDateString()}\n// //           </span>\n// //           <span className=\"stat\">\n// //             Updated: {new Date(project.updatedAt).toLocaleDateString()}\n// //           </span>\n// //         </div>\n// //       </div>\n      \n// //       <div className=\"project-actions\">\n// //         <button \n// //           className=\"action-button primary\" \n// //           onClick={() => onEdit(project)}\n// //           title=\"Edit project\"\n// //         >\n// //           <FiEdit />\n// //         </button>\n        \n// //         <div className=\"action-menu\">\n// //           <button \n// //             onClick={() => setShowMenu(!showMenu)}\n// //             title=\"More actions\"\n// //           >\n// //             <FiMoreVertical />\n// //           </button>\n// //           {showMenu && (\n// //             <div className=\"dropdown-menu\">\n// //               <button onClick={() => {\n// //                 onEdit(project);\n// //                 setShowMenu(false);\n// //               }}>\n// //                 <FiEdit /> Edit Project\n// //               </button>\n// //               <button onClick={() => {\n// //                 onToggleFeatured(project);\n// //                 setShowMenu(false);\n// //               }}>\n// //                 <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n// //               </button>\n// //               <button onClick={() => {\n// //                 onArchive(project);\n// //                 setShowMenu(false);\n// //               }}>\n// //                 <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n// //               </button>\n// //               <button onClick={() => {\n// //                 onDelete(project);\n// //                 setShowMenu(false);\n// //               }} className=\"danger\">\n// //                 <FiTrash2 /> Delete Project\n// //               </button>\n// //             </div>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // NEW: Project Edit Modal Component\n// // const ProjectEditModal = ({ project, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: project?.title || '',\n// //     abstract: project?.abstract || '',\n// //     specifications: project?.specifications || '',\n// //     learningOutcomes: project?.learningOutcomes || '',\n// //     isFeatured: project?.isFeatured || false\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   console.log('üìù PROJECT EDIT MODAL - Project:', project.title);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       console.log('üíæ PROJECT UPDATE - Starting with data:', formData);\n// //       await authService.updateProject(project.id, formData);\n// //       console.log('‚úÖ PROJECT UPDATE - Success');\n// //       toast.success('Project updated successfully');\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå PROJECT UPDATE - Error:', error);\n// //       toast.error('Failed to update project');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>Edit Project: {project.title}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n        \n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>Project Title</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {project.subDomain?.domain?.title || 'Unknown'}<br />\n// //             <strong>SubDomain:</strong> {project.subDomain?.title || 'Unknown'}<br />\n// //             <span className=\"info-note\">\n// //               üí° To move this project to a different domain/subdomain, contact your administrator\n// //             </span>\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Abstract</label>\n// //             <textarea\n// //               value={formData.abstract}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// //               rows={4}\n// //               required\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Specifications</label>\n// //             <textarea\n// //               value={formData.specifications}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// //               rows={6}\n// //               required\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Learning Outcomes</label>\n// //             <textarea\n// //               value={formData.learningOutcomes}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// //               rows={4}\n// //               required\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group checkbox\">\n// //             <label>\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={formData.isFeatured}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// //               />\n// //               Featured Project\n// //             </label>\n// //           </div>\n          \n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// //               {loading ? 'Updating...' : 'Update Project'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SubDomainManagement;\n\n\n// // // // src/components/domains/SubDomainManagement.js - UPDATED WITH SLUG GENERATION\n// // // import React, { useState, useEffect } from 'react';\n// // // import { useParams, useNavigate } from 'react-router-dom';\n// // // import { authService } from '../../services/authService';\n// // // import { toast } from 'react-toastify';\n// // // import {\n// // //   FiPlus,\n// // //   FiEdit,\n// // //   FiTrash2,\n// // //   FiChevronDown,\n// // //   FiChevronRight,\n// // //   FiFolder,\n// // //   FiFolderPlus,\n// // //   FiFileText,\n// // //   FiArrowLeft,\n// // //   FiMoreVertical,\n// // //   FiMove,\n// // //   FiTarget\n// // // } from 'react-icons/fi';\n\n// // // const SubDomainManagement = () => {\n// // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // //   const { domainId } = useParams();\n// // //   const navigate = useNavigate();\n  \n// // //   const [domain, setDomain] = useState(null);\n// // //   const [subDomains, setSubDomains] = useState([]);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [showAddModal, setShowAddModal] = useState(false);\n// // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // //   const [selectedParent, setSelectedParent] = useState(null);\n// // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // //   // NEW: Project creation state\n// // //   const [showProjectModal, setShowProjectModal] = useState(false);\n// // //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // //     domainId,\n// // //     domain: domain?.title,\n// // //     subDomainsCount: subDomains.length,\n// // //     loading,\n// // //     selectedParent: selectedParent?.title,\n// // //     expandedCount: expandedNodes.size,\n// // //     showProjectModal,\n// // //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// // //   });\n\n// // //   useEffect(() => {\n// // //     if (domainId) {\n// // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // //       fetchDomainAndSubDomains();\n// // //     }\n// // //   }, [domainId]);\n\n// // //   const fetchDomainAndSubDomains = async () => {\n// // //     try {\n// // //       setLoading(true);\n      \n// // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n// // //       // Get domain details\n// // //       const domainsResponse = await authService.getDomains();\n// // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // //       let domainData = null;\n// // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // //       if (domains.length > 0) {\n// // //         domainData = domains.find(d => d.id == domainId);\n// // //       }\n      \n// // //       if (!domainData) {\n// // //         domainData = {\n// // //           id: domainId,\n// // //           title: `Domain ${domainId}`,\n// // //           description: 'Domain not found in list',\n// // //           projectCount: 0\n// // //         };\n// // //       }\n      \n// // //       setDomain(domainData);\n      \n// // //       // Get subdomains\n// // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // //       setSubDomains(subDomainsData);\n      \n// // //       // Auto-expand first level\n// // //       if (subDomainsData.length > 0) {\n// // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // //         setExpandedNodes(new Set(firstLevelIds));\n// // //       }\n      \n// // //       // Try hierarchy API as fallback\n// // //       try {\n// // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // //           setSubDomains(hierarchyData.subDomains);\n// // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // //           }\n// // //         }\n// // //       } catch (hierarchyError) {\n// // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// // //       }\n      \n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // //       toast.error('Failed to fetch domain information');\n      \n// // //       setDomain({\n// // //         id: domainId,\n// // //         title: `Domain ${domainId}`,\n// // //         description: 'Error loading domain details',\n// // //         projectCount: 0\n// // //       });\n// // //       setSubDomains([]);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const handleAddSubDomain = (parent = null) => {\n// // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// // //     setSelectedParent(parent);\n// // //     setEditingSubDomain(null);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   const handleEditSubDomain = (subDomain) => {\n// // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// // //     setSelectedParent(null);\n// // //     setEditingSubDomain(subDomain);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   // NEW: Handle adding project to subdomain\n// // //   const handleAddProjectToSubDomain = (subDomain) => {\n// // //     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n// // //     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n// // //     if (subDomain.children && subDomain.children.length > 0) {\n// // //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// // //       return;\n// // //     }\n    \n// // //     setSelectedSubDomainForProject(subDomain);\n// // //     setShowProjectModal(true);\n// // //   };\n\n// // //   const handleDeleteSubDomain = async (subDomain) => {\n// // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // //     if (hasChildren) {\n// // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // //     }\n// // //     if (hasProjects) {\n// // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // //     }\n    \n// // //     if (!window.confirm(confirmMessage)) {\n// // //       return;\n// // //     }\n\n// // //     try {\n// // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// // //       const response = await authService.deleteSubDomain(subDomain.id);\n// // //       toast.success('Sub-domain deleted successfully');\n// // //       fetchDomainAndSubDomains();\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // //       toast.error('Failed to delete sub-domain');\n// // //     }\n// // //   };\n\n// // //   const toggleExpanded = (nodeId) => {\n// // //     const newExpanded = new Set(expandedNodes);\n// // //     if (newExpanded.has(nodeId)) {\n// // //       newExpanded.delete(nodeId);\n// // //     } else {\n// // //       newExpanded.add(nodeId);\n// // //     }\n// // //     setExpandedNodes(newExpanded);\n// // //   };\n\n// // //   if (loading) {\n// // //     return (\n// // //       <div className=\"loading-container\">\n// // //         <div className=\"loading-spinner\"></div>\n// // //         <p>Loading sub-domains...</p>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <div className=\"subdomain-management\">\n// // //       {/* Header with Breadcrumb */}\n// // //       <div className=\"page-header\">\n// // //         <div className=\"header-content\">\n// // //           <div className=\"breadcrumb\">\n// // //             <button \n// // //               className=\"breadcrumb-link\"\n// // //               onClick={() => navigate('/domains')}\n// // //             >\n// // //               <FiArrowLeft />\n// // //               Domains\n// // //             </button>\n// // //             <span className=\"breadcrumb-separator\">/</span>\n// // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // //           </div>\n// // //           <h1>SubDomain Management</h1>\n// // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // //         </div>\n// // //         <div className=\"header-actions\">\n// // //           <button \n// // //             className=\"primary-button\" \n// // //             onClick={() => handleAddSubDomain()}\n// // //           >\n// // //             <FiPlus />\n// // //             Add Root SubDomain\n// // //           </button>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Quick Guide */}\n// // //       <div className=\"quick-guide\">\n// // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // //         <div className=\"guide-steps\">\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">1</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">2</span>\n// // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">3</span>\n// // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">4</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Domain Info Card */}\n// // //       {domain && (\n// // //         <div className=\"domain-info-card\">\n// // //           <div className=\"domain-icon\">\n// // //             <FiFolder />\n// // //           </div>\n// // //           <div className=\"domain-details\">\n// // //             <h3>{domain.title}</h3>\n// // //             <p>{domain.description}</p>\n// // //             <div className=\"domain-stats\">\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // //               </span>\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // //               </span>\n// // //             </div>\n// // //           </div>\n// // //         </div>\n// // //       )}\n\n// // //       {/* SubDomain Tree */}\n// // //       <div className=\"subdomain-tree-container\">\n// // //         <div className=\"tree-header\">\n// // //           <h2>SubDomain Hierarchy</h2>\n// // //           <div className=\"tree-legend\">\n// // //             <span className=\"legend-item\">\n// // //               <FiFolder className=\"folder-icon\" />\n// // //               Has children\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiTarget className=\"leaf-icon\" />\n// // //               Leaf (can have projects)\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiFileText className=\"project-icon\" />\n// // //               Add Project\n// // //             </span>\n// // //           </div>\n// // //         </div>\n\n// // //         {subDomains.length > 0 ? (\n// // //           <div className=\"subdomain-tree\">\n// // //             {subDomains.map((subDomain) => (\n// // //               <SubDomainNode\n// // //                 key={subDomain.id}\n// // //                 subDomain={subDomain}\n// // //                 level={0}\n// // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // //                 onToggleExpanded={toggleExpanded}\n// // //                 onEdit={handleEditSubDomain}\n// // //                 onDelete={handleDeleteSubDomain}\n// // //                 onAddChild={handleAddSubDomain}\n// // //                 onAddProject={handleAddProjectToSubDomain}\n// // //                 expandedNodes={expandedNodes}\n// // //               />\n// // //             ))}\n// // //           </div>\n// // //         ) : (\n// // //           <div className=\"empty-tree-state\">\n// // //             <FiFolderPlus size={64} />\n// // //             <h3>No SubDomains Yet</h3>\n// // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // //             <div className=\"empty-state-examples\">\n// // //               <h4>Example Structure:</h4>\n// // //               <div className=\"example-tree\">\n// // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // //               </div>\n// // //             </div>\n// // //             <div className=\"empty-state-actions\">\n// // //               <button \n// // //                 className=\"primary-button large\" \n// // //                 onClick={() => handleAddSubDomain()}\n// // //               >\n// // //                 <FiPlus />\n// // //                 Create Your First SubDomain\n// // //               </button>\n// // //               <p className=\"help-text\">\n// // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // //               </p>\n// // //             </div>\n// // //           </div>\n// // //         )}\n// // //       </div>\n\n// // //       {/* Add/Edit SubDomain Modal */}\n// // //       {showAddModal && (\n// // //         <SubDomainModal\n// // //           subDomain={editingSubDomain}\n// // //           parent={selectedParent}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //             fetchDomainAndSubDomains();\n// // //           }}\n// // //         />\n// // //       )}\n\n// // //       {/* NEW: Project Creation Modal with SLUG GENERATION */}\n// // //       {showProjectModal && (\n// // //         <ProjectModal\n// // //           subDomain={selectedSubDomainForProject}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowProjectModal(false);\n// // //             setSelectedSubDomainForProject(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowProjectModal(false);\n// // //             setSelectedSubDomainForProject(null);\n// // //             toast.success('Project created successfully!');\n// // //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// // //           }}\n// // //         />\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // UPDATED SubDomain Node Component\n// // // const SubDomainNode = ({ \n// // //   subDomain, \n// // //   level, \n// // //   isExpanded, \n// // //   onToggleExpanded, \n// // //   onEdit, \n// // //   onDelete, \n// // //   onAddChild,\n// // //   onAddProject,\n// // //   expandedNodes \n// // // }) => {\n// // //   const [showMenu, setShowMenu] = useState(false);\n// // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //   const isLeaf = !hasChildren;\n\n// // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // //     title: subDomain.title,\n// // //     level,\n// // //     hasChildren,\n// // //     isLeaf,\n// // //     isExpanded,\n// // //     projectCount: subDomain.projectCount\n// // //   });\n\n// // //   return (\n// // //     <div className={`subdomain-node level-${level}`}>\n// // //       <div className=\"node-content\">\n// // //         <div className=\"node-main\">\n// // //           {hasChildren ? (\n// // //             <button \n// // //               className=\"expand-button\"\n// // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // //             >\n// // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // //             </button>\n// // //           ) : (\n// // //             <div className=\"expand-placeholder\" />\n// // //           )}\n          \n// // //           <div className=\"node-icon\">\n// // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // //           </div>\n          \n// // //           <div className=\"node-info\">\n// // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // //             <p className=\"node-description\">{subDomain.description}</p>\n// // //             <div className=\"node-stats\">\n// // //               {hasChildren && (\n// // //                 <span className=\"stat-badge\">\n// // //                   {subDomain.children.length} sub-domains\n// // //                 </span>\n// // //               )}\n// // //               {subDomain.projectCount > 0 && (\n// // //                 <span className=\"stat-badge projects\">\n// // //                   {subDomain.projectCount} projects\n// // //                 </span>\n// // //               )}\n// // //               {isLeaf && (\n// // //                 <span className=\"stat-badge leaf\">\n// // //                   Can have projects\n// // //                 </span>\n// // //               )}\n// // //             </div>\n// // //           </div>\n// // //         </div>\n        \n// // //         <div className=\"node-actions\">\n// // //           {isLeaf && (\n// // //             <button \n// // //               className=\"action-button project\" \n// // //               onClick={() => onAddProject(subDomain)}\n// // //               title={`Add project to \"${subDomain.title}\"`}\n// // //             >\n// // //               <FiFileText />\n// // //             </button>\n// // //           )}\n          \n// // //           <button \n// // //             className=\"action-button add\" \n// // //             onClick={() => onAddChild(subDomain)}\n// // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // //           >\n// // //             <FiPlus />\n// // //           </button>\n          \n// // //           <div className=\"action-menu\">\n// // //             <button \n// // //               onClick={() => setShowMenu(!showMenu)}\n// // //               title=\"More actions\"\n// // //             >\n// // //               <FiMoreVertical />\n// // //             </button>\n// // //             {showMenu && (\n// // //               <div className=\"dropdown-menu\">\n// // //                 {isLeaf && (\n// // //                   <button \n// // //                     onClick={() => {\n// // //                       onAddProject(subDomain);\n// // //                       setShowMenu(false);\n// // //                     }}\n// // //                     className=\"primary-option\"\n// // //                   >\n// // //                     <FiFileText /> Add Project\n// // //                   </button>\n// // //                 )}\n// // //                 <button onClick={() => {\n// // //                   onEdit(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiEdit /> Edit SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onAddChild(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiPlus /> Add Child SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onDelete(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }} className=\"danger\">\n// // //                   <FiTrash2 /> Delete SubDomain\n// // //                 </button>\n// // //               </div>\n// // //             )}\n// // //           </div>\n// // //         </div>\n// // //       </div>\n      \n// // //       {/* Children */}\n// // //       {hasChildren && isExpanded && (\n// // //         <div className=\"node-children\">\n// // //           {subDomain.children.map((child) => (\n// // //             <SubDomainNode\n// // //               key={child.id}\n// // //               subDomain={child}\n// // //               level={level + 1}\n// // //               isExpanded={expandedNodes.has(child.id)}\n// // //               onToggleExpanded={onToggleExpanded}\n// // //               onEdit={onEdit}\n// // //               onDelete={onDelete}\n// // //               onAddChild={onAddChild}\n// // //               onAddProject={onAddProject}\n// // //               expandedNodes={expandedNodes}\n// // //             />\n// // //           ))}\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // SubDomain Modal Component (unchanged)\n// // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: subDomain?.title || '',\n// // //     description: subDomain?.description || ''\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setLoading(true);\n\n// // //     try {\n// // //       const requestData = {\n// // //         title: formData.title.trim(),\n// // //         description: formData.description.trim(),\n// // //         domainId: domain.id,\n// // //         parentId: parent?.id || null\n// // //       };\n\n// // //       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n// // //       if (subDomain) {\n// // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // //         toast.success('Sub-domain updated successfully');\n// // //       } else {\n// // //         const response = await authService.createSubDomain(requestData);\n// // //         toast.success('Sub-domain created successfully');\n// // //       }\n\n// // //       onSave();\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// // //       toast.error(errorMessage);\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const getModalTitle = () => {\n// // //     if (subDomain) {\n// // //       return `Edit SubDomain: ${subDomain.title}`;\n// // //     }\n// // //     if (parent) {\n// // //       return `Add SubDomain under: ${parent.title}`;\n// // //     }\n// // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // //   };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>{getModalTitle()}</h2>\n// // //           <button onClick={onClose}>√ó</button>\n// // //         </div>\n        \n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>SubDomain Title *</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // //               required\n// // //               minLength={3}\n// // //               maxLength={100}\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Description (Optional)</label>\n// // //             <textarea\n// // //               value={formData.description}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // //               rows={3}\n// // //               placeholder=\"Describe what this sub-domain covers...\"\n// // //               maxLength={500}\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             {parent && (\n// // //               <>\n// // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // //               </>\n// // //             )}\n// // //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// // //           </div>\n          \n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button \n// // //               type=\"submit\" \n// // //               className=\"primary-button\" \n// // //               disabled={loading || !formData.title.trim()}\n// // //             >\n// // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // UPDATED: Project Modal Component with SLUG GENERATION\n// // // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: '',\n// // //     abstract: '',\n// // //     specifications: '',\n// // //     learningOutcomes: '',\n// // //     subDomainId: subDomain?.id || '',\n// // //     isFeatured: false\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   console.log('üìù PROJECT MODAL - Props:', {\n// // //     subDomain: subDomain?.title,\n// // //     domain: domain?.title,\n// // //     formData\n// // //   });\n\n// // //   // ‚úÖ SLUG GENERATION FUNCTION\n// // //   const generateSlug = (title) => {\n// // //     return title\n// // //       .toLowerCase()\n// // //       .trim()\n// // //       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n// // //       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n// // //       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n// // //   };\n\n// // //   // const handleSubmit = async (e) => {\n// // //   //   e.preventDefault();\n// // //   //   setLoading(true);\n\n// // //   //   try {\n// // //   //     // ‚úÖ PREPARE DATA WITHOUT SLUG (backend will auto-generate)\n// // //   //     const projectData = {\n// // //   //       title: formData.title.trim(),\n// // //   //       abstract: formData.abstract.trim(),\n// // //   //       specifications: formData.specifications.trim(),\n// // //   //       learningOutcomes: formData.learningOutcomes.trim(),\n// // //   //       subDomainId: formData.subDomainId,\n// // //   //       isFeatured: formData.isFeatured\n// // //   //       // ‚ö° REMOVED SLUG - backend validation doesn't allow it\n// // //   //     };\n\n// // //   //     console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n// // //   //     console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n      \n// // //   //     const response = await authService.createProject(projectData);\n// // //   //     console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n      \n// // //   //     onSave();\n// // //   //   } catch (error) {\n// // //   //     console.error('‚ùå PROJECT SAVE - Error:', error);\n// // //   //     console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n      \n// // //   //     // Show more specific error message if available\n// // //   //     const errorMessage = error.response?.data?.message || 'Failed to create project';\n// // //   //     toast.error(errorMessage);\n// // //   //   } finally {\n// // //   //     setLoading(false);\n// // //   //   }\n// // //   // };\n\n\n// // //   const handleSubmit = async (e) => {\n// // //   e.preventDefault();\n// // //   setLoading(true);\n\n// // //   try {\n// // //     // ‚úÖ DON'T SEND SLUG - let backend auto-generate it\n// // //     const projectData = {\n// // //       title: formData.title.trim(),\n// // //       abstract: formData.abstract.trim(),\n// // //       specifications: formData.specifications.trim(),\n// // //       learningOutcomes: formData.learningOutcomes.trim(),\n// // //       subDomainId: formData.subDomainId,\n// // //       isFeatured: formData.isFeatured\n// // //       // ‚ö° NO SLUG FIELD - backend model hook will generate it\n// // //     };\n\n// // //     console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n// // //     console.log('üîó PROJECT SAVE - Backend will auto-generate slug from title:', formData.title);\n    \n// // //     const response = await authService.createProject(projectData);\n// // //     console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n    \n// // //     onSave();\n// // //   } catch (error) {\n// // //     console.error('‚ùå PROJECT SAVE - Error:', error);\n// // //     console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n    \n// // //     // Show more specific error message if available\n// // //     const errorMessage = error.response?.data?.message || 'Failed to create project';\n// // //     toast.error(errorMessage);\n// // //   } finally {\n// // //     setLoading(false);\n// // //   }\n// // // };\n\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal large\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>Add Project to: {subDomain?.title}</h2>\n// // //           <button onClick={onClose}>√ó</button>\n// // //         </div>\n        \n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>Project Title *</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"Enter project title...\"\n// // //               required\n// // //               minLength={3}\n// // //               maxLength={200}\n// // //             />\n// // //             {/* ‚úÖ SHOW SLUG PREVIEW (for user reference only) */}\n// // //             {formData.title && (\n// // //               <div className=\"slug-preview\">\n// // //                 <small>Expected URL Slug: <code>{generateSlug(formData.title)}</code> <em>(auto-generated by backend)</em></small>\n// // //               </div>\n// // //             )}\n// // //           </div>\n          \n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// // //             <span className=\"info-note\">\n// // //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// // //             </span>\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Abstract *</label>\n// // //             <textarea\n// // //               value={formData.abstract}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// // //               rows={4}\n// // //               placeholder=\"Brief description of the project...\"\n// // //               required\n// // //               minLength={10}\n// // //               maxLength={1000}\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Specifications *</label>\n// // //             <textarea\n// // //               value={formData.specifications}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// // //               rows={6}\n// // //               placeholder=\"Technical specifications and requirements...\"\n// // //               required\n// // //               minLength={10}\n// // //               maxLength={5000}\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Learning Outcomes *</label>\n// // //             <textarea\n// // //               value={formData.learningOutcomes}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// // //               rows={4}\n// // //               placeholder=\"What will students learn from this project...\"\n// // //               required\n// // //               minLength={10}\n// // //               maxLength={2000}\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"form-group checkbox\">\n// // //             <label>\n// // //               <input\n// // //                 type=\"checkbox\"\n// // //                 checked={formData.isFeatured}\n// // //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// // //               />\n// // //               <FiTarget />\n// // //               Featured Project\n// // //             </label>\n// // //           </div>\n          \n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button \n// // //               type=\"submit\" \n// // //               className=\"primary-button\" \n// // //               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n// // //             >\n// // //               {loading ? 'Creating...' : 'Create Project'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SubDomainManagement;\n\n\n// // // // // src/components/domains/SubDomainManagement.js - UPDATED WITH SLUG GENERATION\n// // // // import React, { useState, useEffect } from 'react';\n// // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // import { authService } from '../../services/authService';\n// // // // import { toast } from 'react-toastify';\n// // // // import {\n// // // //   FiPlus,\n// // // //   FiEdit,\n// // // //   FiTrash2,\n// // // //   FiChevronDown,\n// // // //   FiChevronRight,\n// // // //   FiFolder,\n// // // //   FiFolderPlus,\n// // // //   FiFileText,\n// // // //   FiArrowLeft,\n// // // //   FiMoreVertical,\n// // // //   FiMove,\n// // // //   FiTarget\n// // // // } from 'react-icons/fi';\n\n// // // // const SubDomainManagement = () => {\n// // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // //   const { domainId } = useParams();\n// // // //   const navigate = useNavigate();\n  \n// // // //   const [domain, setDomain] = useState(null);\n// // // //   const [subDomains, setSubDomains] = useState([]);\n// // // //   const [loading, setLoading] = useState(true);\n// // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // //   // NEW: Project creation state\n// // // //   const [showProjectModal, setShowProjectModal] = useState(false);\n// // // //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // //     domainId,\n// // // //     domain: domain?.title,\n// // // //     subDomainsCount: subDomains.length,\n// // // //     loading,\n// // // //     selectedParent: selectedParent?.title,\n// // // //     expandedCount: expandedNodes.size,\n// // // //     showProjectModal,\n// // // //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// // // //   });\n\n// // // //   useEffect(() => {\n// // // //     if (domainId) {\n// // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // //       fetchDomainAndSubDomains();\n// // // //     }\n// // // //   }, [domainId]);\n\n// // // //   const fetchDomainAndSubDomains = async () => {\n// // // //     try {\n// // // //       setLoading(true);\n      \n// // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n// // // //       // Get domain details\n// // // //       const domainsResponse = await authService.getDomains();\n// // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // //       let domainData = null;\n// // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // //       if (domains.length > 0) {\n// // // //         domainData = domains.find(d => d.id == domainId);\n// // // //       }\n      \n// // // //       if (!domainData) {\n// // // //         domainData = {\n// // // //           id: domainId,\n// // // //           title: `Domain ${domainId}`,\n// // // //           description: 'Domain not found in list',\n// // // //           projectCount: 0\n// // // //         };\n// // // //       }\n      \n// // // //       setDomain(domainData);\n      \n// // // //       // Get subdomains\n// // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // //       setSubDomains(subDomainsData);\n      \n// // // //       // Auto-expand first level\n// // // //       if (subDomainsData.length > 0) {\n// // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // //       }\n      \n// // // //       // Try hierarchy API as fallback\n// // // //       try {\n// // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // //           setSubDomains(hierarchyData.subDomains);\n// // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // //           }\n// // // //         }\n// // // //       } catch (hierarchyError) {\n// // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// // // //       }\n      \n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // //       toast.error('Failed to fetch domain information');\n      \n// // // //       setDomain({\n// // // //         id: domainId,\n// // // //         title: `Domain ${domainId}`,\n// // // //         description: 'Error loading domain details',\n// // // //         projectCount: 0\n// // // //       });\n// // // //       setSubDomains([]);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const handleAddSubDomain = (parent = null) => {\n// // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// // // //     setSelectedParent(parent);\n// // // //     setEditingSubDomain(null);\n// // // //     setShowAddModal(true);\n// // // //   };\n\n// // // //   const handleEditSubDomain = (subDomain) => {\n// // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// // // //     setSelectedParent(null);\n// // // //     setEditingSubDomain(subDomain);\n// // // //     setShowAddModal(true);\n// // // //   };\n\n// // // //   // NEW: Handle adding project to subdomain\n// // // //   const handleAddProjectToSubDomain = (subDomain) => {\n// // // //     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n// // // //     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n// // // //     if (subDomain.children && subDomain.children.length > 0) {\n// // // //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// // // //       return;\n// // // //     }\n    \n// // // //     setSelectedSubDomainForProject(subDomain);\n// // // //     setShowProjectModal(true);\n// // // //   };\n\n// // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // //     if (hasChildren) {\n// // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // //     }\n// // // //     if (hasProjects) {\n// // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // //     }\n    \n// // // //     if (!window.confirm(confirmMessage)) {\n// // // //       return;\n// // // //     }\n\n// // // //     try {\n// // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// // // //       const response = await authService.deleteSubDomain(subDomain.id);\n// // // //       toast.success('Sub-domain deleted successfully');\n// // // //       fetchDomainAndSubDomains();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // //       toast.error('Failed to delete sub-domain');\n// // // //     }\n// // // //   };\n\n// // // //   const toggleExpanded = (nodeId) => {\n// // // //     const newExpanded = new Set(expandedNodes);\n// // // //     if (newExpanded.has(nodeId)) {\n// // // //       newExpanded.delete(nodeId);\n// // // //     } else {\n// // // //       newExpanded.add(nodeId);\n// // // //     }\n// // // //     setExpandedNodes(newExpanded);\n// // // //   };\n\n// // // //   if (loading) {\n// // // //     return (\n// // // //       <div className=\"loading-container\">\n// // // //         <div className=\"loading-spinner\"></div>\n// // // //         <p>Loading sub-domains...</p>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   return (\n// // // //     <div className=\"subdomain-management\">\n// // // //       {/* Header with Breadcrumb */}\n// // // //       <div className=\"page-header\">\n// // // //         <div className=\"header-content\">\n// // // //           <div className=\"breadcrumb\">\n// // // //             <button \n// // // //               className=\"breadcrumb-link\"\n// // // //               onClick={() => navigate('/domains')}\n// // // //             >\n// // // //               <FiArrowLeft />\n// // // //               Domains\n// // // //             </button>\n// // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // //           </div>\n// // // //           <h1>SubDomain Management</h1>\n// // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // //         </div>\n// // // //         <div className=\"header-actions\">\n// // // //           <button \n// // // //             className=\"primary-button\" \n// // // //             onClick={() => handleAddSubDomain()}\n// // // //           >\n// // // //             <FiPlus />\n// // // //             Add Root SubDomain\n// // // //           </button>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Quick Guide */}\n// // // //       <div className=\"quick-guide\">\n// // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // //         <div className=\"guide-steps\">\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">1</span>\n// // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">2</span>\n// // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">3</span>\n// // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">4</span>\n// // // //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Domain Info Card */}\n// // // //       {domain && (\n// // // //         <div className=\"domain-info-card\">\n// // // //           <div className=\"domain-icon\">\n// // // //             <FiFolder />\n// // // //           </div>\n// // // //           <div className=\"domain-details\">\n// // // //             <h3>{domain.title}</h3>\n// // // //             <p>{domain.description}</p>\n// // // //             <div className=\"domain-stats\">\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // //               </span>\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // //               </span>\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* SubDomain Tree */}\n// // // //       <div className=\"subdomain-tree-container\">\n// // // //         <div className=\"tree-header\">\n// // // //           <h2>SubDomain Hierarchy</h2>\n// // // //           <div className=\"tree-legend\">\n// // // //             <span className=\"legend-item\">\n// // // //               <FiFolder className=\"folder-icon\" />\n// // // //               Has children\n// // // //             </span>\n// // // //             <span className=\"legend-item\">\n// // // //               <FiTarget className=\"leaf-icon\" />\n// // // //               Leaf (can have projects)\n// // // //             </span>\n// // // //             <span className=\"legend-item\">\n// // // //               <FiFileText className=\"project-icon\" />\n// // // //               Add Project\n// // // //             </span>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         {subDomains.length > 0 ? (\n// // // //           <div className=\"subdomain-tree\">\n// // // //             {subDomains.map((subDomain) => (\n// // // //               <SubDomainNode\n// // // //                 key={subDomain.id}\n// // // //                 subDomain={subDomain}\n// // // //                 level={0}\n// // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // //                 onToggleExpanded={toggleExpanded}\n// // // //                 onEdit={handleEditSubDomain}\n// // // //                 onDelete={handleDeleteSubDomain}\n// // // //                 onAddChild={handleAddSubDomain}\n// // // //                 onAddProject={handleAddProjectToSubDomain}\n// // // //                 expandedNodes={expandedNodes}\n// // // //               />\n// // // //             ))}\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div className=\"empty-tree-state\">\n// // // //             <FiFolderPlus size={64} />\n// // // //             <h3>No SubDomains Yet</h3>\n// // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // //             <div className=\"empty-state-examples\">\n// // // //               <h4>Example Structure:</h4>\n// // // //               <div className=\"example-tree\">\n// // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // //               </div>\n// // // //             </div>\n// // // //             <div className=\"empty-state-actions\">\n// // // //               <button \n// // // //                 className=\"primary-button large\" \n// // // //                 onClick={() => handleAddSubDomain()}\n// // // //               >\n// // // //                 <FiPlus />\n// // // //                 Create Your First SubDomain\n// // // //               </button>\n// // // //               <p className=\"help-text\">\n// // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // //               </p>\n// // // //             </div>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n\n// // // //       {/* Add/Edit SubDomain Modal */}\n// // // //       {showAddModal && (\n// // // //         <SubDomainModal\n// // // //           subDomain={editingSubDomain}\n// // // //           parent={selectedParent}\n// // // //           domain={domain}\n// // // //           onClose={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //           }}\n// // // //           onSave={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //             fetchDomainAndSubDomains();\n// // // //           }}\n// // // //         />\n// // // //       )}\n\n// // // //       {/* NEW: Project Creation Modal with SLUG GENERATION */}\n// // // //       {showProjectModal && (\n// // // //         <ProjectModal\n// // // //           subDomain={selectedSubDomainForProject}\n// // // //           domain={domain}\n// // // //           onClose={() => {\n// // // //             setShowProjectModal(false);\n// // // //             setSelectedSubDomainForProject(null);\n// // // //           }}\n// // // //           onSave={() => {\n// // // //             setShowProjectModal(false);\n// // // //             setSelectedSubDomainForProject(null);\n// // // //             toast.success('Project created successfully!');\n// // // //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// // // //           }}\n// // // //         />\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // UPDATED SubDomain Node Component\n// // // // const SubDomainNode = ({ \n// // // //   subDomain, \n// // // //   level, \n// // // //   isExpanded, \n// // // //   onToggleExpanded, \n// // // //   onEdit, \n// // // //   onDelete, \n// // // //   onAddChild,\n// // // //   onAddProject,\n// // // //   expandedNodes \n// // // // }) => {\n// // // //   const [showMenu, setShowMenu] = useState(false);\n// // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //   const isLeaf = !hasChildren;\n\n// // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // //     title: subDomain.title,\n// // // //     level,\n// // // //     hasChildren,\n// // // //     isLeaf,\n// // // //     isExpanded,\n// // // //     projectCount: subDomain.projectCount\n// // // //   });\n\n// // // //   return (\n// // // //     <div className={`subdomain-node level-${level}`}>\n// // // //       <div className=\"node-content\">\n// // // //         <div className=\"node-main\">\n// // // //           {hasChildren ? (\n// // // //             <button \n// // // //               className=\"expand-button\"\n// // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // //             >\n// // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // //             </button>\n// // // //           ) : (\n// // // //             <div className=\"expand-placeholder\" />\n// // // //           )}\n          \n// // // //           <div className=\"node-icon\">\n// // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // //           </div>\n          \n// // // //           <div className=\"node-info\">\n// // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // //             <div className=\"node-stats\">\n// // // //               {hasChildren && (\n// // // //                 <span className=\"stat-badge\">\n// // // //                   {subDomain.children.length} sub-domains\n// // // //                 </span>\n// // // //               )}\n// // // //               {subDomain.projectCount > 0 && (\n// // // //                 <span className=\"stat-badge projects\">\n// // // //                   {subDomain.projectCount} projects\n// // // //                 </span>\n// // // //               )}\n// // // //               {isLeaf && (\n// // // //                 <span className=\"stat-badge leaf\">\n// // // //                   Can have projects\n// // // //                 </span>\n// // // //               )}\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n        \n// // // //         <div className=\"node-actions\">\n// // // //           {isLeaf && (\n// // // //             <button \n// // // //               className=\"action-button project\" \n// // // //               onClick={() => onAddProject(subDomain)}\n// // // //               title={`Add project to \"${subDomain.title}\"`}\n// // // //             >\n// // // //               <FiFileText />\n// // // //             </button>\n// // // //           )}\n          \n// // // //           <button \n// // // //             className=\"action-button add\" \n// // // //             onClick={() => onAddChild(subDomain)}\n// // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // //           >\n// // // //             <FiPlus />\n// // // //           </button>\n          \n// // // //           <div className=\"action-menu\">\n// // // //             <button \n// // // //               onClick={() => setShowMenu(!showMenu)}\n// // // //               title=\"More actions\"\n// // // //             >\n// // // //               <FiMoreVertical />\n// // // //             </button>\n// // // //             {showMenu && (\n// // // //               <div className=\"dropdown-menu\">\n// // // //                 {isLeaf && (\n// // // //                   <button \n// // // //                     onClick={() => {\n// // // //                       onAddProject(subDomain);\n// // // //                       setShowMenu(false);\n// // // //                     }}\n// // // //                     className=\"primary-option\"\n// // // //                   >\n// // // //                     <FiFileText /> Add Project\n// // // //                   </button>\n// // // //                 )}\n// // // //                 <button onClick={() => {\n// // // //                   onEdit(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiEdit /> Edit SubDomain\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onAddChild(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiPlus /> Add Child SubDomain\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onDelete(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }} className=\"danger\">\n// // // //                   <FiTrash2 /> Delete SubDomain\n// // // //                 </button>\n// // // //               </div>\n// // // //             )}\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n      \n// // // //       {/* Children */}\n// // // //       {hasChildren && isExpanded && (\n// // // //         <div className=\"node-children\">\n// // // //           {subDomain.children.map((child) => (\n// // // //             <SubDomainNode\n// // // //               key={child.id}\n// // // //               subDomain={child}\n// // // //               level={level + 1}\n// // // //               isExpanded={expandedNodes.has(child.id)}\n// // // //               onToggleExpanded={onToggleExpanded}\n// // // //               onEdit={onEdit}\n// // // //               onDelete={onDelete}\n// // // //               onAddChild={onAddChild}\n// // // //               onAddProject={onAddProject}\n// // // //               expandedNodes={expandedNodes}\n// // // //             />\n// // // //           ))}\n// // // //         </div>\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Modal Component (unchanged)\n// // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     title: subDomain?.title || '',\n// // // //     description: subDomain?.description || ''\n// // // //   });\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     setLoading(true);\n\n// // // //     try {\n// // // //       const requestData = {\n// // // //         title: formData.title.trim(),\n// // // //         description: formData.description.trim(),\n// // // //         domainId: domain.id,\n// // // //         parentId: parent?.id || null\n// // // //       };\n\n// // // //       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n// // // //       if (subDomain) {\n// // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // //         toast.success('Sub-domain updated successfully');\n// // // //       } else {\n// // // //         const response = await authService.createSubDomain(requestData);\n// // // //         toast.success('Sub-domain created successfully');\n// // // //       }\n\n// // // //       onSave();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// // // //       toast.error(errorMessage);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const getModalTitle = () => {\n// // // //     if (subDomain) {\n// // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // //     }\n// // // //     if (parent) {\n// // // //       return `Add SubDomain under: ${parent.title}`;\n// // // //     }\n// // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"modal-overlay\">\n// // // //       <div className=\"modal\">\n// // // //         <div className=\"modal-header\">\n// // // //           <h2>{getModalTitle()}</h2>\n// // // //           <button onClick={onClose}>√ó</button>\n// // // //         </div>\n        \n// // // //         <form onSubmit={handleSubmit}>\n// // // //           <div className=\"form-group\">\n// // // //             <label>SubDomain Title *</label>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={formData.title}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // //               required\n// // // //               minLength={3}\n// // // //               maxLength={100}\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"form-group\">\n// // // //             <label>Description (Optional)</label>\n// // // //             <textarea\n// // // //               value={formData.description}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // //               rows={3}\n// // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // //               maxLength={500}\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"modal-info\">\n// // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // //             {parent && (\n// // // //               <>\n// // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // //               </>\n// // // //             )}\n// // // //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// // // //           </div>\n          \n// // // //           <div className=\"modal-actions\">\n// // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // //               Cancel\n// // // //             </button>\n// // // //             <button \n// // // //               type=\"submit\" \n// // // //               className=\"primary-button\" \n// // // //               disabled={loading || !formData.title.trim()}\n// // // //             >\n// // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // //             </button>\n// // // //           </div>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // UPDATED: Project Modal Component with SLUG GENERATION\n// // // // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     title: '',\n// // // //     abstract: '',\n// // // //     specifications: '',\n// // // //     learningOutcomes: '',\n// // // //     subDomainId: subDomain?.id || '',\n// // // //     isFeatured: false\n// // // //   });\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   console.log('üìù PROJECT MODAL - Props:', {\n// // // //     subDomain: subDomain?.title,\n// // // //     domain: domain?.title,\n// // // //     formData\n// // // //   });\n\n// // // //   // ‚úÖ SLUG GENERATION FUNCTION\n// // // //   const generateSlug = (title) => {\n// // // //     return title\n// // // //       .toLowerCase()\n// // // //       .trim()\n// // // //       .replace(/[^\\w\\s-]/g, '') // Remove special characters except hyphens and underscores\n// // // //       .replace(/[\\s_-]+/g, '-') // Replace spaces, underscores, and multiple hyphens with single hyphen\n// // // //       .replace(/^-+|-+$/g, ''); // Remove leading and trailing hyphens\n// // // //   };\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     setLoading(true);\n\n// // // //     try {\n// // // //       // ‚úÖ GENERATE SLUG FROM TITLE\n// // // //       const slug = generateSlug(formData.title);\n      \n// // // //       // ‚úÖ PREPARE COMPLETE DATA WITH SLUG\n// // // //       const projectData = {\n// // // //         ...formData,\n// // // //         slug: slug, // ‚ö° ADD THE GENERATED SLUG HERE\n// // // //         title: formData.title.trim(),\n// // // //         abstract: formData.abstract.trim(),\n// // // //         specifications: formData.specifications.trim(),\n// // // //         learningOutcomes: formData.learningOutcomes.trim()\n// // // //       };\n\n// // // //       console.log('üíæ PROJECT SAVE - Starting API call with data:', projectData);\n// // // //       console.log('üîó PROJECT SAVE - Generated slug:', slug);\n      \n// // // //       const response = await authService.createProject(projectData);\n// // // //       console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n      \n// // // //       onSave();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå PROJECT SAVE - Error:', error);\n// // // //       console.error('‚ùå PROJECT SAVE - Error response:', error.response?.data);\n      \n// // // //       // Show more specific error message if available\n// // // //       const errorMessage = error.response?.data?.message || 'Failed to create project';\n// // // //       toast.error(errorMessage);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"modal-overlay\">\n// // // //       <div className=\"modal large\">\n// // // //         <div className=\"modal-header\">\n// // // //           <h2>Add Project to: {subDomain?.title}</h2>\n// // // //           <button onClick={onClose}>√ó</button>\n// // // //         </div>\n        \n// // // //         <form onSubmit={handleSubmit}>\n// // // //           <div className=\"form-group\">\n// // // //             <label>Project Title *</label>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={formData.title}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // //               placeholder=\"Enter project title...\"\n// // // //               required\n// // // //               minLength={3}\n// // // //               maxLength={200}\n// // // //             />\n// // // //             {/* ‚úÖ SHOW GENERATED SLUG PREVIEW */}\n// // // //             {formData.title && (\n// // // //               <div className=\"slug-preview\">\n// // // //                 <small>URL Slug: <code>{generateSlug(formData.title)}</code></small>\n// // // //               </div>\n// // // //             )}\n// // // //           </div>\n          \n// // // //           <div className=\"modal-info\">\n// // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// // // //             <span className=\"info-note\">\n// // // //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// // // //             </span>\n// // // //           </div>\n          \n// // // //           <div className=\"form-group\">\n// // // //             <label>Abstract *</label>\n// // // //             <textarea\n// // // //               value={formData.abstract}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// // // //               rows={4}\n// // // //               placeholder=\"Brief description of the project...\"\n// // // //               required\n// // // //               minLength={10}\n// // // //               maxLength={1000}\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"form-group\">\n// // // //             <label>Specifications *</label>\n// // // //             <textarea\n// // // //               value={formData.specifications}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// // // //               rows={6}\n// // // //               placeholder=\"Technical specifications and requirements...\"\n// // // //               required\n// // // //               minLength={10}\n// // // //               maxLength={5000}\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"form-group\">\n// // // //             <label>Learning Outcomes *</label>\n// // // //             <textarea\n// // // //               value={formData.learningOutcomes}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// // // //               rows={4}\n// // // //               placeholder=\"What will students learn from this project...\"\n// // // //               required\n// // // //               minLength={10}\n// // // //               maxLength={2000}\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"form-group checkbox\">\n// // // //             <label>\n// // // //               <input\n// // // //                 type=\"checkbox\"\n// // // //                 checked={formData.isFeatured}\n// // // //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// // // //               />\n// // // //               <FiTarget />\n// // // //               Featured Project\n// // // //             </label>\n// // // //           </div>\n          \n// // // //           <div className=\"modal-actions\">\n// // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // //               Cancel\n// // // //             </button>\n// // // //             <button \n// // // //               type=\"submit\" \n// // // //               className=\"primary-button\" \n// // // //               disabled={loading || !formData.title || !formData.abstract || !formData.specifications || !formData.learningOutcomes}\n// // // //             >\n// // // //               {loading ? 'Creating...' : 'Create Project'}\n// // // //             </button>\n// // // //           </div>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SubDomainManagement;\n\n\n\n// // // // // // src/components/domains/SubDomainManagement.js - UPDATED WITH ADD PROJECT FEATURE\n// // // // // import React, { useState, useEffect } from 'react';\n// // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // import { authService } from '../../services/authService';\n// // // // // import { toast } from 'react-toastify';\n// // // // // import {\n// // // // //   FiPlus,\n// // // // //   FiEdit,\n// // // // //   FiTrash2,\n// // // // //   FiChevronDown,\n// // // // //   FiChevronRight,\n// // // // //   FiFolder,\n// // // // //   FiFolderPlus,\n// // // // //   FiFileText,\n// // // // //   FiArrowLeft,\n// // // // //   FiMoreVertical,\n// // // // //   FiMove,\n// // // // //   FiTarget\n// // // // // } from 'react-icons/fi';\n\n// // // // // const SubDomainManagement = () => {\n// // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // //   const { domainId } = useParams();\n// // // // //   const navigate = useNavigate();\n  \n// // // // //   const [domain, setDomain] = useState(null);\n// // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // //   const [loading, setLoading] = useState(true);\n// // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // //   // NEW: Project creation state\n// // // // //   const [showProjectModal, setShowProjectModal] = useState(false);\n// // // // //   const [selectedSubDomainForProject, setSelectedSubDomainForProject] = useState(null);\n\n// // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // //     domainId,\n// // // // //     domain: domain?.title,\n// // // // //     subDomainsCount: subDomains.length,\n// // // // //     loading,\n// // // // //     selectedParent: selectedParent?.title,\n// // // // //     expandedCount: expandedNodes.size,\n// // // // //     showProjectModal,\n// // // // //     selectedSubDomainForProject: selectedSubDomainForProject?.title\n// // // // //   });\n\n// // // // //   useEffect(() => {\n// // // // //     if (domainId) {\n// // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     }\n// // // // //   }, [domainId]);\n\n// // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // //     try {\n// // // // //       setLoading(true);\n      \n// // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls for domain:', domainId);\n      \n// // // // //       // Get domain details\n// // // // //       const domainsResponse = await authService.getDomains();\n// // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // //       let domainData = null;\n// // // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // // //       if (domains.length > 0) {\n// // // // //         domainData = domains.find(d => d.id == domainId);\n// // // // //       }\n      \n// // // // //       if (!domainData) {\n// // // // //         domainData = {\n// // // // //           id: domainId,\n// // // // //           title: `Domain ${domainId}`,\n// // // // //           description: 'Domain not found in list',\n// // // // //           projectCount: 0\n// // // // //         };\n// // // // //       }\n      \n// // // // //       setDomain(domainData);\n      \n// // // // //       // Get subdomains\n// // // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// // // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // // //       setSubDomains(subDomainsData);\n      \n// // // // //       // Auto-expand first level\n// // // // //       if (subDomainsData.length > 0) {\n// // // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // //       }\n      \n// // // // //       // Try hierarchy API as fallback\n// // // // //       try {\n// // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // // //           setSubDomains(hierarchyData.subDomains);\n// // // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // // //           }\n// // // // //         }\n// // // // //       } catch (hierarchyError) {\n// // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed:', hierarchyError);\n// // // // //       }\n      \n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // //       setDomain({\n// // // // //         id: domainId,\n// // // // //         title: `Domain ${domainId}`,\n// // // // //         description: 'Error loading domain details',\n// // // // //         projectCount: 0\n// // // // //       });\n// // // // //       setSubDomains([]);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked, parent:', parent?.title);\n// // // // //     setSelectedParent(parent);\n// // // // //     setEditingSubDomain(null);\n// // // // //     setShowAddModal(true);\n// // // // //   };\n\n// // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked:', subDomain.title);\n// // // // //     setSelectedParent(null);\n// // // // //     setEditingSubDomain(subDomain);\n// // // // //     setShowAddModal(true);\n// // // // //   };\n\n// // // // //   // NEW: Handle adding project to subdomain\n// // // // //   const handleAddProjectToSubDomain = (subDomain) => {\n// // // // //     console.log('üìù ADD PROJECT - Starting for subdomain:', subDomain.title);\n// // // // //     console.log('üìù ADD PROJECT - SubDomain is leaf:', !subDomain.children || subDomain.children.length === 0);\n    \n// // // // //     if (subDomain.children && subDomain.children.length > 0) {\n// // // // //       toast.error('Projects can only be added to leaf sub-domains (those without children)');\n// // // // //       return;\n// // // // //     }\n    \n// // // // //     setSelectedSubDomainForProject(subDomain);\n// // // // //     setShowProjectModal(true);\n// // // // //   };\n\n// // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // //     if (hasChildren) {\n// // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // //     }\n// // // // //     if (hasProjects) {\n// // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // //     }\n    \n// // // // //     if (!window.confirm(confirmMessage)) {\n// // // // //       return;\n// // // // //     }\n\n// // // // //     try {\n// // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Deleting:', subDomain.title);\n// // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n// // // // //       toast.success('Sub-domain deleted successfully');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // //       toast.error('Failed to delete sub-domain');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const toggleExpanded = (nodeId) => {\n// // // // //     const newExpanded = new Set(expandedNodes);\n// // // // //     if (newExpanded.has(nodeId)) {\n// // // // //       newExpanded.delete(nodeId);\n// // // // //     } else {\n// // // // //       newExpanded.add(nodeId);\n// // // // //     }\n// // // // //     setExpandedNodes(newExpanded);\n// // // // //   };\n\n// // // // //   if (loading) {\n// // // // //     return (\n// // // // //       <div className=\"loading-container\">\n// // // // //         <div className=\"loading-spinner\"></div>\n// // // // //         <p>Loading sub-domains...</p>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   return (\n// // // // //     <div className=\"subdomain-management\">\n// // // // //       {/* Header with Breadcrumb */}\n// // // // //       <div className=\"page-header\">\n// // // // //         <div className=\"header-content\">\n// // // // //           <div className=\"breadcrumb\">\n// // // // //             <button \n// // // // //               className=\"breadcrumb-link\"\n// // // // //               onClick={() => navigate('/domains')}\n// // // // //             >\n// // // // //               <FiArrowLeft />\n// // // // //               Domains\n// // // // //             </button>\n// // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // //           </div>\n// // // // //           <h1>SubDomain Management</h1>\n// // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // //         </div>\n// // // // //         <div className=\"header-actions\">\n// // // // //           <button \n// // // // //             className=\"primary-button\" \n// // // // //             onClick={() => handleAddSubDomain()}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //             Add Root SubDomain\n// // // // //           </button>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Quick Guide */}\n// // // // //       <div className=\"quick-guide\">\n// // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // //         <div className=\"guide-steps\">\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">1</span>\n// // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">2</span>\n// // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">3</span>\n// // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">4</span>\n// // // // //             <span className=\"step-text\">Click <strong>\"Add Project\"</strong> on leaf subdomains to create new projects</span>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Domain Info Card */}\n// // // // //       {domain && (\n// // // // //         <div className=\"domain-info-card\">\n// // // // //           <div className=\"domain-icon\">\n// // // // //             <FiFolder />\n// // // // //           </div>\n// // // // //           <div className=\"domain-details\">\n// // // // //             <h3>{domain.title}</h3>\n// // // // //             <p>{domain.description}</p>\n// // // // //             <div className=\"domain-stats\">\n// // // // //               <span className=\"stat-item\">\n// // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // //               </span>\n// // // // //               <span className=\"stat-item\">\n// // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // //               </span>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       )}\n\n// // // // //       {/* SubDomain Tree */}\n// // // // //       <div className=\"subdomain-tree-container\">\n// // // // //         <div className=\"tree-header\">\n// // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // //           <div className=\"tree-legend\">\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiFolder className=\"folder-icon\" />\n// // // // //               Has children\n// // // // //             </span>\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // //               Leaf (can have projects)\n// // // // //             </span>\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiFileText className=\"project-icon\" />\n// // // // //               Add Project\n// // // // //             </span>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         {subDomains.length > 0 ? (\n// // // // //           <div className=\"subdomain-tree\">\n// // // // //             {subDomains.map((subDomain) => (\n// // // // //               <SubDomainNode\n// // // // //                 key={subDomain.id}\n// // // // //                 subDomain={subDomain}\n// // // // //                 level={0}\n// // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // //                 onToggleExpanded={toggleExpanded}\n// // // // //                 onEdit={handleEditSubDomain}\n// // // // //                 onDelete={handleDeleteSubDomain}\n// // // // //                 onAddChild={handleAddSubDomain}\n// // // // //                 onAddProject={handleAddProjectToSubDomain} // NEW\n// // // // //                 expandedNodes={expandedNodes}\n// // // // //               />\n// // // // //             ))}\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div className=\"empty-tree-state\">\n// // // // //             <FiFolderPlus size={64} />\n// // // // //             <h3>No SubDomains Yet</h3>\n// // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // //             <div className=\"empty-state-examples\">\n// // // // //               <h4>Example Structure:</h4>\n// // // // //               <div className=\"example-tree\">\n// // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // //               </div>\n// // // // //             </div>\n// // // // //             <div className=\"empty-state-actions\">\n// // // // //               <button \n// // // // //                 className=\"primary-button large\" \n// // // // //                 onClick={() => handleAddSubDomain()}\n// // // // //               >\n// // // // //                 <FiPlus />\n// // // // //                 Create Your First SubDomain\n// // // // //               </button>\n// // // // //               <p className=\"help-text\">\n// // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // //               </p>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n\n// // // // //       {/* Add/Edit SubDomain Modal */}\n// // // // //       {showAddModal && (\n// // // // //         <SubDomainModal\n// // // // //           subDomain={editingSubDomain}\n// // // // //           parent={selectedParent}\n// // // // //           domain={domain}\n// // // // //           onClose={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //           }}\n// // // // //           onSave={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //             fetchDomainAndSubDomains();\n// // // // //           }}\n// // // // //         />\n// // // // //       )}\n\n// // // // //       {/* NEW: Project Creation Modal */}\n// // // // //       {showProjectModal && (\n// // // // //         <ProjectModal\n// // // // //           subDomain={selectedSubDomainForProject}\n// // // // //           domain={domain}\n// // // // //           onClose={() => {\n// // // // //             setShowProjectModal(false);\n// // // // //             setSelectedSubDomainForProject(null);\n// // // // //           }}\n// // // // //           onSave={() => {\n// // // // //             setShowProjectModal(false);\n// // // // //             setSelectedSubDomainForProject(null);\n// // // // //             toast.success('Project created successfully!');\n// // // // //             fetchDomainAndSubDomains(); // Refresh to update project counts\n// // // // //           }}\n// // // // //         />\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // UPDATED SubDomain Node Component\n// // // // // const SubDomainNode = ({ \n// // // // //   subDomain, \n// // // // //   level, \n// // // // //   isExpanded, \n// // // // //   onToggleExpanded, \n// // // // //   onEdit, \n// // // // //   onDelete, \n// // // // //   onAddChild,\n// // // // //   onAddProject, // NEW\n// // // // //   expandedNodes \n// // // // // }) => {\n// // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //   const isLeaf = !hasChildren;\n\n// // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // //     title: subDomain.title,\n// // // // //     level,\n// // // // //     hasChildren,\n// // // // //     isLeaf,\n// // // // //     isExpanded,\n// // // // //     projectCount: subDomain.projectCount\n// // // // //   });\n\n// // // // //   return (\n// // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // //       <div className=\"node-content\">\n// // // // //         <div className=\"node-main\">\n// // // // //           {hasChildren ? (\n// // // // //             <button \n// // // // //               className=\"expand-button\"\n// // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // //             >\n// // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // //             </button>\n// // // // //           ) : (\n// // // // //             <div className=\"expand-placeholder\" />\n// // // // //           )}\n          \n// // // // //           <div className=\"node-icon\">\n// // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // //           </div>\n          \n// // // // //           <div className=\"node-info\">\n// // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // //             <div className=\"node-stats\">\n// // // // //               {hasChildren && (\n// // // // //                 <span className=\"stat-badge\">\n// // // // //                   {subDomain.children.length} sub-domains\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {subDomain.projectCount > 0 && (\n// // // // //                 <span className=\"stat-badge projects\">\n// // // // //                   {subDomain.projectCount} projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {isLeaf && (\n// // // // //                 <span className=\"stat-badge leaf\">\n// // // // //                   Can have projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n        \n// // // // //         <div className=\"node-actions\">\n// // // // //           {/* NEW: Add Project Button for Leaf Subdomains */}\n// // // // //           {isLeaf && (\n// // // // //             <button \n// // // // //               className=\"action-button project\" \n// // // // //               onClick={() => onAddProject(subDomain)}\n// // // // //               title={`Add project to \"${subDomain.title}\"`}\n// // // // //             >\n// // // // //               <FiFileText />\n// // // // //             </button>\n// // // // //           )}\n          \n// // // // //           <button \n// // // // //             className=\"action-button add\" \n// // // // //             onClick={() => onAddChild(subDomain)}\n// // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //           </button>\n          \n// // // // //           <div className=\"action-menu\">\n// // // // //             <button \n// // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // //               title=\"More actions\"\n// // // // //             >\n// // // // //               <FiMoreVertical />\n// // // // //             </button>\n// // // // //             {showMenu && (\n// // // // //               <div className=\"dropdown-menu\">\n// // // // //                 {/* NEW: Add Project Option for Leaf Subdomains */}\n// // // // //                 {isLeaf && (\n// // // // //                   <button \n// // // // //                     onClick={() => {\n// // // // //                       onAddProject(subDomain);\n// // // // //                       setShowMenu(false);\n// // // // //                     }}\n// // // // //                     className=\"primary-option\"\n// // // // //                   >\n// // // // //                     <FiFileText /> Add Project\n// // // // //                   </button>\n// // // // //                 )}\n// // // // //                 <button onClick={() => {\n// // // // //                   onEdit(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }}>\n// // // // //                   <FiEdit /> Edit SubDomain\n// // // // //                 </button>\n// // // // //                 <button onClick={() => {\n// // // // //                   onAddChild(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }}>\n// // // // //                   <FiPlus /> Add Child SubDomain\n// // // // //                 </button>\n// // // // //                 <button onClick={() => {\n// // // // //                   onDelete(subDomain);\n// // // // //                   setShowMenu(false);\n// // // // //                 }} className=\"danger\">\n// // // // //                   <FiTrash2 /> Delete SubDomain\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n      \n// // // // //       {/* Children */}\n// // // // //       {hasChildren && isExpanded && (\n// // // // //         <div className=\"node-children\">\n// // // // //           {subDomain.children.map((child) => (\n// // // // //             <SubDomainNode\n// // // // //               key={child.id}\n// // // // //               subDomain={child}\n// // // // //               level={level + 1}\n// // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // //               onToggleExpanded={onToggleExpanded}\n// // // // //               onEdit={onEdit}\n// // // // //               onDelete={onDelete}\n// // // // //               onAddChild={onAddChild}\n// // // // //               onAddProject={onAddProject} // NEW\n// // // // //               expandedNodes={expandedNodes}\n// // // // //             />\n// // // // //           ))}\n// // // // //         </div>\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Modal Component (unchanged)\n// // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // //   const [formData, setFormData] = useState({\n// // // // //     title: subDomain?.title || '',\n// // // // //     description: subDomain?.description || ''\n// // // // //   });\n// // // // //   const [loading, setLoading] = useState(false);\n\n// // // // //   const handleSubmit = async (e) => {\n// // // // //     e.preventDefault();\n// // // // //     setLoading(true);\n\n// // // // //     try {\n// // // // //       const requestData = {\n// // // // //         title: formData.title.trim(),\n// // // // //         description: formData.description.trim(),\n// // // // //         domainId: domain.id,\n// // // // //         parentId: parent?.id || null\n// // // // //       };\n\n// // // // //       console.log('üíæ SUBDOMAIN SAVE - Request data:', requestData);\n\n// // // // //       if (subDomain) {\n// // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // //         toast.success('Sub-domain updated successfully');\n// // // // //       } else {\n// // // // //         const response = await authService.createSubDomain(requestData);\n// // // // //         toast.success('Sub-domain created successfully');\n// // // // //       }\n\n// // // // //       onSave();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // //       const errorMessage = error.response?.data?.message || 'Failed to save sub-domain';\n// // // // //       toast.error(errorMessage);\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getModalTitle = () => {\n// // // // //     if (subDomain) {\n// // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // //     }\n// // // // //     if (parent) {\n// // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // //     }\n// // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"modal-overlay\">\n// // // // //       <div className=\"modal\">\n// // // // //         <div className=\"modal-header\">\n// // // // //           <h2>{getModalTitle()}</h2>\n// // // // //           <button onClick={onClose}>√ó</button>\n// // // // //         </div>\n        \n// // // // //         <form onSubmit={handleSubmit}>\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>SubDomain Title *</label>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={formData.title}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // //               required\n// // // // //               minLength={3}\n// // // // //               maxLength={100}\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Description (Optional)</label>\n// // // // //             <textarea\n// // // // //               value={formData.description}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // //               rows={3}\n// // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // //               maxLength={500}\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"modal-info\">\n// // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // //             {parent && (\n// // // // //               <>\n// // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // //               </>\n// // // // //             )}\n// // // // //             <strong>Level:</strong> {parent ? `Level ${(parent.level || 0) + 1}` : 'Root Level'}\n// // // // //           </div>\n          \n// // // // //           <div className=\"modal-actions\">\n// // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // //               Cancel\n// // // // //             </button>\n// // // // //             <button \n// // // // //               type=\"submit\" \n// // // // //               className=\"primary-button\" \n// // // // //               disabled={loading || !formData.title.trim()}\n// // // // //             >\n// // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </form>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // NEW: Project Modal Component for SubDomain context\n// // // // // const ProjectModal = ({ subDomain, domain, onClose, onSave }) => {\n// // // // //   const [formData, setFormData] = useState({\n// // // // //     title: '',\n// // // // //     abstract: '',\n// // // // //     specifications: '',\n// // // // //     learningOutcomes: '',\n// // // // //     subDomainId: subDomain?.id || '',\n// // // // //     isFeatured: false\n// // // // //   });\n// // // // //   const [loading, setLoading] = useState(false);\n\n// // // // //   console.log('üìù PROJECT MODAL - Props:', {\n// // // // //     subDomain: subDomain?.title,\n// // // // //     domain: domain?.title,\n// // // // //     formData\n// // // // //   });\n\n// // // // //   const handleSubmit = async (e) => {\n// // // // //     e.preventDefault();\n// // // // //     setLoading(true);\n\n// // // // //     try {\n// // // // //       console.log('üíæ PROJECT SAVE - Starting API call with data:', formData);\n      \n// // // // //       const response = await authService.createProject(formData);\n// // // // //       console.log('‚úÖ PROJECT CREATE - Response:', response.data);\n      \n// // // // //       onSave();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå PROJECT SAVE - Error:', error);\n// // // // //       toast.error('Failed to create project');\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"modal-overlay\">\n// // // // //       <div className=\"modal large\">\n// // // // //         <div className=\"modal-header\">\n// // // // //           <h2>Add Project to: {subDomain?.title}</h2>\n// // // // //           <button onClick={onClose}>√ó</button>\n// // // // //         </div>\n        \n// // // // //         <form onSubmit={handleSubmit}>\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Project Title *</label>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={formData.title}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // //               placeholder=\"Enter project title...\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"modal-info\">\n// // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // //             <strong>SubDomain:</strong> {subDomain?.title || 'Unknown'}<br />\n// // // // //             <span className=\"info-note\">\n// // // // //               <FiTarget /> This is a leaf subdomain - perfect for projects!\n// // // // //             </span>\n// // // // //           </div>\n          \n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Abstract *</label>\n// // // // //             <textarea\n// // // // //               value={formData.abstract}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// // // // //               rows={4}\n// // // // //               placeholder=\"Brief description of the project...\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Specifications *</label>\n// // // // //             <textarea\n// // // // //               value={formData.specifications}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// // // // //               rows={6}\n// // // // //               placeholder=\"Technical specifications and requirements...\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Learning Outcomes *</label>\n// // // // //             <textarea\n// // // // //               value={formData.learningOutcomes}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// // // // //               rows={4}\n// // // // //               placeholder=\"What will students learn from this project...\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"form-group checkbox\">\n// // // // //             <label>\n// // // // //               <input\n// // // // //                 type=\"checkbox\"\n// // // // //                 checked={formData.isFeatured}\n// // // // //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// // // // //               />\n// // // // //               <FiTarget />\n// // // // //               Featured Project\n// // // // //             </label>\n// // // // //           </div>\n          \n// // // // //           <div className=\"modal-actions\">\n// // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // //               Cancel\n// // // // //             </button>\n// // // // //             <button \n// // // // //               type=\"submit\" \n// // // // //               className=\"primary-button\" \n// // // // //               disabled={loading || !formData.title || !formData.abstract}\n// // // // //             >\n// // // // //               {loading ? 'Creating...' : 'Create Project'}\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </form>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // export default SubDomainManagement;\n\n\n// // // // // // // src/components/domains/SubDomainManagement.js - CORRECTED VERSION\n// // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // import { authService } from '../../services/authService';\n// // // // // // import { toast } from 'react-toastify';\n// // // // // // import {\n// // // // // //   FiPlus,\n// // // // // //   FiEdit,\n// // // // // //   FiTrash2,\n// // // // // //   FiChevronDown,\n// // // // // //   FiChevronRight,\n// // // // // //   FiFolder,\n// // // // // //   FiFolderPlus,\n// // // // // //   FiFileText,\n// // // // // //   FiArrowLeft,\n// // // // // //   FiMoreVertical,\n// // // // // //   FiMove,\n// // // // // //   FiTarget\n// // // // // // } from 'react-icons/fi';\n\n// // // // // // const SubDomainManagement = () => {\n// // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // //   const { domainId } = useParams();\n// // // // // //   const navigate = useNavigate();\n  \n// // // // // //   const [domain, setDomain] = useState(null);\n// // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // //   const [loading, setLoading] = useState(true);\n// // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // //     domainId,\n// // // // // //     domain: domain?.title,\n// // // // // //     subDomainsCount: subDomains.length,\n// // // // // //     loading,\n// // // // // //     selectedParent: selectedParent?.title,\n// // // // // //     expandedCount: expandedNodes.size\n// // // // // //   });\n\n// // // // // //   useEffect(() => {\n// // // // // //     if (domainId) {\n// // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // //       fetchDomainAndSubDomains();\n// // // // // //     }\n// // // // // //   }, [domainId]);\n\n// // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // //     try {\n// // // // // //       setLoading(true);\n      \n// // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // //       // ‚úÖ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n// // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains (no params)');\n// // // // // //       const domainsResponse = await authService.getDomains();\n// // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // //       // Extract specific domain from response\n// // // // // //       let domainData = null;\n// // // // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // // // //       if (domains.length > 0) {\n// // // // // //         domainData = domains.find(d => d.id == domainId);\n// // // // // //       }\n      \n// // // // // //       console.log('üéØ SUBDOMAIN FETCH - Found domain:', domainData);\n      \n// // // // // //       // If we don't have domain data, create a placeholder\n// // // // // //       if (!domainData) {\n// // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // //         domainData = {\n// // // // // //           id: domainId,\n// // // // // //           title: `Domain ${domainId}`,\n// // // // // //           description: 'Domain not found in list',\n// // // // // //           projectCount: 0\n// // // // // //         };\n// // // // // //       }\n      \n// // // // // //       setDomain(domainData);\n      \n// // // // // //       // ‚úÖ CORRECTED: Get subdomains using the correct API\n// // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n// // // // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// // // // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n      \n// // // // // //       setSubDomains(subDomainsData);\n      \n// // // // // //       // Auto-expand first level\n// // // // // //       if (subDomainsData.length > 0) {\n// // // // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // // //         console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // //       }\n      \n// // // // // //       // ‚úÖ ALTERNATIVE: Try hierarchy API as fallback\n// // // // // //       try {\n// // // // // //         console.log('üåê SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n// // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // // // //           console.log('üéØ SUBDOMAIN FETCH - Using hierarchy data instead');\n// // // // // //           setSubDomains(hierarchyData.subDomains);\n          \n// // // // // //           // Update domain info if more complete\n// // // // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // // // //           }\n// // // // // //         }\n// // // // // //       } catch (hierarchyError) {\n// // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n// // // // // //       }\n      \n// // // // // //     } catch (error) {\n// // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // //       // Create fallback domain\n// // // // // //       setDomain({\n// // // // // //         id: domainId,\n// // // // // //         title: `Domain ${domainId}`,\n// // // // // //         description: 'Error loading domain details',\n// // // // // //         projectCount: 0\n// // // // // //       });\n// // // // // //       setSubDomains([]);\n// // // // // //     } finally {\n// // // // // //       setLoading(false);\n// // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // //     setSelectedParent(parent);\n// // // // // //     setEditingSubDomain(null);\n// // // // // //     setShowAddModal(true);\n    \n// // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // //       showAddModal: true, \n// // // // // //       selectedParent: parent?.title,\n// // // // // //       editingSubDomain: null \n// // // // // //     });\n// // // // // //   };\n\n// // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // //     setSelectedParent(null);\n// // // // // //     setEditingSubDomain(subDomain);\n// // // // // //     setShowAddModal(true);\n// // // // // //   };\n\n// // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // //     if (hasChildren) {\n// // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // //     }\n// // // // // //     if (hasProjects) {\n// // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // //     }\n    \n// // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // //       return;\n// // // // // //     }\n\n// // // // // //     try {\n// // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // //       fetchDomainAndSubDomains();\n// // // // // //     } catch (error) {\n// // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // //       newExpanded.delete(nodeId);\n// // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // //     } else {\n// // // // // //       newExpanded.add(nodeId);\n// // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // //     }\n// // // // // //     setExpandedNodes(newExpanded);\n// // // // // //   };\n\n// // // // // //   if (loading) {\n// // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // //     return (\n// // // // // //       <div className=\"loading-container\">\n// // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // //         <p>Loading sub-domains...</p>\n// // // // // //       </div>\n// // // // // //     );\n// // // // // //   }\n\n// // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // //   return (\n// // // // // //     <div className=\"subdomain-management\">\n// // // // // //       {/* Header with Breadcrumb */}\n// // // // // //       <div className=\"page-header\">\n// // // // // //         <div className=\"header-content\">\n// // // // // //           <div className=\"breadcrumb\">\n// // // // // //             <button \n// // // // // //               className=\"breadcrumb-link\"\n// // // // // //               onClick={() => navigate('/domains')}\n// // // // // //             >\n// // // // // //               <FiArrowLeft />\n// // // // // //               Domains\n// // // // // //             </button>\n// // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // //           </div>\n// // // // // //           <h1>SubDomain Management</h1>\n// // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // //         </div>\n// // // // // //         <div className=\"header-actions\">\n// // // // // //           <button \n// // // // // //             className=\"primary-button\" \n// // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // //           >\n// // // // // //             <FiPlus />\n// // // // // //             Add Root SubDomain\n// // // // // //           </button>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Quick Guide */}\n// // // // // //       <div className=\"quick-guide\">\n// // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // //         <div className=\"guide-steps\">\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">1</span>\n// // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // //           </div>\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">2</span>\n// // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // //           </div>\n// // // // // //           <div className=\"guide-step\">\n// // // // // //             <span className=\"step-number\">3</span>\n// // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       </div>\n\n// // // // // //       {/* Domain Info Card */}\n// // // // // //       {domain && (\n// // // // // //         <div className=\"domain-info-card\">\n// // // // // //           <div className=\"domain-icon\">\n// // // // // //             <FiFolder />\n// // // // // //           </div>\n// // // // // //           <div className=\"domain-details\">\n// // // // // //             <h3>{domain.title}</h3>\n// // // // // //             <p>{domain.description}</p>\n// // // // // //             <div className=\"domain-stats\">\n// // // // // //               <span className=\"stat-item\">\n// // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // //               </span>\n// // // // // //               <span className=\"stat-item\">\n// // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // //               </span>\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       )}\n\n// // // // // //       {/* SubDomain Tree */}\n// // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // //         <div className=\"tree-header\">\n// // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // //           <div className=\"tree-legend\">\n// // // // // //             <span className=\"legend-item\">\n// // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // //               Has children\n// // // // // //             </span>\n// // // // // //             <span className=\"legend-item\">\n// // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // //               Leaf (can have projects)\n// // // // // //             </span>\n// // // // // //           </div>\n// // // // // //         </div>\n\n// // // // // //         {subDomains.length > 0 ? (\n// // // // // //           <div className=\"subdomain-tree\">\n// // // // // //             {subDomains.map((subDomain) => (\n// // // // // //               <SubDomainNode\n// // // // // //                 key={subDomain.id}\n// // // // // //                 subDomain={subDomain}\n// // // // // //                 level={0}\n// // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // //                 onEdit={handleEditSubDomain}\n// // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // //                 expandedNodes={expandedNodes}\n// // // // // //               />\n// // // // // //             ))}\n// // // // // //           </div>\n// // // // // //         ) : (\n// // // // // //           <div className=\"empty-tree-state\">\n// // // // // //             <FiFolderPlus size={64} />\n// // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // //             <div className=\"empty-state-examples\">\n// // // // // //               <h4>Example Structure:</h4>\n// // // // // //               <div className=\"example-tree\">\n// // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // //               </div>\n// // // // // //             </div>\n// // // // // //             <div className=\"empty-state-actions\">\n// // // // // //               <button \n// // // // // //                 className=\"primary-button large\" \n// // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // //               >\n// // // // // //                 <FiPlus />\n// // // // // //                 Create Your First SubDomain\n// // // // // //               </button>\n// // // // // //               <p className=\"help-text\">\n// // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // //               </p>\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         )}\n// // // // // //       </div>\n\n// // // // // //       {/* Add/Edit Modal */}\n// // // // // //       {showAddModal && (\n// // // // // //         <SubDomainModal\n// // // // // //           subDomain={editingSubDomain}\n// // // // // //           parent={selectedParent}\n// // // // // //           domain={domain}\n// // // // // //           onClose={() => {\n// // // // // //             setShowAddModal(false);\n// // // // // //             setEditingSubDomain(null);\n// // // // // //             setSelectedParent(null);\n// // // // // //           }}\n// // // // // //           onSave={() => {\n// // // // // //             setShowAddModal(false);\n// // // // // //             setEditingSubDomain(null);\n// // // // // //             setSelectedParent(null);\n// // // // // //             fetchDomainAndSubDomains();\n// // // // // //           }}\n// // // // // //         />\n// // // // // //       )}\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // // SubDomain Node Component\n// // // // // // const SubDomainNode = ({ \n// // // // // //   subDomain, \n// // // // // //   level, \n// // // // // //   isExpanded, \n// // // // // //   onToggleExpanded, \n// // // // // //   onEdit, \n// // // // // //   onDelete, \n// // // // // //   onAddChild,\n// // // // // //   expandedNodes \n// // // // // // }) => {\n// // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // //   const isLeaf = !hasChildren;\n\n// // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // //     title: subDomain.title,\n// // // // // //     level,\n// // // // // //     hasChildren,\n// // // // // //     isLeaf,\n// // // // // //     isExpanded,\n// // // // // //     projectCount: subDomain.projectCount\n// // // // // //   });\n\n// // // // // //   return (\n// // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // //       <div className=\"node-content\">\n// // // // // //         <div className=\"node-main\">\n// // // // // //           {hasChildren ? (\n// // // // // //             <button \n// // // // // //               className=\"expand-button\"\n// // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // //             >\n// // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // //             </button>\n// // // // // //           ) : (\n// // // // // //             <div className=\"expand-placeholder\" />\n// // // // // //           )}\n          \n// // // // // //           <div className=\"node-icon\">\n// // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // //           </div>\n          \n// // // // // //           <div className=\"node-info\">\n// // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // //             <div className=\"node-stats\">\n// // // // // //               {hasChildren && (\n// // // // // //                 <span className=\"stat-badge\">\n// // // // // //                   {subDomain.children.length} sub-domains\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //               {subDomain.projectCount > 0 && (\n// // // // // //                 <span className=\"stat-badge projects\">\n// // // // // //                   {subDomain.projectCount} projects\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //               {isLeaf && (\n// // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // //                   Can have projects\n// // // // // //                 </span>\n// // // // // //               )}\n// // // // // //             </div>\n// // // // // //           </div>\n// // // // // //         </div>\n        \n// // // // // //         <div className=\"node-actions\">\n// // // // // //           <button \n// // // // // //             className=\"action-button add\" \n// // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // //           >\n// // // // // //             <FiPlus />\n// // // // // //           </button>\n// // // // // //           <div className=\"action-menu\">\n// // // // // //             <button \n// // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // //               title=\"More actions\"\n// // // // // //             >\n// // // // // //               <FiMoreVertical />\n// // // // // //             </button>\n// // // // // //             {showMenu && (\n// // // // // //               <div className=\"dropdown-menu\">\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onEdit(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }}>\n// // // // // //                   <FiEdit /> Edit\n// // // // // //                 </button>\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onAddChild(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }}>\n// // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // //                 </button>\n// // // // // //                 <button onClick={() => {\n// // // // // //                   onDelete(subDomain);\n// // // // // //                   setShowMenu(false);\n// // // // // //                 }} className=\"danger\">\n// // // // // //                   <FiTrash2 /> Delete\n// // // // // //                 </button>\n// // // // // //               </div>\n// // // // // //             )}\n// // // // // //           </div>\n// // // // // //         </div>\n// // // // // //       </div>\n      \n// // // // // //       {/* Children */}\n// // // // // //       {hasChildren && isExpanded && (\n// // // // // //         <div className=\"node-children\">\n// // // // // //           {subDomain.children.map((child) => (\n// // // // // //             <SubDomainNode\n// // // // // //               key={child.id}\n// // // // // //               subDomain={child}\n// // // // // //               level={level + 1}\n// // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // //               onEdit={onEdit}\n// // // // // //               onDelete={onDelete}\n// // // // // //               onAddChild={onAddChild}\n// // // // // //               expandedNodes={expandedNodes}\n// // // // // //             />\n// // // // // //           ))}\n// // // // // //         </div>\n// // // // // //       )}\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // // SubDomain Modal Component - CORRECTED VERSION\n// // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // //   const [formData, setFormData] = useState({\n// // // // // //     title: subDomain?.title || '',\n// // // // // //     description: subDomain?.description || ''\n// // // // // //   });\n// // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // //     isEditing: !!subDomain,\n// // // // // //     parentTitle: parent?.title,\n// // // // // //     domainTitle: domain?.title,\n// // // // // //     formData\n// // // // // //   });\n\n// // // // // //   const handleSubmit = async (e) => {\n// // // // // //     e.preventDefault();\n// // // // // //     setLoading(true);\n\n// // // // // //     try {\n// // // // // //       const requestData = {\n// // // // // //         title: formData.title.trim(),\n// // // // // //         description: formData.description.trim(),\n// // // // // //         domainId: domain.id,\n// // // // // //         parentId: parent?.id || null\n// // // // // //       };\n\n// // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // //       if (subDomain) {\n// // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // //       } else {\n// // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // //         toast.success('Sub-domain created successfully');\n// // // // // //       }\n\n// // // // // //       onSave();\n// // // // // //     } catch (error) {\n// // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n      \n// // // // // //       const errorMessage = error.response?.data?.message || \n// // // // // //                           error.response?.data?.error || \n// // // // // //                           'Failed to save sub-domain';\n// // // // // //       toast.error(errorMessage);\n// // // // // //     } finally {\n// // // // // //       setLoading(false);\n// // // // // //     }\n// // // // // //   };\n\n// // // // // //   const getModalTitle = () => {\n// // // // // //     if (subDomain) {\n// // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // //     }\n// // // // // //     if (parent) {\n// // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // //     }\n// // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // //   };\n\n// // // // // //   const getLevel = () => {\n// // // // // //     if (!parent) return 'Root Level';\n// // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // //   };\n\n// // // // // //   return (\n// // // // // //     <div className=\"modal-overlay\">\n// // // // // //       <div className=\"modal\">\n// // // // // //         <div className=\"modal-header\">\n// // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // //         </div>\n        \n// // // // // //         <form onSubmit={handleSubmit}>\n// // // // // //           <div className=\"form-group\">\n// // // // // //             <label>SubDomain Title *</label>\n// // // // // //             <input\n// // // // // //               type=\"text\"\n// // // // // //               value={formData.title}\n// // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // //               required\n// // // // // //               minLength={3}\n// // // // // //               maxLength={100}\n// // // // // //             />\n// // // // // //           </div>\n          \n// // // // // //           <div className=\"form-group\">\n// // // // // //             <label>Description (Optional)</label>\n// // // // // //             <textarea\n// // // // // //               value={formData.description}\n// // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // //               rows={3}\n// // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // //               maxLength={500}\n// // // // // //             />\n// // // // // //           </div>\n          \n// // // // // //           <div className=\"modal-info\">\n// // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // //             {parent && (\n// // // // // //               <>\n// // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // //               </>\n// // // // // //             )}\n// // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // //           </div>\n          \n// // // // // //           <div className=\"modal-actions\">\n// // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // //               Cancel\n// // // // // //             </button>\n// // // // // //             <button \n// // // // // //               type=\"submit\" \n// // // // // //               className=\"primary-button\" \n// // // // // //               disabled={loading || !formData.title.trim()}\n// // // // // //             >\n// // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // //             </button>\n// // // // // //           </div>\n// // // // // //         </form>\n// // // // // //       </div>\n// // // // // //     </div>\n// // // // // //   );\n// // // // // // };\n\n// // // // // // export default SubDomainManagement;\n\n\n\n\n\n\n\n// // // // // // // // src/components/domains/SubDomainManagement.js - CORRECTED VERSION\n// // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // import { authService } from '../../services/authService';\n// // // // // // // import { toast } from 'react-toastify';\n// // // // // // // import {\n// // // // // // //   FiPlus,\n// // // // // // //   FiEdit,\n// // // // // // //   FiTrash2,\n// // // // // // //   FiChevronDown,\n// // // // // // //   FiChevronRight,\n// // // // // // //   FiFolder,\n// // // // // // //   FiFolderPlus,\n// // // // // // //   FiFileText,\n// // // // // // //   FiArrowLeft,\n// // // // // // //   FiMoreVertical,\n// // // // // // //   FiMove,\n// // // // // // //   FiTarget\n// // // // // // // } from 'react-icons/fi';\n\n// // // // // // // const SubDomainManagement = () => {\n// // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // //   const { domainId } = useParams();\n// // // // // // //   const navigate = useNavigate();\n  \n// // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // //     domainId,\n// // // // // // //     domain: domain?.title,\n// // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // //     loading,\n// // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // //     expandedCount: expandedNodes.size\n// // // // // // //   });\n\n// // // // // // //   useEffect(() => {\n// // // // // // //     if (domainId) {\n// // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // //       fetchDomainAndSubDomains();\n// // // // // // //     }\n// // // // // // //   }, [domainId]);\n\n// // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // //     try {\n// // // // // // //       setLoading(true);\n      \n// // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // //       // ‚úÖ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n// // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains (no params)');\n// // // // // // //       const domainsResponse = await authService.getDomains();\n// // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // // //       // Extract specific domain from response\n// // // // // // //       let domainData = null;\n// // // // // // //       const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n// // // // // // //       if (domains.length > 0) {\n// // // // // // //         domainData = domains.find(d => d.id == domainId);\n// // // // // // //       }\n      \n// // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Found domain:', domainData);\n      \n// // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // //       if (!domainData) {\n// // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // //         domainData = {\n// // // // // // //           id: domainId,\n// // // // // // //           title: `Domain ${domainId}`,\n// // // // // // //           description: 'Domain not found in list',\n// // // // // // //           projectCount: 0\n// // // // // // //         };\n// // // // // // //       }\n      \n// // // // // // //       setDomain(domainData);\n      \n// // // // // // //       // ‚úÖ CORRECTED: Get subdomains using the correct API\n// // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n// // // // // // //       const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n// // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n// // // // // // //       const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n// // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n      \n// // // // // // //       setSubDomains(subDomainsData);\n      \n// // // // // // //       // Auto-expand first level\n// // // // // // //       if (subDomainsData.length > 0) {\n// // // // // // //         const firstLevelIds = subDomainsData.map(sd => sd.id);\n// // // // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // // // //         console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // //       }\n      \n// // // // // // //       // ‚úÖ ALTERNATIVE: Try hierarchy API as fallback\n// // // // // // //       try {\n// // // // // // //         console.log('üåê SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n// // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // //         if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n// // // // // // //           console.log('üéØ SUBDOMAIN FETCH - Using hierarchy data instead');\n// // // // // // //           setSubDomains(hierarchyData.subDomains);\n          \n// // // // // // //           // Update domain info if more complete\n// // // // // // //           if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n// // // // // // //             setDomain(prev => ({ ...prev, ...hierarchyData }));\n// // // // // // //           }\n// // // // // // //         }\n// // // // // // //       } catch (hierarchyError) {\n// // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n// // // // // // //       }\n      \n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // // //       // Create fallback domain\n// // // // // // //       setDomain({\n// // // // // // //         id: domainId,\n// // // // // // //         title: `Domain ${domainId}`,\n// // // // // // //         description: 'Error loading domain details',\n// // // // // // //         projectCount: 0\n// // // // // // //       });\n// // // // // // //       setSubDomains([]);\n// // // // // // //     } finally {\n// // // // // // //       setLoading(false);\n// // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // //     setSelectedParent(parent);\n// // // // // // //     setEditingSubDomain(null);\n// // // // // // //     setShowAddModal(true);\n    \n// // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // //       showAddModal: true, \n// // // // // // //       selectedParent: parent?.title,\n// // // // // // //       editingSubDomain: null \n// // // // // // //     });\n// // // // // // //   };\n\n// // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // //     setSelectedParent(null);\n// // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // //     setShowAddModal(true);\n// // // // // // //   };\n\n// // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // //     if (hasChildren) {\n// // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // //     }\n// // // // // // //     if (hasProjects) {\n// // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // //     }\n    \n// // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // //       return;\n// // // // // // //     }\n\n// // // // // // //     try {\n// // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // //       fetchDomainAndSubDomains();\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // //       newExpanded.delete(nodeId);\n// // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // //     } else {\n// // // // // // //       newExpanded.add(nodeId);\n// // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // //     }\n// // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // //   };\n\n// // // // // // //   if (loading) {\n// // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // //     return (\n// // // // // // //       <div className=\"loading-container\">\n// // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // //       </div>\n// // // // // // //     );\n// // // // // // //   }\n\n// // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // //   return (\n// // // // // // //     <div className=\"subdomain-management\">\n// // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // //       <div className=\"page-header\">\n// // // // // // //         <div className=\"header-content\">\n// // // // // // //           <div className=\"breadcrumb\">\n// // // // // // //             <button \n// // // // // // //               className=\"breadcrumb-link\"\n// // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // //             >\n// // // // // // //               <FiArrowLeft />\n// // // // // // //               Domains\n// // // // // // //             </button>\n// // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // //           </div>\n// // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // //         </div>\n// // // // // // //         <div className=\"header-actions\">\n// // // // // // //           <button \n// // // // // // //             className=\"primary-button\" \n// // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // //           >\n// // // // // // //             <FiPlus />\n// // // // // // //             Add Root SubDomain\n// // // // // // //           </button>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Quick Guide */}\n// // // // // // //       <div className=\"quick-guide\">\n// // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // //         <div className=\"guide-steps\">\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // //           </div>\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // //           </div>\n// // // // // // //           <div className=\"guide-step\">\n// // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       </div>\n\n// // // // // // //       {/* Domain Info Card */}\n// // // // // // //       {domain && (\n// // // // // // //         <div className=\"domain-info-card\">\n// // // // // // //           <div className=\"domain-icon\">\n// // // // // // //             <FiFolder />\n// // // // // // //           </div>\n// // // // // // //           <div className=\"domain-details\">\n// // // // // // //             <h3>{domain.title}</h3>\n// // // // // // //             <p>{domain.description}</p>\n// // // // // // //             <div className=\"domain-stats\">\n// // // // // // //               <span className=\"stat-item\">\n// // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // //               </span>\n// // // // // // //               <span className=\"stat-item\">\n// // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // //               </span>\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       )}\n\n// // // // // // //       {/* SubDomain Tree */}\n// // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // //         <div className=\"tree-header\">\n// // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // //           <div className=\"tree-legend\">\n// // // // // // //             <span className=\"legend-item\">\n// // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // //               Has children\n// // // // // // //             </span>\n// // // // // // //             <span className=\"legend-item\">\n// // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // //               Leaf (can have projects)\n// // // // // // //             </span>\n// // // // // // //           </div>\n// // // // // // //         </div>\n\n// // // // // // //         {subDomains.length > 0 ? (\n// // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // //               <SubDomainNode\n// // // // // // //                 key={subDomain.id}\n// // // // // // //                 subDomain={subDomain}\n// // // // // // //                 level={0}\n// // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // //               />\n// // // // // // //             ))}\n// // // // // // //           </div>\n// // // // // // //         ) : (\n// // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // //             <FiFolderPlus size={64} />\n// // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // //               <h4>Example Structure:</h4>\n// // // // // // //               <div className=\"example-tree\">\n// // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // //               </div>\n// // // // // // //             </div>\n// // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // //               <button \n// // // // // // //                 className=\"primary-button large\" \n// // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // //               >\n// // // // // // //                 <FiPlus />\n// // // // // // //                 Create Your First SubDomain\n// // // // // // //               </button>\n// // // // // // //               <p className=\"help-text\">\n// // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // //               </p>\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         )}\n// // // // // // //       </div>\n\n// // // // // // //       {/* Add/Edit Modal */}\n// // // // // // //       {showAddModal && (\n// // // // // // //         <SubDomainModal\n// // // // // // //           subDomain={editingSubDomain}\n// // // // // // //           parent={selectedParent}\n// // // // // // //           domain={domain}\n// // // // // // //           onClose={() => {\n// // // // // // //             setShowAddModal(false);\n// // // // // // //             setEditingSubDomain(null);\n// // // // // // //             setSelectedParent(null);\n// // // // // // //           }}\n// // // // // // //           onSave={() => {\n// // // // // // //             setShowAddModal(false);\n// // // // // // //             setEditingSubDomain(null);\n// // // // // // //             setSelectedParent(null);\n// // // // // // //             fetchDomainAndSubDomains();\n// // // // // // //           }}\n// // // // // // //         />\n// // // // // // //       )}\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // // SubDomain Node Component\n// // // // // // // const SubDomainNode = ({ \n// // // // // // //   subDomain, \n// // // // // // //   level, \n// // // // // // //   isExpanded, \n// // // // // // //   onToggleExpanded, \n// // // // // // //   onEdit, \n// // // // // // //   onDelete, \n// // // // // // //   onAddChild,\n// // // // // // //   expandedNodes \n// // // // // // // }) => {\n// // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // //     title: subDomain.title,\n// // // // // // //     level,\n// // // // // // //     hasChildren,\n// // // // // // //     isLeaf,\n// // // // // // //     isExpanded,\n// // // // // // //     projectCount: subDomain.projectCount\n// // // // // // //   });\n\n// // // // // // //   return (\n// // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // //       <div className=\"node-content\">\n// // // // // // //         <div className=\"node-main\">\n// // // // // // //           {hasChildren ? (\n// // // // // // //             <button \n// // // // // // //               className=\"expand-button\"\n// // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // //             >\n// // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // //             </button>\n// // // // // // //           ) : (\n// // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // //           )}\n          \n// // // // // // //           <div className=\"node-icon\">\n// // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // //           </div>\n          \n// // // // // // //           <div className=\"node-info\">\n// // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // //             <div className=\"node-stats\">\n// // // // // // //               {hasChildren && (\n// // // // // // //                 <span className=\"stat-badge\">\n// // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // //                   {subDomain.projectCount} projects\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //               {isLeaf && (\n// // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // //                   Can have projects\n// // // // // // //                 </span>\n// // // // // // //               )}\n// // // // // // //             </div>\n// // // // // // //           </div>\n// // // // // // //         </div>\n        \n// // // // // // //         <div className=\"node-actions\">\n// // // // // // //           <button \n// // // // // // //             className=\"action-button add\" \n// // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // //           >\n// // // // // // //             <FiPlus />\n// // // // // // //           </button>\n// // // // // // //           <div className=\"action-menu\">\n// // // // // // //             <button \n// // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // //               title=\"More actions\"\n// // // // // // //             >\n// // // // // // //               <FiMoreVertical />\n// // // // // // //             </button>\n// // // // // // //             {showMenu && (\n// // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onEdit(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }}>\n// // // // // // //                   <FiEdit /> Edit\n// // // // // // //                 </button>\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onAddChild(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }}>\n// // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // //                 </button>\n// // // // // // //                 <button onClick={() => {\n// // // // // // //                   onDelete(subDomain);\n// // // // // // //                   setShowMenu(false);\n// // // // // // //                 }} className=\"danger\">\n// // // // // // //                   <FiTrash2 /> Delete\n// // // // // // //                 </button>\n// // // // // // //               </div>\n// // // // // // //             )}\n// // // // // // //           </div>\n// // // // // // //         </div>\n// // // // // // //       </div>\n      \n// // // // // // //       {/* Children */}\n// // // // // // //       {hasChildren && isExpanded && (\n// // // // // // //         <div className=\"node-children\">\n// // // // // // //           {subDomain.children.map((child) => (\n// // // // // // //             <SubDomainNode\n// // // // // // //               key={child.id}\n// // // // // // //               subDomain={child}\n// // // // // // //               level={level + 1}\n// // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // //               onEdit={onEdit}\n// // // // // // //               onDelete={onDelete}\n// // // // // // //               onAddChild={onAddChild}\n// // // // // // //               expandedNodes={expandedNodes}\n// // // // // // //             />\n// // // // // // //           ))}\n// // // // // // //         </div>\n// // // // // // //       )}\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // // SubDomain Modal Component - CORRECTED VERSION\n// // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // //   const [formData, setFormData] = useState({\n// // // // // // //     title: subDomain?.title || '',\n// // // // // // //     description: subDomain?.description || ''\n// // // // // // //   });\n// // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // //     isEditing: !!subDomain,\n// // // // // // //     parentTitle: parent?.title,\n// // // // // // //     domainTitle: domain?.title,\n// // // // // // //     formData\n// // // // // // //   });\n\n// // // // // // //   const handleSubmit = async (e) => {\n// // // // // // //     e.preventDefault();\n// // // // // // //     setLoading(true);\n\n// // // // // // //     try {\n// // // // // // //       const requestData = {\n// // // // // // //         title: formData.title.trim(),\n// // // // // // //         description: formData.description.trim(),\n// // // // // // //         domainId: domain.id,\n// // // // // // //         parentId: parent?.id || null\n// // // // // // //       };\n\n// // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // //       if (subDomain) {\n// // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // //       } else {\n// // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // //       }\n\n// // // // // // //       onSave();\n// // // // // // //     } catch (error) {\n// // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n      \n// // // // // // //       const errorMessage = error.response?.data?.message || \n// // // // // // //                           error.response?.data?.error || \n// // // // // // //                           'Failed to save sub-domain';\n// // // // // // //       toast.error(errorMessage);\n// // // // // // //     } finally {\n// // // // // // //       setLoading(false);\n// // // // // // //     }\n// // // // // // //   };\n\n// // // // // // //   const getModalTitle = () => {\n// // // // // // //     if (subDomain) {\n// // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // //     }\n// // // // // // //     if (parent) {\n// // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // //     }\n// // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // //   };\n\n// // // // // // //   const getLevel = () => {\n// // // // // // //     if (!parent) return 'Root Level';\n// // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // //   };\n\n// // // // // // //   return (\n// // // // // // //     <div className=\"modal-overlay\">\n// // // // // // //       <div className=\"modal\">\n// // // // // // //         <div className=\"modal-header\">\n// // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // //         </div>\n        \n// // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // //           <div className=\"form-group\">\n// // // // // // //             <label>SubDomain Title *</label>\n// // // // // // //             <input\n// // // // // // //               type=\"text\"\n// // // // // // //               value={formData.title}\n// // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // //               required\n// // // // // // //               minLength={3}\n// // // // // // //               maxLength={100}\n// // // // // // //             />\n// // // // // // //           </div>\n          \n// // // // // // //           <div className=\"form-group\">\n// // // // // // //             <label>Description (Optional)</label>\n// // // // // // //             <textarea\n// // // // // // //               value={formData.description}\n// // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // //               rows={3}\n// // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // //               maxLength={500}\n// // // // // // //             />\n// // // // // // //           </div>\n          \n// // // // // // //           <div className=\"modal-info\">\n// // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // //             {parent && (\n// // // // // // //               <>\n// // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // //               </>\n// // // // // // //             )}\n// // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // //           </div>\n          \n// // // // // // //           <div className=\"modal-actions\">\n// // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // //               Cancel\n// // // // // // //             </button>\n// // // // // // //             <button \n// // // // // // //               type=\"submit\" \n// // // // // // //               className=\"primary-button\" \n// // // // // // //               disabled={loading || !formData.title.trim()}\n// // // // // // //             >\n// // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // //             </button>\n// // // // // // //           </div>\n// // // // // // //         </form>\n// // // // // // //       </div>\n// // // // // // //     </div>\n// // // // // // //   );\n// // // // // // // };\n\n// // // // // // // export default SubDomainManagement;\n\n\n// // // // // // // // // src/components/domains/SubDomainManagement.js - FIXED VERSION\n// // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // import {\n// // // // // // // //   FiPlus,\n// // // // // // // //   FiEdit,\n// // // // // // // //   FiTrash2,\n// // // // // // // //   FiChevronDown,\n// // // // // // // //   FiChevronRight,\n// // // // // // // //   FiFolder,\n// // // // // // // //   FiFolderPlus,\n// // // // // // // //   FiFileText,\n// // // // // // // //   FiArrowLeft,\n// // // // // // // //   FiMoreVertical,\n// // // // // // // //   FiMove,\n// // // // // // // //   FiTarget\n// // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // const SubDomainManagement = () => {\n// // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // // //   const { domainId } = useParams();\n// // // // // // // //   const navigate = useNavigate();\n  \n// // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // //     domainId,\n// // // // // // // //     domain: domain?.title,\n// // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // //     loading,\n// // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // //   });\n\n// // // // // // // //   useEffect(() => {\n// // // // // // // //     if (domainId) {\n// // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // //     }\n// // // // // // // //   }, [domainId]);\n\n// // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // //     try {\n// // // // // // // //       setLoading(true);\n      \n// // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // // //       // First, let's try to get domain details\n// // // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // // // //       // Extract domain from response\n// // // // // // // //       let domainData = null;\n// // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // //       }\n      \n// // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // //       if (!domainData) {\n// // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // //         domainData = {\n// // // // // // // //           id: domainId,\n// // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // //           description: 'Loading domain details...',\n// // // // // // // //           projectCount: 0\n// // // // // // // //         };\n// // // // // // // //       }\n      \n// // // // // // // //       setDomain(domainData);\n      \n// // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // //       try {\n// // // // // // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // // // // // //         // Auto-expand first level\n// // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // //         }\n// // // // // // // //       } catch (hierarchyError) {\n// // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // //         setSubDomains([]);\n// // // // // // // //       }\n      \n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // // // //       // Create fallback domain\n// // // // // // // //       setDomain({\n// // // // // // // //         id: domainId,\n// // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // //         description: 'Error loading domain details',\n// // // // // // // //         projectCount: 0\n// // // // // // // //       });\n// // // // // // // //       setSubDomains([]);\n// // // // // // // //     } finally {\n// // // // // // // //       setLoading(false);\n// // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // // //     setSelectedParent(parent);\n// // // // // // // //     setEditingSubDomain(null);\n// // // // // // // //     setShowAddModal(true);\n    \n// // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // //       showAddModal: true, \n// // // // // // // //       selectedParent: parent?.title,\n// // // // // // // //       editingSubDomain: null \n// // // // // // // //     });\n// // // // // // // //   };\n\n// // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // // //     setSelectedParent(null);\n// // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // //     setShowAddModal(true);\n// // // // // // // //   };\n\n// // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // //     if (hasChildren) {\n// // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // //     }\n// // // // // // // //     if (hasProjects) {\n// // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // //     }\n    \n// // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // //       return;\n// // // // // // // //     }\n\n// // // // // // // //     try {\n// // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // //     } else {\n// // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // //     }\n// // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // //   };\n\n// // // // // // // //   if (loading) {\n// // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // // //     return (\n// // // // // // // //       <div className=\"loading-container\">\n// // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // //       </div>\n// // // // // // // //     );\n// // // // // // // //   }\n\n// // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // //   return (\n// // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // //       <div className=\"page-header\">\n// // // // // // // //         <div className=\"header-content\">\n// // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // //             <button \n// // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // //             >\n// // // // // // // //               <FiArrowLeft />\n// // // // // // // //               Domains\n// // // // // // // //             </button>\n// // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // //           </div>\n// // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // //         </div>\n// // // // // // // //         <div className=\"header-actions\">\n// // // // // // // //           <button \n// // // // // // // //             className=\"primary-button\" \n// // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // //           >\n// // // // // // // //             <FiPlus />\n// // // // // // // //             Add Root SubDomain\n// // // // // // // //           </button>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Quick Guide */}\n// // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"guide-step\">\n// // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Domain Info Card */}\n// // // // // // // //       {domain && (\n// // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // //             <FiFolder />\n// // // // // // // //           </div>\n// // // // // // // //           <div className=\"domain-details\">\n// // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // //             <p>{domain.description}</p>\n// // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // //               <span className=\"stat-item\">\n// // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // //               </span>\n// // // // // // // //               <span className=\"stat-item\">\n// // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // //               </span>\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       )}\n\n// // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // //         <div className=\"tree-header\">\n// // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // //             <span className=\"legend-item\">\n// // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // //               Has children\n// // // // // // // //             </span>\n// // // // // // // //             <span className=\"legend-item\">\n// // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // //               Leaf (can have projects)\n// // // // // // // //             </span>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n\n// // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // //               <SubDomainNode\n// // // // // // // //                 key={subDomain.id}\n// // // // // // // //                 subDomain={subDomain}\n// // // // // // // //                 level={0}\n// // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // //               />\n// // // // // // // //             ))}\n// // // // // // // //           </div>\n// // // // // // // //         ) : (\n// // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // //               <div className=\"example-tree\">\n// // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // //               </div>\n// // // // // // // //             </div>\n// // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // //               <button \n// // // // // // // //                 className=\"primary-button large\" \n// // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // //               >\n// // // // // // // //                 <FiPlus />\n// // // // // // // //                 Create Your First SubDomain\n// // // // // // // //               </button>\n// // // // // // // //               <p className=\"help-text\">\n// // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // //               </p>\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         )}\n// // // // // // // //       </div>\n\n// // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // //       {showAddModal && (\n// // // // // // // //         <SubDomainModal\n// // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // //           parent={selectedParent}\n// // // // // // // //           domain={domain}\n// // // // // // // //           onClose={() => {\n// // // // // // // //             setShowAddModal(false);\n// // // // // // // //             setEditingSubDomain(null);\n// // // // // // // //             setSelectedParent(null);\n// // // // // // // //           }}\n// // // // // // // //           onSave={() => {\n// // // // // // // //             setShowAddModal(false);\n// // // // // // // //             setEditingSubDomain(null);\n// // // // // // // //             setSelectedParent(null);\n// // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // //           }}\n// // // // // // // //         />\n// // // // // // // //       )}\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // // SubDomain Node Component\n// // // // // // // // const SubDomainNode = ({ \n// // // // // // // //   subDomain, \n// // // // // // // //   level, \n// // // // // // // //   isExpanded, \n// // // // // // // //   onToggleExpanded, \n// // // // // // // //   onEdit, \n// // // // // // // //   onDelete, \n// // // // // // // //   onAddChild,\n// // // // // // // //   expandedNodes \n// // // // // // // // }) => {\n// // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // //     title: subDomain.title,\n// // // // // // // //     level,\n// // // // // // // //     hasChildren,\n// // // // // // // //     isLeaf,\n// // // // // // // //     isExpanded,\n// // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // //   });\n\n// // // // // // // //   return (\n// // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // //       <div className=\"node-content\">\n// // // // // // // //         <div className=\"node-main\">\n// // // // // // // //           {hasChildren ? (\n// // // // // // // //             <button \n// // // // // // // //               className=\"expand-button\"\n// // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // //             >\n// // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // //             </button>\n// // // // // // // //           ) : (\n// // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // //           )}\n          \n// // // // // // // //           <div className=\"node-icon\">\n// // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // //           </div>\n          \n// // // // // // // //           <div className=\"node-info\">\n// // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // //             <div className=\"node-stats\">\n// // // // // // // //               {hasChildren && (\n// // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //               {isLeaf && (\n// // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // //                   Can have projects\n// // // // // // // //                 </span>\n// // // // // // // //               )}\n// // // // // // // //             </div>\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n        \n// // // // // // // //         <div className=\"node-actions\">\n// // // // // // // //           <button \n// // // // // // // //             className=\"action-button add\" \n// // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // //           >\n// // // // // // // //             <FiPlus />\n// // // // // // // //           </button>\n// // // // // // // //           <div className=\"action-menu\">\n// // // // // // // //             <button \n// // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // //               title=\"More actions\"\n// // // // // // // //             >\n// // // // // // // //               <FiMoreVertical />\n// // // // // // // //             </button>\n// // // // // // // //             {showMenu && (\n// // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onEdit(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }}>\n// // // // // // // //                   <FiEdit /> Edit\n// // // // // // // //                 </button>\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onAddChild(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }}>\n// // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // //                 </button>\n// // // // // // // //                 <button onClick={() => {\n// // // // // // // //                   onDelete(subDomain);\n// // // // // // // //                   setShowMenu(false);\n// // // // // // // //                 }} className=\"danger\">\n// // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // //                 </button>\n// // // // // // // //               </div>\n// // // // // // // //             )}\n// // // // // // // //           </div>\n// // // // // // // //         </div>\n// // // // // // // //       </div>\n      \n// // // // // // // //       {/* Children */}\n// // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // //         <div className=\"node-children\">\n// // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // //             <SubDomainNode\n// // // // // // // //               key={child.id}\n// // // // // // // //               subDomain={child}\n// // // // // // // //               level={level + 1}\n// // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // //               onEdit={onEdit}\n// // // // // // // //               onDelete={onDelete}\n// // // // // // // //               onAddChild={onAddChild}\n// // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // //             />\n// // // // // // // //           ))}\n// // // // // // // //         </div>\n// // // // // // // //       )}\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // // SubDomain Modal Component - FIXED VERSION\n// // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // //     title: subDomain?.title || '',\n// // // // // // // //     description: subDomain?.description || ''\n// // // // // // // //   });\n// // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // //     isEditing: !!subDomain,\n// // // // // // // //     parentTitle: parent?.title,\n// // // // // // // //     domainTitle: domain?.title,\n// // // // // // // //     formData\n// // // // // // // //   });\n\n// // // // // // // //   // Enhanced slug generation with better validation\n// // // // // // // //   const generateSlug = (title) => {\n// // // // // // // //     if (!title || title.trim() === '') {\n// // // // // // // //       return '';\n// // // // // // // //     }\n    \n// // // // // // // //     let slug = title\n// // // // // // // //       .toLowerCase()\n// // // // // // // //       .trim()\n// // // // // // // //       .replace(/[^a-z0-9\\s-]/g, '') // Remove special chars except spaces and hyphens\n// // // // // // // //       .replace(/\\s+/g, '-')         // Replace spaces with hyphens\n// // // // // // // //       .replace(/-+/g, '-')          // Remove consecutive hyphens\n// // // // // // // //       .replace(/^-|-$/g, '');       // Remove leading/trailing hyphens\n    \n// // // // // // // //     // Ensure minimum length - if too short, add timestamp\n// // // // // // // //     if (slug.length < 3) {\n// // // // // // // //       slug = slug + '-' + Date.now().toString().slice(-4);\n// // // // // // // //     }\n    \n// // // // // // // //     // Ensure maximum length\n// // // // // // // //     if (slug.length > 50) {\n// // // // // // // //       slug = slug.substring(0, 50).replace(/-$/, '');\n// // // // // // // //     }\n    \n// // // // // // // //     return slug;\n// // // // // // // //   };\n\n// // // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // //     e.preventDefault();\n// // // // // // // //     setLoading(true);\n\n// // // // // // // //     try {\n// // // // // // // //       // Generate slug from title\n// // // // // // // //       const slug = generateSlug(formData.title);\n      \n// // // // // // // //       // Validate slug\n// // // // // // // //       if (!slug || slug.length < 3) {\n// // // // // // // //         toast.error('Title must generate a valid slug (at least 3 characters)');\n// // // // // // // //         setLoading(false);\n// // // // // // // //         return;\n// // // // // // // //       }\n\n// // // // // // // //       const requestData = {\n// // // // // // // //         title: formData.title.trim(),\n// // // // // // // //         description: formData.description.trim(),\n       \n// // // // // // // //         domainId: domain.id,\n// // // // // // // //         parentId: parent?.id || null\n// // // // // // // //       };\n\n// // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // //       console.log('üîç SUBDOMAIN SAVE - Generated slug:', slug, 'Length:', slug.length);\n// // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // //       if (subDomain) {\n// // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // //       } else {\n// // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // //       }\n\n// // // // // // // //       onSave();\n// // // // // // // //     } catch (error) {\n// // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n      \n// // // // // // // //       // Better error handling\n// // // // // // // //       const errorMessage = error.response?.data?.message || \n// // // // // // // //                           error.response?.data?.error || \n// // // // // // // //                           'Failed to save sub-domain';\n// // // // // // // //       toast.error(errorMessage);\n// // // // // // // //     } finally {\n// // // // // // // //       setLoading(false);\n// // // // // // // //     }\n// // // // // // // //   };\n\n// // // // // // // //   const getModalTitle = () => {\n// // // // // // // //     if (subDomain) {\n// // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // //     }\n// // // // // // // //     if (parent) {\n// // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // //     }\n// // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // //   };\n\n// // // // // // // //   const getLevel = () => {\n// // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // //     // This is a simplified level calculation\n// // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // //   };\n\n// // // // // // // //   return (\n// // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // //       <div className=\"modal\">\n// // // // // // // //         <div className=\"modal-header\">\n// // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // //         </div>\n        \n// // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // //           <div className=\"form-group\">\n// // // // // // // //             <label>SubDomain Title *</label>\n// // // // // // // //             <input\n// // // // // // // //               type=\"text\"\n// // // // // // // //               value={formData.title}\n// // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // //               required\n// // // // // // // //               minLength={3}\n// // // // // // // //               maxLength={100}\n// // // // // // // //             />\n// // // // // // // //             {formData.title && (\n// // // // // // // //               <div className=\"slug-preview\">\n// // // // // // // //                 <small>\n// // // // // // // //                   URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code>\n// // // // // // // //                   {slugPreview && slugPreview.length < 3 && (\n// // // // // // // //                     <span style={{color: 'red'}}> (Too short - needs at least 3 chars)</span>\n// // // // // // // //                   )}\n// // // // // // // //                 </small>\n// // // // // // // //               </div>\n// // // // // // // //             )}\n// // // // // // // //           </div>\n          \n// // // // // // // //           <div className=\"form-group\">\n// // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // //             <textarea\n// // // // // // // //               value={formData.description}\n// // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // //               rows={3}\n// // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // //               maxLength={500}\n// // // // // // // //             />\n// // // // // // // //           </div>\n          \n// // // // // // // //           <div className=\"modal-info\">\n// // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // //             {parent && (\n// // // // // // // //               <>\n// // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // //               </>\n// // // // // // // //             )}\n// // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // //           </div>\n          \n// // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // //               Cancel\n// // // // // // // //             </button>\n// // // // // // // //             <button \n// // // // // // // //               type=\"submit\" \n// // // // // // // //               className=\"primary-button\" \n// // // // // // // //               disabled={loading || !formData.title.trim() || slugPreview.length < 3}\n// // // // // // // //             >\n// // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // //             </button>\n// // // // // // // //           </div>\n// // // // // // // //         </form>\n// // // // // // // //       </div>\n// // // // // // // //     </div>\n// // // // // // // //   );\n// // // // // // // // };\n\n// // // // // // // // export default SubDomainManagement;\n\n\n// // // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // import {\n// // // // // // // // //   FiPlus,\n// // // // // // // // //   FiEdit,\n// // // // // // // // //   FiTrash2,\n// // // // // // // // //   FiChevronDown,\n// // // // // // // // //   FiChevronRight,\n// // // // // // // // //   FiFolder,\n// // // // // // // // //   FiFolderPlus,\n// // // // // // // // //   FiFileText,\n// // // // // // // // //   FiArrowLeft,\n// // // // // // // // //   FiMoreVertical,\n// // // // // // // // //   FiMove,\n// // // // // // // // //   FiTarget\n// // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // //   const navigate = useNavigate();\n  \n// // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // //     domainId,\n// // // // // // // // //     domain: domain?.title,\n// // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // //     loading,\n// // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // //   });\n\n// // // // // // // // //   useEffect(() => {\n// // // // // // // // //     if (domainId) {\n// // // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // //     }\n// // // // // // // // //   }, [domainId]);\n\n// // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // //     try {\n// // // // // // // // //       setLoading(true);\n      \n// // // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // // // //       // First, let's try to get domain details\n// // // // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // // // // //       // Extract domain from response\n// // // // // // // // //       let domainData = null;\n// // // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // // //       }\n      \n// // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // // //       if (!domainData) {\n// // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // // //         domainData = {\n// // // // // // // // //           id: domainId,\n// // // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // // //           description: 'Loading domain details...',\n// // // // // // // // //           projectCount: 0\n// // // // // // // // //         };\n// // // // // // // // //       }\n      \n// // // // // // // // //       setDomain(domainData);\n      \n// // // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // // //       try {\n// // // // // // // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // // // // // // //         // Auto-expand first level\n// // // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // //         }\n// // // // // // // // //       } catch (hierarchyError) {\n// // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // // //         setSubDomains([]);\n// // // // // // // // //       }\n      \n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // // // // //       // Create fallback domain\n// // // // // // // // //       setDomain({\n// // // // // // // // //         id: domainId,\n// // // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // // //         description: 'Error loading domain details',\n// // // // // // // // //         projectCount: 0\n// // // // // // // // //       });\n// // // // // // // // //       setSubDomains([]);\n// // // // // // // // //     } finally {\n// // // // // // // // //       setLoading(false);\n// // // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // //     setShowAddModal(true);\n    \n// // // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // //       showAddModal: true, \n// // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // //       editingSubDomain: null \n// // // // // // // // //     });\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // // // //     setSelectedParent(null);\n// // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // //     setShowAddModal(true);\n// // // // // // // // //   };\n\n// // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // //     if (hasChildren) {\n// // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // //     }\n// // // // // // // // //     if (hasProjects) {\n// // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // //     }\n    \n// // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // //       return;\n// // // // // // // // //     }\n\n// // // // // // // // //     try {\n// // // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // //     } else {\n// // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // //     }\n// // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // //   };\n\n// // // // // // // // //   if (loading) {\n// // // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // // // //     return (\n// // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // //       </div>\n// // // // // // // // //     );\n// // // // // // // // //   }\n\n// // // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // //             <button \n// // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // //             >\n// // // // // // // // //               <FiArrowLeft />\n// // // // // // // // //               Domains\n// // // // // // // // //             </button>\n// // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // // //         </div>\n// // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // //           <button \n// // // // // // // // //             className=\"primary-button\" \n// // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // //           >\n// // // // // // // // //             <FiPlus />\n// // // // // // // // //             Add Root SubDomain\n// // // // // // // // //           </button>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // //       {domain && (\n// // // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // // //             <FiFolder />\n// // // // // // // // //           </div>\n// // // // // // // // //           <div className=\"domain-details\">\n// // // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // // //             <p>{domain.description}</p>\n// // // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // //               </span>\n// // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // //               </span>\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       )}\n\n// // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // //               Has children\n// // // // // // // // //             </span>\n// // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // //               Leaf (can have projects)\n// // // // // // // // //             </span>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n\n// // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // //               <SubDomainNode\n// // // // // // // // //                 key={subDomain.id}\n// // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // //                 level={0}\n// // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // //               />\n// // // // // // // // //             ))}\n// // // // // // // // //           </div>\n// // // // // // // // //         ) : (\n// // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // // //               </div>\n// // // // // // // // //             </div>\n// // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // //               <button \n// // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // //               >\n// // // // // // // // //                 <FiPlus />\n// // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // //               </button>\n// // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // //               </p>\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         )}\n// // // // // // // // //       </div>\n\n// // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // //       {showAddModal && (\n// // // // // // // // //         <SubDomainModal\n// // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // //           parent={selectedParent}\n// // // // // // // // //           domain={domain}\n// // // // // // // // //           onClose={() => {\n// // // // // // // // //             setShowAddModal(false);\n// // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // //             setSelectedParent(null);\n// // // // // // // // //           }}\n// // // // // // // // //           onSave={() => {\n// // // // // // // // //             setShowAddModal(false);\n// // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // //             setSelectedParent(null);\n// // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // //           }}\n// // // // // // // // //         />\n// // // // // // // // //       )}\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // // SubDomain Node Component\n// // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // //   subDomain, \n// // // // // // // // //   level, \n// // // // // // // // //   isExpanded, \n// // // // // // // // //   onToggleExpanded, \n// // // // // // // // //   onEdit, \n// // // // // // // // //   onDelete, \n// // // // // // // // //   onAddChild,\n// // // // // // // // //   expandedNodes \n// // // // // // // // // }) => {\n// // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // //     title: subDomain.title,\n// // // // // // // // //     level,\n// // // // // // // // //     hasChildren,\n// // // // // // // // //     isLeaf,\n// // // // // // // // //     isExpanded,\n// // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // //   });\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // //           {hasChildren ? (\n// // // // // // // // //             <button \n// // // // // // // // //               className=\"expand-button\"\n// // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // //             >\n// // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // //             </button>\n// // // // // // // // //           ) : (\n// // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // //           )}\n          \n// // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // //           </div>\n          \n// // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // //               {hasChildren && (\n// // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //               {isLeaf && (\n// // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // //                   Can have projects\n// // // // // // // // //                 </span>\n// // // // // // // // //               )}\n// // // // // // // // //             </div>\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n        \n// // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // //           <button \n// // // // // // // // //             className=\"action-button add\" \n// // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // //           >\n// // // // // // // // //             <FiPlus />\n// // // // // // // // //           </button>\n// // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // //             <button \n// // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // //               title=\"More actions\"\n// // // // // // // // //             >\n// // // // // // // // //               <FiMoreVertical />\n// // // // // // // // //             </button>\n// // // // // // // // //             {showMenu && (\n// // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onEdit(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }}>\n// // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // //                 </button>\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onAddChild(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }}>\n// // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // //                 </button>\n// // // // // // // // //                 <button onClick={() => {\n// // // // // // // // //                   onDelete(subDomain);\n// // // // // // // // //                   setShowMenu(false);\n// // // // // // // // //                 }} className=\"danger\">\n// // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // //                 </button>\n// // // // // // // // //               </div>\n// // // // // // // // //             )}\n// // // // // // // // //           </div>\n// // // // // // // // //         </div>\n// // // // // // // // //       </div>\n      \n// // // // // // // // //       {/* Children */}\n// // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // //             <SubDomainNode\n// // // // // // // // //               key={child.id}\n// // // // // // // // //               subDomain={child}\n// // // // // // // // //               level={level + 1}\n// // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // //               onEdit={onEdit}\n// // // // // // // // //               onDelete={onDelete}\n// // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // //             />\n// // // // // // // // //           ))}\n// // // // // // // // //         </div>\n// // // // // // // // //       )}\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // //   });\n// // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // //     formData\n// // // // // // // // //   });\n\n// // // // // // // // //   // Generate slug preview\n// // // // // // // // //   const generateSlug = (title) => {\n// // // // // // // // //     return title\n// // // // // // // // //       .toLowerCase()\n// // // // // // // // //       .replace(/[^a-z0-9]/g, '-')\n// // // // // // // // //       .replace(/-+/g, '-')\n// // // // // // // // //       .replace(/^-|-$/g, '');\n// // // // // // // // //   };\n\n// // // // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // //     e.preventDefault();\n// // // // // // // // //     setLoading(true);\n\n// // // // // // // // //     try {\n// // // // // // // // //       // Generate slug from title\n// // // // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // // // //       const requestData = {\n// // // // // // // // //         ...formData,\n// // // // // // // // //         // slug: slug,\n// // // // // // // // //         domainId: domain.id,\n// // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // //       };\n\n// // // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Generated slug:', slug);\n// // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // //       if (subDomain) {\n// // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // //       } else {\n// // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // //       }\n\n// // // // // // // // //       onSave();\n// // // // // // // // //     } catch (error) {\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // //     } finally {\n// // // // // // // // //       setLoading(false);\n// // // // // // // // //     }\n// // // // // // // // //   };\n\n// // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // //     if (subDomain) {\n// // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // //     }\n// // // // // // // // //     if (parent) {\n// // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // //     }\n// // // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // // //   };\n\n// // // // // // // // //   const getLevel = () => {\n// // // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // // //     // This is a simplified level calculation\n// // // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // // //   };\n\n// // // // // // // // //   return (\n// // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // //       <div className=\"modal\">\n// // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // // //         </div>\n        \n// // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // //             <input\n// // // // // // // // //               type=\"text\"\n// // // // // // // // //               value={formData.title}\n// // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // //               required\n// // // // // // // // //             />\n// // // // // // // // //             {formData.title && (\n// // // // // // // // //               <div className=\"slug-preview\">\n// // // // // // // // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // // // // // // // //               </div>\n// // // // // // // // //             )}\n// // // // // // // // //           </div>\n          \n// // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // //             <textarea\n// // // // // // // // //               value={formData.description}\n// // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // //               rows={3}\n// // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // //             />\n// // // // // // // // //           </div>\n          \n// // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // // //             {parent && (\n// // // // // // // // //               <>\n// // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // //               </>\n// // // // // // // // //             )}\n// // // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // // //           </div>\n          \n// // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // //               Cancel\n// // // // // // // // //             </button>\n// // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // //             </button>\n// // // // // // // // //           </div>\n// // // // // // // // //         </form>\n// // // // // // // // //       </div>\n// // // // // // // // //     </div>\n// // // // // // // // //   );\n// // // // // // // // // };\n\n// // // // // // // // // export default SubDomainManagement;\n\n\n\n// // // // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // // import {\n// // // // // // // // // //   FiPlus,\n// // // // // // // // // //   FiEdit,\n// // // // // // // // // //   FiTrash2,\n// // // // // // // // // //   FiChevronDown,\n// // // // // // // // // //   FiChevronRight,\n// // // // // // // // // //   FiFolder,\n// // // // // // // // // //   FiFolderPlus,\n// // // // // // // // // //   FiFileText,\n// // // // // // // // // //   FiArrowLeft,\n// // // // // // // // // //   FiMoreVertical,\n// // // // // // // // // //   FiMove,\n// // // // // // // // // //   FiTarget\n// // // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // // //   const navigate = useNavigate();\n  \n// // // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // // //     domainId,\n// // // // // // // // // //     domain: domain?.title,\n// // // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // // //     loading,\n// // // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // // //   });\n\n// // // // // // // // // //   useEffect(() => {\n// // // // // // // // // //     if (domainId) {\n// // // // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // //     }\n// // // // // // // // // //   }, [domainId]);\n\n// // // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // // //     try {\n// // // // // // // // // //       setLoading(true);\n      \n// // // // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // // // // //       // First, let's try to get domain details\n// // // // // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // // // // // //       // Extract domain from response\n// // // // // // // // // //       let domainData = null;\n// // // // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // // // //       }\n      \n// // // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // // // //       if (!domainData) {\n// // // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // // // //         domainData = {\n// // // // // // // // // //           id: domainId,\n// // // // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // // // //           description: 'Loading domain details...',\n// // // // // // // // // //           projectCount: 0\n// // // // // // // // // //         };\n// // // // // // // // // //       }\n      \n// // // // // // // // // //       setDomain(domainData);\n      \n// // // // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // // // //       try {\n// // // // // // // // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // // // // // // // //         // Auto-expand first level\n// // // // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // // //         }\n// // // // // // // // // //       } catch (hierarchyError) {\n// // // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // // // //         setSubDomains([]);\n// // // // // // // // // //       }\n      \n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // // // // // //       // Create fallback domain\n// // // // // // // // // //       setDomain({\n// // // // // // // // // //         id: domainId,\n// // // // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // // // //         description: 'Error loading domain details',\n// // // // // // // // // //         projectCount: 0\n// // // // // // // // // //       });\n// // // // // // // // // //       setSubDomains([]);\n// // // // // // // // // //     } finally {\n// // // // // // // // // //       setLoading(false);\n// // // // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // // //     setShowAddModal(true);\n    \n// // // // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // // //       showAddModal: true, \n// // // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // // //       editingSubDomain: null \n// // // // // // // // // //     });\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // // // // //     setSelectedParent(null);\n// // // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // // //     setShowAddModal(true);\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // // //     if (hasChildren) {\n// // // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // // //     }\n// // // // // // // // // //     if (hasProjects) {\n// // // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // // //     }\n    \n// // // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // // //       return;\n// // // // // // // // // //     }\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // // //     } else {\n// // // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // // //     }\n// // // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // // //   };\n\n// // // // // // // // // //   if (loading) {\n// // // // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // // // // //     return (\n// // // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     );\n// // // // // // // // // //   }\n\n// // // // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // // //             <button \n// // // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // // //             >\n// // // // // // // // // //               <FiArrowLeft />\n// // // // // // // // // //               Domains\n// // // // // // // // // //             </button>\n// // // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // // // //         </div>\n// // // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // // //           <button \n// // // // // // // // // //             className=\"primary-button\" \n// // // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // // //           >\n// // // // // // // // // //             <FiPlus />\n// // // // // // // // // //             Add Root SubDomain\n// // // // // // // // // //           </button>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // // //       {domain && (\n// // // // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // // // //             <FiFolder />\n// // // // // // // // // //           </div>\n// // // // // // // // // //           <div className=\"domain-details\">\n// // // // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // // // //             <p>{domain.description}</p>\n// // // // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // // //               </span>\n// // // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // // //               </span>\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       )}\n\n// // // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // // //               Has children\n// // // // // // // // // //             </span>\n// // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // // //               Leaf (can have projects)\n// // // // // // // // // //             </span>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n\n// // // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // // //               <SubDomainNode\n// // // // // // // // // //                 key={subDomain.id}\n// // // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // // //                 level={0}\n// // // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // // //               />\n// // // // // // // // // //             ))}\n// // // // // // // // // //           </div>\n// // // // // // // // // //         ) : (\n// // // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             </div>\n// // // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // // //               <button \n// // // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // // //               >\n// // // // // // // // // //                 <FiPlus />\n// // // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // // //               </button>\n// // // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // // //               </p>\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         )}\n// // // // // // // // // //       </div>\n\n// // // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // // //       {showAddModal && (\n// // // // // // // // // //         <SubDomainModal\n// // // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // // //           parent={selectedParent}\n// // // // // // // // // //           domain={domain}\n// // // // // // // // // //           onClose={() => {\n// // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // //           }}\n// // // // // // // // // //           onSave={() => {\n// // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // // //           }}\n// // // // // // // // // //         />\n// // // // // // // // // //       )}\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // SubDomain Node Component\n// // // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // // //   subDomain, \n// // // // // // // // // //   level, \n// // // // // // // // // //   isExpanded, \n// // // // // // // // // //   onToggleExpanded, \n// // // // // // // // // //   onEdit, \n// // // // // // // // // //   onDelete, \n// // // // // // // // // //   onAddChild,\n// // // // // // // // // //   expandedNodes \n// // // // // // // // // // }) => {\n// // // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // // //     title: subDomain.title,\n// // // // // // // // // //     level,\n// // // // // // // // // //     hasChildren,\n// // // // // // // // // //     isLeaf,\n// // // // // // // // // //     isExpanded,\n// // // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // // //   });\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // // //           {hasChildren ? (\n// // // // // // // // // //             <button \n// // // // // // // // // //               className=\"expand-button\"\n// // // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // // //             >\n// // // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // // //             </button>\n// // // // // // // // // //           ) : (\n// // // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // // //           )}\n          \n// // // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // // //           </div>\n          \n// // // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // // //               {hasChildren && (\n// // // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //               {isLeaf && (\n// // // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // // //                   Can have projects\n// // // // // // // // // //                 </span>\n// // // // // // // // // //               )}\n// // // // // // // // // //             </div>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n        \n// // // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // // //           <button \n// // // // // // // // // //             className=\"action-button add\" \n// // // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // // //           >\n// // // // // // // // // //             <FiPlus />\n// // // // // // // // // //           </button>\n// // // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // // //             <button \n// // // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // // //               title=\"More actions\"\n// // // // // // // // // //             >\n// // // // // // // // // //               <FiMoreVertical />\n// // // // // // // // // //             </button>\n// // // // // // // // // //             {showMenu && (\n// // // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // //                   onEdit(subDomain);\n// // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // //                 }}>\n// // // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // // //                 </button>\n// // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // //                   onAddChild(subDomain);\n// // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // //                 }}>\n// // // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // // //                 </button>\n// // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // //                   onDelete(subDomain);\n// // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // //                 }} className=\"danger\">\n// // // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // // //                 </button>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             )}\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </div>\n// // // // // // // // // //       </div>\n      \n// // // // // // // // // //       {/* Children */}\n// // // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // // //             <SubDomainNode\n// // // // // // // // // //               key={child.id}\n// // // // // // // // // //               subDomain={child}\n// // // // // // // // // //               level={level + 1}\n// // // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // // //               onEdit={onEdit}\n// // // // // // // // // //               onDelete={onDelete}\n// // // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // // //             />\n// // // // // // // // // //           ))}\n// // // // // // // // // //         </div>\n// // // // // // // // // //       )}\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // // //   });\n// // // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // // //     formData\n// // // // // // // // // //   });\n\n// // // // // // // // // //   // Generate slug preview\n// // // // // // // // // //   const generateSlug = (title) => {\n// // // // // // // // // //     return title\n// // // // // // // // // //       .toLowerCase()\n// // // // // // // // // //       .replace(/[^a-z0-9]/g, '-')\n// // // // // // // // // //       .replace(/-+/g, '-')\n// // // // // // // // // //       .replace(/^-|-$/g, '');\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const slugPreview = generateSlug(formData.title);\n\n// // // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // // //     e.preventDefault();\n// // // // // // // // // //     setLoading(true);\n\n// // // // // // // // // //     try {\n// // // // // // // // // //       // Generate slug from title\n// // // // // // // // // //       const slug = generateSlug(formData.title);\n\n// // // // // // // // // //       const requestData = {\n// // // // // // // // // //         ...formData,\n// // // // // // // // // //         slug: slug,\n// // // // // // // // // //         domainId: domain.id,\n// // // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // // //       };\n\n// // // // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Generated slug:', slug);\n// // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // // //       if (subDomain) {\n// // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // // //       } else {\n// // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // // //       }\n\n// // // // // // // // // //       onSave();\n// // // // // // // // // //     } catch (error) {\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // // //     } finally {\n// // // // // // // // // //       setLoading(false);\n// // // // // // // // // //     }\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // // //     if (subDomain) {\n// // // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // // //     }\n// // // // // // // // // //     if (parent) {\n// // // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // // //     }\n// // // // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   const getLevel = () => {\n// // // // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // // // //     // This is a simplified level calculation\n// // // // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // // // //   };\n\n// // // // // // // // // //   return (\n// // // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // // //       <div className=\"modal\">\n// // // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // // // //         </div>\n        \n// // // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // // //             <input\n// // // // // // // // // //               type=\"text\"\n// // // // // // // // // //               value={formData.title}\n// // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // // //               required\n// // // // // // // // // //             />\n// // // // // // // // // //             {formData.title && (\n// // // // // // // // // //               <div className=\"slug-preview\">\n// // // // // // // // // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // // // // // // // // //               </div>\n// // // // // // // // // //             )}\n// // // // // // // // // //           </div>\n          \n// // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // // //             <textarea\n// // // // // // // // // //               value={formData.description}\n// // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // // //               rows={3}\n// // // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // // //             />\n// // // // // // // // // //           </div>\n          \n// // // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // // // //             {parent && (\n// // // // // // // // // //               <>\n// // // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // // //               </>\n// // // // // // // // // //             )}\n// // // // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // // // //           </div>\n          \n// // // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // // //               Cancel\n// // // // // // // // // //             </button>\n// // // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // // //             </button>\n// // // // // // // // // //           </div>\n// // // // // // // // // //         </form>\n// // // // // // // // // //       </div>\n// // // // // // // // // //     </div>\n// // // // // // // // // //   );\n// // // // // // // // // // };\n\n// // // // // // // // // // export default SubDomainManagement;\n\n\n// // // // // // // // // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // // // import {\n// // // // // // // // // // //   FiPlus,\n// // // // // // // // // // //   FiEdit,\n// // // // // // // // // // //   FiTrash2,\n// // // // // // // // // // //   FiChevronDown,\n// // // // // // // // // // //   FiChevronRight,\n// // // // // // // // // // //   FiFolder,\n// // // // // // // // // // //   FiFolderPlus,\n// // // // // // // // // // //   FiFileText,\n// // // // // // // // // // //   FiArrowLeft,\n// // // // // // // // // // //   FiMoreVertical,\n// // // // // // // // // // //   FiMove,\n// // // // // // // // // // //   FiTarget\n// // // // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // // // //   const navigate = useNavigate();\n  \n// // // // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // // // //     domainId,\n// // // // // // // // // // //     domain: domain?.title,\n// // // // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // // // //     loading,\n// // // // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // // // //   });\n\n// // // // // // // // // // //   useEffect(() => {\n// // // // // // // // // // //     if (domainId) {\n// // // // // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // // //     }\n// // // // // // // // // // //   }, [domainId]);\n\n// // // // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // // // //     try {\n// // // // // // // // // // //       setLoading(true);\n      \n// // // // // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // // // // // //       // First, let's try to get domain details\n// // // // // // // // // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // // // // // // // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // // // // // // // // //       // Extract domain from response\n// // // // // // // // // // //       let domainData = null;\n// // // // // // // // // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // // // // // // // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // // // // // // // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // // // // // // // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // // // // // // // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // // // // // // // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // // // // // // // // //       }\n      \n// // // // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // // // // // // // // //       // If we don't have domain data, create a placeholder\n// // // // // // // // // // //       if (!domainData) {\n// // // // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // // // // // // // // //         domainData = {\n// // // // // // // // // // //           id: domainId,\n// // // // // // // // // // //           title: `Domain ${domainId}`,\n// // // // // // // // // // //           description: 'Loading domain details...',\n// // // // // // // // // // //           projectCount: 0\n// // // // // // // // // // //         };\n// // // // // // // // // // //       }\n      \n// // // // // // // // // // //       setDomain(domainData);\n      \n// // // // // // // // // // //       // Try to get hierarchy if domain exists\n// // // // // // // // // // //       try {\n// // // // // // // // // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // // // // // // // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // // // // // // // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // // // // // // // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // // // // // // // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // // // // // // // // //         // Auto-expand first level\n// // // // // // // // // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // // // //         }\n// // // // // // // // // // //       } catch (hierarchyError) {\n// // // // // // // // // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // // // // // // // // //         setSubDomains([]);\n// // // // // // // // // // //       }\n      \n// // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // // // //       toast.error('Failed to fetch domain information');\n      \n// // // // // // // // // // //       // Create fallback domain\n// // // // // // // // // // //       setDomain({\n// // // // // // // // // // //         id: domainId,\n// // // // // // // // // // //         title: `Domain ${domainId}`,\n// // // // // // // // // // //         description: 'Error loading domain details',\n// // // // // // // // // // //         projectCount: 0\n// // // // // // // // // // //       });\n// // // // // // // // // // //       setSubDomains([]);\n// // // // // // // // // // //     } finally {\n// // // // // // // // // // //       setLoading(false);\n// // // // // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // // // //     }\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // // // //     setShowAddModal(true);\n    \n// // // // // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // // // //       showAddModal: true, \n// // // // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // // // //       editingSubDomain: null \n// // // // // // // // // // //     });\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // // // // // //     setSelectedParent(null);\n// // // // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // // // //     setShowAddModal(true);\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // // // //     if (hasChildren) {\n// // // // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // // // //     }\n// // // // // // // // // // //     if (hasProjects) {\n// // // // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // // // //     }\n    \n// // // // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // // // //       return;\n// // // // // // // // // // //     }\n\n// // // // // // // // // // //     try {\n// // // // // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // // // //     }\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // // // //     } else {\n// // // // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // // // //     }\n// // // // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   if (loading) {\n// // // // // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // // // // // //     return (\n// // // // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // // // //       </div>\n// // // // // // // // // // //     );\n// // // // // // // // // // //   }\n\n// // // // // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // // // //   return (\n// // // // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // // // //             <button \n// // // // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // // // //             >\n// // // // // // // // // // //               <FiArrowLeft />\n// // // // // // // // // // //               Domains\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // // // //           <button \n// // // // // // // // // // //             className=\"primary-button\" \n// // // // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // // // //           >\n// // // // // // // // // // //             <FiPlus />\n// // // // // // // // // // //             Add Root SubDomain\n// // // // // // // // // // //           </button>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       </div>\n\n// // // // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       </div>\n\n// // // // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // // // //       {domain && (\n// // // // // // // // // // //         <div className=\"domain-info-card\">\n// // // // // // // // // // //           <div className=\"domain-icon\">\n// // // // // // // // // // //             <FiFolder />\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //           <div className=\"domain-details\">\n// // // // // // // // // // //             <h3>{domain.title}</h3>\n// // // // // // // // // // //             <p>{domain.description}</p>\n// // // // // // // // // // //             <div className=\"domain-stats\">\n// // // // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // // // //               </span>\n// // // // // // // // // // //               <span className=\"stat-item\">\n// // // // // // // // // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // // // //               </span>\n// // // // // // // // // // //             </div>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       )}\n\n// // // // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // // // //               Has children\n// // // // // // // // // // //             </span>\n// // // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // // // //               Leaf (can have projects)\n// // // // // // // // // // //             </span>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n\n// // // // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // // // //               <SubDomainNode\n// // // // // // // // // // //                 key={subDomain.id}\n// // // // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // // // //                 level={0}\n// // // // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // // // //               />\n// // // // // // // // // // //             ))}\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         ) : (\n// // // // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // // // // //               </div>\n// // // // // // // // // // //             </div>\n// // // // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // // // //               <button \n// // // // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // // // //               >\n// // // // // // // // // // //                 <FiPlus />\n// // // // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // // // //               </button>\n// // // // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // // // //               </p>\n// // // // // // // // // // //             </div>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         )}\n// // // // // // // // // // //       </div>\n\n// // // // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // // // //       {showAddModal && (\n// // // // // // // // // // //         <SubDomainModal\n// // // // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // // // //           parent={selectedParent}\n// // // // // // // // // // //           domain={domain}\n// // // // // // // // // // //           onClose={() => {\n// // // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // // //           }}\n// // // // // // // // // // //           onSave={() => {\n// // // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // // // //           }}\n// // // // // // // // // // //         />\n// // // // // // // // // // //       )}\n// // // // // // // // // // //     </div>\n// // // // // // // // // // //   );\n// // // // // // // // // // // };\n\n// // // // // // // // // // // // SubDomain Node Component\n// // // // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // // // //   subDomain, \n// // // // // // // // // // //   level, \n// // // // // // // // // // //   isExpanded, \n// // // // // // // // // // //   onToggleExpanded, \n// // // // // // // // // // //   onEdit, \n// // // // // // // // // // //   onDelete, \n// // // // // // // // // // //   onAddChild,\n// // // // // // // // // // //   expandedNodes \n// // // // // // // // // // // }) => {\n// // // // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // // // //     title: subDomain.title,\n// // // // // // // // // // //     level,\n// // // // // // // // // // //     hasChildren,\n// // // // // // // // // // //     isLeaf,\n// // // // // // // // // // //     isExpanded,\n// // // // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // // // //   });\n\n// // // // // // // // // // //   return (\n// // // // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // // // //           {hasChildren ? (\n// // // // // // // // // // //             <button \n// // // // // // // // // // //               className=\"expand-button\"\n// // // // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // // // //             >\n// // // // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //           ) : (\n// // // // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // // // //           )}\n          \n// // // // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // // // //           </div>\n          \n// // // // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // // // //               {hasChildren && (\n// // // // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // // // //                 </span>\n// // // // // // // // // // //               )}\n// // // // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // // // //                 </span>\n// // // // // // // // // // //               )}\n// // // // // // // // // // //               {isLeaf && (\n// // // // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // // // //                   Can have projects\n// // // // // // // // // // //                 </span>\n// // // // // // // // // // //               )}\n// // // // // // // // // // //             </div>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n        \n// // // // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // // // //           <button \n// // // // // // // // // // //             className=\"action-button add\" \n// // // // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // // // //           >\n// // // // // // // // // // //             <FiPlus />\n// // // // // // // // // // //           </button>\n// // // // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // // // //             <button \n// // // // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // // // //               title=\"More actions\"\n// // // // // // // // // // //             >\n// // // // // // // // // // //               <FiMoreVertical />\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //             {showMenu && (\n// // // // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // // //                   onEdit(subDomain);\n// // // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // // //                 }}>\n// // // // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // // // //                 </button>\n// // // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // // //                   onAddChild(subDomain);\n// // // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // // //                 }}>\n// // // // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // // // //                 </button>\n// // // // // // // // // // //                 <button onClick={() => {\n// // // // // // // // // // //                   onDelete(subDomain);\n// // // // // // // // // // //                   setShowMenu(false);\n// // // // // // // // // // //                 }} className=\"danger\">\n// // // // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // // // //                 </button>\n// // // // // // // // // // //               </div>\n// // // // // // // // // // //             )}\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       </div>\n      \n// // // // // // // // // // //       {/* Children */}\n// // // // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // // // //             <SubDomainNode\n// // // // // // // // // // //               key={child.id}\n// // // // // // // // // // //               subDomain={child}\n// // // // // // // // // // //               level={level + 1}\n// // // // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // // // //               onEdit={onEdit}\n// // // // // // // // // // //               onDelete={onDelete}\n// // // // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // // // //             />\n// // // // // // // // // // //           ))}\n// // // // // // // // // // //         </div>\n// // // // // // // // // // //       )}\n// // // // // // // // // // //     </div>\n// // // // // // // // // // //   );\n// // // // // // // // // // // };\n\n// // // // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // // // //   });\n// // // // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // // // //     formData\n// // // // // // // // // // //   });\n\n// // // // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // // // //     e.preventDefault();\n// // // // // // // // // // //     setLoading(true);\n\n// // // // // // // // // // //     try {\n// // // // // // // // // // //       const requestData = {\n// // // // // // // // // // //         ...formData,\n// // // // // // // // // // //         domainId: domain.id,\n// // // // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // // // //       };\n\n// // // // // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // // // //       if (subDomain) {\n// // // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // // // //       } else {\n// // // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // // // //       }\n\n// // // // // // // // // // //       onSave();\n// // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // // // //     } finally {\n// // // // // // // // // // //       setLoading(false);\n// // // // // // // // // // //     }\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // // // //     if (subDomain) {\n// // // // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // // // //     }\n// // // // // // // // // // //     if (parent) {\n// // // // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // // // //     }\n// // // // // // // // // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   const getLevel = () => {\n// // // // // // // // // // //     if (!parent) return 'Root Level';\n// // // // // // // // // // //     // This is a simplified level calculation\n// // // // // // // // // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // // // // // // // // //   };\n\n// // // // // // // // // // //   return (\n// // // // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // // // //       <div className=\"modal\">\n// // // // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // // // // //         </div>\n        \n// // // // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // // // //             <input\n// // // // // // // // // // //               type=\"text\"\n// // // // // // // // // // //               value={formData.title}\n// // // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // // // //               required\n// // // // // // // // // // //             />\n// // // // // // // // // // //           </div>\n          \n// // // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // // // //             <textarea\n// // // // // // // // // // //               value={formData.description}\n// // // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // // // //               rows={3}\n// // // // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // // // //             />\n// // // // // // // // // // //           </div>\n          \n// // // // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // // // // // // // // //             {parent && (\n// // // // // // // // // // //               <>\n// // // // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // // // //               </>\n// // // // // // // // // // //             )}\n// // // // // // // // // // //             <strong>Level:</strong> {getLevel()}\n// // // // // // // // // // //           </div>\n          \n// // // // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // // // //               Cancel\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // // // //             </button>\n// // // // // // // // // // //           </div>\n// // // // // // // // // // //         </form>\n// // // // // // // // // // //       </div>\n// // // // // // // // // // //     </div>\n// // // // // // // // // // //   );\n// // // // // // // // // // // };\n\n// // // // // // // // // // // export default SubDomainManagement;\n\n\n// // // // // // // // // // // // // src/components/domains/SubDomainManagement.js - NEW FILE\n// // // // // // // // // // // // import React, { useState, useEffect } from 'react';\n// // // // // // // // // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // // // // // // // // import { authService } from '../../services/authService';\n// // // // // // // // // // // // import { toast } from 'react-toastify';\n// // // // // // // // // // // // import {\n// // // // // // // // // // // //   FiPlus,\n// // // // // // // // // // // //   FiEdit,\n// // // // // // // // // // // //   FiTrash2,\n// // // // // // // // // // // //   FiChevronDown,\n// // // // // // // // // // // //   FiChevronRight,\n// // // // // // // // // // // //   FiFolder,\n// // // // // // // // // // // //   FiFolderPlus,\n// // // // // // // // // // // //   FiFileText,\n// // // // // // // // // // // //   FiArrowLeft,\n// // // // // // // // // // // //   FiMoreVertical,\n// // // // // // // // // // // //   FiMove,\n// // // // // // // // // // // //   FiTarget\n// // // // // // // // // // // // } from 'react-icons/fi';\n\n// // // // // // // // // // // // const SubDomainManagement = () => {\n// // // // // // // // // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // // // // // // // // //   const { domainId } = useParams();\n// // // // // // // // // // // //   const navigate = useNavigate();\n  \n// // // // // // // // // // // //   const [domain, setDomain] = useState(null);\n// // // // // // // // // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // // // // // // // // //   const [loading, setLoading] = useState(true);\n// // // // // // // // // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // // // // // // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // // // // // // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // // // // // // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // // // // // // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // // // // // // // // //     domainId,\n// // // // // // // // // // // //     domain: domain?.title,\n// // // // // // // // // // // //     subDomainsCount: subDomains.length,\n// // // // // // // // // // // //     loading,\n// // // // // // // // // // // //     selectedParent: selectedParent?.title,\n// // // // // // // // // // // //     expandedCount: expandedNodes.size\n// // // // // // // // // // // //   });\n\n// // // // // // // // // // // //   useEffect(() => {\n// // // // // // // // // // // //     if (domainId) {\n// // // // // // // // // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //   }, [domainId]);\n\n// // // // // // // // // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // // // // // // // // //     try {\n// // // // // // // // // // // //       setLoading(true);\n      \n// // // // // // // // // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // // // // // // // // //       // Fetch domain details and hierarchy\n// // // // // // // // // // // //       const [domainResponse, hierarchyResponse] = await Promise.all([\n// // // // // // // // // // // //         authService.getDomains({ id: domainId }),\n// // // // // // // // // // // //         authService.getDomainHierarchy(domainId)\n// // // // // // // // // // // //       ]);\n      \n// // // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domain response:', domainResponse.data);\n// // // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n      \n// // // // // // // // // // // //       const domainData = domainResponse.data?.domains?.[0] || \n// // // // // // // // // // // //                         domainResponse.data?.data?.domains?.[0] || \n// // // // // // // // // // // //                         domainResponse.data;\n      \n// // // // // // // // // // // //       const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n      \n// // // // // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n// // // // // // // // // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy:', hierarchyData);\n      \n// // // // // // // // // // // //       setDomain(domainData);\n// // // // // // // // // // // //       setSubDomains(hierarchyData?.subDomains || []);\n      \n// // // // // // // // // // // //       // Auto-expand first level\n// // // // // // // // // // // //       if (hierarchyData?.subDomains?.length > 0) {\n// // // // // // // // // // // //         const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // // // // // // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // // // // // // // // //         console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // // // // // // // // //       }\n      \n// // // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // // // // // // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // // // // // // // // //       toast.error('Failed to fetch sub-domains');\n// // // // // // // // // // // //     } finally {\n// // // // // // // // // // // //       setLoading(false);\n// // // // // // // // // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // // // // // // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // // // // // // // // //     setSelectedParent(parent);\n// // // // // // // // // // // //     setEditingSubDomain(null);\n// // // // // // // // // // // //     setShowAddModal(true);\n    \n// // // // // // // // // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // // // // // // // // //       showAddModal: true, \n// // // // // // // // // // // //       selectedParent: parent?.title,\n// // // // // // // // // // // //       editingSubDomain: null \n// // // // // // // // // // // //     });\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // // // // // // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // // // // // // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // // // // // // // // //     setSelectedParent(null);\n// // // // // // // // // // // //     setEditingSubDomain(subDomain);\n// // // // // // // // // // // //     setShowAddModal(true);\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // // // // // // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // // // // // // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // // // // // // // // //     if (hasChildren) {\n// // // // // // // // // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //     if (hasProjects) {\n// // // // // // // // // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // // // // // // // // //     }\n    \n// // // // // // // // // // // //     if (!window.confirm(confirmMessage)) {\n// // // // // // // // // // // //       return;\n// // // // // // // // // // // //     }\n\n// // // // // // // // // // // //     try {\n// // // // // // // // // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // // // // // // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // // // // // // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // // // // // // // // //       toast.success('Sub-domain deleted successfully');\n// // // // // // // // // // // //       fetchDomainAndSubDomains();\n// // // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // // // // // // // // //       toast.error('Failed to delete sub-domain');\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const toggleExpanded = (nodeId) => {\n// // // // // // // // // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // // // // // // // // //     const newExpanded = new Set(expandedNodes);\n// // // // // // // // // // // //     if (newExpanded.has(nodeId)) {\n// // // // // // // // // // // //       newExpanded.delete(nodeId);\n// // // // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // // // // // // // // //     } else {\n// // // // // // // // // // // //       newExpanded.add(nodeId);\n// // // // // // // // // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //     setExpandedNodes(newExpanded);\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const isLeafNode = (subDomain) => {\n// // // // // // // // // // // //     return !subDomain.children || subDomain.children.length === 0;\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const getNodeLevel = (subDomain, level = 0) => {\n// // // // // // // // // // // //     return level;\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   if (loading) {\n// // // // // // // // // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // // // // // // // // //     return (\n// // // // // // // // // // // //       <div className=\"loading-container\">\n// // // // // // // // // // // //         <div className=\"loading-spinner\"></div>\n// // // // // // // // // // // //         <p>Loading sub-domains...</p>\n// // // // // // // // // // // //       </div>\n// // // // // // // // // // // //     );\n// // // // // // // // // // // //   }\n\n// // // // // // // // // // // //   if (!domain) {\n// // // // // // // // // // // //     console.log('‚ùå SUBDOMAIN MANAGEMENT - Domain not found');\n    \n// // // // // // // // // // // //     return (\n// // // // // // // // // // // //       <div className=\"empty-state\">\n// // // // // // // // // // // //         <h3>Domain not found</h3>\n// // // // // // // // // // // //         <p>The requested domain could not be loaded.</p>\n// // // // // // // // // // // //         <button \n// // // // // // // // // // // //           className=\"primary-button\" \n// // // // // // // // // // // //           onClick={() => navigate('/domains')}\n// // // // // // // // // // // //         >\n// // // // // // // // // // // //           <FiArrowLeft />\n// // // // // // // // // // // //           Back to Domains\n// // // // // // // // // // // //         </button>\n// // // // // // // // // // // //       </div>\n// // // // // // // // // // // //     );\n// // // // // // // // // // // //   }\n\n// // // // // // // // // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // // // // // // // // //   return (\n// // // // // // // // // // // //     <div className=\"subdomain-management\">\n// // // // // // // // // // // //       {/* Header with Breadcrumb */}\n// // // // // // // // // // // //       <div className=\"page-header\">\n// // // // // // // // // // // //         <div className=\"header-content\">\n// // // // // // // // // // // //           <div className=\"breadcrumb\">\n// // // // // // // // // // // //             <button \n// // // // // // // // // // // //               className=\"breadcrumb-link\"\n// // // // // // // // // // // //               onClick={() => navigate('/domains')}\n// // // // // // // // // // // //             >\n// // // // // // // // // // // //               <FiArrowLeft />\n// // // // // // // // // // // //               Domains\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // // // // // // // // //             <span className=\"breadcrumb-current\">{domain.title}</span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //           <h1>SubDomain Management</h1>\n// // // // // // // // // // // //           <p>Manage the hierarchical structure of {domain.title}</p>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //         <div className=\"header-actions\">\n// // // // // // // // // // // //           <button \n// // // // // // // // // // // //             className=\"primary-button\" \n// // // // // // // // // // // //             onClick={() => handleAddSubDomain()}\n// // // // // // // // // // // //           >\n// // // // // // // // // // // //             <FiPlus />\n// // // // // // // // // // // //             Add Root SubDomain\n// // // // // // // // // // // //           </button>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* Quick Guide */}\n// // // // // // // // // // // //       <div className=\"quick-guide\">\n// // // // // // // // // // // //         <h3>How to Add SubDomains:</h3>\n// // // // // // // // // // // //         <div className=\"guide-steps\">\n// // // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // // //             <span className=\"step-number\">1</span>\n// // // // // // // // // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // // //             <span className=\"step-number\">2</span>\n// // // // // // // // // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //           <div className=\"guide-step\">\n// // // // // // // // // // // //             <span className=\"step-number\">3</span>\n// // // // // // // // // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* Domain Info Card */}\n// // // // // // // // // // // //       <div className=\"domain-info-card\">\n// // // // // // // // // // // //         <div className=\"domain-icon\">\n// // // // // // // // // // // //           <FiFolder />\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //         <div className=\"domain-details\">\n// // // // // // // // // // // //           <h3>{domain.title}</h3>\n// // // // // // // // // // // //           <p>{domain.description}</p>\n// // // // // // // // // // // //           <div className=\"domain-stats\">\n// // // // // // // // // // // //             <span className=\"stat-item\">\n// // // // // // // // // // // //               <strong>{subDomains.length}</strong> root sub-domains\n// // // // // // // // // // // //             </span>\n// // // // // // // // // // // //             <span className=\"stat-item\">\n// // // // // // // // // // // //               <strong>{domain.projectCount || 0}</strong> total projects\n// // // // // // // // // // // //             </span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* SubDomain Tree */}\n// // // // // // // // // // // //       <div className=\"subdomain-tree-container\">\n// // // // // // // // // // // //         <div className=\"tree-header\">\n// // // // // // // // // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // // // // // // // // //           <div className=\"tree-legend\">\n// // // // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // // // //               <FiFolder className=\"folder-icon\" />\n// // // // // // // // // // // //               Has children\n// // // // // // // // // // // //             </span>\n// // // // // // // // // // // //             <span className=\"legend-item\">\n// // // // // // // // // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // // // // // // // // //               Leaf (can have projects)\n// // // // // // // // // // // //             </span>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n\n// // // // // // // // // // // //         {subDomains.length > 0 ? (\n// // // // // // // // // // // //           <div className=\"subdomain-tree\">\n// // // // // // // // // // // //             {subDomains.map((subDomain) => (\n// // // // // // // // // // // //               <SubDomainNode\n// // // // // // // // // // // //                 key={subDomain.id}\n// // // // // // // // // // // //                 subDomain={subDomain}\n// // // // // // // // // // // //                 level={0}\n// // // // // // // // // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // // // // // // // // //                 onToggleExpanded={toggleExpanded}\n// // // // // // // // // // // //                 onEdit={handleEditSubDomain}\n// // // // // // // // // // // //                 onDelete={handleDeleteSubDomain}\n// // // // // // // // // // // //                 onAddChild={handleAddSubDomain}\n// // // // // // // // // // // //                 expandedNodes={expandedNodes}\n// // // // // // // // // // // //               />\n// // // // // // // // // // // //             ))}\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         ) : (\n// // // // // // // // // // // //           <div className=\"empty-tree-state\">\n// // // // // // // // // // // //             <FiFolderPlus size={64} />\n// // // // // // // // // // // //             <h3>No SubDomains Yet</h3>\n// // // // // // // // // // // //             <p>Start organizing your {domain.title} projects by creating subdomains</p>\n// // // // // // // // // // // //             <div className=\"empty-state-examples\">\n// // // // // // // // // // // //               <h4>Example Structure:</h4>\n// // // // // // // // // // // //               <div className=\"example-tree\">\n// // // // // // // // // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // // // // // // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // // // // // // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // // // // // // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // // // // // // // // //               </div>\n// // // // // // // // // // // //             </div>\n// // // // // // // // // // // //             <div className=\"empty-state-actions\">\n// // // // // // // // // // // //               <button \n// // // // // // // // // // // //                 className=\"primary-button large\" \n// // // // // // // // // // // //                 onClick={() => handleAddSubDomain()}\n// // // // // // // // // // // //               >\n// // // // // // // // // // // //                 <FiPlus />\n// // // // // // // // // // // //                 Create Your First SubDomain\n// // // // // // // // // // // //               </button>\n// // // // // // // // // // // //               <p className=\"help-text\">\n// // // // // // // // // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // // // // // // // // //               </p>\n// // // // // // // // // // // //             </div>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         )}\n// // // // // // // // // // // //       </div>\n\n// // // // // // // // // // // //       {/* Add/Edit Modal */}\n// // // // // // // // // // // //       {showAddModal && (\n// // // // // // // // // // // //         <SubDomainModal\n// // // // // // // // // // // //           subDomain={editingSubDomain}\n// // // // // // // // // // // //           parent={selectedParent}\n// // // // // // // // // // // //           domain={domain}\n// // // // // // // // // // // //           onClose={() => {\n// // // // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // // // //           }}\n// // // // // // // // // // // //           onSave={() => {\n// // // // // // // // // // // //             setShowAddModal(false);\n// // // // // // // // // // // //             setEditingSubDomain(null);\n// // // // // // // // // // // //             setSelectedParent(null);\n// // // // // // // // // // // //             fetchDomainAndSubDomains();\n// // // // // // // // // // // //           }}\n// // // // // // // // // // // //         />\n// // // // // // // // // // // //       )}\n// // // // // // // // // // // //     </div>\n// // // // // // // // // // // //   );\n// // // // // // // // // // // // };\n\n// // // // // // // // // // // // // SubDomain Node Component\n// // // // // // // // // // // // const SubDomainNode = ({ \n// // // // // // // // // // // //   subDomain, \n// // // // // // // // // // // //   level, \n// // // // // // // // // // // //   isExpanded, \n// // // // // // // // // // // //   onToggleExpanded, \n// // // // // // // // // // // //   onEdit, \n// // // // // // // // // // // //   onDelete, \n// // // // // // // // // // // //   onAddChild,\n// // // // // // // // // // // //   expandedNodes \n// // // // // // // // // // // // }) => {\n// // // // // // // // // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // // // // // // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // // // // // // // // //   const isLeaf = !hasChildren;\n\n// // // // // // // // // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // // // // // // // // //     title: subDomain.title,\n// // // // // // // // // // // //     level,\n// // // // // // // // // // // //     hasChildren,\n// // // // // // // // // // // //     isLeaf,\n// // // // // // // // // // // //     isExpanded,\n// // // // // // // // // // // //     projectCount: subDomain.projectCount\n// // // // // // // // // // // //   });\n\n// // // // // // // // // // // //   return (\n// // // // // // // // // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // // // // // // // // //       <div className=\"node-content\">\n// // // // // // // // // // // //         <div className=\"node-main\">\n// // // // // // // // // // // //           {hasChildren ? (\n// // // // // // // // // // // //             <button \n// // // // // // // // // // // //               className=\"expand-button\"\n// // // // // // // // // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // // // // // // // // //             >\n// // // // // // // // // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //           ) : (\n// // // // // // // // // // // //             <div className=\"expand-placeholder\" />\n// // // // // // // // // // // //           )}\n          \n// // // // // // // // // // // //           <div className=\"node-icon\">\n// // // // // // // // // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // // // // // // // // //           </div>\n          \n// // // // // // // // // // // //           <div className=\"node-info\">\n// // // // // // // // // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // // // // // // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // // // // // // // // //             <div className=\"node-stats\">\n// // // // // // // // // // // //               {hasChildren && (\n// // // // // // // // // // // //                 <span className=\"stat-badge\">\n// // // // // // // // // // // //                   {subDomain.children.length} sub-domains\n// // // // // // // // // // // //                 </span>\n// // // // // // // // // // // //               )}\n// // // // // // // // // // // //               {subDomain.projectCount > 0 && (\n// // // // // // // // // // // //                 <span className=\"stat-badge projects\">\n// // // // // // // // // // // //                   {subDomain.projectCount} projects\n// // // // // // // // // // // //                 </span>\n// // // // // // // // // // // //               )}\n// // // // // // // // // // // //               {isLeaf && (\n// // // // // // // // // // // //                 <span className=\"stat-badge leaf\">\n// // // // // // // // // // // //                   Can have projects\n// // // // // // // // // // // //                 </span>\n// // // // // // // // // // // //               )}\n// // // // // // // // // // // //             </div>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n        \n// // // // // // // // // // // //         <div className=\"node-actions\">\n// // // // // // // // // // // //           <button \n// // // // // // // // // // // //             className=\"action-button add\" \n// // // // // // // // // // // //             onClick={() => onAddChild(subDomain)}\n// // // // // // // // // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // // // // // // // // //           >\n// // // // // // // // // // // //             <FiPlus />\n// // // // // // // // // // // //           </button>\n// // // // // // // // // // // //           <div className=\"action-menu\">\n// // // // // // // // // // // //             <button \n// // // // // // // // // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // // // // // // // // //               title=\"More actions\"\n// // // // // // // // // // // //             >\n// // // // // // // // // // // //               <FiMoreVertical />\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //             {showMenu && (\n// // // // // // // // // // // //               <div className=\"dropdown-menu\">\n// // // // // // // // // // // //                 <button onClick={() => onEdit(subDomain)}>\n// // // // // // // // // // // //                   <FiEdit /> Edit\n// // // // // // // // // // // //                 </button>\n// // // // // // // // // // // //                 <button onClick={() => onAddChild(subDomain)}>\n// // // // // // // // // // // //                   <FiPlus /> Add Child SubDomain\n// // // // // // // // // // // //                 </button>\n// // // // // // // // // // // //                 <button onClick={() => onDelete(subDomain)} className=\"danger\">\n// // // // // // // // // // // //                   <FiTrash2 /> Delete\n// // // // // // // // // // // //                 </button>\n// // // // // // // // // // // //               </div>\n// // // // // // // // // // // //             )}\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       </div>\n      \n// // // // // // // // // // // //       {/* Children */}\n// // // // // // // // // // // //       {hasChildren && isExpanded && (\n// // // // // // // // // // // //         <div className=\"node-children\">\n// // // // // // // // // // // //           {subDomain.children.map((child) => (\n// // // // // // // // // // // //             <SubDomainNode\n// // // // // // // // // // // //               key={child.id}\n// // // // // // // // // // // //               subDomain={child}\n// // // // // // // // // // // //               level={level + 1}\n// // // // // // // // // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // // // // // // // // //               onToggleExpanded={onToggleExpanded}\n// // // // // // // // // // // //               onEdit={onEdit}\n// // // // // // // // // // // //               onDelete={onDelete}\n// // // // // // // // // // // //               onAddChild={onAddChild}\n// // // // // // // // // // // //               expandedNodes={expandedNodes}\n// // // // // // // // // // // //             />\n// // // // // // // // // // // //           ))}\n// // // // // // // // // // // //         </div>\n// // // // // // // // // // // //       )}\n// // // // // // // // // // // //     </div>\n// // // // // // // // // // // //   );\n// // // // // // // // // // // // };\n\n// // // // // // // // // // // // // SubDomain Modal Component\n// // // // // // // // // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // // // // // // // // //   const [formData, setFormData] = useState({\n// // // // // // // // // // // //     title: subDomain?.title || '',\n// // // // // // // // // // // //     description: subDomain?.description || ''\n// // // // // // // // // // // //   });\n// // // // // // // // // // // //   const [loading, setLoading] = useState(false);\n\n// // // // // // // // // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // // // // // // // // //     isEditing: !!subDomain,\n// // // // // // // // // // // //     parentTitle: parent?.title,\n// // // // // // // // // // // //     domainTitle: domain?.title,\n// // // // // // // // // // // //     formData\n// // // // // // // // // // // //   });\n\n// // // // // // // // // // // //   const handleSubmit = async (e) => {\n// // // // // // // // // // // //     e.preventDefault();\n// // // // // // // // // // // //     setLoading(true);\n\n// // // // // // // // // // // //     try {\n// // // // // // // // // // // //       const requestData = {\n// // // // // // // // // // // //         ...formData,\n// // // // // // // // // // // //         domainId: domain.id,\n// // // // // // // // // // // //         parentId: parent?.id || null\n// // // // // // // // // // // //       };\n\n// // // // // // // // // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // // // // // // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // // // // // // // // //       if (subDomain) {\n// // // // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // // // // // // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // // // // // // // // //         toast.success('Sub-domain updated successfully');\n// // // // // // // // // // // //       } else {\n// // // // // // // // // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // // // // // // // // //         const response = await authService.createSubDomain(requestData);\n// // // // // // // // // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // // // // // // // // //         toast.success('Sub-domain created successfully');\n// // // // // // // // // // // //       }\n\n// // // // // // // // // // // //       onSave();\n// // // // // // // // // // // //     } catch (error) {\n// // // // // // // // // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // // // // // // // // //       toast.error('Failed to save sub-domain');\n// // // // // // // // // // // //     } finally {\n// // // // // // // // // // // //       setLoading(false);\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   const getModalTitle = () => {\n// // // // // // // // // // // //     if (subDomain) {\n// // // // // // // // // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //     if (parent) {\n// // // // // // // // // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // // // // // // // // //     }\n// // // // // // // // // // // //     return `Add Root SubDomain in: ${domain.title}`;\n// // // // // // // // // // // //   };\n\n// // // // // // // // // // // //   return (\n// // // // // // // // // // // //     <div className=\"modal-overlay\">\n// // // // // // // // // // // //       <div className=\"modal\">\n// // // // // // // // // // // //         <div className=\"modal-header\">\n// // // // // // // // // // // //           <h2>{getModalTitle()}</h2>\n// // // // // // // // // // // //           <button onClick={onClose}>√ó</button>\n// // // // // // // // // // // //         </div>\n        \n// // // // // // // // // // // //         <form onSubmit={handleSubmit}>\n// // // // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // // // //             <label>SubDomain Title</label>\n// // // // // // // // // // // //             <input\n// // // // // // // // // // // //               type=\"text\"\n// // // // // // // // // // // //               value={formData.title}\n// // // // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // // // // // // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // // // // // // // // //               required\n// // // // // // // // // // // //             />\n// // // // // // // // // // // //           </div>\n          \n// // // // // // // // // // // //           <div className=\"form-group\">\n// // // // // // // // // // // //             <label>Description (Optional)</label>\n// // // // // // // // // // // //             <textarea\n// // // // // // // // // // // //               value={formData.description}\n// // // // // // // // // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // // // // // // // // //               rows={3}\n// // // // // // // // // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // // // // // // // // //             />\n// // // // // // // // // // // //           </div>\n          \n// // // // // // // // // // // //           <div className=\"modal-info\">\n// // // // // // // // // // // //             <strong>Domain:</strong> {domain.title}<br />\n// // // // // // // // // // // //             {parent && (\n// // // // // // // // // // // //               <>\n// // // // // // // // // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // // // // // // // // //               </>\n// // // // // // // // // // // //             )}\n// // // // // // // // // // // //             <strong>Level:</strong> {parent ? `Level ${getLevel(parent) + 1}` : 'Root Level'}\n// // // // // // // // // // // //           </div>\n          \n// // // // // // // // // // // //           <div className=\"modal-actions\">\n// // // // // // // // // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // // // // // // // // //               Cancel\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // // // // // // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // // // // // // // // //             </button>\n// // // // // // // // // // // //           </div>\n// // // // // // // // // // // //         </form>\n// // // // // // // // // // // //       </div>\n// // // // // // // // // // // //     </div>\n// // // // // // // // // // // //   );\n// // // // // // // // // // // // };\n\n// // // // // // // // // // // // // Helper function to get level\n// // // // // // // // // // // // const getLevel = (subDomain, level = 0) => {\n// // // // // // // // // // // //   // This would need to be calculated based on the hierarchy\n// // // // // // // // // // // //   return level + 1;\n// // // // // // // // // // // // };\n\n// // // // // // // // // // // // export default SubDomainManagement;"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SACEC,MAAM,EACNC,MAAM,EACNC,QAAQ,EACRC,aAAa,EACbC,cAAc,EACdC,QAAQ,EACRC,YAAY,EACZC,UAAU,EACVC,WAAW,EACXC,cAAc,EACdC,MAAM,EACNC,QAAQ,EACRC,KAAK,EACLC,MAAM,EACNC,SAAS,EACTC,MAAM,EACNC,GAAG,QACE,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChCC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;EAE3D,MAAM;IAAEC;EAAS,CAAC,GAAG7B,SAAS,CAAC,CAAC;EAChC,MAAM8B,QAAQ,GAAG7B,WAAW,CAAC,CAAC;EAE9B,MAAM,CAAC8B,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuC,YAAY,EAAEC,eAAe,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACyC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC2C,cAAc,EAAEC,iBAAiB,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,IAAI+C,GAAG,CAAC,CAAC,CAAC;;EAE7D;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACkD,2BAA2B,EAAEC,8BAA8B,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;;EAEpF;EACA,MAAM,CAACoD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsD,gCAAgC,EAAEC,mCAAmC,CAAC,GAAGvD,QAAQ,CAAC,IAAI,CAAC;EAC9F,MAAM,CAACwD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC0D,cAAc,EAAEC,iBAAiB,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC4D,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAAC8D,eAAe,EAAEC,kBAAkB,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EAE7D6B,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE;IACtDC,QAAQ;IACRE,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+B,KAAK;IACrBC,eAAe,EAAE9B,UAAU,CAAC+B,MAAM;IAClC7B,OAAO;IACPM,cAAc,EAAEA,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEqB,KAAK;IACrCG,aAAa,EAAEtB,aAAa,CAACuB,IAAI;IACjCpB,gBAAgB;IAChBE,2BAA2B,EAAEA,2BAA2B,aAA3BA,2BAA2B,uBAA3BA,2BAA2B,CAAEc,KAAK;IAC/D;IACAZ,iBAAiB;IACjBE,gCAAgC,EAAEA,gCAAgC,aAAhCA,gCAAgC,uBAAhCA,gCAAgC,CAAEU,KAAK;IACzEK,wBAAwB,EAAEb,mBAAmB,CAACU,MAAM;IACpDR,cAAc,EAAEA,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEM;EAClC,CAAC,CAAC;EAEF/D,SAAS,CAAC,MAAM;IACd,IAAI8B,QAAQ,EAAE;MACZF,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;MAC3EwC,wBAAwB,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACvC,QAAQ,CAAC,CAAC;EAEd,MAAMuC,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI;MAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;MACFtC,UAAU,CAAC,IAAI,CAAC;MAEhBT,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEC,QAAQ,CAAC;;MAE5E;MACA,MAAM8C,eAAe,GAAG,MAAMzE,WAAW,CAAC0E,UAAU,CAAC,CAAC;MACtDjD,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE+C,eAAe,CAACE,IAAI,CAAC;MAE1E,IAAIC,UAAU,GAAG,IAAI;MACrB,MAAMC,OAAO,GAAG,EAAAV,qBAAA,GAAAM,eAAe,CAACE,IAAI,cAAAR,qBAAA,uBAApBA,qBAAA,CAAsBU,OAAO,OAAAT,sBAAA,GAAIK,eAAe,CAACE,IAAI,cAAAP,sBAAA,wBAAAC,sBAAA,GAApBD,sBAAA,CAAsBO,IAAI,cAAAN,sBAAA,uBAA1BA,sBAAA,CAA4BQ,OAAO,KAAI,EAAE;MAC1F,IAAIA,OAAO,CAACf,MAAM,GAAG,CAAC,EAAE;QACtBc,UAAU,GAAGC,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,IAAIrD,QAAQ,CAAC;QAChDF,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEkD,UAAU,CAAC;MACpE;MAEA,IAAI,CAACA,UAAU,EAAE;QACfnD,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;QACvEkD,UAAU,GAAG;UACXI,EAAE,EAAErD,QAAQ;UACZiC,KAAK,EAAE,UAAUjC,QAAQ,EAAE;UAC3BsD,WAAW,EAAE,0BAA0B;UACvCC,YAAY,EAAE;QAChB,CAAC;MACH;MAEApD,SAAS,CAAC8C,UAAU,CAAC;;MAErB;MACAnD,OAAO,CAACC,GAAG,CAAC,yDAAyD,EAAEC,QAAQ,CAAC;MAChF,MAAMwD,kBAAkB,GAAG,MAAMnF,WAAW,CAACoF,aAAa,CAAC;QAAEzD,QAAQ,EAAEA;MAAS,CAAC,CAAC;MAClFF,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEyD,kBAAkB,CAAC;MAC3E1D,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEyD,kBAAkB,CAACR,IAAI,CAAC;MACrFlD,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAE,OAAOyD,kBAAkB,CAACR,IAAI,CAAC;MACjGlD,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAE2D,MAAM,CAACC,IAAI,CAACH,kBAAkB,CAACR,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;MAE7G,MAAMY,cAAc,GAAG,EAAAjB,qBAAA,GAAAa,kBAAkB,CAACR,IAAI,cAAAL,qBAAA,uBAAvBA,qBAAA,CAAyBvC,UAAU,OAAAwC,sBAAA,GAAIY,kBAAkB,CAACR,IAAI,cAAAJ,sBAAA,wBAAAC,sBAAA,GAAvBD,sBAAA,CAAyBI,IAAI,cAAAH,sBAAA,uBAA7BA,sBAAA,CAA+BzC,UAAU,KAAI,EAAE;MAC7GN,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAE6D,cAAc,CAAC;MAC9E9D,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE6D,cAAc,CAACzB,MAAM,CAAC;;MAE5E;MACAyB,cAAc,CAACC,OAAO,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;QAAA,IAAAC,mBAAA;QAC3ClE,OAAO,CAACC,GAAG,CAAC,gBAAgBgE,KAAK,GAAG,CAAC,KAAKD,SAAS,CAAC7B,KAAK,IAAI,EAAE;UAC7DoB,EAAE,EAAES,SAAS,CAACT,EAAE;UAChBpB,KAAK,EAAE6B,SAAS,CAAC7B,KAAK;UACtBsB,YAAY,EAAEO,SAAS,CAACP,YAAY;UACpCU,WAAW,EAAEH,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC/B,MAAM,GAAG,CAAC;UAChEgC,aAAa,EAAE,EAAAH,mBAAA,GAAAF,SAAS,CAACI,QAAQ,cAAAF,mBAAA,uBAAlBA,mBAAA,CAAoB7B,MAAM,KAAI,CAAC;UAC9CiC,MAAM,EAAE,CAACN,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC/B,MAAM,KAAK,CAAC;UAC9DkC,UAAU,EAAEP;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFzD,aAAa,CAACuD,cAAc,CAAC;;MAE7B;MACA,IAAIA,cAAc,CAACzB,MAAM,GAAG,CAAC,EAAE;QAC7B,MAAMmC,aAAa,GAAGV,cAAc,CAACW,GAAG,CAACC,EAAE,IAAIA,EAAE,CAACnB,EAAE,CAAC;QACrDtC,gBAAgB,CAAC,IAAIC,GAAG,CAACsD,aAAa,CAAC,CAAC;QACxCxE,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAEuE,aAAa,CAAC;MACnF;;MAEA;MACA,IAAI;QAAA,IAAAG,qBAAA;QACF3E,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;QACpE,MAAM2E,iBAAiB,GAAG,MAAMrG,WAAW,CAACsG,kBAAkB,CAAC3E,QAAQ,CAAC;QACxEF,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE2E,iBAAiB,CAAC;QACzE5E,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAE2E,iBAAiB,CAAC1B,IAAI,CAAC;QAEnF,MAAM4B,aAAa,GAAG,EAAAH,qBAAA,GAAAC,iBAAiB,CAAC1B,IAAI,cAAAyB,qBAAA,uBAAtBA,qBAAA,CAAwBzB,IAAI,KAAI0B,iBAAiB,CAAC1B,IAAI;QAC5ElD,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAE6E,aAAa,CAAC;QAE5E,IAAIA,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAExE,UAAU,IAAIwE,aAAa,CAACxE,UAAU,CAAC+B,MAAM,GAAG,CAAC,EAAE;UACpErC,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;UAChED,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAE6E,aAAa,CAACxE,UAAU,CAAC;;UAEnF;UACAwE,aAAa,CAACxE,UAAU,CAACyD,OAAO,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;YAAA,IAAAc,oBAAA;YACrD/E,OAAO,CAACC,GAAG,CAAC,0BAA0BgE,KAAK,GAAG,CAAC,KAAKD,SAAS,CAAC7B,KAAK,IAAI,EAAE;cACvEoB,EAAE,EAAES,SAAS,CAACT,EAAE;cAChBpB,KAAK,EAAE6B,SAAS,CAAC7B,KAAK;cACtBsB,YAAY,EAAEO,SAAS,CAACP,YAAY;cACpCU,WAAW,EAAEH,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC/B,MAAM,GAAG,CAAC;cAChEgC,aAAa,EAAE,EAAAU,oBAAA,GAAAf,SAAS,CAACI,QAAQ,cAAAW,oBAAA,uBAAlBA,oBAAA,CAAoB1C,MAAM,KAAI,CAAC;cAC9CiC,MAAM,EAAE,CAACN,SAAS,CAACI,QAAQ,IAAIJ,SAAS,CAACI,QAAQ,CAAC/B,MAAM,KAAK,CAAC;cAC9DkC,UAAU,EAAEP;YACd,CAAC,CAAC;UACJ,CAAC,CAAC;UAEFzD,aAAa,CAACuE,aAAa,CAACxE,UAAU,CAAC;UACvC,IAAIwE,aAAa,CAAC3C,KAAK,IAAI,CAACgB,UAAU,CAAChB,KAAK,CAAC6C,QAAQ,CAAC,SAAS,CAAC,EAAE;YAChE3E,SAAS,CAAC4E,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE,GAAGH;YAAc,CAAC,CAAC,CAAC;UACpD;QACF;MACF,CAAC,CAAC,OAAOI,cAAc,EAAE;QACvBlF,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEiF,cAAc,CAAC;QAC3ElF,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEiF,cAAc,CAACC,QAAQ,CAAC;MACxF;IAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdvF,OAAO,CAACoF,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DpF,OAAO,CAACoF,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACD,QAAQ,CAAC;MACpEnF,OAAO,CAACoF,KAAK,CAAC,0CAA0C,GAAAC,eAAA,GAAED,KAAK,CAACD,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBnC,IAAI,CAAC;MAC/ElD,OAAO,CAACoF,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACI,OAAO,CAAC;MAClEhH,KAAK,CAAC4G,KAAK,CAAC,sCAAsC,IAAI,EAAAE,gBAAA,GAAAF,KAAK,CAACD,QAAQ,cAAAG,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpC,IAAI,cAAAqC,qBAAA,uBAApBA,qBAAA,CAAsBC,OAAO,KAAIJ,KAAK,CAACI,OAAO,CAAC,CAAC;MAEtGnF,SAAS,CAAC;QACRkD,EAAE,EAAErD,QAAQ;QACZiC,KAAK,EAAE,UAAUjC,QAAQ,EAAE;QAC3BsD,WAAW,EAAE,8BAA8B;QAC3CC,YAAY,EAAE;MAChB,CAAC,CAAC;MACFlD,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;MACjBT,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAC1D;EACF,CAAC;EAED,MAAMwF,kBAAkB,GAAGA,CAACC,MAAM,GAAG,IAAI,KAAK;IAC5C1F,OAAO,CAACC,GAAG,CAAC,yDAAyD,EAAEyF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEvD,KAAK,CAAC;IACrFpB,iBAAiB,CAAC2E,MAAM,CAAC;IACzB7E,mBAAmB,CAAC,IAAI,CAAC;IACzBF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMgF,mBAAmB,GAAIC,SAAS,IAAK;IACzC5F,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAE2F,SAAS,CAACzD,KAAK,CAAC;IACjFpB,iBAAiB,CAAC,IAAI,CAAC;IACvBF,mBAAmB,CAAC+E,SAAS,CAAC;IAC9BjF,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAMkF,2BAA2B,GAAID,SAAS,IAAK;IACjD5F,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE2F,SAAS,CAACzD,KAAK,CAAC;IACxEnC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,CAAC2F,SAAS,CAACxB,QAAQ,IAAIwB,SAAS,CAACxB,QAAQ,CAAC/B,MAAM,KAAK,CAAC,CAAC;IAE1G,IAAIuD,SAAS,CAACxB,QAAQ,IAAIwB,SAAS,CAACxB,QAAQ,CAAC/B,MAAM,GAAG,CAAC,EAAE;MACvD7D,KAAK,CAAC4G,KAAK,CAAC,yEAAyE,CAAC;MACtF;IACF;IAEA9D,8BAA8B,CAACsE,SAAS,CAAC;IACzCxE,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;;EAED;EACA,MAAM0E,6BAA6B,GAAG,MAAOF,SAAS,IAAK;IACzD5F,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAE2F,SAAS,CAACzD,KAAK,CAAC;IAC3EnC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE2F,SAAS,CAAC;IAC9D5F,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE2F,SAAS,CAACxB,QAAQ,IAAIwB,SAAS,CAACxB,QAAQ,CAAC/B,MAAM,GAAG,CAAC,CAAC;IACpGrC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE2F,SAAS,CAACnC,YAAY,CAAC;IACxEzD,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE,CAAC2F,SAAS,CAACxB,QAAQ,IAAIwB,SAAS,CAACxB,QAAQ,CAAC/B,MAAM,KAAK,CAAC,CAAC;IAElG,IAAIuD,SAAS,CAACxB,QAAQ,IAAIwB,SAAS,CAACxB,QAAQ,CAAC/B,MAAM,GAAG,CAAC,EAAE;MACvDrC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrDzB,KAAK,CAAC4G,KAAK,CAAC,6CAA6C,CAAC;MAC1D;IACF;IAEA,IAAI,CAACQ,SAAS,CAACnC,YAAY,IAAImC,SAAS,CAACnC,YAAY,KAAK,CAAC,EAAE;MAC3DzD,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;MACzDzB,KAAK,CAACuH,IAAI,CAAC,sEAAsE,CAAC;MAClF;IACF;IAEA/F,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAC7DyB,mCAAmC,CAACkE,SAAS,CAAC;IAC9C,MAAMI,wBAAwB,CAACJ,SAAS,CAACrC,EAAE,CAAC;IAC5C/B,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMwE,wBAAwB,GAAG,MAAOC,WAAW,IAAK;IACtD,IAAI;MAAA,IAAAC,cAAA,EAAAC,eAAA,EAAAC,oBAAA;MACFlE,kBAAkB,CAAC,IAAI,CAAC;MACxBlC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEgG,WAAW,CAAC;MACjEjG,OAAO,CAACC,GAAG,CAAC,kEAAkE,CAAC;MAE/E,MAAMkF,QAAQ,GAAG,MAAM5G,WAAW,CAAC8H,WAAW,CAAC;QAC7CJ,WAAW,EAAEA,WAAW;QACxBK,KAAK,EAAE,GAAG,CAAC;MACb,CAAC,CAAC;MAEFtG,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEkF,QAAQ,CAAC;MAC9DnF,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEkF,QAAQ,CAACoB,MAAM,CAAC;MACnEvG,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEkF,QAAQ,CAACjC,IAAI,CAAC;MAC/DlD,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE,OAAOkF,QAAQ,CAACjC,IAAI,CAAC;MAC3ElD,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE2D,MAAM,CAACC,IAAI,CAACsB,QAAQ,CAACjC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;MAEvF,MAAMsD,QAAQ,GAAG,EAAAN,cAAA,GAAAf,QAAQ,CAACjC,IAAI,cAAAgD,cAAA,uBAAbA,cAAA,CAAeM,QAAQ,OAAAL,eAAA,GAAIhB,QAAQ,CAACjC,IAAI,cAAAiD,eAAA,wBAAAC,oBAAA,GAAbD,eAAA,CAAejD,IAAI,cAAAkD,oBAAA,uBAAnBA,oBAAA,CAAqBI,QAAQ,KAAI,EAAE;MAC/ExG,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEuG,QAAQ,CAAC;MAChExG,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEuG,QAAQ,CAACnE,MAAM,CAAC;MACnErC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEuG,QAAQ,CAAC,CAAC,CAAC,CAAC;MAEvE5E,sBAAsB,CAAC4E,QAAQ,CAAC;MAEhC,IAAIA,QAAQ,CAACnE,MAAM,KAAK,CAAC,EAAE;QACzBrC,OAAO,CAACC,GAAG,CAAC,sDAAsD,EAAEgG,WAAW,CAAC;QAChFzH,KAAK,CAACuH,IAAI,CAAC,qDAAqDS,QAAQ,CAACnE,MAAM,YAAY,CAAC;MAC9F,CAAC,MAAM;QACLrC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEuG,QAAQ,CAACnE,MAAM,EAAE,UAAU,CAAC;MACrF;IAEF,CAAC,CAAC,OAAO+C,KAAK,EAAE;MAAA,IAAAqB,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACd3G,OAAO,CAACoF,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1DpF,OAAO,CAACoF,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACD,QAAQ,CAAC;MACnEnF,OAAO,CAACoF,KAAK,CAAC,yCAAyC,GAAAqB,gBAAA,GAAErB,KAAK,CAACD,QAAQ,cAAAsB,gBAAA,uBAAdA,gBAAA,CAAgBvD,IAAI,CAAC;MAC9ElD,OAAO,CAACoF,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACI,OAAO,CAAC;MACjEhH,KAAK,CAAC4G,KAAK,CAAC,4BAA4B,IAAI,EAAAsB,gBAAA,GAAAtB,KAAK,CAACD,QAAQ,cAAAuB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBxD,IAAI,cAAAyD,qBAAA,uBAApBA,qBAAA,CAAsBnB,OAAO,KAAIJ,KAAK,CAACI,OAAO,CAAC,CAAC;MAC5F5D,sBAAsB,CAAC,EAAE,CAAC;IAC5B,CAAC,SAAS;MACRM,kBAAkB,CAAC,KAAK,CAAC;MACzBlC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACzD;EACF,CAAC;;EAED;EACA,MAAM2G,iBAAiB,GAAIC,OAAO,IAAK;IACrC7G,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;IAC7DL,iBAAiB,CAAC+E,OAAO,CAAC;IAC1B7E,uBAAuB,CAAC,IAAI,CAAC;EAC/B,CAAC;;EAED;EACA,MAAM8E,mBAAmB,GAAG,MAAOD,OAAO,IAAK;IAC7C7G,OAAO,CAACC,GAAG,CAAC,qDAAqD,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;IACjFnC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE4G,OAAO,CAACtD,EAAE,CAAC;IAC3DvD,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAE4G,OAAO,CAAC;IAEjE,MAAME,cAAc,GAAG,gDAAgDF,OAAO,CAAC1E,KAAK,qCAAqC;IACzH,MAAM6E,aAAa,GAAGC,MAAM,CAACC,OAAO,CAACH,cAAc,CAAC;IAEpD/G,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE+G,aAAa,CAAC;IAErE,IAAI,CAACA,aAAa,EAAE;MAClBhH,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnD;IACF;IAEA,IAAI;MACFD,OAAO,CAACC,GAAG,CAAC,oEAAoE,CAAC;MACjFD,OAAO,CAACC,GAAG,CAAC,4DAA4D,GAAG4G,OAAO,CAACtD,EAAE,CAAC;MAEtF,MAAM4B,QAAQ,GAAG,MAAM5G,WAAW,CAAC4I,aAAa,CAACN,OAAO,CAACtD,EAAE,CAAC;MAE5DvD,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAEkF,QAAQ,CAAC;MAClEnF,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEkF,QAAQ,CAACoB,MAAM,CAAC;MACnEvG,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEkF,QAAQ,CAACjC,IAAI,CAAC;MAE/D1E,KAAK,CAAC4I,OAAO,CAAC,8BAA8B,CAAC;MAC7CpH,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;;MAEtD;MACAD,OAAO,CAACC,GAAG,CAAC,6DAA6D,EAAEwB,gCAAgC,CAAC8B,EAAE,CAAC;MAC/G,MAAMyC,wBAAwB,CAACvE,gCAAgC,CAAC8B,EAAE,CAAC;MAEnEvD,OAAO,CAACC,GAAG,CAAC,uEAAuE,CAAC;MACpF,MAAMwC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IAEpC,CAAC,CAAC,OAAO2C,KAAK,EAAE;MAAA,IAAAiC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdxH,OAAO,CAACoF,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1DpF,OAAO,CAACoF,KAAK,CAAC,gCAAgC,EAAE,OAAOA,KAAK,CAAC;MAC7DpF,OAAO,CAACoF,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACI,OAAO,CAAC;MACjExF,OAAO,CAACoF,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACD,QAAQ,CAAC;MACnEnF,OAAO,CAACoF,KAAK,CAAC,2CAA2C,GAAAiC,gBAAA,GAAEjC,KAAK,CAACD,QAAQ,cAAAkC,gBAAA,uBAAdA,gBAAA,CAAgBd,MAAM,CAAC;MAClFvG,OAAO,CAACoF,KAAK,CAAC,yCAAyC,GAAAkC,gBAAA,GAAElC,KAAK,CAACD,QAAQ,cAAAmC,gBAAA,uBAAdA,gBAAA,CAAgBpE,IAAI,CAAC;MAC9ElD,OAAO,CAACoF,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACqC,KAAK,CAAC;MAE7D,MAAMC,YAAY,GAAG,EAAAH,gBAAA,GAAAnC,KAAK,CAACD,QAAQ,cAAAoC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrE,IAAI,cAAAsE,qBAAA,uBAApBA,qBAAA,CAAsBhC,OAAO,KAAIJ,KAAK,CAACI,OAAO,IAAI,wBAAwB;MAC/FhH,KAAK,CAAC4G,KAAK,CAAC,4BAA4B,GAAGsC,YAAY,CAAC;MACxD1H,OAAO,CAACC,GAAG,CAAC,oDAAoD,EAAEyH,YAAY,CAAC;IACjF;EACF,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAG,MAAOd,OAAO,IAAK;IAC9C,MAAMe,WAAW,GAAGf,OAAO,CAACgB,QAAQ;IACpC,MAAMC,MAAM,GAAGF,WAAW,GAAG,SAAS,GAAG,SAAS;IAElD5H,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE6H,MAAM,EAAE,MAAM,EAAEjB,OAAO,CAAC1E,KAAK,CAAC;IAE1E,IAAI,CAAC8E,MAAM,CAACC,OAAO,CAAC,4BAA4BY,MAAM,KAAKjB,OAAO,CAAC1E,KAAK,IAAI,CAAC,EAAE;MAC7E;IACF;IAEA,IAAI;MACF,MAAM5D,WAAW,CAACwJ,cAAc,CAAClB,OAAO,CAACtD,EAAE,EAAE;QAC3CyE,OAAO,EAAEJ,WAAW;QACpBK,MAAM,EAAE,GAAGH,MAAM;MACnB,CAAC,CAAC;MACF9H,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CzB,KAAK,CAAC4I,OAAO,CAAC,WAAWU,MAAM,gBAAgB,CAAC;;MAEhD;MACA,MAAM9B,wBAAwB,CAACvE,gCAAgC,CAAC8B,EAAE,CAAC;IAErE,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdpF,OAAO,CAACoF,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD5G,KAAK,CAAC4G,KAAK,CAAC,aAAa0C,MAAM,UAAU,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMI,2BAA2B,GAAG,MAAOrB,OAAO,IAAK;IACrD7G,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;IAE9D,IAAI;MACF,MAAM5D,WAAW,CAAC4J,aAAa,CAACtB,OAAO,CAACtD,EAAE,EAAE;QAC1C6E,UAAU,EAAE,CAACvB,OAAO,CAACuB;MACvB,CAAC,CAAC;MACFpI,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1CzB,KAAK,CAAC4I,OAAO,CAAC,WAAWP,OAAO,CAACuB,UAAU,GAAG,cAAc,GAAG,UAAU,WAAW,CAAC;;MAErF;MACA,MAAMpC,wBAAwB,CAACvE,gCAAgC,CAAC8B,EAAE,CAAC;IAErE,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdpF,OAAO,CAACoF,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD5G,KAAK,CAAC4G,KAAK,CAAC,kCAAkC,CAAC;IACjD;EACF,CAAC;EAED,MAAMiD,qBAAqB,GAAG,MAAOzC,SAAS,IAAK;IAAA,IAAA0C,mBAAA;IACjDtI,OAAO,CAACC,GAAG,CAAC,uDAAuD,EAAE2F,SAAS,CAACzD,KAAK,CAAC;IACrFnC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE2F,SAAS,CAACrC,EAAE,CAAC;IACjEvD,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAE2F,SAAS,CAAC;IAEvE,MAAMzB,WAAW,GAAGyB,SAAS,CAACxB,QAAQ,IAAIwB,SAAS,CAACxB,QAAQ,CAAC/B,MAAM,GAAG,CAAC;IACvE,MAAMkG,WAAW,GAAG3C,SAAS,CAACnC,YAAY,GAAG,CAAC;IAE9CzD,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEkE,WAAW,CAAC;IAChEnE,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEsI,WAAW,CAAC;IAChEvI,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE,EAAAqI,mBAAA,GAAA1C,SAAS,CAACxB,QAAQ,cAAAkE,mBAAA,uBAAlBA,mBAAA,CAAoBjG,MAAM,KAAI,CAAC,CAAC;IACtFrC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE2F,SAAS,CAACnC,YAAY,IAAI,CAAC,CAAC;IAEjF,IAAIsD,cAAc,GAAG,oCAAoCnB,SAAS,CAACzD,KAAK,IAAI;IAC5E,IAAIgC,WAAW,EAAE;MACf4C,cAAc,IAAI,mDAAmD;IACvE;IACA,IAAIwB,WAAW,EAAE;MACfxB,cAAc,IAAI,kDAAkD;IACtE;IACAA,cAAc,IAAI,mCAAmC;IAErD,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAACH,cAAc,CAAC;IACpD/G,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAE+G,aAAa,CAAC;IAEvE,IAAI,CAACA,aAAa,EAAE;MAClBhH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrD;IACF;IAEA,IAAI;MACFD,OAAO,CAACC,GAAG,CAAC,wEAAwE,CAAC;MACrFD,OAAO,CAACC,GAAG,CAAC,gEAAgE,GAAG2F,SAAS,CAACrC,EAAE,CAAC;MAE5F,MAAM4B,QAAQ,GAAG,MAAM5G,WAAW,CAACiK,eAAe,CAAC5C,SAAS,CAACrC,EAAE,CAAC;MAEhEvD,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEkF,QAAQ,CAAC;MACpEnF,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEkF,QAAQ,CAACoB,MAAM,CAAC;MACrEvG,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEkF,QAAQ,CAACjC,IAAI,CAAC;MAEjE1E,KAAK,CAAC4I,OAAO,CAAC,iCAAiC,CAAC;MAChDpH,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MAExDD,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;MACrEwC,wBAAwB,CAAC,CAAC;IAE5B,CAAC,CAAC,OAAO2C,KAAK,EAAE;MAAA,IAAAqD,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACd5I,OAAO,CAACoF,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DpF,OAAO,CAACoF,KAAK,CAAC,kCAAkC,EAAE,OAAOA,KAAK,CAAC;MAC/DpF,OAAO,CAACoF,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACI,OAAO,CAAC;MACnExF,OAAO,CAACoF,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACD,QAAQ,CAAC;MACrEnF,OAAO,CAACoF,KAAK,CAAC,6CAA6C,GAAAqD,gBAAA,GAAErD,KAAK,CAACD,QAAQ,cAAAsD,gBAAA,uBAAdA,gBAAA,CAAgBlC,MAAM,CAAC;MACpFvG,OAAO,CAACoF,KAAK,CAAC,2CAA2C,GAAAsD,gBAAA,GAAEtD,KAAK,CAACD,QAAQ,cAAAuD,gBAAA,uBAAdA,gBAAA,CAAgBxF,IAAI,CAAC;MAChFlD,OAAO,CAACoF,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAACqC,KAAK,CAAC;MAE/D,MAAMC,YAAY,GAAG,EAAAiB,gBAAA,GAAAvD,KAAK,CAACD,QAAQ,cAAAwD,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBzF,IAAI,cAAA0F,qBAAA,uBAApBA,qBAAA,CAAsBpD,OAAO,KAAIJ,KAAK,CAACI,OAAO,IAAI,wBAAwB;MAC/FhH,KAAK,CAAC4G,KAAK,CAAC,+BAA+B,GAAGsC,YAAY,CAAC;MAC3D1H,OAAO,CAACC,GAAG,CAAC,sDAAsD,EAAEyH,YAAY,CAAC;IACnF;EACF,CAAC;EAED,MAAMmB,cAAc,GAAIC,MAAM,IAAK;IACjC,MAAMC,WAAW,GAAG,IAAI7H,GAAG,CAACF,aAAa,CAAC;IAC1C,IAAI+H,WAAW,CAACC,GAAG,CAACF,MAAM,CAAC,EAAE;MAC3BC,WAAW,CAACE,MAAM,CAACH,MAAM,CAAC;IAC5B,CAAC,MAAM;MACLC,WAAW,CAACG,GAAG,CAACJ,MAAM,CAAC;IACzB;IACA7H,gBAAgB,CAAC8H,WAAW,CAAC;EAC/B,CAAC;EAED,IAAIvI,OAAO,EAAE;IACX,oBACEb,OAAA;MAAKwJ,SAAS,EAAC,mBAAmB;MAAA/E,QAAA,gBAChCzE,OAAA;QAAKwJ,SAAS,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvC5J,OAAA;QAAAyE,QAAA,EAAG;MAAsB;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAEV;EAEA,oBACE5J,OAAA;IAAKwJ,SAAS,EAAC,sBAAsB;IAAA/E,QAAA,gBAEnCzE,OAAA;MAAKwJ,SAAS,EAAC,aAAa;MAAA/E,QAAA,gBAC1BzE,OAAA;QAAKwJ,SAAS,EAAC,gBAAgB;QAAA/E,QAAA,gBAC7BzE,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YACEwJ,SAAS,EAAC,iBAAiB;YAC3BK,OAAO,EAAEA,CAAA,KAAMrJ,QAAQ,CAAC,UAAU,CAAE;YAAAiE,QAAA,gBAEpCzE,OAAA,CAACV,WAAW;cAAAmK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,WAEjB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5J,OAAA;YAAMwJ,SAAS,EAAC,sBAAsB;YAAA/E,QAAA,EAAC;UAAC;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/C5J,OAAA;YAAMwJ,SAAS,EAAC,oBAAoB;YAAA/E,QAAA,EAAE,CAAAhE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+B,KAAK,KAAI;UAAY;YAAAiH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACN5J,OAAA;UAAAyE,QAAA,EAAI;QAAoB;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B5J,OAAA;UAAAyE,QAAA,GAAG,uCAAqC,EAAC,CAAAhE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+B,KAAK,KAAI,aAAa;QAAA;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACN5J,OAAA;QAAKwJ,SAAS,EAAC,gBAAgB;QAAA/E,QAAA,eAC7BzE,OAAA;UACEwJ,SAAS,EAAC,gBAAgB;UAC1BK,OAAO,EAAEA,CAAA,KAAM/D,kBAAkB,CAAC,CAAE;UACpCgE,KAAK,EAAE;YACLC,eAAe,EAAE,SAAS;YAC1BC,KAAK,EAAE,OAAO;YACdC,OAAO,EAAE,WAAW;YACpBC,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,SAAS;YACjBC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE;UACd,CAAE;UAAA7F,QAAA,gBAEFzE,OAAA,CAAClB,MAAM;YAACgL,KAAK,EAAE;cAACS,WAAW,EAAE;YAAK;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,sBAEzC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN5J,OAAA;MAAKwJ,SAAS,EAAC,aAAa;MAAA/E,QAAA,gBAC1BzE,OAAA;QAAAyE,QAAA,EAAI;MAAsC;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/C5J,OAAA;QAAKwJ,SAAS,EAAC,aAAa;QAAA/E,QAAA,gBAC1BzE,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAAA/E,QAAA,EAAC;UAAC;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC5J,OAAA;YAAMwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,GAAC,QAAM,eAAAzE,OAAA;cAAAyE,QAAA,EAAQ;YAAoB;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,mCAA+B;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1G,CAAC,eACN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAAA/E,QAAA,EAAC;UAAC;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC5J,OAAA;YAAMwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,GAAC,YAAU,eAAAzE,OAAA,CAAClB,MAAM;cAAC0K,SAAS,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,iDAA6C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzH,CAAC,eACN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAAA/E,QAAA,EAAC;UAAC;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC5J,OAAA;YAAMwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,GAAC,OAAK,eAAAzE,OAAA,CAACP,QAAQ;cAAC+J,SAAS,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,+CAA2C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzH,CAAC,eACN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAAA/E,QAAA,EAAC;UAAC;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC5J,OAAA;YAAMwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,GAAC,QAAM,eAAAzE,OAAA;cAAAyE,QAAA,EAAQ;YAAa;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,QAAI,eAAA5J,OAAA;cAAAyE,QAAA,EAAQ;YAAe;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,uBAAmB;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3H,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLnJ,MAAM,iBACLT,OAAA;MAAKwJ,SAAS,EAAC,kBAAkB;MAAA/E,QAAA,gBAC/BzE,OAAA;QAAKwJ,SAAS,EAAC,aAAa;QAAA/E,QAAA,eAC1BzE,OAAA,CAACb,QAAQ;UAAAsK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACN5J,OAAA;QAAKwJ,SAAS,EAAC,gBAAgB;QAAA/E,QAAA,gBAC7BzE,OAAA;UAAAyE,QAAA,EAAKhE,MAAM,CAAC+B;QAAK;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvB5J,OAAA;UAAAyE,QAAA,EAAIhE,MAAM,CAACoD;QAAW;UAAA4F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3B5J,OAAA;UAAKwJ,SAAS,EAAC,cAAc;UAAA/E,QAAA,gBAC3BzE,OAAA;YAAMwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,gBACzBzE,OAAA;cAAAyE,QAAA,EAAS9D,UAAU,CAAC+B;YAAM;cAAA+G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,qBACtC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACP5J,OAAA;YAAMwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,gBACzBzE,OAAA;cAAAyE,QAAA,EAAShE,MAAM,CAACqD,YAAY,IAAI;YAAC;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,mBAC7C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGD5J,OAAA;MAAKwJ,SAAS,EAAC,0BAA0B;MAAA/E,QAAA,gBACvCzE,OAAA;QAAKwJ,SAAS,EAAC,aAAa;QAAA/E,QAAA,gBAC1BzE,OAAA;UAAAyE,QAAA,EAAI;QAAmB;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5B5J,OAAA;UAAKwJ,SAAS,EAAC,aAAa;UAAA/E,QAAA,gBAC1BzE,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAAA/E,QAAA,gBAC3BzE,OAAA,CAACb,QAAQ;cAACqK,SAAS,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEtC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACP5J,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAAA/E,QAAA,gBAC3BzE,OAAA,CAACP,QAAQ;cAAC+J,SAAS,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,4BAEpC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACP5J,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAAA/E,QAAA,gBAC3BzE,OAAA,CAACX,UAAU;cAACmK,SAAS,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAEzC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACP5J,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAAA/E,QAAA,gBAC3BzE,OAAA,CAACH,MAAM;cAAC2J,SAAS,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,iBAElC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELjJ,UAAU,CAAC+B,MAAM,GAAG,CAAC,gBACpB1C,OAAA;QAAKwJ,SAAS,EAAC,gBAAgB;QAAA/E,QAAA,EAC5B9D,UAAU,CAACmE,GAAG,CAAEmB,SAAS,iBACxBjG,OAAA,CAACwK,aAAa;UAEZvE,SAAS,EAAEA,SAAU;UACrBwE,KAAK,EAAE,CAAE;UACTC,UAAU,EAAErJ,aAAa,CAACgI,GAAG,CAACpD,SAAS,CAACrC,EAAE,CAAE;UAC5C+G,gBAAgB,EAAEzB,cAAe;UACjC0B,MAAM,EAAE5E,mBAAoB;UAC5B6E,QAAQ,EAAEnC,qBAAsB;UAChCoC,UAAU,EAAEhF,kBAAmB;UAC/BiF,YAAY,EAAE7E,2BAA4B;UAC1C8E,cAAc,EAAE7E,6BAA8B,CAAC;UAAA;UAC/C9E,aAAa,EAAEA;QAAc,GAVxB4E,SAAS,CAACrC,EAAE;UAAA6F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWlB,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAEN5J,OAAA;QAAKwJ,SAAS,EAAC,kBAAkB;QAAA/E,QAAA,gBAC/BzE,OAAA,CAACZ,YAAY;UAACwD,IAAI,EAAE;QAAG;UAAA6G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1B5J,OAAA;UAAAyE,QAAA,EAAI;QAAiB;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B5J,OAAA;UAAAyE,QAAA,GAAG,wBAAsB,EAAC,CAAAhE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+B,KAAK,KAAI,QAAQ,EAAC,kCAAgC;QAAA;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACxF5J,OAAA;UAAKwJ,SAAS,EAAC,sBAAsB;UAAA/E,QAAA,gBACnCzE,OAAA;YAAAyE,QAAA,EAAI;UAAkB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3B5J,OAAA;YAAKwJ,SAAS,EAAC,cAAc;YAAA/E,QAAA,gBAC3BzE,OAAA;cAAKwJ,SAAS,EAAC,cAAc;cAAA/E,QAAA,EAAC;YAAmB;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvD5J,OAAA;cAAKwJ,SAAS,EAAC,qBAAqB;cAAA/E,QAAA,EAAC;YAAgB;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3D5J,OAAA;cAAKwJ,SAAS,EAAC,qBAAqB;cAAA/E,QAAA,EAAC;YAAkB;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7D5J,OAAA;cAAKwJ,SAAS,EAAC,cAAc;cAAA/E,QAAA,EAAC;YAAe;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN5J,OAAA;UAAKwJ,SAAS,EAAC,qBAAqB;UAAA/E,QAAA,gBAClCzE,OAAA;YACEwJ,SAAS,EAAC,sBAAsB;YAChCK,OAAO,EAAEA,CAAA,KAAM/D,kBAAkB,CAAC,CAAE;YACpCgE,KAAK,EAAE;cACLC,eAAe,EAAE,SAAS;cAC1BC,KAAK,EAAE,OAAO;cACdC,OAAO,EAAE,WAAW;cACpBC,MAAM,EAAE,MAAM;cACdC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,SAAS;cACjBC,QAAQ,EAAE,MAAM;cAChBC,UAAU,EAAE;YACd,CAAE;YAAA7F,QAAA,gBAEFzE,OAAA,CAAClB,MAAM;cAACgL,KAAK,EAAE;gBAACS,WAAW,EAAE;cAAK;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,+BAEzC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5J,OAAA;YAAGwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,EAAC;UAEzB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGL7I,YAAY,iBACXf,OAAA,CAACiL,cAAc;MACbhF,SAAS,EAAEhF,gBAAiB;MAC5B8E,MAAM,EAAE5E,cAAe;MACvBV,MAAM,EAAEA,MAAO;MACfyK,OAAO,EAAEA,CAAA,KAAM;QACblK,eAAe,CAAC,KAAK,CAAC;QACtBE,mBAAmB,CAAC,IAAI,CAAC;QACzBE,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAE;MACF+J,MAAM,EAAEA,CAAA,KAAM;QACZnK,eAAe,CAAC,KAAK,CAAC;QACtBE,mBAAmB,CAAC,IAAI,CAAC;QACzBE,iBAAiB,CAAC,IAAI,CAAC;QACvB0B,wBAAwB,CAAC,CAAC;MAC5B;IAAE;MAAA2G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EAGApI,gBAAgB,iBACfxB,OAAA,CAACoL,YAAY;MACXnF,SAAS,EAAEvE,2BAA4B;MACvCjB,MAAM,EAAEA,MAAO;MACfyK,OAAO,EAAEA,CAAA,KAAM;QACbzJ,mBAAmB,CAAC,KAAK,CAAC;QAC1BE,8BAA8B,CAAC,IAAI,CAAC;MACtC,CAAE;MACFwJ,MAAM,EAAEA,CAAA,KAAM;QACZ1J,mBAAmB,CAAC,KAAK,CAAC;QAC1BE,8BAA8B,CAAC,IAAI,CAAC;QACpC9C,KAAK,CAAC4I,OAAO,CAAC,+BAA+B,CAAC;QAC9C3E,wBAAwB,CAAC,CAAC,CAAC,CAAC;MAC9B;IAAE;MAAA2G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EAGAhI,iBAAiB,iBAChB5B,OAAA,CAACqL,iBAAiB;MAChBpF,SAAS,EAAEnE,gCAAiC;MAC5C+E,QAAQ,EAAE7E,mBAAoB;MAC9BnB,OAAO,EAAEyB,eAAgB;MACzB4I,OAAO,EAAEA,CAAA,KAAM;QACbrJ,oBAAoB,CAAC,KAAK,CAAC;QAC3BE,mCAAmC,CAAC,IAAI,CAAC;QACzCE,sBAAsB,CAAC,EAAE,CAAC;MAC5B,CAAE;MACF2I,MAAM,EAAE3D,iBAAkB;MAC1B4D,QAAQ,EAAE1D,mBAAoB;MAC9BmE,SAAS,EAAEtD,oBAAqB;MAChCuD,gBAAgB,EAAEhD,2BAA4B;MAC9CwC,YAAY,EAAEA,CAAA,KAAM;QAClBlJ,oBAAoB,CAAC,KAAK,CAAC;QAC3BF,8BAA8B,CAACG,gCAAgC,CAAC;QAChEL,mBAAmB,CAAC,IAAI,CAAC;MAC3B;IAAE;MAAAgI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EAGAxH,oBAAoB,IAAIF,cAAc,iBACrClC,OAAA,CAACwL,gBAAgB;MACftE,OAAO,EAAEhF,cAAe;MACxBgJ,OAAO,EAAEA,CAAA,KAAM;QACb7I,uBAAuB,CAAC,KAAK,CAAC;QAC9BF,iBAAiB,CAAC,IAAI,CAAC;MACzB,CAAE;MACFgJ,MAAM,EAAEA,CAAA,KAAM;QACZ9I,uBAAuB,CAAC,KAAK,CAAC;QAC9BF,iBAAiB,CAAC,IAAI,CAAC;QACvB;QACAkE,wBAAwB,CAACvE,gCAAgC,CAAC8B,EAAE,CAAC;QAC7Dd,wBAAwB,CAAC,CAAC;MAC5B;IAAE;MAAA2G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAxJ,EAAA,CA9rBMD,mBAAmB;EAAA,QAGFzB,SAAS,EACbC,WAAW;AAAA;AAAA8M,EAAA,GAJxBtL,mBAAmB;AA+rBzB,MAAMqK,aAAa,GAAGA,CAAC;EACrBvE,SAAS;EACTwE,KAAK;EACLC,UAAU;EACVC,gBAAgB;EAChBC,MAAM;EACNC,QAAQ;EACRC,UAAU;EACVC,YAAY;EACZC,cAAc;EAAE;EAChB3J;AACF,CAAC,KAAK;EAAAqK,GAAA;EAAA,IAAAC,oBAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMgG,WAAW,GAAGyB,SAAS,CAACxB,QAAQ,IAAIwB,SAAS,CAACxB,QAAQ,CAAC/B,MAAM,GAAG,CAAC;EACvE,MAAMiC,MAAM,GAAG,CAACH,WAAW;EAC3B,MAAMoE,WAAW,GAAG3C,SAAS,CAACnC,YAAY,GAAG,CAAC;EAE9CzD,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE;IAC5CkC,KAAK,EAAEyD,SAAS,CAACzD,KAAK;IACtBiI,KAAK;IACLjG,WAAW;IACXG,MAAM;IACN+F,UAAU;IACV5G,YAAY,EAAEmC,SAAS,CAACnC,YAAY;IACpC8E,WAAW;IACXnE,QAAQ,EAAEwB,SAAS,CAACxB,QAAQ;IAC5BqH,cAAc,GAAAH,oBAAA,GAAE1F,SAAS,CAACxB,QAAQ,cAAAkH,oBAAA,uBAAlBA,oBAAA,CAAoBjJ,MAAM;IAC1CqJ,mBAAmB,EAAE9F;EACvB,CAAC,CAAC;;EAEF;EACA5F,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE2F,SAAS,CAACzD,KAAK,EAAE,GAAG,EAAE;IAClEmC,MAAM;IACNiE,WAAW;IACX9E,YAAY,EAAEmC,SAAS,CAACnC,YAAY;IACpCkI,oBAAoB,EAAErH,MAAM,IAAIiE,WAAW;IAC3CqD,mBAAmB,EAAEtH;EACvB,CAAC,CAAC;EAEF,oBACE3E,OAAA;IAAKwJ,SAAS,EAAE,wBAAwBiB,KAAK,EAAG;IAAAhG,QAAA,gBAC9CzE,OAAA;MAAKwJ,SAAS,EAAC,cAAc;MAAA/E,QAAA,gBAC3BzE,OAAA;QAAKwJ,SAAS,EAAC,WAAW;QAAA/E,QAAA,GACvBD,WAAW,gBACVxE,OAAA;UACEwJ,SAAS,EAAC,eAAe;UACzBK,OAAO,EAAEA,CAAA,KAAMc,gBAAgB,CAAC1E,SAAS,CAACrC,EAAE,CAAE;UAAAa,QAAA,EAE7CiG,UAAU,gBAAG1K,OAAA,CAACf,aAAa;YAAAwK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG5J,OAAA,CAACd,cAAc;YAAAuK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,gBAET5J,OAAA;UAAKwJ,SAAS,EAAC;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACtC,eAED5J,OAAA;UAAKwJ,SAAS,EAAC,WAAW;UAAA/E,QAAA,EACvBE,MAAM,gBAAG3E,OAAA,CAACP,QAAQ;YAAC+J,SAAS,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAG5J,OAAA,CAACb,QAAQ;YAACqK,SAAS,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,WAAW;UAAA/E,QAAA,gBACxBzE,OAAA;YAAIwJ,SAAS,EAAC,YAAY;YAAA/E,QAAA,EAAEwB,SAAS,CAACzD;UAAK;YAAAiH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjD5J,OAAA;YAAGwJ,SAAS,EAAC,kBAAkB;YAAA/E,QAAA,EAAEwB,SAAS,CAACpC;UAAW;YAAA4F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3D5J,OAAA;YAAKwJ,SAAS,EAAC,YAAY;YAAA/E,QAAA,GACxBD,WAAW,iBACVxE,OAAA;cAAMwJ,SAAS,EAAC,YAAY;cAAA/E,QAAA,GACzBwB,SAAS,CAACxB,QAAQ,CAAC/B,MAAM,EAAC,cAC7B;YAAA;cAAA+G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP,EACAhB,WAAW,iBACV5I,OAAA;cAAMwJ,SAAS,EAAC,qBAAqB;cAAA/E,QAAA,GAClCwB,SAAS,CAACnC,YAAY,EAAC,WAC1B;YAAA;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP,EACAjF,MAAM,IAAI,CAACiE,WAAW,iBACrB5I,OAAA;cAAMwJ,SAAS,EAAC,iBAAiB;cAAA/E,QAAA,EAAC;YAElC;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CACP,eAED5J,OAAA;cAAMwJ,SAAS,EAAC,kBAAkB;cAACM,KAAK,EAAE;gBAACC,eAAe,EAAE,SAAS;gBAAEC,KAAK,EAAE;cAAM,CAAE;cAAAvF,QAAA,GAAC,eACxE,EAACwB,SAAS,CAACnC,YAAY,IAAI,CAAC;YAAA;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN5J,OAAA;QAAKwJ,SAAS,EAAC,cAAc;QAAA/E,QAAA,gBAE3BzE,OAAA;UAAK8J,KAAK,EAAE;YAACO,QAAQ,EAAE,MAAM;YAAEL,KAAK,EAAE,MAAM;YAAEkC,YAAY,EAAE;UAAK,CAAE;UAAAzH,QAAA,GAAC,gBACpD,EAACE,MAAM,CAACwH,QAAQ,CAAC,CAAC,EAAC,gBAAc,EAACvD,WAAW,CAACuD,QAAQ,CAAC,CAAC,EAAC,UAAQ,EAAClG,SAAS,CAACnC,YAAY;QAAA;UAAA2F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnG,CAAC,EAGLjF,MAAM,iBACL3E,OAAA;UACEwJ,SAAS,EAAC,oBAAoB;UAC9BK,OAAO,EAAEA,CAAA,KAAM;YACbxJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE2F,SAAS,CAACzD,KAAK,CAAC;YAC3DwI,cAAc,CAAC/E,SAAS,CAAC;UAC3B,CAAE;UACFzD,KAAK,EAAE,qBAAqByD,SAAS,CAACzD,KAAK,aAAayD,SAAS,CAACnC,YAAY,IAAI,CAAC,GAAI;UACvFgG,KAAK,EAAE;YAACC,eAAe,EAAEnB,WAAW,GAAG,SAAS,GAAG;UAAS,CAAE;UAAAnE,QAAA,gBAE9DzE,OAAA,CAACH,MAAM;YAAA4J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACV5J,OAAA;YAAM8J,KAAK,EAAE;cAACO,QAAQ,EAAE,MAAM;cAAE+B,UAAU,EAAE;YAAK,CAAE;YAAA3H,QAAA,EAChDwB,SAAS,CAACnC,YAAY,IAAI;UAAC;YAAA2F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACT,EAEAjF,MAAM,iBACL3E,OAAA;UACEwJ,SAAS,EAAC,uBAAuB;UACjCK,OAAO,EAAEA,CAAA,KAAM;YACbxJ,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE2F,SAAS,CAACzD,KAAK,CAAC;YAClEuI,YAAY,CAAC9E,SAAS,CAAC;UACzB,CAAE;UACFzD,KAAK,EAAE,mBAAmByD,SAAS,CAACzD,KAAK,GAAI;UAAAiC,QAAA,eAE7CzE,OAAA,CAACX,UAAU;YAAAoK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CACT,eAED5J,OAAA;UACEwJ,SAAS,EAAC,mBAAmB;UAC7BK,OAAO,EAAEA,CAAA,KAAMiB,UAAU,CAAC7E,SAAS,CAAE;UACrCzD,KAAK,EAAE,8BAA8ByD,SAAS,CAACzD,KAAK,GAAI;UAAAiC,QAAA,eAExDzE,OAAA,CAAClB,MAAM;YAAA2K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAET5J,OAAA;UAAKwJ,SAAS,EAAC,aAAa;UAAA/E,QAAA,gBAC1BzE,OAAA;YACE6J,OAAO,EAAEA,CAAA,KAAMgC,WAAW,CAAC,CAACD,QAAQ,CAAE;YACtCpJ,KAAK,EAAC,cAAc;YAAAiC,QAAA,eAEpBzE,OAAA,CAACT,cAAc;cAAAkK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,EACRgC,QAAQ,iBACP5L,OAAA;YAAKwJ,SAAS,EAAC,eAAe;YAAA/E,QAAA,GAE3BE,MAAM,iBACL3E,OAAA;cACE6J,OAAO,EAAEA,CAAA,KAAM;gBACbxJ,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE2F,SAAS,CAACzD,KAAK,CAAC;gBACtEwI,cAAc,CAAC/E,SAAS,CAAC;gBACzB4F,WAAW,CAAC,KAAK,CAAC;cACpB,CAAE;cACFrC,SAAS,EAAC,gBAAgB;cAC1BM,KAAK,EAAE;gBAACC,eAAe,EAAEnB,WAAW,GAAG,SAAS,GAAG;cAAS,CAAE;cAAAnE,QAAA,gBAE9DzE,OAAA,CAACH,MAAM;gBAAA4J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,oBAAgB,EAAC3D,SAAS,CAACnC,YAAY,IAAI,CAAC,EAAC,GACzD;YAAA;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,EACAjF,MAAM,iBACL3E,OAAA;cACE6J,OAAO,EAAEA,CAAA,KAAM;gBACbkB,YAAY,CAAC9E,SAAS,CAAC;gBACvB4F,WAAW,CAAC,KAAK,CAAC;cACpB,CAAE;cACFrC,SAAS,EAAC,gBAAgB;cAAA/E,QAAA,gBAE1BzE,OAAA,CAACX,UAAU;gBAAAoK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAChB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACT,eACD5J,OAAA;cAAQ6J,OAAO,EAAEA,CAAA,KAAM;gBACrBe,MAAM,CAAC3E,SAAS,CAAC;gBACjB4F,WAAW,CAAC,KAAK,CAAC;cACpB,CAAE;cAAApH,QAAA,gBACAzE,OAAA,CAACjB,MAAM;gBAAA0K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,mBACZ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT5J,OAAA;cAAQ6J,OAAO,EAAEA,CAAA,KAAM;gBACrBiB,UAAU,CAAC7E,SAAS,CAAC;gBACrB4F,WAAW,CAAC,KAAK,CAAC;cACpB,CAAE;cAAApH,QAAA,gBACAzE,OAAA,CAAClB,MAAM;gBAAA2K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,wBACZ;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT5J,OAAA;cAAQ6J,OAAO,EAAEA,CAAA,KAAM;gBACrBgB,QAAQ,CAAC5E,SAAS,CAAC;gBACnB4F,WAAW,CAAC,KAAK,CAAC;cACpB,CAAE;cAACrC,SAAS,EAAC,QAAQ;cAAA/E,QAAA,gBACnBzE,OAAA,CAAChB,QAAQ;gBAAAyK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,qBACd;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLpF,WAAW,IAAIkG,UAAU,iBACxB1K,OAAA;MAAKwJ,SAAS,EAAC,eAAe;MAAA/E,QAAA,EAC3BwB,SAAS,CAACxB,QAAQ,CAACK,GAAG,CAAEuH,KAAK,iBAC5BrM,OAAA,CAACwK,aAAa;QAEZvE,SAAS,EAAEoG,KAAM;QACjB5B,KAAK,EAAEA,KAAK,GAAG,CAAE;QACjBC,UAAU,EAAErJ,aAAa,CAACgI,GAAG,CAACgD,KAAK,CAACzI,EAAE,CAAE;QACxC+G,gBAAgB,EAAEA,gBAAiB;QACnCC,MAAM,EAAEA,MAAO;QACfC,QAAQ,EAAEA,QAAS;QACnBC,UAAU,EAAEA,UAAW;QACvBC,YAAY,EAAEA,YAAa;QAC3BC,cAAc,EAAEA,cAAe,CAAC;QAAA;QAChC3J,aAAa,EAAEA;MAAc,GAVxBgL,KAAK,CAACzI,EAAE;QAAA6F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAA8B,GAAA,CApNMlB,aAAa;AAAA8B,GAAA,GAAb9B,aAAa;AAqNnB,MAAMS,cAAc,GAAGA,CAAC;EAAEhF,SAAS;EAAEF,MAAM;EAAEtF,MAAM;EAAEyK,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAoB,GAAA;EACzE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjO,QAAQ,CAAC;IACvCgE,KAAK,EAAE,CAAAyD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEzD,KAAK,KAAI,EAAE;IAC7BqB,WAAW,EAAE,CAAAoC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEpC,WAAW,KAAI;EACzC,CAAC,CAAC;EACF,MAAM,CAAChD,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMkO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB9L,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAM+L,WAAW,GAAG;QAClBrK,KAAK,EAAEgK,QAAQ,CAAChK,KAAK,CAACsK,IAAI,CAAC,CAAC;QAC5BjJ,WAAW,EAAE2I,QAAQ,CAAC3I,WAAW,CAACiJ,IAAI,CAAC,CAAC;QACxCvM,QAAQ,EAAEE,MAAM,CAACmD,EAAE;QACnBmJ,QAAQ,EAAE,CAAAhH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEnC,EAAE,KAAI;MAC1B,CAAC;MAEDvD,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEuM,WAAW,CAAC;MAE7D,IAAI5G,SAAS,EAAE;QACb,MAAMT,QAAQ,GAAG,MAAM5G,WAAW,CAACoO,eAAe,CAAC/G,SAAS,CAACrC,EAAE,EAAEiJ,WAAW,CAAC;QAC7EhO,KAAK,CAAC4I,OAAO,CAAC,iCAAiC,CAAC;MAClD,CAAC,MAAM;QACL,MAAMjC,QAAQ,GAAG,MAAM5G,WAAW,CAACqO,eAAe,CAACJ,WAAW,CAAC;QAC/DhO,KAAK,CAAC4I,OAAO,CAAC,iCAAiC,CAAC;MAClD;MAEA0D,MAAM,CAAC,CAAC;IACV,CAAC,CAAC,OAAO1F,KAAK,EAAE;MAAA,IAAAyH,gBAAA,EAAAC,qBAAA;MACd9M,OAAO,CAACoF,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMsC,YAAY,GAAG,EAAAmF,gBAAA,GAAAzH,KAAK,CAACD,QAAQ,cAAA0H,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB3J,IAAI,cAAA4J,qBAAA,uBAApBA,qBAAA,CAAsBtH,OAAO,KAAI,2BAA2B;MACjFhH,KAAK,CAAC4G,KAAK,CAACsC,YAAY,CAAC;IAC3B,CAAC,SAAS;MACRjH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsM,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAInH,SAAS,EAAE;MACb,OAAO,mBAAmBA,SAAS,CAACzD,KAAK,EAAE;IAC7C;IACA,IAAIuD,MAAM,EAAE;MACV,OAAO,wBAAwBA,MAAM,CAACvD,KAAK,EAAE;IAC/C;IACA,OAAO,0BAA0B,CAAA/B,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+B,KAAK,KAAI,QAAQ,EAAE;EAC9D,CAAC;EAED,oBACExC,OAAA;IAAKwJ,SAAS,EAAC,eAAe;IAAA/E,QAAA,eAC5BzE,OAAA;MAAKwJ,SAAS,EAAC,OAAO;MAAA/E,QAAA,gBACpBzE,OAAA;QAAKwJ,SAAS,EAAC,cAAc;QAAA/E,QAAA,gBAC3BzE,OAAA;UAAAyE,QAAA,EAAK2I,aAAa,CAAC;QAAC;UAAA3D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1B5J,OAAA;UAAQ6J,OAAO,EAAEqB,OAAQ;UAAAzG,QAAA,EAAC;QAAC;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eAEN5J,OAAA;QAAMqN,QAAQ,EAAEX,YAAa;QAAAjI,QAAA,gBAC3BzE,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAiB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChC5J,OAAA;YACEsN,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEf,QAAQ,CAAChK,KAAM;YACtBgL,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE9C,KAAK,EAAEmK,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YAC3EG,WAAW,EAAC,uCAAuC;YACnDC,QAAQ;YACRC,SAAS,EAAE,CAAE;YACbC,SAAS,EAAE;UAAI;YAAApE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAsB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrC5J,OAAA;YACEuN,KAAK,EAAEf,QAAQ,CAAC3I,WAAY;YAC5B2J,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAEzB,WAAW,EAAE8I,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YACjFO,IAAI,EAAE,CAAE;YACRJ,WAAW,EAAC,yCAAyC;YACrDG,SAAS,EAAE;UAAI;YAAApE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAQ;UAAO;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,CAAAnJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+B,KAAK,KAAI,SAAS,eAACxC,OAAA;YAAAyJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC1D7D,MAAM,iBACL/F,OAAA,CAAAE,SAAA;YAAAuE,QAAA,gBACEzE,OAAA;cAAAyE,QAAA,EAAQ;YAAiB;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAAC7D,MAAM,CAACvD,KAAK,eAACxC,OAAA;cAAAyJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,eACvD,CACH,eACD5J,OAAA;YAAAyE,QAAA,EAAQ;UAAM;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC7D,MAAM,GAAG,SAAS,CAACA,MAAM,CAAC0E,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,YAAY;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,eAAe;UAAA/E,QAAA,gBAC5BzE,OAAA;YAAQsN,IAAI,EAAC,QAAQ;YAACzD,OAAO,EAAEqB,OAAQ;YAAC6C,QAAQ,EAAElN,OAAQ;YAAA4D,QAAA,EAAC;UAE3D;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5J,OAAA;YACEsN,IAAI,EAAC,QAAQ;YACb9D,SAAS,EAAC,gBAAgB;YAC1BuE,QAAQ,EAAElN,OAAO,IAAI,CAAC2L,QAAQ,CAAChK,KAAK,CAACsK,IAAI,CAAC,CAAE;YAAArI,QAAA,EAE3C5D,OAAO,GAAG,WAAW,GAAG;UAAgB;YAAA4I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA2C,GAAA,CA9GMtB,cAAc;AAAA+C,GAAA,GAAd/C,cAAc;AA+GpB,MAAMG,YAAY,GAAGA,CAAC;EAAEnF,SAAS;EAAExF,MAAM;EAAEyK,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAA8C,GAAA;EAC/D,MAAM,CAACzB,QAAQ,EAAEC,WAAW,CAAC,GAAGjO,QAAQ,CAAC;IACvCgE,KAAK,EAAE,EAAE;IACT0L,QAAQ,EAAE,EAAE;IACZC,cAAc,EAAE,EAAE;IAClBC,gBAAgB,EAAE,EAAE;IACpB9H,WAAW,EAAE,CAAAL,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAErC,EAAE,KAAI,EAAE;IAChC6E,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAAC5H,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAE7C6B,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE;IACvC2F,SAAS,EAAEA,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEzD,KAAK;IAC3B/B,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+B,KAAK;IACrBgK;EACF,CAAC,CAAC;;EAEF;EACA,MAAM6B,YAAY,GAAI7L,KAAK,IAAK;IAC9B,OAAOA,KAAK,CACT8L,WAAW,CAAC,CAAC,CACbxB,IAAI,CAAC,CAAC,CACNyB,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IAAA,CACzBA,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;IAAA,CACzBA,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAM7B,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB9L,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF;MACA,MAAM0N,WAAW,GAAG;QAClBhM,KAAK,EAAEgK,QAAQ,CAAChK,KAAK,CAACsK,IAAI,CAAC,CAAC;QAC5BoB,QAAQ,EAAE1B,QAAQ,CAAC0B,QAAQ,CAACpB,IAAI,CAAC,CAAC;QAClCqB,cAAc,EAAE3B,QAAQ,CAAC2B,cAAc,CAACrB,IAAI,CAAC,CAAC;QAC9CsB,gBAAgB,EAAE5B,QAAQ,CAAC4B,gBAAgB,CAACtB,IAAI,CAAC,CAAC;QAClDxG,WAAW,EAAEkG,QAAQ,CAAClG,WAAW;QACjCmC,UAAU,EAAE+D,QAAQ,CAAC/D;MACvB,CAAC;MAEDpI,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEkO,WAAW,CAAC;MAC1EnO,OAAO,CAACC,GAAG,CAAC,+DAA+D,EAAEkM,QAAQ,CAAChK,KAAK,CAAC;MAE5F,MAAMgD,QAAQ,GAAG,MAAM5G,WAAW,CAAC6P,aAAa,CAACD,WAAW,CAAC;MAC7DnO,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEkF,QAAQ,CAACjC,IAAI,CAAC;MAE1D4H,MAAM,CAAC,CAAC;IACV,CAAC,CAAC,OAAO1F,KAAK,EAAE;MAAA,IAAAiJ,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA;MACdvO,OAAO,CAACoF,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CpF,OAAO,CAACoF,KAAK,CAAC,kCAAkC,GAAAiJ,iBAAA,GAAEjJ,KAAK,CAACD,QAAQ,cAAAkJ,iBAAA,uBAAdA,iBAAA,CAAgBnL,IAAI,CAAC;;MAEvE;MACA,MAAMwE,YAAY,GAAG,EAAA4G,iBAAA,GAAAlJ,KAAK,CAACD,QAAQ,cAAAmJ,iBAAA,wBAAAC,qBAAA,GAAdD,iBAAA,CAAgBpL,IAAI,cAAAqL,qBAAA,uBAApBA,qBAAA,CAAsB/I,OAAO,KAAI,0BAA0B;MAChFhH,KAAK,CAAC4G,KAAK,CAACsC,YAAY,CAAC;IAC3B,CAAC,SAAS;MACRjH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKwJ,SAAS,EAAC,eAAe;IAAA/E,QAAA,eAC5BzE,OAAA;MAAKwJ,SAAS,EAAC,aAAa;MAAA/E,QAAA,gBAC1BzE,OAAA;QAAKwJ,SAAS,EAAC,cAAc;QAAA/E,QAAA,gBAC3BzE,OAAA;UAAAyE,QAAA,GAAI,kBAAgB,EAACwB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEzD,KAAK;QAAA;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3C5J,OAAA;UAAQ6J,OAAO,EAAEqB,OAAQ;UAAAzG,QAAA,EAAC;QAAC;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eAEN5J,OAAA;QAAMqN,QAAQ,EAAEX,YAAa;QAAAjI,QAAA,gBAC3BzE,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAe;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9B5J,OAAA;YACEsN,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEf,QAAQ,CAAChK,KAAM;YACtBgL,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE9C,KAAK,EAAEmK,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YAC3EG,WAAW,EAAC,wBAAwB;YACpCC,QAAQ;YACRC,SAAS,EAAE,CAAE;YACbC,SAAS,EAAE;UAAI;YAAApE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,EAED4C,QAAQ,CAAChK,KAAK,iBACbxC,OAAA;YAAKwJ,SAAS,EAAC,cAAc;YAAA/E,QAAA,eAC3BzE,OAAA;cAAAyE,QAAA,GAAO,qBAAmB,eAAAzE,OAAA;gBAAAyE,QAAA,EAAO4J,YAAY,CAAC7B,QAAQ,CAAChK,KAAK;cAAC;gBAAAiH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,KAAC,eAAA5J,OAAA;gBAAAyE,QAAA,EAAI;cAA2B;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/G,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAQ;UAAO;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,CAAAnJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+B,KAAK,KAAI,SAAS,eAACxC,OAAA;YAAAyJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3D5J,OAAA;YAAAyE,QAAA,EAAQ;UAAU;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,CAAA3D,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEzD,KAAK,KAAI,SAAS,eAACxC,OAAA;YAAAyJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjE5J,OAAA;YAAMwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,gBACzBzE,OAAA,CAACP,QAAQ;cAAAgK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,qDACd;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAU;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzB5J,OAAA;YACEuN,KAAK,EAAEf,QAAQ,CAAC0B,QAAS;YACzBV,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE4I,QAAQ,EAAEvB,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YAC9EO,IAAI,EAAE,CAAE;YACRJ,WAAW,EAAC,qCAAqC;YACjDC,QAAQ;YACRC,SAAS,EAAE,EAAG;YACdC,SAAS,EAAE;UAAK;YAAApE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAgB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/B5J,OAAA;YACEuN,KAAK,EAAEf,QAAQ,CAAC2B,cAAe;YAC/BX,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE6I,cAAc,EAAExB,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YACpFO,IAAI,EAAE,CAAE;YACRJ,WAAW,EAAC,8CAA8C;YAC1DC,QAAQ;YACRC,SAAS,EAAE,EAAG;YACdC,SAAS,EAAE;UAAK;YAAApE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAmB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClC5J,OAAA;YACEuN,KAAK,EAAEf,QAAQ,CAAC4B,gBAAiB;YACjCZ,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE8I,gBAAgB,EAAEzB,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YACtFO,IAAI,EAAE,CAAE;YACRJ,WAAW,EAAC,+CAA+C;YAC3DC,QAAQ;YACRC,SAAS,EAAE,EAAG;YACdC,SAAS,EAAE;UAAK;YAAApE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,qBAAqB;UAAA/E,QAAA,eAClCzE,OAAA;YAAAyE,QAAA,gBACEzE,OAAA;cACEsN,IAAI,EAAC,UAAU;cACfuB,OAAO,EAAErC,QAAQ,CAAC/D,UAAW;cAC7B+E,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAEmD,UAAU,EAAEkE,CAAC,CAACc,MAAM,CAACoB;cAAQ,CAAC,CAAC;YAAE;cAAApF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnF,CAAC,eACF5J,OAAA,CAACP,QAAQ;cAAAgK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,oBAEd;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,eAAe;UAAA/E,QAAA,gBAC5BzE,OAAA;YAAQsN,IAAI,EAAC,QAAQ;YAACzD,OAAO,EAAEqB,OAAQ;YAAC6C,QAAQ,EAAElN,OAAQ;YAAA4D,QAAA,EAAC;UAE3D;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5J,OAAA;YACEsN,IAAI,EAAC,QAAQ;YACb9D,SAAS,EAAC,gBAAgB;YAC1BuE,QAAQ,EAAElN,OAAO,IAAI,CAAC2L,QAAQ,CAAChK,KAAK,IAAI,CAACgK,QAAQ,CAAC0B,QAAQ,IAAI,CAAC1B,QAAQ,CAAC2B,cAAc,IAAI,CAAC3B,QAAQ,CAAC4B,gBAAiB;YAAA3J,QAAA,EAEpH5D,OAAO,GAAG,aAAa,GAAG;UAAgB;YAAA4I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAqE,GAAA,CAtKM7C,YAAY;AAAA0D,GAAA,GAAZ1D,YAAY;AAuKlB,MAAMC,iBAAiB,GAAGA,CAAC;EACzBpF,SAAS;EACTY,QAAQ;EACRhG,OAAO;EACPqK,OAAO;EACPN,MAAM;EACNC,QAAQ;EACRS,SAAS;EACTC,gBAAgB;EAChBR;AACF,CAAC,KAAK;EACJ1K,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAE;IAC5D2F,SAAS,EAAEA,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEzD,KAAK;IAC3B8D,WAAW,EAAEL,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAErC,EAAE;IAC1BmL,aAAa,EAAElI,QAAQ,CAACnE,MAAM;IAC9B7B,OAAO;IACPgG,QAAQ,EAAEA,QAAQ;IAClBmI,YAAY,EAAEnI,QAAQ,CAAC,CAAC;EAC1B,CAAC,CAAC;EAEF,oBACE7G,OAAA;IAAKwJ,SAAS,EAAC,eAAe;IAAA/E,QAAA,eAC5BzE,OAAA;MAAKwJ,SAAS,EAAC,aAAa;MAAA/E,QAAA,gBAC1BzE,OAAA;QAAKwJ,SAAS,EAAC,cAAc;QAAA/E,QAAA,gBAC3BzE,OAAA;UAAAyE,QAAA,GAAI,eAAa,EAACwB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEzD,KAAK;QAAA;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxC5J,OAAA;UAAQ6J,OAAO,EAAEqB,OAAQ;UAAAzG,QAAA,eACvBzE,OAAA,CAACF,GAAG;YAAA2J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN5J,OAAA;QAAKwJ,SAAS,EAAC,uBAAuB;QAAA/E,QAAA,gBACpCzE,OAAA;UAAKwJ,SAAS,EAAC,sBAAsB;UAAA/E,QAAA,gBACnCzE,OAAA;YAAKwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,gBACxBzE,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAU;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC3D,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEzD,KAAK;YAAA;cAAAiH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrD5J,OAAA;cAAAyE,QAAA,gBAAGzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAe;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC/C,QAAQ,CAACnE,MAAM;YAAA;cAAA+G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAEzD5J,OAAA;cAAK8J,KAAK,EAAE;gBAACO,QAAQ,EAAE,MAAM;gBAAEL,KAAK,EAAE,MAAM;gBAAEiF,SAAS,EAAE,MAAM;gBAAEhF,OAAO,EAAE,MAAM;gBAAEF,eAAe,EAAE;cAAS,CAAE;cAAAtF,QAAA,gBAC5GzE,OAAA;gBAAAyE,QAAA,EAAQ;cAAW;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAAA5J,OAAA;gBAAAyJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,kBACnB,EAAC3D,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAErC,EAAE,eAAC5D,OAAA;gBAAAyJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,2BACX,EAAC/C,QAAQ,CAACnE,MAAM,eAAC1C,OAAA;gBAAAyJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,aACpC,EAAC/I,OAAO,CAACsL,QAAQ,CAAC,CAAC,eAACnM,OAAA;gBAAAyJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,mBACnB,EAACsF,IAAI,CAACC,SAAS,CAACtI,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAAA;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN5J,OAAA;YACEwJ,SAAS,EAAC,gBAAgB;YAC1BK,OAAO,EAAEA,CAAA,KAAM;cACbxJ,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;cACpDyK,YAAY,CAAC,CAAC;YAChB,CAAE;YACFjB,KAAK,EAAE;cACLC,eAAe,EAAE,SAAS;cAC1BC,KAAK,EAAE,OAAO;cACdC,OAAO,EAAE,WAAW;cACpBC,MAAM,EAAE,MAAM;cACdC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,SAAS;cACjBC,QAAQ,EAAE,MAAM;cAChBC,UAAU,EAAE;YACd,CAAE;YAAA7F,QAAA,gBAEFzE,OAAA,CAAClB,MAAM;cAACgL,KAAK,EAAE;gBAACS,WAAW,EAAE;cAAK;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,mBAEzC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAEL/I,OAAO,gBACNb,OAAA;UAAKwJ,SAAS,EAAC,mBAAmB;UAAA/E,QAAA,gBAChCzE,OAAA;YAAKwJ,SAAS,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACvC5J,OAAA;YAAAyE,QAAA,EAAG;UAAmB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,GACJ/C,QAAQ,CAACnE,MAAM,GAAG,CAAC,gBACrB1C,OAAA;UAAKwJ,SAAS,EAAC,eAAe;UAAA/E,QAAA,EAC3BoC,QAAQ,CAAC/B,GAAG,CAAC,CAACoC,OAAO,EAAE5C,KAAK,KAAK;YAChCjE,OAAO,CAACC,GAAG,CAAC,wBAAwBgE,KAAK,GAAG,CAAC,GAAG,EAAE4C,OAAO,CAAC;YAC1D,oBACElH,OAAA,CAACoP,eAAe;cAEdlI,OAAO,EAAEA,OAAQ;cACjB0D,MAAM,EAAEA,MAAO;cACfC,QAAQ,EAAEA,QAAS;cACnBS,SAAS,EAAEA,SAAU;cACrBC,gBAAgB,EAAEA;YAAiB,GAL9BrE,OAAO,CAACtD,EAAE;cAAA6F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMhB,CAAC;UAEN,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAEN5J,OAAA;UAAKwJ,SAAS,EAAC,sBAAsB;UAAA/E,QAAA,gBACnCzE,OAAA,CAACX,UAAU;YAACuD,IAAI,EAAE;UAAG;YAAA6G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxB5J,OAAA;YAAAyE,QAAA,EAAI;UAAiB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1B5J,OAAA;YAAAyE,QAAA,EAAG;UAA6C;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACpD5J,OAAA;YAAK8J,KAAK,EAAE;cAACO,QAAQ,EAAE,MAAM;cAAEL,KAAK,EAAE,MAAM;cAAEiF,SAAS,EAAE;YAAM,CAAE;YAAAxK,QAAA,gBAC/DzE,OAAA;cAAAyE,QAAA,EAAQ;YAAM;cAAAgF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,kBAAc,EAAC/C,QAAQ,CAACnE,MAAM,EAAC,0BAAwB,EAACuD,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAErC,EAAE;UAAA;YAAA6F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC,eACN5J,OAAA;YACEwJ,SAAS,EAAC,gBAAgB;YAC1BK,OAAO,EAAEA,CAAA,KAAM;cACbxJ,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;cAC5DyK,YAAY,CAAC,CAAC;YAChB,CAAE;YACFjB,KAAK,EAAE;cACLC,eAAe,EAAE,SAAS;cAC1BC,KAAK,EAAE,OAAO;cACdC,OAAO,EAAE,WAAW;cACpBC,MAAM,EAAE,MAAM;cACdC,YAAY,EAAE,KAAK;cACnBC,MAAM,EAAE,SAAS;cACjBC,QAAQ,EAAE,MAAM;cAChBC,UAAU,EAAE;YACd,CAAE;YAAA7F,QAAA,gBAEFzE,OAAA,CAAClB,MAAM;cAACgL,KAAK,EAAE;gBAACS,WAAW,EAAE;cAAK;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,qBAEzC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAyF,GAAA,GA3HMhE,iBAAiB;AA4HvB,MAAM+D,eAAe,GAAGA,CAAC;EACvBlI,OAAO;EACP0D,MAAM;EACNC,QAAQ;EACRS,SAAS;EACTC;AACF,CAAC,KAAK;EAAA+D,GAAA;EAAA,IAAAC,iBAAA,EAAAC,kBAAA;EACJ,MAAM,CAAC5D,QAAQ,EAAEC,WAAW,CAAC,GAAGrN,QAAQ,CAAC,KAAK,CAAC;EAE/C6B,OAAO,CAACC,GAAG,CAAC,2CAA2C,EAAE;IACvDsD,EAAE,EAAEsD,OAAO,CAACtD,EAAE;IACdpB,KAAK,EAAE0E,OAAO,CAAC1E,KAAK;IACpB0L,QAAQ,GAAAqB,iBAAA,GAAErI,OAAO,CAACgH,QAAQ,cAAAqB,iBAAA,uBAAhBA,iBAAA,CAAkBE,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;IAC5CvH,QAAQ,EAAEhB,OAAO,CAACgB,QAAQ;IAC1BO,UAAU,EAAEvB,OAAO,CAACuB,UAAU;IAC9BiH,SAAS,EAAExI,OAAO,CAACwI,SAAS;IAC5BC,SAAS,EAAEzI,OAAO,CAACyI,SAAS;IAC5BC,SAAS,EAAE1I,OAAO,CAAC0I,SAAS;IAC5BC,WAAW,EAAE3I;EACf,CAAC,CAAC;EAEF,oBACElH,OAAA;IAAKwJ,SAAS,EAAE,qBAAqB,CAACtC,OAAO,CAACgB,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAzD,QAAA,gBACzEzE,OAAA;MAAKwJ,SAAS,EAAC,cAAc;MAAA/E,QAAA,gBAC3BzE,OAAA;QAAKwJ,SAAS,EAAC,uBAAuB;QAAA/E,QAAA,gBACpCzE,OAAA;UAAIwJ,SAAS,EAAC,eAAe;UAAA/E,QAAA,EAAEyC,OAAO,CAAC1E;QAAK;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClD5J,OAAA;UAAKwJ,SAAS,EAAC,gBAAgB;UAAA/E,QAAA,GAC5ByC,OAAO,CAACuB,UAAU,iBACjBzI,OAAA;YAAMwJ,SAAS,EAAC,gBAAgB;YAAA/E,QAAA,gBAC9BzE,OAAA,CAACL,MAAM;cAAA8J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,aACZ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACP,EACA,CAAC1C,OAAO,CAACgB,QAAQ,iBAChBlI,OAAA;YAAMwJ,SAAS,EAAC,gBAAgB;YAAA/E,QAAA,EAAC;UAAQ;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAChD,eAED5J,OAAA;YAAMwJ,SAAS,EAAC,aAAa;YAACM,KAAK,EAAE;cAACC,eAAe,EAAE,SAAS;cAAEC,KAAK,EAAE;YAAS,CAAE;YAAAvF,QAAA,GAAC,MAC/E,EAACyC,OAAO,CAACtD,EAAE;UAAA;YAAA6F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN5J,OAAA;QAAGwJ,SAAS,EAAC,kBAAkB;QAAA/E,QAAA,GAC5B,EAAA+K,kBAAA,GAAAtI,OAAO,CAACgH,QAAQ,cAAAsB,kBAAA,uBAAhBA,kBAAA,CAAkBC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,KAAI,uBAAuB,EAAC,KAClE;MAAA;QAAAhG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ5J,OAAA;QAAKwJ,SAAS,EAAC,eAAe;QAAA/E,QAAA,gBAC5BzE,OAAA;UAAMwJ,SAAS,EAAC,MAAM;UAAA/E,QAAA,gBACpBzE,OAAA,CAACN,KAAK;YAAA+J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,EAAC1C,OAAO,CAACwI,SAAS,IAAI,CAAC,EAAC,QACpC;QAAA;UAAAjG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACP5J,OAAA;UAAMwJ,SAAS,EAAC,MAAM;UAAA/E,QAAA,GAAC,WACZ,EAACyC,OAAO,CAACyI,SAAS,GAAG,IAAIG,IAAI,CAAC5I,OAAO,CAACyI,SAAS,CAAC,CAACI,kBAAkB,CAAC,CAAC,GAAG,SAAS;QAAA;UAAAtG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC,eACP5J,OAAA;UAAMwJ,SAAS,EAAC,MAAM;UAAA/E,QAAA,GAAC,WACZ,EAACyC,OAAO,CAAC0I,SAAS,GAAG,IAAIE,IAAI,CAAC5I,OAAO,CAAC0I,SAAS,CAAC,CAACG,kBAAkB,CAAC,CAAC,GAAG,SAAS;QAAA;UAAAtG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5J,OAAA;MAAKwJ,SAAS,EAAC,iBAAiB;MAAA/E,QAAA,gBAE9BzE,OAAA;QACEwJ,SAAS,EAAC,uBAAuB;QACjCK,OAAO,EAAEA,CAAA,KAAM;UACbxJ,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;UACjEoI,MAAM,CAAC1D,OAAO,CAAC;QACjB,CAAE;QACF1E,KAAK,EAAC,cAAc;QACpBsH,KAAK,EAAE;UACLC,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,OAAO;UACdC,OAAO,EAAE,UAAU;UACnB+F,MAAM,EAAE,KAAK;UACb9F,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE;QACZ,CAAE;QAAA5F,QAAA,gBAEFzE,OAAA,CAACjB,MAAM;UAAC+K,KAAK,EAAE;YAACS,WAAW,EAAE;UAAK;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAEzC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGT5J,OAAA;QACEwJ,SAAS,EAAC,sBAAsB;QAChCK,OAAO,EAAEA,CAAA,KAAM;UACbxJ,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;UACnEqI,QAAQ,CAAC3D,OAAO,CAAC;QACnB,CAAE;QACF1E,KAAK,EAAC,gBAAgB;QACtBsH,KAAK,EAAE;UACLC,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,OAAO;UACdC,OAAO,EAAE,UAAU;UACnB+F,MAAM,EAAE,KAAK;UACb9F,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE;QACZ,CAAE;QAAA5F,QAAA,gBAEFzE,OAAA,CAAChB,QAAQ;UAAC8K,KAAK,EAAE;YAACS,WAAW,EAAE;UAAK;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,kBAE3C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGT5J,OAAA;QACEwJ,SAAS,EAAC,wBAAwB;QAClCK,OAAO,EAAEA,CAAA,KAAM;UACbxJ,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;UAC5E+I,gBAAgB,CAACrE,OAAO,CAAC;QAC3B,CAAE;QACF1E,KAAK,EAAE0E,OAAO,CAACuB,UAAU,GAAG,sBAAsB,GAAG,eAAgB;QACrEqB,KAAK,EAAE;UACLC,eAAe,EAAE7C,OAAO,CAACuB,UAAU,GAAG,SAAS,GAAG,SAAS;UAC3DuB,KAAK,EAAE,OAAO;UACdC,OAAO,EAAE,UAAU;UACnB+F,MAAM,EAAE,KAAK;UACb9F,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE;QACZ,CAAE;QAAA5F,QAAA,gBAEFzE,OAAA,CAACL,MAAM;UAACmK,KAAK,EAAE;YAACS,WAAW,EAAE;UAAK;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACtC1C,OAAO,CAACuB,UAAU,GAAG,iBAAiB,GAAG,eAAe;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eAGT5J,OAAA;QACEwJ,SAAS,EAAC,uBAAuB;QACjCK,OAAO,EAAEA,CAAA,KAAM;UACbxJ,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;UACpE8I,SAAS,CAACpE,OAAO,CAAC;QACpB,CAAE;QACF1E,KAAK,EAAE0E,OAAO,CAACgB,QAAQ,GAAG,iBAAiB,GAAG,iBAAkB;QAChE4B,KAAK,EAAE;UACLC,eAAe,EAAE7C,OAAO,CAACgB,QAAQ,GAAG,SAAS,GAAG,SAAS;UACzD8B,KAAK,EAAE,OAAO;UACdC,OAAO,EAAE,UAAU;UACnB+F,MAAM,EAAE,KAAK;UACb9F,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE;QACZ,CAAE;QAAA5F,QAAA,gBAEFzE,OAAA,CAACJ,SAAS;UAACkK,KAAK,EAAE;YAACS,WAAW,EAAE;UAAK;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACzC1C,OAAO,CAACgB,QAAQ,GAAG,SAAS,GAAG,SAAS;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eAET5J,OAAA;QAAKwJ,SAAS,EAAC,aAAa;QAAA/E,QAAA,gBAC1BzE,OAAA;UACE6J,OAAO,EAAEA,CAAA,KAAM;YACbxJ,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;YAC/DqJ,WAAW,CAAC,CAACD,QAAQ,CAAC;UACxB,CAAE;UACFpJ,KAAK,EAAC,cAAc;UACpBsH,KAAK,EAAE;YACLC,eAAe,EAAE,SAAS;YAC1BC,KAAK,EAAE,OAAO;YACdC,OAAO,EAAE,UAAU;YACnB+F,MAAM,EAAE,KAAK;YACb9F,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE,SAAS;YACjBC,QAAQ,EAAE;UACZ,CAAE;UAAA5F,QAAA,gBAEFzE,OAAA,CAACT,cAAc;YAACuK,KAAK,EAAE;cAACS,WAAW,EAAE;YAAK;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEjD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRgC,QAAQ,iBACP5L,OAAA;UAAKwJ,SAAS,EAAC,eAAe;UAACM,KAAK,EAAE;YAACmG,MAAM,EAAE,IAAI;YAAElG,eAAe,EAAE,OAAO;YAAEG,MAAM,EAAE,gBAAgB;YAAEC,YAAY,EAAE,KAAK;YAAEF,OAAO,EAAE;UAAK,CAAE;UAAAxF,QAAA,gBAC5IzE,OAAA;YAAQ6J,OAAO,EAAEA,CAAA,KAAM;cACrBxJ,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;cACnEoI,MAAM,CAAC1D,OAAO,CAAC;cACf2E,WAAW,CAAC,KAAK,CAAC;YACpB,CAAE;YAAC/B,KAAK,EAAE;cAACoG,OAAO,EAAE,OAAO;cAAEC,KAAK,EAAE,MAAM;cAAElG,OAAO,EAAE,KAAK;cAAE+F,MAAM,EAAE;YAAK,CAAE;YAAAvL,QAAA,gBACzEzE,OAAA,CAACjB,MAAM;cAAA0K,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,iBACZ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5J,OAAA;YAAQ6J,OAAO,EAAEA,CAAA,KAAM;cACrBxJ,OAAO,CAACC,GAAG,CAAC,kDAAkD,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;cAC9E+I,gBAAgB,CAACrE,OAAO,CAAC;cACzB2E,WAAW,CAAC,KAAK,CAAC;YACpB,CAAE;YAAC/B,KAAK,EAAE;cAACoG,OAAO,EAAE,OAAO;cAAEC,KAAK,EAAE,MAAM;cAAElG,OAAO,EAAE,KAAK;cAAE+F,MAAM,EAAE;YAAK,CAAE;YAAAvL,QAAA,gBACzEzE,OAAA,CAACL,MAAM;cAAA8J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,EAAC1C,OAAO,CAACuB,UAAU,GAAG,iBAAiB,GAAG,eAAe;UAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eACT5J,OAAA;YAAQ6J,OAAO,EAAEA,CAAA,KAAM;cACrBxJ,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;cACtE8I,SAAS,CAACpE,OAAO,CAAC;cAClB2E,WAAW,CAAC,KAAK,CAAC;YACpB,CAAE;YAAC/B,KAAK,EAAE;cAACoG,OAAO,EAAE,OAAO;cAAEC,KAAK,EAAE,MAAM;cAAElG,OAAO,EAAE,KAAK;cAAE+F,MAAM,EAAE;YAAK,CAAE;YAAAvL,QAAA,gBACzEzE,OAAA,CAACJ,SAAS;cAAA6J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,EAAC1C,OAAO,CAACgB,QAAQ,GAAG,SAAS,GAAG,SAAS;UAAA;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACT5J,OAAA;YAAQ6J,OAAO,EAAEA,CAAA,KAAM;cACrBxJ,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;cACrEqI,QAAQ,CAAC3D,OAAO,CAAC;cACjB2E,WAAW,CAAC,KAAK,CAAC;YACpB,CAAE;YAACrC,SAAS,EAAC,QAAQ;YAACM,KAAK,EAAE;cAACoG,OAAO,EAAE,OAAO;cAAEC,KAAK,EAAE,MAAM;cAAElG,OAAO,EAAE,KAAK;cAAE+F,MAAM,EAAE,KAAK;cAAEjG,eAAe,EAAE,SAAS;cAAEC,KAAK,EAAE;YAAO,CAAE;YAAAvF,QAAA,gBACxIzE,OAAA,CAAChB,QAAQ;cAAAyK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,mBACd;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA0F,GAAA,CAjNMF,eAAe;AAAAgB,GAAA,GAAfhB,eAAe;AAkNrB,MAAM5D,gBAAgB,GAAGA,CAAC;EAAEtE,OAAO;EAAEgE,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAkF,GAAA;EAAA,IAAAC,kBAAA,EAAAC,qBAAA,EAAAC,mBAAA;EACzD,MAAM,CAAChE,QAAQ,EAAEC,WAAW,CAAC,GAAGjO,QAAQ,CAAC;IACvCgE,KAAK,EAAE,CAAA0E,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE1E,KAAK,KAAI,EAAE;IAC3B0L,QAAQ,EAAE,CAAAhH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEgH,QAAQ,KAAI,EAAE;IACjCC,cAAc,EAAE,CAAAjH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEiH,cAAc,KAAI,EAAE;IAC7CC,gBAAgB,EAAE,CAAAlH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEkH,gBAAgB,KAAI,EAAE;IACjD3F,UAAU,EAAE,CAAAvB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEuB,UAAU,KAAI;EACrC,CAAC,CAAC;EACF,MAAM,CAAC5H,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAE7C6B,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE4G,OAAO,CAAC1E,KAAK,CAAC;EAE9D,MAAMkK,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB9L,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACFT,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEkM,QAAQ,CAAC;MAChE,MAAM5N,WAAW,CAAC4J,aAAa,CAACtB,OAAO,CAACtD,EAAE,EAAE4I,QAAQ,CAAC;MACrDnM,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCzB,KAAK,CAAC4I,OAAO,CAAC,8BAA8B,CAAC;MAC7C0D,MAAM,CAAC,CAAC;IACV,CAAC,CAAC,OAAO1F,KAAK,EAAE;MACdpF,OAAO,CAACoF,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD5G,KAAK,CAAC4G,KAAK,CAAC,0BAA0B,CAAC;IACzC,CAAC,SAAS;MACR3E,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKwJ,SAAS,EAAC,eAAe;IAAA/E,QAAA,eAC5BzE,OAAA;MAAKwJ,SAAS,EAAC,aAAa;MAAA/E,QAAA,gBAC1BzE,OAAA;QAAKwJ,SAAS,EAAC,cAAc;QAAA/E,QAAA,gBAC3BzE,OAAA;UAAAyE,QAAA,GAAI,gBAAc,EAACyC,OAAO,CAAC1E,KAAK;QAAA;UAAAiH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtC5J,OAAA;UAAQ6J,OAAO,EAAEqB,OAAQ;UAAAzG,QAAA,EAAC;QAAC;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eAEN5J,OAAA;QAAMqN,QAAQ,EAAEX,YAAa;QAAAjI,QAAA,gBAC3BzE,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAa;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5B5J,OAAA;YACEsN,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEf,QAAQ,CAAChK,KAAM;YACtBgL,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE9C,KAAK,EAAEmK,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YAC3EI,QAAQ;UAAA;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAQ;UAAO;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,EAAA0G,kBAAA,GAAApJ,OAAO,CAACjB,SAAS,cAAAqK,kBAAA,wBAAAC,qBAAA,GAAjBD,kBAAA,CAAmB7P,MAAM,cAAA8P,qBAAA,uBAAzBA,qBAAA,CAA2B/N,KAAK,KAAI,SAAS,eAACxC,OAAA;YAAAyJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9E5J,OAAA;YAAAyE,QAAA,EAAQ;UAAU;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC,EAAA4G,mBAAA,GAAAtJ,OAAO,CAACjB,SAAS,cAAAuK,mBAAA,uBAAjBA,mBAAA,CAAmBhO,KAAK,KAAI,SAAS,eAACxC,OAAA;YAAAyJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzE5J,OAAA;YAAMwJ,SAAS,EAAC,WAAW;YAAA/E,QAAA,EAAC;UAE5B;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAQ;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvB5J,OAAA;YACEuN,KAAK,EAAEf,QAAQ,CAAC0B,QAAS;YACzBV,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE4I,QAAQ,EAAEvB,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YAC9EO,IAAI,EAAE,CAAE;YACRH,QAAQ;UAAA;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAc;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7B5J,OAAA;YACEuN,KAAK,EAAEf,QAAQ,CAAC2B,cAAe;YAC/BX,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE6I,cAAc,EAAExB,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YACpFO,IAAI,EAAE,CAAE;YACRH,QAAQ;UAAA;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,YAAY;UAAA/E,QAAA,gBACzBzE,OAAA;YAAAyE,QAAA,EAAO;UAAiB;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChC5J,OAAA;YACEuN,KAAK,EAAEf,QAAQ,CAAC4B,gBAAiB;YACjCZ,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;cAAE,GAAGA,IAAI;cAAE8I,gBAAgB,EAAEzB,CAAC,CAACc,MAAM,CAACF;YAAM,CAAC,CAAC,CAAE;YACtFO,IAAI,EAAE,CAAE;YACRH,QAAQ;UAAA;YAAAlE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,qBAAqB;UAAA/E,QAAA,eAClCzE,OAAA;YAAAyE,QAAA,gBACEzE,OAAA;cACEsN,IAAI,EAAC,UAAU;cACfuB,OAAO,EAAErC,QAAQ,CAAC/D,UAAW;cAC7B+E,QAAQ,EAAGb,CAAC,IAAKF,WAAW,CAACnH,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAEmD,UAAU,EAAEkE,CAAC,CAACc,MAAM,CAACoB;cAAQ,CAAC,CAAC;YAAE;cAAApF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnF,CAAC,oBAEJ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN5J,OAAA;UAAKwJ,SAAS,EAAC,eAAe;UAAA/E,QAAA,gBAC5BzE,OAAA;YAAQsN,IAAI,EAAC,QAAQ;YAACzD,OAAO,EAAEqB,OAAQ;YAAC6C,QAAQ,EAAElN,OAAQ;YAAA4D,QAAA,EAAC;UAE3D;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT5J,OAAA;YAAQsN,IAAI,EAAC,QAAQ;YAAC9D,SAAS,EAAC,gBAAgB;YAACuE,QAAQ,EAAElN,OAAQ;YAAA4D,QAAA,EAChE5D,OAAO,GAAG,aAAa,GAAG;UAAgB;YAAA4I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACyG,GAAA,CA9GI7E,gBAAgB;AAAAiF,GAAA,GAAhBjF,gBAAgB;AAgHtB,eAAerL,mBAAmB;AAClsL,EAAA,EAAAa,GAAA,EAAA0B,GAAA,EAAAc,GAAA,EAAAO,GAAA,EAAAe,GAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAjF,EAAA;AAAAiF,YAAA,CAAApE,GAAA;AAAAoE,YAAA,CAAA1C,GAAA;AAAA0C,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}