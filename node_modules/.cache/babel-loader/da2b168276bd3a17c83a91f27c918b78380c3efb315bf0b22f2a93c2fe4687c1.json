{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/SubDomainManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/components/domains/SubDomainManagement.js - CORRECTED VERSION\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport { FiPlus, FiEdit, FiTrash2, FiChevronDown, FiChevronRight, FiFolder, FiFolderPlus, FiFileText, FiArrowLeft, FiMoreVertical, FiMove, FiTarget } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubDomainManagement = () => {\n  _s();\n  console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  const {\n    domainId\n  } = useParams();\n  const navigate = useNavigate();\n  const [domain, setDomain] = useState(null);\n  const [subDomains, setSubDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSubDomain, setEditingSubDomain] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n  console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n    domainId,\n    domain: domain === null || domain === void 0 ? void 0 : domain.title,\n    subDomainsCount: subDomains.length,\n    loading,\n    selectedParent: selectedParent === null || selectedParent === void 0 ? void 0 : selectedParent.title,\n    expandedCount: expandedNodes.size\n  });\n  useEffect(() => {\n    if (domainId) {\n      console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n      fetchDomainAndSubDomains();\n    }\n  }, [domainId]);\n  const fetchDomainAndSubDomains = async () => {\n    try {\n      var _domainsResponse$data, _domainsResponse$data2, _domainsResponse$data3, _subDomainsResponse$d, _subDomainsResponse$d2, _subDomainsResponse$d3;\n      setLoading(true);\n      console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n      console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n      // ‚úÖ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n      console.log('üåê SUBDOMAIN FETCH - Calling getDomains (no params)');\n      const domainsResponse = await authService.getDomains();\n      console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n      // Extract specific domain from response\n      let domainData = null;\n      const domains = ((_domainsResponse$data = domainsResponse.data) === null || _domainsResponse$data === void 0 ? void 0 : _domainsResponse$data.domains) || ((_domainsResponse$data2 = domainsResponse.data) === null || _domainsResponse$data2 === void 0 ? void 0 : (_domainsResponse$data3 = _domainsResponse$data2.data) === null || _domainsResponse$data3 === void 0 ? void 0 : _domainsResponse$data3.domains) || [];\n      if (domains.length > 0) {\n        domainData = domains.find(d => d.id == domainId);\n      }\n      console.log('üéØ SUBDOMAIN FETCH - Found domain:', domainData);\n\n      // If we don't have domain data, create a placeholder\n      if (!domainData) {\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n        domainData = {\n          id: domainId,\n          title: `Domain ${domainId}`,\n          description: 'Domain not found in list',\n          projectCount: 0\n        };\n      }\n      setDomain(domainData);\n\n      // ‚úÖ CORRECTED: Get subdomains using the correct API\n      console.log('üåê SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n      const subDomainsResponse = await authService.getSubDomains({\n        domainId: domainId\n      });\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      const subDomainsData = ((_subDomainsResponse$d = subDomainsResponse.data) === null || _subDomainsResponse$d === void 0 ? void 0 : _subDomainsResponse$d.subDomains) || ((_subDomainsResponse$d2 = subDomainsResponse.data) === null || _subDomainsResponse$d2 === void 0 ? void 0 : (_subDomainsResponse$d3 = _subDomainsResponse$d2.data) === null || _subDomainsResponse$d3 === void 0 ? void 0 : _subDomainsResponse$d3.subDomains) || [];\n      console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n      setSubDomains(subDomainsData);\n\n      // Auto-expand first level\n      if (subDomainsData.length > 0) {\n        const firstLevelIds = subDomainsData.map(sd => sd.id);\n        setExpandedNodes(new Set(firstLevelIds));\n        console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n      }\n\n      // ‚úÖ ALTERNATIVE: Try hierarchy API as fallback\n      try {\n        var _hierarchyResponse$da;\n        console.log('üåê SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n        const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n        console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        const hierarchyData = ((_hierarchyResponse$da = hierarchyResponse.data) === null || _hierarchyResponse$da === void 0 ? void 0 : _hierarchyResponse$da.data) || hierarchyResponse.data;\n        if (hierarchyData !== null && hierarchyData !== void 0 && hierarchyData.subDomains && hierarchyData.subDomains.length > 0) {\n          console.log('üéØ SUBDOMAIN FETCH - Using hierarchy data instead');\n          setSubDomains(hierarchyData.subDomains);\n\n          // Update domain info if more complete\n          if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n            setDomain(prev => ({\n              ...prev,\n              ...hierarchyData\n            }));\n          }\n        }\n      } catch (hierarchyError) {\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n      }\n    } catch (error) {\n      console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n      console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n      toast.error('Failed to fetch domain information');\n\n      // Create fallback domain\n      setDomain({\n        id: domainId,\n        title: `Domain ${domainId}`,\n        description: 'Error loading domain details',\n        projectCount: 0\n      });\n      setSubDomains([]);\n    } finally {\n      setLoading(false);\n      console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n    }\n  };\n  const handleAddSubDomain = (parent = null) => {\n    console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n    console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    setSelectedParent(parent);\n    setEditingSubDomain(null);\n    setShowAddModal(true);\n    console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', {\n      showAddModal: true,\n      selectedParent: parent === null || parent === void 0 ? void 0 : parent.title,\n      editingSubDomain: null\n    });\n  };\n  const handleEditSubDomain = subDomain => {\n    console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n    console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    setSelectedParent(null);\n    setEditingSubDomain(subDomain);\n    setShowAddModal(true);\n  };\n  const handleDeleteSubDomain = async subDomain => {\n    const hasChildren = subDomain.children && subDomain.children.length > 0;\n    const hasProjects = subDomain.projectCount > 0;\n    let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n    if (hasChildren) {\n      confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n    }\n    if (hasProjects) {\n      confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n    }\n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n    try {\n      console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n      console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n      console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n      console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      const response = await authService.deleteSubDomain(subDomain.id);\n      console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      toast.success('Sub-domain deleted successfully');\n      fetchDomainAndSubDomains();\n    } catch (error) {\n      console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n      toast.error('Failed to delete sub-domain');\n    }\n  };\n  const toggleExpanded = nodeId => {\n    console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n      console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n    } else {\n      newExpanded.add(nodeId);\n      console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n  if (loading) {\n    console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading sub-domains...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n  console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subdomain-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"breadcrumb-link\",\n            onClick: () => navigate('/domains'),\n            children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), \"Domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-separator\",\n            children: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"breadcrumb-current\",\n            children: (domain === null || domain === void 0 ? void 0 : domain.title) || 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SubDomain Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Manage the hierarchical structure of \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'this domain']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: () => handleAddSubDomain(),\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), \"Add Root SubDomain\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-guide\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How to Build Your SubDomain Hierarchy:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guide-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\\"Add Root SubDomain\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 47\n            }, this), \" to create top-level categories\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Click the \", /*#__PURE__*/_jsxDEV(FiPlus, {\n              className: \"inline-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 51\n            }, this), \" button next to any subdomain to add children\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guide-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Only \", /*#__PURE__*/_jsxDEV(FiTarget, {\n              className: \"inline-icon leaf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 46\n            }, this), \" leaf subdomains can have projects assigned\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), domain && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"domain-info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-icon\",\n        children: /*#__PURE__*/_jsxDEV(FiFolder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"domain-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: domain.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: domain.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"domain-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: subDomains.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), \" root sub-domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: domain.projectCount || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), \" total projects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subdomain-tree-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SubDomain Hierarchy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiFolder, {\n              className: \"folder-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), \"Has children\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(FiTarget, {\n              className: \"leaf-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), \"Leaf (can have projects)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), subDomains.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"subdomain-tree\",\n        children: subDomains.map(subDomain => /*#__PURE__*/_jsxDEV(SubDomainNode, {\n          subDomain: subDomain,\n          level: 0,\n          isExpanded: expandedNodes.has(subDomain.id),\n          onToggleExpanded: toggleExpanded,\n          onEdit: handleEditSubDomain,\n          onDelete: handleDeleteSubDomain,\n          onAddChild: handleAddSubDomain,\n          expandedNodes: expandedNodes\n        }, subDomain.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-tree-state\",\n        children: [/*#__PURE__*/_jsxDEV(FiFolderPlus, {\n          size: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No SubDomains Yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start organizing your \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'domain', \" projects by creating subdomains\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-examples\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Example Structure:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-tree\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item\",\n              children: \"\\uD83D\\uDCC2 Machine Learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item nested\",\n              children: \"\\uD83C\\uDFAF Deep Learning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item nested\",\n              children: \"\\uD83C\\uDFAF Computer Vision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"example-item\",\n              children: \"\\uD83C\\uDFAF Data Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button large\",\n            onClick: () => handleAddSubDomain(),\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), \"Create Your First SubDomain\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"\\uD83D\\uDCA1 Tip: Start with broad categories, then add specific subcategories as needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(SubDomainModal, {\n      subDomain: editingSubDomain,\n      parent: selectedParent,\n      domain: domain,\n      onClose: () => {\n        setShowAddModal(false);\n        setEditingSubDomain(null);\n        setSelectedParent(null);\n      },\n      onSave: () => {\n        setShowAddModal(false);\n        setEditingSubDomain(null);\n        setSelectedParent(null);\n        fetchDomainAndSubDomains();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n\n// SubDomain Node Component\n_s(SubDomainManagement, \"lp32VzwwmiT+yY65aYfsI0hRlQE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SubDomainManagement;\nconst SubDomainNode = ({\n  subDomain,\n  level,\n  isExpanded,\n  onToggleExpanded,\n  onEdit,\n  onDelete,\n  onAddChild,\n  expandedNodes\n}) => {\n  _s2();\n  const [showMenu, setShowMenu] = useState(false);\n  const hasChildren = subDomain.children && subDomain.children.length > 0;\n  const isLeaf = !hasChildren;\n  console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n    title: subDomain.title,\n    level,\n    hasChildren,\n    isLeaf,\n    isExpanded,\n    projectCount: subDomain.projectCount\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `subdomain-node level-${level}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-main\",\n        children: [hasChildren ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"expand-button\",\n          onClick: () => onToggleExpanded(subDomain.id),\n          children: isExpanded ? /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(FiChevronRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expand-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-icon\",\n          children: isLeaf ? /*#__PURE__*/_jsxDEV(FiTarget, {\n            className: \"leaf-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(FiFolder, {\n            className: \"folder-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"node-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"node-title\",\n            children: subDomain.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"node-description\",\n            children: subDomain.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-stats\",\n            children: [hasChildren && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge\",\n              children: [subDomain.children.length, \" sub-domains\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), subDomain.projectCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge projects\",\n              children: [subDomain.projectCount, \" projects\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), isLeaf && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-badge leaf\",\n              children: \"Can have projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button add\",\n          onClick: () => onAddChild(subDomain),\n          title: `Add child subdomain under \"${subDomain.title}\"`,\n          children: /*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowMenu(!showMenu),\n            title: \"More actions\",\n            children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onEdit(subDomain);\n                setShowMenu(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this), \" Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onAddChild(subDomain);\n                setShowMenu(false);\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), \" Add Child SubDomain\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                onDelete(subDomain);\n                setShowMenu(false);\n              },\n              className: \"danger\",\n              children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), hasChildren && isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-children\",\n      children: subDomain.children.map(child => /*#__PURE__*/_jsxDEV(SubDomainNode, {\n        subDomain: child,\n        level: level + 1,\n        isExpanded: expandedNodes.has(child.id),\n        onToggleExpanded: onToggleExpanded,\n        onEdit: onEdit,\n        onDelete: onDelete,\n        onAddChild: onAddChild,\n        expandedNodes: expandedNodes\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, this);\n};\n\n// SubDomain Modal Component - CORRECTED VERSION\n_s2(SubDomainNode, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c2 = SubDomainNode;\nconst SubDomainModal = ({\n  subDomain,\n  parent,\n  domain,\n  onClose,\n  onSave\n}) => {\n  _s3();\n  const [formData, setFormData] = useState({\n    title: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.title) || '',\n    description: (subDomain === null || subDomain === void 0 ? void 0 : subDomain.description) || ''\n  });\n  const [loading, setLoading] = useState(false);\n  console.log('üìù SUBDOMAIN MODAL - Props:', {\n    isEditing: !!subDomain,\n    parentTitle: parent === null || parent === void 0 ? void 0 : parent.title,\n    domainTitle: domain === null || domain === void 0 ? void 0 : domain.title,\n    formData\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const requestData = {\n        title: formData.title.trim(),\n        description: formData.description.trim(),\n        domainId: domain.id,\n        parentId: (parent === null || parent === void 0 ? void 0 : parent.id) || null\n      };\n      console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n      console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n      console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n      if (subDomain) {\n        console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n        const response = await authService.updateSubDomain(subDomain.id, requestData);\n        console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n        toast.success('Sub-domain updated successfully');\n      } else {\n        console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n        const response = await authService.createSubDomain(requestData);\n        console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n        toast.success('Sub-domain created successfully');\n      }\n      onSave();\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n      console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n      console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n      console.error('‚ùå SUBDOMAIN SAVE - Error data:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to save sub-domain';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getModalTitle = () => {\n    if (subDomain) {\n      return `Edit SubDomain: ${subDomain.title}`;\n    }\n    if (parent) {\n      return `Add SubDomain under: ${parent.title}`;\n    }\n    return `Add Root SubDomain in: ${(domain === null || domain === void 0 ? void 0 : domain.title) || 'Domain'}`;\n  };\n  const getLevel = () => {\n    if (!parent) return 'Root Level';\n    return `Level ${(parent.level || 0) + 1}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: getModalTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"SubDomain Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            placeholder: \"e.g., Machine Learning, Deep Learning\",\n            required: true,\n            minLength: 3,\n            maxLength: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.description,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              description: e.target.value\n            })),\n            rows: 3,\n            placeholder: \"Describe what this sub-domain covers...\",\n            maxLength: 500\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this), \" \", (domain === null || domain === void 0 ? void 0 : domain.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 66\n          }, this), parent && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Parent SubDomain:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this), \" \", parent.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Level:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this), \" \", getLevel()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading || !formData.title.trim(),\n            children: loading ? 'Saving...' : 'Save SubDomain'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 584,\n    columnNumber: 5\n  }, this);\n};\n_s3(SubDomainModal, \"GK/DCXfCNFb5ohLoW+l6KsTmPCs=\");\n_c3 = SubDomainModal;\nexport default SubDomainManagement;\n\n// // src/components/domains/SubDomainManagement.js - FIXED VERSION\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiChevronDown,\n//   FiChevronRight,\n//   FiFolder,\n//   FiFolderPlus,\n//   FiFileText,\n//   FiArrowLeft,\n//   FiMoreVertical,\n//   FiMove,\n//   FiTarget\n// } from 'react-icons/fi';\n\n// const SubDomainManagement = () => {\n//   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n//   const { domainId } = useParams();\n//   const navigate = useNavigate();\n\n//   const [domain, setDomain] = useState(null);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingSubDomain, setEditingSubDomain] = useState(null);\n//   const [selectedParent, setSelectedParent] = useState(null);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n//   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n//     domainId,\n//     domain: domain?.title,\n//     subDomainsCount: subDomains.length,\n//     loading,\n//     selectedParent: selectedParent?.title,\n//     expandedCount: expandedNodes.size\n//   });\n\n//   useEffect(() => {\n//     if (domainId) {\n//       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n//       fetchDomainAndSubDomains();\n//     }\n//   }, [domainId]);\n\n//   const fetchDomainAndSubDomains = async () => {\n//     try {\n//       setLoading(true);\n\n//       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n//       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n//       // First, let's try to get domain details\n//       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n//       const domainsResponse = await authService.getDomains({ id: domainId });\n//       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n//       // Extract domain from response\n//       let domainData = null;\n//       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n//         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n//       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n//         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n//       } else if (Array.isArray(domainsResponse.data)) {\n//         domainData = domainsResponse.data.find(d => d.id == domainId);\n//       }\n\n//       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n//       // If we don't have domain data, create a placeholder\n//       if (!domainData) {\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n//         domainData = {\n//           id: domainId,\n//           title: `Domain ${domainId}`,\n//           description: 'Loading domain details...',\n//           projectCount: 0\n//         };\n//       }\n\n//       setDomain(domainData);\n\n//       // Try to get hierarchy if domain exists\n//       try {\n//         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n//         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n//         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n//         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n//         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n//         setSubDomains(hierarchyData?.subDomains || []);\n\n//         // Auto-expand first level\n//         if (hierarchyData?.subDomains?.length > 0) {\n//           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n//           setExpandedNodes(new Set(firstLevelIds));\n//           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n//         }\n//       } catch (hierarchyError) {\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n//         setSubDomains([]);\n//       }\n\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n//       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n//       toast.error('Failed to fetch domain information');\n\n//       // Create fallback domain\n//       setDomain({\n//         id: domainId,\n//         title: `Domain ${domainId}`,\n//         description: 'Error loading domain details',\n//         projectCount: 0\n//       });\n//       setSubDomains([]);\n//     } finally {\n//       setLoading(false);\n//       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n//     }\n//   };\n\n//   const handleAddSubDomain = (parent = null) => {\n//     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n//     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n//     setSelectedParent(parent);\n//     setEditingSubDomain(null);\n//     setShowAddModal(true);\n\n//     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n//       showAddModal: true, \n//       selectedParent: parent?.title,\n//       editingSubDomain: null \n//     });\n//   };\n\n//   const handleEditSubDomain = (subDomain) => {\n//     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n//     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n//     setSelectedParent(null);\n//     setEditingSubDomain(subDomain);\n//     setShowAddModal(true);\n//   };\n\n//   const handleDeleteSubDomain = async (subDomain) => {\n//     const hasChildren = subDomain.children && subDomain.children.length > 0;\n//     const hasProjects = subDomain.projectCount > 0;\n\n//     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n//     if (hasChildren) {\n//       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n//     }\n//     if (hasProjects) {\n//       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n//     }\n\n//     if (!window.confirm(confirmMessage)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n//       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n//       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n//       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n//       const response = await authService.deleteSubDomain(subDomain.id);\n\n//       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n//       toast.success('Sub-domain deleted successfully');\n//       fetchDomainAndSubDomains();\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n//       toast.error('Failed to delete sub-domain');\n//     }\n//   };\n\n//   const toggleExpanded = (nodeId) => {\n//     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   if (loading) {\n//     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading sub-domains...</p>\n//       </div>\n//     );\n//   }\n\n//   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n//   return (\n//     <div className=\"subdomain-management\">\n//       {/* Header with Breadcrumb */}\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <div className=\"breadcrumb\">\n//             <button \n//               className=\"breadcrumb-link\"\n//               onClick={() => navigate('/domains')}\n//             >\n//               <FiArrowLeft />\n//               Domains\n//             </button>\n//             <span className=\"breadcrumb-separator\">/</span>\n//             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n//           </div>\n//           <h1>SubDomain Management</h1>\n//           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n//         </div>\n//         <div className=\"header-actions\">\n//           <button \n//             className=\"primary-button\" \n//             onClick={() => handleAddSubDomain()}\n//           >\n//             <FiPlus />\n//             Add Root SubDomain\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Quick Guide */}\n//       <div className=\"quick-guide\">\n//         <h3>How to Build Your SubDomain Hierarchy:</h3>\n//         <div className=\"guide-steps\">\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">1</span>\n//             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">2</span>\n//             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">3</span>\n//             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domain Info Card */}\n//       {domain && (\n//         <div className=\"domain-info-card\">\n//           <div className=\"domain-icon\">\n//             <FiFolder />\n//           </div>\n//           <div className=\"domain-details\">\n//             <h3>{domain.title}</h3>\n//             <p>{domain.description}</p>\n//             <div className=\"domain-stats\">\n//               <span className=\"stat-item\">\n//                 <strong>{subDomains.length}</strong> root sub-domains\n//               </span>\n//               <span className=\"stat-item\">\n//                 <strong>{domain.projectCount || 0}</strong> total projects\n//               </span>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* SubDomain Tree */}\n//       <div className=\"subdomain-tree-container\">\n//         <div className=\"tree-header\">\n//           <h2>SubDomain Hierarchy</h2>\n//           <div className=\"tree-legend\">\n//             <span className=\"legend-item\">\n//               <FiFolder className=\"folder-icon\" />\n//               Has children\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiTarget className=\"leaf-icon\" />\n//               Leaf (can have projects)\n//             </span>\n//           </div>\n//         </div>\n\n//         {subDomains.length > 0 ? (\n//           <div className=\"subdomain-tree\">\n//             {subDomains.map((subDomain) => (\n//               <SubDomainNode\n//                 key={subDomain.id}\n//                 subDomain={subDomain}\n//                 level={0}\n//                 isExpanded={expandedNodes.has(subDomain.id)}\n//                 onToggleExpanded={toggleExpanded}\n//                 onEdit={handleEditSubDomain}\n//                 onDelete={handleDeleteSubDomain}\n//                 onAddChild={handleAddSubDomain}\n//                 expandedNodes={expandedNodes}\n//               />\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"empty-tree-state\">\n//             <FiFolderPlus size={64} />\n//             <h3>No SubDomains Yet</h3>\n//             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n//             <div className=\"empty-state-examples\">\n//               <h4>Example Structure:</h4>\n//               <div className=\"example-tree\">\n//                 <div className=\"example-item\">üìÇ Machine Learning</div>\n//                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n//                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n//                 <div className=\"example-item\">üéØ Data Science</div>\n//               </div>\n//             </div>\n//             <div className=\"empty-state-actions\">\n//               <button \n//                 className=\"primary-button large\" \n//                 onClick={() => handleAddSubDomain()}\n//               >\n//                 <FiPlus />\n//                 Create Your First SubDomain\n//               </button>\n//               <p className=\"help-text\">\n//                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit Modal */}\n//       {showAddModal && (\n//         <SubDomainModal\n//           subDomain={editingSubDomain}\n//           parent={selectedParent}\n//           domain={domain}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//           }}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Node Component\n// const SubDomainNode = ({ \n//   subDomain, \n//   level, \n//   isExpanded, \n//   onToggleExpanded, \n//   onEdit, \n//   onDelete, \n//   onAddChild,\n//   expandedNodes \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n//   const hasChildren = subDomain.children && subDomain.children.length > 0;\n//   const isLeaf = !hasChildren;\n\n//   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n//     title: subDomain.title,\n//     level,\n//     hasChildren,\n//     isLeaf,\n//     isExpanded,\n//     projectCount: subDomain.projectCount\n//   });\n\n//   return (\n//     <div className={`subdomain-node level-${level}`}>\n//       <div className=\"node-content\">\n//         <div className=\"node-main\">\n//           {hasChildren ? (\n//             <button \n//               className=\"expand-button\"\n//               onClick={() => onToggleExpanded(subDomain.id)}\n//             >\n//               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n//             </button>\n//           ) : (\n//             <div className=\"expand-placeholder\" />\n//           )}\n\n//           <div className=\"node-icon\">\n//             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n//           </div>\n\n//           <div className=\"node-info\">\n//             <h4 className=\"node-title\">{subDomain.title}</h4>\n//             <p className=\"node-description\">{subDomain.description}</p>\n//             <div className=\"node-stats\">\n//               {hasChildren && (\n//                 <span className=\"stat-badge\">\n//                   {subDomain.children.length} sub-domains\n//                 </span>\n//               )}\n//               {subDomain.projectCount > 0 && (\n//                 <span className=\"stat-badge projects\">\n//                   {subDomain.projectCount} projects\n//                 </span>\n//               )}\n//               {isLeaf && (\n//                 <span className=\"stat-badge leaf\">\n//                   Can have projects\n//                 </span>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"node-actions\">\n//           <button \n//             className=\"action-button add\" \n//             onClick={() => onAddChild(subDomain)}\n//             title={`Add child subdomain under \"${subDomain.title}\"`}\n//           >\n//             <FiPlus />\n//           </button>\n//           <div className=\"action-menu\">\n//             <button \n//               onClick={() => setShowMenu(!showMenu)}\n//               title=\"More actions\"\n//             >\n//               <FiMoreVertical />\n//             </button>\n//             {showMenu && (\n//               <div className=\"dropdown-menu\">\n//                 <button onClick={() => {\n//                   onEdit(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiEdit /> Edit\n//                 </button>\n//                 <button onClick={() => {\n//                   onAddChild(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiPlus /> Add Child SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onDelete(subDomain);\n//                   setShowMenu(false);\n//                 }} className=\"danger\">\n//                   <FiTrash2 /> Delete\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Children */}\n//       {hasChildren && isExpanded && (\n//         <div className=\"node-children\">\n//           {subDomain.children.map((child) => (\n//             <SubDomainNode\n//               key={child.id}\n//               subDomain={child}\n//               level={level + 1}\n//               isExpanded={expandedNodes.has(child.id)}\n//               onToggleExpanded={onToggleExpanded}\n//               onEdit={onEdit}\n//               onDelete={onDelete}\n//               onAddChild={onAddChild}\n//               expandedNodes={expandedNodes}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Modal Component - FIXED VERSION\n// const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: subDomain?.title || '',\n//     description: subDomain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('üìù SUBDOMAIN MODAL - Props:', {\n//     isEditing: !!subDomain,\n//     parentTitle: parent?.title,\n//     domainTitle: domain?.title,\n//     formData\n//   });\n\n//   // Enhanced slug generation with better validation\n//   const generateSlug = (title) => {\n//     if (!title || title.trim() === '') {\n//       return '';\n//     }\n\n//     let slug = title\n//       .toLowerCase()\n//       .trim()\n//       .replace(/[^a-z0-9\\s-]/g, '') // Remove special chars except spaces and hyphens\n//       .replace(/\\s+/g, '-')         // Replace spaces with hyphens\n//       .replace(/-+/g, '-')          // Remove consecutive hyphens\n//       .replace(/^-|-$/g, '');       // Remove leading/trailing hyphens\n\n//     // Ensure minimum length - if too short, add timestamp\n//     if (slug.length < 3) {\n//       slug = slug + '-' + Date.now().toString().slice(-4);\n//     }\n\n//     // Ensure maximum length\n//     if (slug.length > 50) {\n//       slug = slug.substring(0, 50).replace(/-$/, '');\n//     }\n\n//     return slug;\n//   };\n\n//   const slugPreview = generateSlug(formData.title);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       // Generate slug from title\n//       const slug = generateSlug(formData.title);\n\n//       // Validate slug\n//       if (!slug || slug.length < 3) {\n//         toast.error('Title must generate a valid slug (at least 3 characters)');\n//         setLoading(false);\n//         return;\n//       }\n\n//       const requestData = {\n//         title: formData.title.trim(),\n//         description: formData.description.trim(),\n\n//         domainId: domain.id,\n//         parentId: parent?.id || null\n//       };\n\n//       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n//       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n//       console.log('üîç SUBDOMAIN SAVE - Generated slug:', slug, 'Length:', slug.length);\n//       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n//       if (subDomain) {\n//         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n//         const response = await authService.updateSubDomain(subDomain.id, requestData);\n//         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n//         toast.success('Sub-domain updated successfully');\n//       } else {\n//         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n//         const response = await authService.createSubDomain(requestData);\n//         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n//         toast.success('Sub-domain created successfully');\n//       }\n\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n//       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n//       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n\n//       // Better error handling\n//       const errorMessage = error.response?.data?.message || \n//                           error.response?.data?.error || \n//                           'Failed to save sub-domain';\n//       toast.error(errorMessage);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const getModalTitle = () => {\n//     if (subDomain) {\n//       return `Edit SubDomain: ${subDomain.title}`;\n//     }\n//     if (parent) {\n//       return `Add SubDomain under: ${parent.title}`;\n//     }\n//     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n//   };\n\n//   const getLevel = () => {\n//     if (!parent) return 'Root Level';\n//     // This is a simplified level calculation\n//     return `Level ${(parent.level || 0) + 1}`;\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{getModalTitle()}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>SubDomain Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"e.g., Machine Learning, Deep Learning\"\n//               required\n//               minLength={3}\n//               maxLength={100}\n//             />\n//             {formData.title && (\n//               <div className=\"slug-preview\">\n//                 <small>\n//                   URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code>\n//                   {slugPreview && slugPreview.length < 3 && (\n//                     <span style={{color: 'red'}}> (Too short - needs at least 3 chars)</span>\n//                   )}\n//                 </small>\n//               </div>\n//             )}\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//               placeholder=\"Describe what this sub-domain covers...\"\n//               maxLength={500}\n//             />\n//           </div>\n\n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             {parent && (\n//               <>\n//                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n//               </>\n//             )}\n//             <strong>Level:</strong> {getLevel()}\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title.trim() || slugPreview.length < 3}\n//             >\n//               {loading ? 'Saving...' : 'Save SubDomain'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SubDomainManagement;\n\n// // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // import React, { useState, useEffect } from 'react';\n// // import { useParams, useNavigate } from 'react-router-dom';\n// // import { authService } from '../../services/authService';\n// // import { toast } from 'react-toastify';\n// // import {\n// //   FiPlus,\n// //   FiEdit,\n// //   FiTrash2,\n// //   FiChevronDown,\n// //   FiChevronRight,\n// //   FiFolder,\n// //   FiFolderPlus,\n// //   FiFileText,\n// //   FiArrowLeft,\n// //   FiMoreVertical,\n// //   FiMove,\n// //   FiTarget\n// // } from 'react-icons/fi';\n\n// // const SubDomainManagement = () => {\n// //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// //   const { domainId } = useParams();\n// //   const navigate = useNavigate();\n\n// //   const [domain, setDomain] = useState(null);\n// //   const [subDomains, setSubDomains] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [showAddModal, setShowAddModal] = useState(false);\n// //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// //   const [selectedParent, setSelectedParent] = useState(null);\n// //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// //     domainId,\n// //     domain: domain?.title,\n// //     subDomainsCount: subDomains.length,\n// //     loading,\n// //     selectedParent: selectedParent?.title,\n// //     expandedCount: expandedNodes.size\n// //   });\n\n// //   useEffect(() => {\n// //     if (domainId) {\n// //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// //       fetchDomainAndSubDomains();\n// //     }\n// //   }, [domainId]);\n\n// //   const fetchDomainAndSubDomains = async () => {\n// //     try {\n// //       setLoading(true);\n\n// //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// //       // First, let's try to get domain details\n// //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// //       const domainsResponse = await authService.getDomains({ id: domainId });\n// //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// //       // Extract domain from response\n// //       let domainData = null;\n// //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// //       } else if (Array.isArray(domainsResponse.data)) {\n// //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// //       }\n\n// //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// //       // If we don't have domain data, create a placeholder\n// //       if (!domainData) {\n// //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// //         domainData = {\n// //           id: domainId,\n// //           title: `Domain ${domainId}`,\n// //           description: 'Loading domain details...',\n// //           projectCount: 0\n// //         };\n// //       }\n\n// //       setDomain(domainData);\n\n// //       // Try to get hierarchy if domain exists\n// //       try {\n// //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// //         setSubDomains(hierarchyData?.subDomains || []);\n\n// //         // Auto-expand first level\n// //         if (hierarchyData?.subDomains?.length > 0) {\n// //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// //           setExpandedNodes(new Set(firstLevelIds));\n// //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// //         }\n// //       } catch (hierarchyError) {\n// //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// //         setSubDomains([]);\n// //       }\n\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// //       toast.error('Failed to fetch domain information');\n\n// //       // Create fallback domain\n// //       setDomain({\n// //         id: domainId,\n// //         title: `Domain ${domainId}`,\n// //         description: 'Error loading domain details',\n// //         projectCount: 0\n// //       });\n// //       setSubDomains([]);\n// //     } finally {\n// //       setLoading(false);\n// //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// //     }\n// //   };\n\n// //   const handleAddSubDomain = (parent = null) => {\n// //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// //     setSelectedParent(parent);\n// //     setEditingSubDomain(null);\n// //     setShowAddModal(true);\n\n// //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// //       showAddModal: true, \n// //       selectedParent: parent?.title,\n// //       editingSubDomain: null \n// //     });\n// //   };\n\n// //   const handleEditSubDomain = (subDomain) => {\n// //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// //     setSelectedParent(null);\n// //     setEditingSubDomain(subDomain);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleDeleteSubDomain = async (subDomain) => {\n// //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //     const hasProjects = subDomain.projectCount > 0;\n\n// //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// //     if (hasChildren) {\n// //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// //     }\n// //     if (hasProjects) {\n// //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// //     }\n\n// //     if (!window.confirm(confirmMessage)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// //       toast.success('Sub-domain deleted successfully');\n// //       fetchDomainAndSubDomains();\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// //       toast.error('Failed to delete sub-domain');\n// //     }\n// //   };\n\n// //   const toggleExpanded = (nodeId) => {\n// //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// //     const newExpanded = new Set(expandedNodes);\n// //     if (newExpanded.has(nodeId)) {\n// //       newExpanded.delete(nodeId);\n// //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// //     } else {\n// //       newExpanded.add(nodeId);\n// //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// //     }\n// //     setExpandedNodes(newExpanded);\n// //   };\n\n// //   if (loading) {\n// //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// //     return (\n// //       <div className=\"loading-container\">\n// //         <div className=\"loading-spinner\"></div>\n// //         <p>Loading sub-domains...</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// //   return (\n// //     <div className=\"subdomain-management\">\n// //       {/* Header with Breadcrumb */}\n// //       <div className=\"page-header\">\n// //         <div className=\"header-content\">\n// //           <div className=\"breadcrumb\">\n// //             <button \n// //               className=\"breadcrumb-link\"\n// //               onClick={() => navigate('/domains')}\n// //             >\n// //               <FiArrowLeft />\n// //               Domains\n// //             </button>\n// //             <span className=\"breadcrumb-separator\">/</span>\n// //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// //           </div>\n// //           <h1>SubDomain Management</h1>\n// //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// //         </div>\n// //         <div className=\"header-actions\">\n// //           <button \n// //             className=\"primary-button\" \n// //             onClick={() => handleAddSubDomain()}\n// //           >\n// //             <FiPlus />\n// //             Add Root SubDomain\n// //           </button>\n// //         </div>\n// //       </div>\n\n// //       {/* Quick Guide */}\n// //       <div className=\"quick-guide\">\n// //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// //         <div className=\"guide-steps\">\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">1</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">2</span>\n// //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">3</span>\n// //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Domain Info Card */}\n// //       {domain && (\n// //         <div className=\"domain-info-card\">\n// //           <div className=\"domain-icon\">\n// //             <FiFolder />\n// //           </div>\n// //           <div className=\"domain-details\">\n// //             <h3>{domain.title}</h3>\n// //             <p>{domain.description}</p>\n// //             <div className=\"domain-stats\">\n// //               <span className=\"stat-item\">\n// //                 <strong>{subDomains.length}</strong> root sub-domains\n// //               </span>\n// //               <span className=\"stat-item\">\n// //                 <strong>{domain.projectCount || 0}</strong> total projects\n// //               </span>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       )}\n\n// //       {/* SubDomain Tree */}\n// //       <div className=\"subdomain-tree-container\">\n// //         <div className=\"tree-header\">\n// //           <h2>SubDomain Hierarchy</h2>\n// //           <div className=\"tree-legend\">\n// //             <span className=\"legend-item\">\n// //               <FiFolder className=\"folder-icon\" />\n// //               Has children\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiTarget className=\"leaf-icon\" />\n// //               Leaf (can have projects)\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {subDomains.length > 0 ? (\n// //           <div className=\"subdomain-tree\">\n// //             {subDomains.map((subDomain) => (\n// //               <SubDomainNode\n// //                 key={subDomain.id}\n// //                 subDomain={subDomain}\n// //                 level={0}\n// //                 isExpanded={expandedNodes.has(subDomain.id)}\n// //                 onToggleExpanded={toggleExpanded}\n// //                 onEdit={handleEditSubDomain}\n// //                 onDelete={handleDeleteSubDomain}\n// //                 onAddChild={handleAddSubDomain}\n// //                 expandedNodes={expandedNodes}\n// //               />\n// //             ))}\n// //           </div>\n// //         ) : (\n// //           <div className=\"empty-tree-state\">\n// //             <FiFolderPlus size={64} />\n// //             <h3>No SubDomains Yet</h3>\n// //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// //             <div className=\"empty-state-examples\">\n// //               <h4>Example Structure:</h4>\n// //               <div className=\"example-tree\">\n// //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// //                 <div className=\"example-item\">üéØ Data Science</div>\n// //               </div>\n// //             </div>\n// //             <div className=\"empty-state-actions\">\n// //               <button \n// //                 className=\"primary-button large\" \n// //                 onClick={() => handleAddSubDomain()}\n// //               >\n// //                 <FiPlus />\n// //                 Create Your First SubDomain\n// //               </button>\n// //               <p className=\"help-text\">\n// //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// //               </p>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Add/Edit Modal */}\n// //       {showAddModal && (\n// //         <SubDomainModal\n// //           subDomain={editingSubDomain}\n// //           parent={selectedParent}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //             fetchDomainAndSubDomains();\n// //           }}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // SubDomain Node Component\n// // const SubDomainNode = ({ \n// //   subDomain, \n// //   level, \n// //   isExpanded, \n// //   onToggleExpanded, \n// //   onEdit, \n// //   onDelete, \n// //   onAddChild,\n// //   expandedNodes \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n// //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //   const isLeaf = !hasChildren;\n\n// //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// //     title: subDomain.title,\n// //     level,\n// //     hasChildren,\n// //     isLeaf,\n// //     isExpanded,\n// //     projectCount: subDomain.projectCount\n// //   });\n\n// //   return (\n// //     <div className={`subdomain-node level-${level}`}>\n// //       <div className=\"node-content\">\n// //         <div className=\"node-main\">\n// //           {hasChildren ? (\n// //             <button \n// //               className=\"expand-button\"\n// //               onClick={() => onToggleExpanded(subDomain.id)}\n// //             >\n// //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// //             </button>\n// //           ) : (\n// //             <div className=\"expand-placeholder\" />\n// //           )}\n\n// //           <div className=\"node-icon\">\n// //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// //           </div>\n\n// //           <div className=\"node-info\">\n// //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// //             <p className=\"node-description\">{subDomain.description}</p>\n// //             <div className=\"node-stats\">\n// //               {hasChildren && (\n// //                 <span className=\"stat-badge\">\n// //                   {subDomain.children.length} sub-domains\n// //                 </span>\n// //               )}\n// //               {subDomain.projectCount > 0 && (\n// //                 <span className=\"stat-badge projects\">\n// //                   {subDomain.projectCount} projects\n// //                 </span>\n// //               )}\n// //               {isLeaf && (\n// //                 <span className=\"stat-badge leaf\">\n// //                   Can have projects\n// //                 </span>\n// //               )}\n// //             </div>\n// //           </div>\n// //         </div>\n\n// //         <div className=\"node-actions\">\n// //           <button \n// //             className=\"action-button add\" \n// //             onClick={() => onAddChild(subDomain)}\n// //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// //           >\n// //             <FiPlus />\n// //           </button>\n// //           <div className=\"action-menu\">\n// //             <button \n// //               onClick={() => setShowMenu(!showMenu)}\n// //               title=\"More actions\"\n// //             >\n// //               <FiMoreVertical />\n// //             </button>\n// //             {showMenu && (\n// //               <div className=\"dropdown-menu\">\n// //                 <button onClick={() => {\n// //                   onEdit(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiEdit /> Edit\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onAddChild(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiPlus /> Add Child SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onDelete(subDomain);\n// //                   setShowMenu(false);\n// //                 }} className=\"danger\">\n// //                   <FiTrash2 /> Delete\n// //                 </button>\n// //               </div>\n// //             )}\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Children */}\n// //       {hasChildren && isExpanded && (\n// //         <div className=\"node-children\">\n// //           {subDomain.children.map((child) => (\n// //             <SubDomainNode\n// //               key={child.id}\n// //               subDomain={child}\n// //               level={level + 1}\n// //               isExpanded={expandedNodes.has(child.id)}\n// //               onToggleExpanded={onToggleExpanded}\n// //               onEdit={onEdit}\n// //               onDelete={onDelete}\n// //               onAddChild={onAddChild}\n// //               expandedNodes={expandedNodes}\n// //             />\n// //           ))}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // SubDomain Modal Component\n// // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: subDomain?.title || '',\n// //     description: subDomain?.description || ''\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// //     isEditing: !!subDomain,\n// //     parentTitle: parent?.title,\n// //     domainTitle: domain?.title,\n// //     formData\n// //   });\n\n// //   // Generate slug preview\n// //   const generateSlug = (title) => {\n// //     return title\n// //       .toLowerCase()\n// //       .replace(/[^a-z0-9]/g, '-')\n// //       .replace(/-+/g, '-')\n// //       .replace(/^-|-$/g, '');\n// //   };\n\n// //   const slugPreview = generateSlug(formData.title);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       // Generate slug from title\n// //       const slug = generateSlug(formData.title);\n\n// //       const requestData = {\n// //         ...formData,\n// //         // slug: slug,\n// //         domainId: domain.id,\n// //         parentId: parent?.id || null\n// //       };\n\n// //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// //       console.log('üìã SUBDOMAIN SAVE - Generated slug:', slug);\n// //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// //       if (subDomain) {\n// //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// //         toast.success('Sub-domain updated successfully');\n// //       } else {\n// //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// //         const response = await authService.createSubDomain(requestData);\n// //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// //         toast.success('Sub-domain created successfully');\n// //       }\n\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n// //       toast.error('Failed to save sub-domain');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const getModalTitle = () => {\n// //     if (subDomain) {\n// //       return `Edit SubDomain: ${subDomain.title}`;\n// //     }\n// //     if (parent) {\n// //       return `Add SubDomain under: ${parent.title}`;\n// //     }\n// //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// //   };\n\n// //   const getLevel = () => {\n// //     if (!parent) return 'Root Level';\n// //     // This is a simplified level calculation\n// //     return `Level ${(parent.level || 0) + 1}`;\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal\">\n// //         <div className=\"modal-header\">\n// //           <h2>{getModalTitle()}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>SubDomain Title</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// //               required\n// //             />\n// //             {formData.title && (\n// //               <div className=\"slug-preview\">\n// //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// //               </div>\n// //             )}\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Description (Optional)</label>\n// //             <textarea\n// //               value={formData.description}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// //               rows={3}\n// //               placeholder=\"Describe what this sub-domain covers...\"\n// //             />\n// //           </div>\n\n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             {parent && (\n// //               <>\n// //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// //               </>\n// //             )}\n// //             <strong>Level:</strong> {getLevel()}\n// //           </div>\n\n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// //               {loading ? 'Saving...' : 'Save SubDomain'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SubDomainManagement;\n\n// // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // import React, { useState, useEffect } from 'react';\n// // // import { useParams, useNavigate } from 'react-router-dom';\n// // // import { authService } from '../../services/authService';\n// // // import { toast } from 'react-toastify';\n// // // import {\n// // //   FiPlus,\n// // //   FiEdit,\n// // //   FiTrash2,\n// // //   FiChevronDown,\n// // //   FiChevronRight,\n// // //   FiFolder,\n// // //   FiFolderPlus,\n// // //   FiFileText,\n// // //   FiArrowLeft,\n// // //   FiMoreVertical,\n// // //   FiMove,\n// // //   FiTarget\n// // // } from 'react-icons/fi';\n\n// // // const SubDomainManagement = () => {\n// // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // //   const { domainId } = useParams();\n// // //   const navigate = useNavigate();\n\n// // //   const [domain, setDomain] = useState(null);\n// // //   const [subDomains, setSubDomains] = useState([]);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [showAddModal, setShowAddModal] = useState(false);\n// // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // //   const [selectedParent, setSelectedParent] = useState(null);\n// // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // //     domainId,\n// // //     domain: domain?.title,\n// // //     subDomainsCount: subDomains.length,\n// // //     loading,\n// // //     selectedParent: selectedParent?.title,\n// // //     expandedCount: expandedNodes.size\n// // //   });\n\n// // //   useEffect(() => {\n// // //     if (domainId) {\n// // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // //       fetchDomainAndSubDomains();\n// // //     }\n// // //   }, [domainId]);\n\n// // //   const fetchDomainAndSubDomains = async () => {\n// // //     try {\n// // //       setLoading(true);\n\n// // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // //       // First, let's try to get domain details\n// // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // //       // Extract domain from response\n// // //       let domainData = null;\n// // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // //       } else if (Array.isArray(domainsResponse.data)) {\n// // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // //       }\n\n// // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // //       // If we don't have domain data, create a placeholder\n// // //       if (!domainData) {\n// // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // //         domainData = {\n// // //           id: domainId,\n// // //           title: `Domain ${domainId}`,\n// // //           description: 'Loading domain details...',\n// // //           projectCount: 0\n// // //         };\n// // //       }\n\n// // //       setDomain(domainData);\n\n// // //       // Try to get hierarchy if domain exists\n// // //       try {\n// // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // //         // Auto-expand first level\n// // //         if (hierarchyData?.subDomains?.length > 0) {\n// // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // //           setExpandedNodes(new Set(firstLevelIds));\n// // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // //         }\n// // //       } catch (hierarchyError) {\n// // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // //         setSubDomains([]);\n// // //       }\n\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // //       toast.error('Failed to fetch domain information');\n\n// // //       // Create fallback domain\n// // //       setDomain({\n// // //         id: domainId,\n// // //         title: `Domain ${domainId}`,\n// // //         description: 'Error loading domain details',\n// // //         projectCount: 0\n// // //       });\n// // //       setSubDomains([]);\n// // //     } finally {\n// // //       setLoading(false);\n// // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // //     }\n// // //   };\n\n// // //   const handleAddSubDomain = (parent = null) => {\n// // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // //     setSelectedParent(parent);\n// // //     setEditingSubDomain(null);\n// // //     setShowAddModal(true);\n\n// // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // //       showAddModal: true, \n// // //       selectedParent: parent?.title,\n// // //       editingSubDomain: null \n// // //     });\n// // //   };\n\n// // //   const handleEditSubDomain = (subDomain) => {\n// // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // //     setSelectedParent(null);\n// // //     setEditingSubDomain(subDomain);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   const handleDeleteSubDomain = async (subDomain) => {\n// // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //     const hasProjects = subDomain.projectCount > 0;\n\n// // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // //     if (hasChildren) {\n// // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // //     }\n// // //     if (hasProjects) {\n// // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // //     }\n\n// // //     if (!window.confirm(confirmMessage)) {\n// // //       return;\n// // //     }\n\n// // //     try {\n// // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // //       toast.success('Sub-domain deleted successfully');\n// // //       fetchDomainAndSubDomains();\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // //       toast.error('Failed to delete sub-domain');\n// // //     }\n// // //   };\n\n// // //   const toggleExpanded = (nodeId) => {\n// // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // //     const newExpanded = new Set(expandedNodes);\n// // //     if (newExpanded.has(nodeId)) {\n// // //       newExpanded.delete(nodeId);\n// // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // //     } else {\n// // //       newExpanded.add(nodeId);\n// // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // //     }\n// // //     setExpandedNodes(newExpanded);\n// // //   };\n\n// // //   if (loading) {\n// // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // //     return (\n// // //       <div className=\"loading-container\">\n// // //         <div className=\"loading-spinner\"></div>\n// // //         <p>Loading sub-domains...</p>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // //   return (\n// // //     <div className=\"subdomain-management\">\n// // //       {/* Header with Breadcrumb */}\n// // //       <div className=\"page-header\">\n// // //         <div className=\"header-content\">\n// // //           <div className=\"breadcrumb\">\n// // //             <button \n// // //               className=\"breadcrumb-link\"\n// // //               onClick={() => navigate('/domains')}\n// // //             >\n// // //               <FiArrowLeft />\n// // //               Domains\n// // //             </button>\n// // //             <span className=\"breadcrumb-separator\">/</span>\n// // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // //           </div>\n// // //           <h1>SubDomain Management</h1>\n// // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // //         </div>\n// // //         <div className=\"header-actions\">\n// // //           <button \n// // //             className=\"primary-button\" \n// // //             onClick={() => handleAddSubDomain()}\n// // //           >\n// // //             <FiPlus />\n// // //             Add Root SubDomain\n// // //           </button>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Quick Guide */}\n// // //       <div className=\"quick-guide\">\n// // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // //         <div className=\"guide-steps\">\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">1</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">2</span>\n// // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">3</span>\n// // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Domain Info Card */}\n// // //       {domain && (\n// // //         <div className=\"domain-info-card\">\n// // //           <div className=\"domain-icon\">\n// // //             <FiFolder />\n// // //           </div>\n// // //           <div className=\"domain-details\">\n// // //             <h3>{domain.title}</h3>\n// // //             <p>{domain.description}</p>\n// // //             <div className=\"domain-stats\">\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // //               </span>\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // //               </span>\n// // //             </div>\n// // //           </div>\n// // //         </div>\n// // //       )}\n\n// // //       {/* SubDomain Tree */}\n// // //       <div className=\"subdomain-tree-container\">\n// // //         <div className=\"tree-header\">\n// // //           <h2>SubDomain Hierarchy</h2>\n// // //           <div className=\"tree-legend\">\n// // //             <span className=\"legend-item\">\n// // //               <FiFolder className=\"folder-icon\" />\n// // //               Has children\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiTarget className=\"leaf-icon\" />\n// // //               Leaf (can have projects)\n// // //             </span>\n// // //           </div>\n// // //         </div>\n\n// // //         {subDomains.length > 0 ? (\n// // //           <div className=\"subdomain-tree\">\n// // //             {subDomains.map((subDomain) => (\n// // //               <SubDomainNode\n// // //                 key={subDomain.id}\n// // //                 subDomain={subDomain}\n// // //                 level={0}\n// // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // //                 onToggleExpanded={toggleExpanded}\n// // //                 onEdit={handleEditSubDomain}\n// // //                 onDelete={handleDeleteSubDomain}\n// // //                 onAddChild={handleAddSubDomain}\n// // //                 expandedNodes={expandedNodes}\n// // //               />\n// // //             ))}\n// // //           </div>\n// // //         ) : (\n// // //           <div className=\"empty-tree-state\">\n// // //             <FiFolderPlus size={64} />\n// // //             <h3>No SubDomains Yet</h3>\n// // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // //             <div className=\"empty-state-examples\">\n// // //               <h4>Example Structure:</h4>\n// // //               <div className=\"example-tree\">\n// // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // //               </div>\n// // //             </div>\n// // //             <div className=\"empty-state-actions\">\n// // //               <button \n// // //                 className=\"primary-button large\" \n// // //                 onClick={() => handleAddSubDomain()}\n// // //               >\n// // //                 <FiPlus />\n// // //                 Create Your First SubDomain\n// // //               </button>\n// // //               <p className=\"help-text\">\n// // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // //               </p>\n// // //             </div>\n// // //           </div>\n// // //         )}\n// // //       </div>\n\n// // //       {/* Add/Edit Modal */}\n// // //       {showAddModal && (\n// // //         <SubDomainModal\n// // //           subDomain={editingSubDomain}\n// // //           parent={selectedParent}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //             fetchDomainAndSubDomains();\n// // //           }}\n// // //         />\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // SubDomain Node Component\n// // // const SubDomainNode = ({ \n// // //   subDomain, \n// // //   level, \n// // //   isExpanded, \n// // //   onToggleExpanded, \n// // //   onEdit, \n// // //   onDelete, \n// // //   onAddChild,\n// // //   expandedNodes \n// // // }) => {\n// // //   const [showMenu, setShowMenu] = useState(false);\n// // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //   const isLeaf = !hasChildren;\n\n// // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // //     title: subDomain.title,\n// // //     level,\n// // //     hasChildren,\n// // //     isLeaf,\n// // //     isExpanded,\n// // //     projectCount: subDomain.projectCount\n// // //   });\n\n// // //   return (\n// // //     <div className={`subdomain-node level-${level}`}>\n// // //       <div className=\"node-content\">\n// // //         <div className=\"node-main\">\n// // //           {hasChildren ? (\n// // //             <button \n// // //               className=\"expand-button\"\n// // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // //             >\n// // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // //             </button>\n// // //           ) : (\n// // //             <div className=\"expand-placeholder\" />\n// // //           )}\n\n// // //           <div className=\"node-icon\">\n// // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // //           </div>\n\n// // //           <div className=\"node-info\">\n// // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // //             <p className=\"node-description\">{subDomain.description}</p>\n// // //             <div className=\"node-stats\">\n// // //               {hasChildren && (\n// // //                 <span className=\"stat-badge\">\n// // //                   {subDomain.children.length} sub-domains\n// // //                 </span>\n// // //               )}\n// // //               {subDomain.projectCount > 0 && (\n// // //                 <span className=\"stat-badge projects\">\n// // //                   {subDomain.projectCount} projects\n// // //                 </span>\n// // //               )}\n// // //               {isLeaf && (\n// // //                 <span className=\"stat-badge leaf\">\n// // //                   Can have projects\n// // //                 </span>\n// // //               )}\n// // //             </div>\n// // //           </div>\n// // //         </div>\n\n// // //         <div className=\"node-actions\">\n// // //           <button \n// // //             className=\"action-button add\" \n// // //             onClick={() => onAddChild(subDomain)}\n// // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // //           >\n// // //             <FiPlus />\n// // //           </button>\n// // //           <div className=\"action-menu\">\n// // //             <button \n// // //               onClick={() => setShowMenu(!showMenu)}\n// // //               title=\"More actions\"\n// // //             >\n// // //               <FiMoreVertical />\n// // //             </button>\n// // //             {showMenu && (\n// // //               <div className=\"dropdown-menu\">\n// // //                 <button onClick={() => {\n// // //                   onEdit(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiEdit /> Edit\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onAddChild(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiPlus /> Add Child SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onDelete(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }} className=\"danger\">\n// // //                   <FiTrash2 /> Delete\n// // //                 </button>\n// // //               </div>\n// // //             )}\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Children */}\n// // //       {hasChildren && isExpanded && (\n// // //         <div className=\"node-children\">\n// // //           {subDomain.children.map((child) => (\n// // //             <SubDomainNode\n// // //               key={child.id}\n// // //               subDomain={child}\n// // //               level={level + 1}\n// // //               isExpanded={expandedNodes.has(child.id)}\n// // //               onToggleExpanded={onToggleExpanded}\n// // //               onEdit={onEdit}\n// // //               onDelete={onDelete}\n// // //               onAddChild={onAddChild}\n// // //               expandedNodes={expandedNodes}\n// // //             />\n// // //           ))}\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // SubDomain Modal Component\n// // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: subDomain?.title || '',\n// // //     description: subDomain?.description || ''\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // //     isEditing: !!subDomain,\n// // //     parentTitle: parent?.title,\n// // //     domainTitle: domain?.title,\n// // //     formData\n// // //   });\n\n// // //   // Generate slug preview\n// // //   const generateSlug = (title) => {\n// // //     return title\n// // //       .toLowerCase()\n// // //       .replace(/[^a-z0-9]/g, '-')\n// // //       .replace(/-+/g, '-')\n// // //       .replace(/^-|-$/g, '');\n// // //   };\n\n// // //   const slugPreview = generateSlug(formData.title);\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setLoading(true);\n\n// // //     try {\n// // //       // Generate slug from title\n// // //       const slug = generateSlug(formData.title);\n\n// // //       const requestData = {\n// // //         ...formData,\n// // //         slug: slug,\n// // //         domainId: domain.id,\n// // //         parentId: parent?.id || null\n// // //       };\n\n// // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // //       console.log('üìã SUBDOMAIN SAVE - Generated slug:', slug);\n// // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // //       if (subDomain) {\n// // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // //         toast.success('Sub-domain updated successfully');\n// // //       } else {\n// // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // //         const response = await authService.createSubDomain(requestData);\n// // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // //         toast.success('Sub-domain created successfully');\n// // //       }\n\n// // //       onSave();\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // //       toast.error('Failed to save sub-domain');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const getModalTitle = () => {\n// // //     if (subDomain) {\n// // //       return `Edit SubDomain: ${subDomain.title}`;\n// // //     }\n// // //     if (parent) {\n// // //       return `Add SubDomain under: ${parent.title}`;\n// // //     }\n// // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // //   };\n\n// // //   const getLevel = () => {\n// // //     if (!parent) return 'Root Level';\n// // //     // This is a simplified level calculation\n// // //     return `Level ${(parent.level || 0) + 1}`;\n// // //   };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>{getModalTitle()}</h2>\n// // //           <button onClick={onClose}>√ó</button>\n// // //         </div>\n\n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>SubDomain Title</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // //               required\n// // //             />\n// // //             {formData.title && (\n// // //               <div className=\"slug-preview\">\n// // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // //               </div>\n// // //             )}\n// // //           </div>\n\n// // //           <div className=\"form-group\">\n// // //             <label>Description (Optional)</label>\n// // //             <textarea\n// // //               value={formData.description}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // //               rows={3}\n// // //               placeholder=\"Describe what this sub-domain covers...\"\n// // //             />\n// // //           </div>\n\n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             {parent && (\n// // //               <>\n// // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // //               </>\n// // //             )}\n// // //             <strong>Level:</strong> {getLevel()}\n// // //           </div>\n\n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SubDomainManagement;\n\n// // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // import React, { useState, useEffect } from 'react';\n// // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // import { authService } from '../../services/authService';\n// // // // import { toast } from 'react-toastify';\n// // // // import {\n// // // //   FiPlus,\n// // // //   FiEdit,\n// // // //   FiTrash2,\n// // // //   FiChevronDown,\n// // // //   FiChevronRight,\n// // // //   FiFolder,\n// // // //   FiFolderPlus,\n// // // //   FiFileText,\n// // // //   FiArrowLeft,\n// // // //   FiMoreVertical,\n// // // //   FiMove,\n// // // //   FiTarget\n// // // // } from 'react-icons/fi';\n\n// // // // const SubDomainManagement = () => {\n// // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // //   const { domainId } = useParams();\n// // // //   const navigate = useNavigate();\n\n// // // //   const [domain, setDomain] = useState(null);\n// // // //   const [subDomains, setSubDomains] = useState([]);\n// // // //   const [loading, setLoading] = useState(true);\n// // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // //     domainId,\n// // // //     domain: domain?.title,\n// // // //     subDomainsCount: subDomains.length,\n// // // //     loading,\n// // // //     selectedParent: selectedParent?.title,\n// // // //     expandedCount: expandedNodes.size\n// // // //   });\n\n// // // //   useEffect(() => {\n// // // //     if (domainId) {\n// // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // //       fetchDomainAndSubDomains();\n// // // //     }\n// // // //   }, [domainId]);\n\n// // // //   const fetchDomainAndSubDomains = async () => {\n// // // //     try {\n// // // //       setLoading(true);\n\n// // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // //       // First, let's try to get domain details\n// // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n\n// // // //       // Extract domain from response\n// // // //       let domainData = null;\n// // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // //       }\n\n// // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n\n// // // //       // If we don't have domain data, create a placeholder\n// // // //       if (!domainData) {\n// // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // //         domainData = {\n// // // //           id: domainId,\n// // // //           title: `Domain ${domainId}`,\n// // // //           description: 'Loading domain details...',\n// // // //           projectCount: 0\n// // // //         };\n// // // //       }\n\n// // // //       setDomain(domainData);\n\n// // // //       // Try to get hierarchy if domain exists\n// // // //       try {\n// // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n\n// // // //         setSubDomains(hierarchyData?.subDomains || []);\n\n// // // //         // Auto-expand first level\n// // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // //         }\n// // // //       } catch (hierarchyError) {\n// // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // //         setSubDomains([]);\n// // // //       }\n\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // //       toast.error('Failed to fetch domain information');\n\n// // // //       // Create fallback domain\n// // // //       setDomain({\n// // // //         id: domainId,\n// // // //         title: `Domain ${domainId}`,\n// // // //         description: 'Error loading domain details',\n// // // //         projectCount: 0\n// // // //       });\n// // // //       setSubDomains([]);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // //     }\n// // // //   };\n\n// // // //   const handleAddSubDomain = (parent = null) => {\n// // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // //     setSelectedParent(parent);\n// // // //     setEditingSubDomain(null);\n// // // //     setShowAddModal(true);\n\n// // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // //       showAddModal: true, \n// // // //       selectedParent: parent?.title,\n// // // //       editingSubDomain: null \n// // // //     });\n// // // //   };\n\n// // // //   const handleEditSubDomain = (subDomain) => {\n// // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // //     setSelectedParent(null);\n// // // //     setEditingSubDomain(subDomain);\n// // // //     setShowAddModal(true);\n// // // //   };\n\n// // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // //     if (hasChildren) {\n// // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // //     }\n// // // //     if (hasProjects) {\n// // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // //     }\n\n// // // //     if (!window.confirm(confirmMessage)) {\n// // // //       return;\n// // // //     }\n\n// // // //     try {\n// // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // //       toast.success('Sub-domain deleted successfully');\n// // // //       fetchDomainAndSubDomains();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // //       toast.error('Failed to delete sub-domain');\n// // // //     }\n// // // //   };\n\n// // // //   const toggleExpanded = (nodeId) => {\n// // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // //     const newExpanded = new Set(expandedNodes);\n// // // //     if (newExpanded.has(nodeId)) {\n// // // //       newExpanded.delete(nodeId);\n// // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // //     } else {\n// // // //       newExpanded.add(nodeId);\n// // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // //     }\n// // // //     setExpandedNodes(newExpanded);\n// // // //   };\n\n// // // //   if (loading) {\n// // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // //     return (\n// // // //       <div className=\"loading-container\">\n// // // //         <div className=\"loading-spinner\"></div>\n// // // //         <p>Loading sub-domains...</p>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // //   return (\n// // // //     <div className=\"subdomain-management\">\n// // // //       {/* Header with Breadcrumb */}\n// // // //       <div className=\"page-header\">\n// // // //         <div className=\"header-content\">\n// // // //           <div className=\"breadcrumb\">\n// // // //             <button \n// // // //               className=\"breadcrumb-link\"\n// // // //               onClick={() => navigate('/domains')}\n// // // //             >\n// // // //               <FiArrowLeft />\n// // // //               Domains\n// // // //             </button>\n// // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // //           </div>\n// // // //           <h1>SubDomain Management</h1>\n// // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // //         </div>\n// // // //         <div className=\"header-actions\">\n// // // //           <button \n// // // //             className=\"primary-button\" \n// // // //             onClick={() => handleAddSubDomain()}\n// // // //           >\n// // // //             <FiPlus />\n// // // //             Add Root SubDomain\n// // // //           </button>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Quick Guide */}\n// // // //       <div className=\"quick-guide\">\n// // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // //         <div className=\"guide-steps\">\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">1</span>\n// // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">2</span>\n// // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">3</span>\n// // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Domain Info Card */}\n// // // //       {domain && (\n// // // //         <div className=\"domain-info-card\">\n// // // //           <div className=\"domain-icon\">\n// // // //             <FiFolder />\n// // // //           </div>\n// // // //           <div className=\"domain-details\">\n// // // //             <h3>{domain.title}</h3>\n// // // //             <p>{domain.description}</p>\n// // // //             <div className=\"domain-stats\">\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // //               </span>\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // //               </span>\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* SubDomain Tree */}\n// // // //       <div className=\"subdomain-tree-container\">\n// // // //         <div className=\"tree-header\">\n// // // //           <h2>SubDomain Hierarchy</h2>\n// // // //           <div className=\"tree-legend\">\n// // // //             <span className=\"legend-item\">\n// // // //               <FiFolder className=\"folder-icon\" />\n// // // //               Has children\n// // // //             </span>\n// // // //             <span className=\"legend-item\">\n// // // //               <FiTarget className=\"leaf-icon\" />\n// // // //               Leaf (can have projects)\n// // // //             </span>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         {subDomains.length > 0 ? (\n// // // //           <div className=\"subdomain-tree\">\n// // // //             {subDomains.map((subDomain) => (\n// // // //               <SubDomainNode\n// // // //                 key={subDomain.id}\n// // // //                 subDomain={subDomain}\n// // // //                 level={0}\n// // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // //                 onToggleExpanded={toggleExpanded}\n// // // //                 onEdit={handleEditSubDomain}\n// // // //                 onDelete={handleDeleteSubDomain}\n// // // //                 onAddChild={handleAddSubDomain}\n// // // //                 expandedNodes={expandedNodes}\n// // // //               />\n// // // //             ))}\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div className=\"empty-tree-state\">\n// // // //             <FiFolderPlus size={64} />\n// // // //             <h3>No SubDomains Yet</h3>\n// // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // //             <div className=\"empty-state-examples\">\n// // // //               <h4>Example Structure:</h4>\n// // // //               <div className=\"example-tree\">\n// // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // //               </div>\n// // // //             </div>\n// // // //             <div className=\"empty-state-actions\">\n// // // //               <button \n// // // //                 className=\"primary-button large\" \n// // // //                 onClick={() => handleAddSubDomain()}\n// // // //               >\n// // // //                 <FiPlus />\n// // // //                 Create Your First SubDomain\n// // // //               </button>\n// // // //               <p className=\"help-text\">\n// // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // //               </p>\n// // // //             </div>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n\n// // // //       {/* Add/Edit Modal */}\n// // // //       {showAddModal && (\n// // // //         <SubDomainModal\n// // // //           subDomain={editingSubDomain}\n// // // //           parent={selectedParent}\n// // // //           domain={domain}\n// // // //           onClose={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //           }}\n// // // //           onSave={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //             fetchDomainAndSubDomains();\n// // // //           }}\n// // // //         />\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Node Component\n// // // // const SubDomainNode = ({ \n// // // //   subDomain, \n// // // //   level, \n// // // //   isExpanded, \n// // // //   onToggleExpanded, \n// // // //   onEdit, \n// // // //   onDelete, \n// // // //   onAddChild,\n// // // //   expandedNodes \n// // // // }) => {\n// // // //   const [showMenu, setShowMenu] = useState(false);\n// // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //   const isLeaf = !hasChildren;\n\n// // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // //     title: subDomain.title,\n// // // //     level,\n// // // //     hasChildren,\n// // // //     isLeaf,\n// // // //     isExpanded,\n// // // //     projectCount: subDomain.projectCount\n// // // //   });\n\n// // // //   return (\n// // // //     <div className={`subdomain-node level-${level}`}>\n// // // //       <div className=\"node-content\">\n// // // //         <div className=\"node-main\">\n// // // //           {hasChildren ? (\n// // // //             <button \n// // // //               className=\"expand-button\"\n// // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // //             >\n// // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // //             </button>\n// // // //           ) : (\n// // // //             <div className=\"expand-placeholder\" />\n// // // //           )}\n\n// // // //           <div className=\"node-icon\">\n// // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // //           </div>\n\n// // // //           <div className=\"node-info\">\n// // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // //             <div className=\"node-stats\">\n// // // //               {hasChildren && (\n// // // //                 <span className=\"stat-badge\">\n// // // //                   {subDomain.children.length} sub-domains\n// // // //                 </span>\n// // // //               )}\n// // // //               {subDomain.projectCount > 0 && (\n// // // //                 <span className=\"stat-badge projects\">\n// // // //                   {subDomain.projectCount} projects\n// // // //                 </span>\n// // // //               )}\n// // // //               {isLeaf && (\n// // // //                 <span className=\"stat-badge leaf\">\n// // // //                   Can have projects\n// // // //                 </span>\n// // // //               )}\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         <div className=\"node-actions\">\n// // // //           <button \n// // // //             className=\"action-button add\" \n// // // //             onClick={() => onAddChild(subDomain)}\n// // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // //           >\n// // // //             <FiPlus />\n// // // //           </button>\n// // // //           <div className=\"action-menu\">\n// // // //             <button \n// // // //               onClick={() => setShowMenu(!showMenu)}\n// // // //               title=\"More actions\"\n// // // //             >\n// // // //               <FiMoreVertical />\n// // // //             </button>\n// // // //             {showMenu && (\n// // // //               <div className=\"dropdown-menu\">\n// // // //                 <button onClick={() => {\n// // // //                   onEdit(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiEdit /> Edit\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onAddChild(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiPlus /> Add Child SubDomain\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onDelete(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }} className=\"danger\">\n// // // //                   <FiTrash2 /> Delete\n// // // //                 </button>\n// // // //               </div>\n// // // //             )}\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Children */}\n// // // //       {hasChildren && isExpanded && (\n// // // //         <div className=\"node-children\">\n// // // //           {subDomain.children.map((child) => (\n// // // //             <SubDomainNode\n// // // //               key={child.id}\n// // // //               subDomain={child}\n// // // //               level={level + 1}\n// // // //               isExpanded={expandedNodes.has(child.id)}\n// // // //               onToggleExpanded={onToggleExpanded}\n// // // //               onEdit={onEdit}\n// // // //               onDelete={onDelete}\n// // // //               onAddChild={onAddChild}\n// // // //               expandedNodes={expandedNodes}\n// // // //             />\n// // // //           ))}\n// // // //         </div>\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Modal Component\n// // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     title: subDomain?.title || '',\n// // // //     description: subDomain?.description || ''\n// // // //   });\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // //     isEditing: !!subDomain,\n// // // //     parentTitle: parent?.title,\n// // // //     domainTitle: domain?.title,\n// // // //     formData\n// // // //   });\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     setLoading(true);\n\n// // // //     try {\n// // // //       const requestData = {\n// // // //         ...formData,\n// // // //         domainId: domain.id,\n// // // //         parentId: parent?.id || null\n// // // //       };\n\n// // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // //       if (subDomain) {\n// // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // //         toast.success('Sub-domain updated successfully');\n// // // //       } else {\n// // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // //         const response = await authService.createSubDomain(requestData);\n// // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // //         toast.success('Sub-domain created successfully');\n// // // //       }\n\n// // // //       onSave();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // //       toast.error('Failed to save sub-domain');\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const getModalTitle = () => {\n// // // //     if (subDomain) {\n// // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // //     }\n// // // //     if (parent) {\n// // // //       return `Add SubDomain under: ${parent.title}`;\n// // // //     }\n// // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // //   };\n\n// // // //   const getLevel = () => {\n// // // //     if (!parent) return 'Root Level';\n// // // //     // This is a simplified level calculation\n// // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"modal-overlay\">\n// // // //       <div className=\"modal\">\n// // // //         <div className=\"modal-header\">\n// // // //           <h2>{getModalTitle()}</h2>\n// // // //           <button onClick={onClose}>√ó</button>\n// // // //         </div>\n\n// // // //         <form onSubmit={handleSubmit}>\n// // // //           <div className=\"form-group\">\n// // // //             <label>SubDomain Title</label>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={formData.title}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // //               required\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"form-group\">\n// // // //             <label>Description (Optional)</label>\n// // // //             <textarea\n// // // //               value={formData.description}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // //               rows={3}\n// // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // //             />\n// // // //           </div>\n\n// // // //           <div className=\"modal-info\">\n// // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // //             {parent && (\n// // // //               <>\n// // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // //               </>\n// // // //             )}\n// // // //             <strong>Level:</strong> {getLevel()}\n// // // //           </div>\n\n// // // //           <div className=\"modal-actions\">\n// // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // //               Cancel\n// // // //             </button>\n// // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // //             </button>\n// // // //           </div>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SubDomainManagement;\n\n// // // // // // src/components/domains/SubDomainManagement.js - NEW FILE\n// // // // // import React, { useState, useEffect } from 'react';\n// // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // import { authService } from '../../services/authService';\n// // // // // import { toast } from 'react-toastify';\n// // // // // import {\n// // // // //   FiPlus,\n// // // // //   FiEdit,\n// // // // //   FiTrash2,\n// // // // //   FiChevronDown,\n// // // // //   FiChevronRight,\n// // // // //   FiFolder,\n// // // // //   FiFolderPlus,\n// // // // //   FiFileText,\n// // // // //   FiArrowLeft,\n// // // // //   FiMoreVertical,\n// // // // //   FiMove,\n// // // // //   FiTarget\n// // // // // } from 'react-icons/fi';\n\n// // // // // const SubDomainManagement = () => {\n// // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n\n// // // // //   const { domainId } = useParams();\n// // // // //   const navigate = useNavigate();\n\n// // // // //   const [domain, setDomain] = useState(null);\n// // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // //   const [loading, setLoading] = useState(true);\n// // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // //     domainId,\n// // // // //     domain: domain?.title,\n// // // // //     subDomainsCount: subDomains.length,\n// // // // //     loading,\n// // // // //     selectedParent: selectedParent?.title,\n// // // // //     expandedCount: expandedNodes.size\n// // // // //   });\n\n// // // // //   useEffect(() => {\n// // // // //     if (domainId) {\n// // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     }\n// // // // //   }, [domainId]);\n\n// // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // //     try {\n// // // // //       setLoading(true);\n\n// // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n\n// // // // //       // Fetch domain details and hierarchy\n// // // // //       const [domainResponse, hierarchyResponse] = await Promise.all([\n// // // // //         authService.getDomains({ id: domainId }),\n// // // // //         authService.getDomainHierarchy(domainId)\n// // // // //       ]);\n\n// // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domain response:', domainResponse.data);\n// // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n\n// // // // //       const domainData = domainResponse.data?.domains?.[0] || \n// // // // //                         domainResponse.data?.data?.domains?.[0] || \n// // // // //                         domainResponse.data;\n\n// // // // //       const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n\n// // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n// // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy:', hierarchyData);\n\n// // // // //       setDomain(domainData);\n// // // // //       setSubDomains(hierarchyData?.subDomains || []);\n\n// // // // //       // Auto-expand first level\n// // // // //       if (hierarchyData?.subDomains?.length > 0) {\n// // // // //         const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // //         console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // //       }\n\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // //       toast.error('Failed to fetch sub-domains');\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n\n// // // // //     setSelectedParent(parent);\n// // // // //     setEditingSubDomain(null);\n// // // // //     setShowAddModal(true);\n\n// // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // //       showAddModal: true, \n// // // // //       selectedParent: parent?.title,\n// // // // //       editingSubDomain: null \n// // // // //     });\n// // // // //   };\n\n// // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n\n// // // // //     setSelectedParent(null);\n// // // // //     setEditingSubDomain(subDomain);\n// // // // //     setShowAddModal(true);\n// // // // //   };\n\n// // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //     const hasProjects = subDomain.projectCount > 0;\n\n// // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // //     if (hasChildren) {\n// // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // //     }\n// // // // //     if (hasProjects) {\n// // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // //     }\n\n// // // // //     if (!window.confirm(confirmMessage)) {\n// // // // //       return;\n// // // // //     }\n\n// // // // //     try {\n// // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n\n// // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n\n// // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n\n// // // // //       toast.success('Sub-domain deleted successfully');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // //       toast.error('Failed to delete sub-domain');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const toggleExpanded = (nodeId) => {\n// // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n\n// // // // //     const newExpanded = new Set(expandedNodes);\n// // // // //     if (newExpanded.has(nodeId)) {\n// // // // //       newExpanded.delete(nodeId);\n// // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // //     } else {\n// // // // //       newExpanded.add(nodeId);\n// // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // //     }\n// // // // //     setExpandedNodes(newExpanded);\n// // // // //   };\n\n// // // // //   const isLeafNode = (subDomain) => {\n// // // // //     return !subDomain.children || subDomain.children.length === 0;\n// // // // //   };\n\n// // // // //   const getNodeLevel = (subDomain, level = 0) => {\n// // // // //     return level;\n// // // // //   };\n\n// // // // //   if (loading) {\n// // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n\n// // // // //     return (\n// // // // //       <div className=\"loading-container\">\n// // // // //         <div className=\"loading-spinner\"></div>\n// // // // //         <p>Loading sub-domains...</p>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   if (!domain) {\n// // // // //     console.log('‚ùå SUBDOMAIN MANAGEMENT - Domain not found');\n\n// // // // //     return (\n// // // // //       <div className=\"empty-state\">\n// // // // //         <h3>Domain not found</h3>\n// // // // //         <p>The requested domain could not be loaded.</p>\n// // // // //         <button \n// // // // //           className=\"primary-button\" \n// // // // //           onClick={() => navigate('/domains')}\n// // // // //         >\n// // // // //           <FiArrowLeft />\n// // // // //           Back to Domains\n// // // // //         </button>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // //   return (\n// // // // //     <div className=\"subdomain-management\">\n// // // // //       {/* Header with Breadcrumb */}\n// // // // //       <div className=\"page-header\">\n// // // // //         <div className=\"header-content\">\n// // // // //           <div className=\"breadcrumb\">\n// // // // //             <button \n// // // // //               className=\"breadcrumb-link\"\n// // // // //               onClick={() => navigate('/domains')}\n// // // // //             >\n// // // // //               <FiArrowLeft />\n// // // // //               Domains\n// // // // //             </button>\n// // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // //             <span className=\"breadcrumb-current\">{domain.title}</span>\n// // // // //           </div>\n// // // // //           <h1>SubDomain Management</h1>\n// // // // //           <p>Manage the hierarchical structure of {domain.title}</p>\n// // // // //         </div>\n// // // // //         <div className=\"header-actions\">\n// // // // //           <button \n// // // // //             className=\"primary-button\" \n// // // // //             onClick={() => handleAddSubDomain()}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //             Add Root SubDomain\n// // // // //           </button>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Quick Guide */}\n// // // // //       <div className=\"quick-guide\">\n// // // // //         <h3>How to Add SubDomains:</h3>\n// // // // //         <div className=\"guide-steps\">\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">1</span>\n// // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">2</span>\n// // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">3</span>\n// // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Domain Info Card */}\n// // // // //       <div className=\"domain-info-card\">\n// // // // //         <div className=\"domain-icon\">\n// // // // //           <FiFolder />\n// // // // //         </div>\n// // // // //         <div className=\"domain-details\">\n// // // // //           <h3>{domain.title}</h3>\n// // // // //           <p>{domain.description}</p>\n// // // // //           <div className=\"domain-stats\">\n// // // // //             <span className=\"stat-item\">\n// // // // //               <strong>{subDomains.length}</strong> root sub-domains\n// // // // //             </span>\n// // // // //             <span className=\"stat-item\">\n// // // // //               <strong>{domain.projectCount || 0}</strong> total projects\n// // // // //             </span>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* SubDomain Tree */}\n// // // // //       <div className=\"subdomain-tree-container\">\n// // // // //         <div className=\"tree-header\">\n// // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // //           <div className=\"tree-legend\">\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiFolder className=\"folder-icon\" />\n// // // // //               Has children\n// // // // //             </span>\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // //               Leaf (can have projects)\n// // // // //             </span>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         {subDomains.length > 0 ? (\n// // // // //           <div className=\"subdomain-tree\">\n// // // // //             {subDomains.map((subDomain) => (\n// // // // //               <SubDomainNode\n// // // // //                 key={subDomain.id}\n// // // // //                 subDomain={subDomain}\n// // // // //                 level={0}\n// // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // //                 onToggleExpanded={toggleExpanded}\n// // // // //                 onEdit={handleEditSubDomain}\n// // // // //                 onDelete={handleDeleteSubDomain}\n// // // // //                 onAddChild={handleAddSubDomain}\n// // // // //                 expandedNodes={expandedNodes}\n// // // // //               />\n// // // // //             ))}\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div className=\"empty-tree-state\">\n// // // // //             <FiFolderPlus size={64} />\n// // // // //             <h3>No SubDomains Yet</h3>\n// // // // //             <p>Start organizing your {domain.title} projects by creating subdomains</p>\n// // // // //             <div className=\"empty-state-examples\">\n// // // // //               <h4>Example Structure:</h4>\n// // // // //               <div className=\"example-tree\">\n// // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // //               </div>\n// // // // //             </div>\n// // // // //             <div className=\"empty-state-actions\">\n// // // // //               <button \n// // // // //                 className=\"primary-button large\" \n// // // // //                 onClick={() => handleAddSubDomain()}\n// // // // //               >\n// // // // //                 <FiPlus />\n// // // // //                 Create Your First SubDomain\n// // // // //               </button>\n// // // // //               <p className=\"help-text\">\n// // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // //               </p>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n\n// // // // //       {/* Add/Edit Modal */}\n// // // // //       {showAddModal && (\n// // // // //         <SubDomainModal\n// // // // //           subDomain={editingSubDomain}\n// // // // //           parent={selectedParent}\n// // // // //           domain={domain}\n// // // // //           onClose={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //           }}\n// // // // //           onSave={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //             fetchDomainAndSubDomains();\n// // // // //           }}\n// // // // //         />\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Node Component\n// // // // // const SubDomainNode = ({ \n// // // // //   subDomain, \n// // // // //   level, \n// // // // //   isExpanded, \n// // // // //   onToggleExpanded, \n// // // // //   onEdit, \n// // // // //   onDelete, \n// // // // //   onAddChild,\n// // // // //   expandedNodes \n// // // // // }) => {\n// // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //   const isLeaf = !hasChildren;\n\n// // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // //     title: subDomain.title,\n// // // // //     level,\n// // // // //     hasChildren,\n// // // // //     isLeaf,\n// // // // //     isExpanded,\n// // // // //     projectCount: subDomain.projectCount\n// // // // //   });\n\n// // // // //   return (\n// // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // //       <div className=\"node-content\">\n// // // // //         <div className=\"node-main\">\n// // // // //           {hasChildren ? (\n// // // // //             <button \n// // // // //               className=\"expand-button\"\n// // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // //             >\n// // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // //             </button>\n// // // // //           ) : (\n// // // // //             <div className=\"expand-placeholder\" />\n// // // // //           )}\n\n// // // // //           <div className=\"node-icon\">\n// // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // //           </div>\n\n// // // // //           <div className=\"node-info\">\n// // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // //             <div className=\"node-stats\">\n// // // // //               {hasChildren && (\n// // // // //                 <span className=\"stat-badge\">\n// // // // //                   {subDomain.children.length} sub-domains\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {subDomain.projectCount > 0 && (\n// // // // //                 <span className=\"stat-badge projects\">\n// // // // //                   {subDomain.projectCount} projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {isLeaf && (\n// // // // //                 <span className=\"stat-badge leaf\">\n// // // // //                   Can have projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         <div className=\"node-actions\">\n// // // // //           <button \n// // // // //             className=\"action-button add\" \n// // // // //             onClick={() => onAddChild(subDomain)}\n// // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //           </button>\n// // // // //           <div className=\"action-menu\">\n// // // // //             <button \n// // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // //               title=\"More actions\"\n// // // // //             >\n// // // // //               <FiMoreVertical />\n// // // // //             </button>\n// // // // //             {showMenu && (\n// // // // //               <div className=\"dropdown-menu\">\n// // // // //                 <button onClick={() => onEdit(subDomain)}>\n// // // // //                   <FiEdit /> Edit\n// // // // //                 </button>\n// // // // //                 <button onClick={() => onAddChild(subDomain)}>\n// // // // //                   <FiPlus /> Add Child SubDomain\n// // // // //                 </button>\n// // // // //                 <button onClick={() => onDelete(subDomain)} className=\"danger\">\n// // // // //                   <FiTrash2 /> Delete\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Children */}\n// // // // //       {hasChildren && isExpanded && (\n// // // // //         <div className=\"node-children\">\n// // // // //           {subDomain.children.map((child) => (\n// // // // //             <SubDomainNode\n// // // // //               key={child.id}\n// // // // //               subDomain={child}\n// // // // //               level={level + 1}\n// // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // //               onToggleExpanded={onToggleExpanded}\n// // // // //               onEdit={onEdit}\n// // // // //               onDelete={onDelete}\n// // // // //               onAddChild={onAddChild}\n// // // // //               expandedNodes={expandedNodes}\n// // // // //             />\n// // // // //           ))}\n// // // // //         </div>\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Modal Component\n// // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // //   const [formData, setFormData] = useState({\n// // // // //     title: subDomain?.title || '',\n// // // // //     description: subDomain?.description || ''\n// // // // //   });\n// // // // //   const [loading, setLoading] = useState(false);\n\n// // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // //     isEditing: !!subDomain,\n// // // // //     parentTitle: parent?.title,\n// // // // //     domainTitle: domain?.title,\n// // // // //     formData\n// // // // //   });\n\n// // // // //   const handleSubmit = async (e) => {\n// // // // //     e.preventDefault();\n// // // // //     setLoading(true);\n\n// // // // //     try {\n// // // // //       const requestData = {\n// // // // //         ...formData,\n// // // // //         domainId: domain.id,\n// // // // //         parentId: parent?.id || null\n// // // // //       };\n\n// // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // //       if (subDomain) {\n// // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // //         toast.success('Sub-domain updated successfully');\n// // // // //       } else {\n// // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // //         const response = await authService.createSubDomain(requestData);\n// // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // //         toast.success('Sub-domain created successfully');\n// // // // //       }\n\n// // // // //       onSave();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // //       toast.error('Failed to save sub-domain');\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getModalTitle = () => {\n// // // // //     if (subDomain) {\n// // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // //     }\n// // // // //     if (parent) {\n// // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // //     }\n// // // // //     return `Add Root SubDomain in: ${domain.title}`;\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"modal-overlay\">\n// // // // //       <div className=\"modal\">\n// // // // //         <div className=\"modal-header\">\n// // // // //           <h2>{getModalTitle()}</h2>\n// // // // //           <button onClick={onClose}>√ó</button>\n// // // // //         </div>\n\n// // // // //         <form onSubmit={handleSubmit}>\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>SubDomain Title</label>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={formData.title}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Description (Optional)</label>\n// // // // //             <textarea\n// // // // //               value={formData.description}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // //               rows={3}\n// // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // //             />\n// // // // //           </div>\n\n// // // // //           <div className=\"modal-info\">\n// // // // //             <strong>Domain:</strong> {domain.title}<br />\n// // // // //             {parent && (\n// // // // //               <>\n// // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // //               </>\n// // // // //             )}\n// // // // //             <strong>Level:</strong> {parent ? `Level ${getLevel(parent) + 1}` : 'Root Level'}\n// // // // //           </div>\n\n// // // // //           <div className=\"modal-actions\">\n// // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // //               Cancel\n// // // // //             </button>\n// // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </form>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // Helper function to get level\n// // // // // const getLevel = (subDomain, level = 0) => {\n// // // // //   // This would need to be calculated based on the hierarchy\n// // // // //   return level + 1;\n// // // // // };\n\n// // // // // export default SubDomainManagement;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SubDomainManagement\");\n$RefreshReg$(_c2, \"SubDomainNode\");\n$RefreshReg$(_c3, \"SubDomainModal\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","authService","toast","FiPlus","FiEdit","FiTrash2","FiChevronDown","FiChevronRight","FiFolder","FiFolderPlus","FiFileText","FiArrowLeft","FiMoreVertical","FiMove","FiTarget","jsxDEV","_jsxDEV","Fragment","_Fragment","SubDomainManagement","_s","console","log","domainId","navigate","domain","setDomain","subDomains","setSubDomains","loading","setLoading","showAddModal","setShowAddModal","editingSubDomain","setEditingSubDomain","selectedParent","setSelectedParent","expandedNodes","setExpandedNodes","Set","title","subDomainsCount","length","expandedCount","size","fetchDomainAndSubDomains","_domainsResponse$data","_domainsResponse$data2","_domainsResponse$data3","_subDomainsResponse$d","_subDomainsResponse$d2","_subDomainsResponse$d3","domainsResponse","getDomains","data","domainData","domains","find","d","id","description","projectCount","subDomainsResponse","getSubDomains","subDomainsData","firstLevelIds","map","sd","_hierarchyResponse$da","hierarchyResponse","getDomainHierarchy","hierarchyData","includes","prev","hierarchyError","error","response","handleAddSubDomain","parent","handleEditSubDomain","subDomain","handleDeleteSubDomain","hasChildren","children","hasProjects","confirmMessage","window","confirm","deleteSubDomain","success","toggleExpanded","nodeId","newExpanded","has","delete","add","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","SubDomainNode","level","isExpanded","onToggleExpanded","onEdit","onDelete","onAddChild","SubDomainModal","onClose","onSave","_c","_s2","showMenu","setShowMenu","isLeaf","child","_c2","_s3","formData","setFormData","isEditing","parentTitle","domainTitle","handleSubmit","e","preventDefault","requestData","trim","parentId","updateSubDomain","createSubDomain","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","errorMessage","message","getModalTitle","getLevel","onSubmit","type","value","onChange","target","placeholder","required","minLength","maxLength","rows","disabled","_c3","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/domains/SubDomainManagement.js"],"sourcesContent":["// src/components/domains/SubDomainManagement.js - CORRECTED VERSION\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport {\n  FiPlus,\n  FiEdit,\n  FiTrash2,\n  FiChevronDown,\n  FiChevronRight,\n  FiFolder,\n  FiFolderPlus,\n  FiFileText,\n  FiArrowLeft,\n  FiMoreVertical,\n  FiMove,\n  FiTarget\n} from 'react-icons/fi';\n\nconst SubDomainManagement = () => {\n  console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n  const { domainId } = useParams();\n  const navigate = useNavigate();\n  \n  const [domain, setDomain] = useState(null);\n  const [subDomains, setSubDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [editingSubDomain, setEditingSubDomain] = useState(null);\n  const [selectedParent, setSelectedParent] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n  console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n    domainId,\n    domain: domain?.title,\n    subDomainsCount: subDomains.length,\n    loading,\n    selectedParent: selectedParent?.title,\n    expandedCount: expandedNodes.size\n  });\n\n  useEffect(() => {\n    if (domainId) {\n      console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n      fetchDomainAndSubDomains();\n    }\n  }, [domainId]);\n\n  const fetchDomainAndSubDomains = async () => {\n    try {\n      setLoading(true);\n      \n      console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n      console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n      // ‚úÖ CORRECTED: Get domain details first (without query params to get all domains, then filter)\n      console.log('üåê SUBDOMAIN FETCH - Calling getDomains (no params)');\n      const domainsResponse = await authService.getDomains();\n      console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n      // Extract specific domain from response\n      let domainData = null;\n      const domains = domainsResponse.data?.domains || domainsResponse.data?.data?.domains || [];\n      if (domains.length > 0) {\n        domainData = domains.find(d => d.id == domainId);\n      }\n      \n      console.log('üéØ SUBDOMAIN FETCH - Found domain:', domainData);\n      \n      // If we don't have domain data, create a placeholder\n      if (!domainData) {\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n        domainData = {\n          id: domainId,\n          title: `Domain ${domainId}`,\n          description: 'Domain not found in list',\n          projectCount: 0\n        };\n      }\n      \n      setDomain(domainData);\n      \n      // ‚úÖ CORRECTED: Get subdomains using the correct API\n      console.log('üåê SUBDOMAIN FETCH - Calling getSubDomains with domainId');\n      const subDomainsResponse = await authService.getSubDomains({ domainId: domainId });\n      console.log('‚úÖ SUBDOMAIN FETCH - SubDomains response:', subDomainsResponse.data);\n      \n      const subDomainsData = subDomainsResponse.data?.subDomains || subDomainsResponse.data?.data?.subDomains || [];\n      console.log('üéØ SUBDOMAIN FETCH - Extracted subdomains:', subDomainsData);\n      \n      setSubDomains(subDomainsData);\n      \n      // Auto-expand first level\n      if (subDomainsData.length > 0) {\n        const firstLevelIds = subDomainsData.map(sd => sd.id);\n        setExpandedNodes(new Set(firstLevelIds));\n        console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n      }\n      \n      // ‚úÖ ALTERNATIVE: Try hierarchy API as fallback\n      try {\n        console.log('üåê SUBDOMAIN FETCH - Also trying getDomainHierarchy as fallback');\n        const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n        console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n        const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n        if (hierarchyData?.subDomains && hierarchyData.subDomains.length > 0) {\n          console.log('üéØ SUBDOMAIN FETCH - Using hierarchy data instead');\n          setSubDomains(hierarchyData.subDomains);\n          \n          // Update domain info if more complete\n          if (hierarchyData.title && !domainData.title.includes('Domain ')) {\n            setDomain(prev => ({ ...prev, ...hierarchyData }));\n          }\n        }\n      } catch (hierarchyError) {\n        console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed (using subdomains list):', hierarchyError);\n      }\n      \n    } catch (error) {\n      console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n      console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n      toast.error('Failed to fetch domain information');\n      \n      // Create fallback domain\n      setDomain({\n        id: domainId,\n        title: `Domain ${domainId}`,\n        description: 'Error loading domain details',\n        projectCount: 0\n      });\n      setSubDomains([]);\n    } finally {\n      setLoading(false);\n      console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n    }\n  };\n\n  const handleAddSubDomain = (parent = null) => {\n    console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n    console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n    setSelectedParent(parent);\n    setEditingSubDomain(null);\n    setShowAddModal(true);\n    \n    console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n      showAddModal: true, \n      selectedParent: parent?.title,\n      editingSubDomain: null \n    });\n  };\n\n  const handleEditSubDomain = (subDomain) => {\n    console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n    console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n    setSelectedParent(null);\n    setEditingSubDomain(subDomain);\n    setShowAddModal(true);\n  };\n\n  const handleDeleteSubDomain = async (subDomain) => {\n    const hasChildren = subDomain.children && subDomain.children.length > 0;\n    const hasProjects = subDomain.projectCount > 0;\n    \n    let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n    if (hasChildren) {\n      confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n    }\n    if (hasProjects) {\n      confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n    }\n    \n    if (!window.confirm(confirmMessage)) {\n      return;\n    }\n\n    try {\n      console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n      console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n      console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n      console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n      const response = await authService.deleteSubDomain(subDomain.id);\n      \n      console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n      toast.success('Sub-domain deleted successfully');\n      fetchDomainAndSubDomains();\n    } catch (error) {\n      console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n      toast.error('Failed to delete sub-domain');\n    }\n  };\n\n  const toggleExpanded = (nodeId) => {\n    console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodeId)) {\n      newExpanded.delete(nodeId);\n      console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n    } else {\n      newExpanded.add(nodeId);\n      console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  if (loading) {\n    console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading sub-domains...</p>\n      </div>\n    );\n  }\n\n  console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n  return (\n    <div className=\"subdomain-management\">\n      {/* Header with Breadcrumb */}\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <div className=\"breadcrumb\">\n            <button \n              className=\"breadcrumb-link\"\n              onClick={() => navigate('/domains')}\n            >\n              <FiArrowLeft />\n              Domains\n            </button>\n            <span className=\"breadcrumb-separator\">/</span>\n            <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n          </div>\n          <h1>SubDomain Management</h1>\n          <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            className=\"primary-button\" \n            onClick={() => handleAddSubDomain()}\n          >\n            <FiPlus />\n            Add Root SubDomain\n          </button>\n        </div>\n      </div>\n\n      {/* Quick Guide */}\n      <div className=\"quick-guide\">\n        <h3>How to Build Your SubDomain Hierarchy:</h3>\n        <div className=\"guide-steps\">\n          <div className=\"guide-step\">\n            <span className=\"step-number\">1</span>\n            <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">2</span>\n            <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n          </div>\n          <div className=\"guide-step\">\n            <span className=\"step-number\">3</span>\n            <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Domain Info Card */}\n      {domain && (\n        <div className=\"domain-info-card\">\n          <div className=\"domain-icon\">\n            <FiFolder />\n          </div>\n          <div className=\"domain-details\">\n            <h3>{domain.title}</h3>\n            <p>{domain.description}</p>\n            <div className=\"domain-stats\">\n              <span className=\"stat-item\">\n                <strong>{subDomains.length}</strong> root sub-domains\n              </span>\n              <span className=\"stat-item\">\n                <strong>{domain.projectCount || 0}</strong> total projects\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* SubDomain Tree */}\n      <div className=\"subdomain-tree-container\">\n        <div className=\"tree-header\">\n          <h2>SubDomain Hierarchy</h2>\n          <div className=\"tree-legend\">\n            <span className=\"legend-item\">\n              <FiFolder className=\"folder-icon\" />\n              Has children\n            </span>\n            <span className=\"legend-item\">\n              <FiTarget className=\"leaf-icon\" />\n              Leaf (can have projects)\n            </span>\n          </div>\n        </div>\n\n        {subDomains.length > 0 ? (\n          <div className=\"subdomain-tree\">\n            {subDomains.map((subDomain) => (\n              <SubDomainNode\n                key={subDomain.id}\n                subDomain={subDomain}\n                level={0}\n                isExpanded={expandedNodes.has(subDomain.id)}\n                onToggleExpanded={toggleExpanded}\n                onEdit={handleEditSubDomain}\n                onDelete={handleDeleteSubDomain}\n                onAddChild={handleAddSubDomain}\n                expandedNodes={expandedNodes}\n              />\n            ))}\n          </div>\n        ) : (\n          <div className=\"empty-tree-state\">\n            <FiFolderPlus size={64} />\n            <h3>No SubDomains Yet</h3>\n            <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n            <div className=\"empty-state-examples\">\n              <h4>Example Structure:</h4>\n              <div className=\"example-tree\">\n                <div className=\"example-item\">üìÇ Machine Learning</div>\n                <div className=\"example-item nested\">üéØ Deep Learning</div>\n                <div className=\"example-item nested\">üéØ Computer Vision</div>\n                <div className=\"example-item\">üéØ Data Science</div>\n              </div>\n            </div>\n            <div className=\"empty-state-actions\">\n              <button \n                className=\"primary-button large\" \n                onClick={() => handleAddSubDomain()}\n              >\n                <FiPlus />\n                Create Your First SubDomain\n              </button>\n              <p className=\"help-text\">\n                üí° Tip: Start with broad categories, then add specific subcategories as needed\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Add/Edit Modal */}\n      {showAddModal && (\n        <SubDomainModal\n          subDomain={editingSubDomain}\n          parent={selectedParent}\n          domain={domain}\n          onClose={() => {\n            setShowAddModal(false);\n            setEditingSubDomain(null);\n            setSelectedParent(null);\n          }}\n          onSave={() => {\n            setShowAddModal(false);\n            setEditingSubDomain(null);\n            setSelectedParent(null);\n            fetchDomainAndSubDomains();\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\n// SubDomain Node Component\nconst SubDomainNode = ({ \n  subDomain, \n  level, \n  isExpanded, \n  onToggleExpanded, \n  onEdit, \n  onDelete, \n  onAddChild,\n  expandedNodes \n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const hasChildren = subDomain.children && subDomain.children.length > 0;\n  const isLeaf = !hasChildren;\n\n  console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n    title: subDomain.title,\n    level,\n    hasChildren,\n    isLeaf,\n    isExpanded,\n    projectCount: subDomain.projectCount\n  });\n\n  return (\n    <div className={`subdomain-node level-${level}`}>\n      <div className=\"node-content\">\n        <div className=\"node-main\">\n          {hasChildren ? (\n            <button \n              className=\"expand-button\"\n              onClick={() => onToggleExpanded(subDomain.id)}\n            >\n              {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n            </button>\n          ) : (\n            <div className=\"expand-placeholder\" />\n          )}\n          \n          <div className=\"node-icon\">\n            {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n          </div>\n          \n          <div className=\"node-info\">\n            <h4 className=\"node-title\">{subDomain.title}</h4>\n            <p className=\"node-description\">{subDomain.description}</p>\n            <div className=\"node-stats\">\n              {hasChildren && (\n                <span className=\"stat-badge\">\n                  {subDomain.children.length} sub-domains\n                </span>\n              )}\n              {subDomain.projectCount > 0 && (\n                <span className=\"stat-badge projects\">\n                  {subDomain.projectCount} projects\n                </span>\n              )}\n              {isLeaf && (\n                <span className=\"stat-badge leaf\">\n                  Can have projects\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"node-actions\">\n          <button \n            className=\"action-button add\" \n            onClick={() => onAddChild(subDomain)}\n            title={`Add child subdomain under \"${subDomain.title}\"`}\n          >\n            <FiPlus />\n          </button>\n          <div className=\"action-menu\">\n            <button \n              onClick={() => setShowMenu(!showMenu)}\n              title=\"More actions\"\n            >\n              <FiMoreVertical />\n            </button>\n            {showMenu && (\n              <div className=\"dropdown-menu\">\n                <button onClick={() => {\n                  onEdit(subDomain);\n                  setShowMenu(false);\n                }}>\n                  <FiEdit /> Edit\n                </button>\n                <button onClick={() => {\n                  onAddChild(subDomain);\n                  setShowMenu(false);\n                }}>\n                  <FiPlus /> Add Child SubDomain\n                </button>\n                <button onClick={() => {\n                  onDelete(subDomain);\n                  setShowMenu(false);\n                }} className=\"danger\">\n                  <FiTrash2 /> Delete\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      {/* Children */}\n      {hasChildren && isExpanded && (\n        <div className=\"node-children\">\n          {subDomain.children.map((child) => (\n            <SubDomainNode\n              key={child.id}\n              subDomain={child}\n              level={level + 1}\n              isExpanded={expandedNodes.has(child.id)}\n              onToggleExpanded={onToggleExpanded}\n              onEdit={onEdit}\n              onDelete={onDelete}\n              onAddChild={onAddChild}\n              expandedNodes={expandedNodes}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// SubDomain Modal Component - CORRECTED VERSION\nconst SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: subDomain?.title || '',\n    description: subDomain?.description || ''\n  });\n  const [loading, setLoading] = useState(false);\n\n  console.log('üìù SUBDOMAIN MODAL - Props:', {\n    isEditing: !!subDomain,\n    parentTitle: parent?.title,\n    domainTitle: domain?.title,\n    formData\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const requestData = {\n        title: formData.title.trim(),\n        description: formData.description.trim(),\n        domainId: domain.id,\n        parentId: parent?.id || null\n      };\n\n      console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n      console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n      console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n      if (subDomain) {\n        console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n        const response = await authService.updateSubDomain(subDomain.id, requestData);\n        console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n        toast.success('Sub-domain updated successfully');\n      } else {\n        console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n        const response = await authService.createSubDomain(requestData);\n        console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n        toast.success('Sub-domain created successfully');\n      }\n\n      onSave();\n    } catch (error) {\n      console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n      console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n      console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n      \n      const errorMessage = error.response?.data?.message || \n                          error.response?.data?.error || \n                          'Failed to save sub-domain';\n      toast.error(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getModalTitle = () => {\n    if (subDomain) {\n      return `Edit SubDomain: ${subDomain.title}`;\n    }\n    if (parent) {\n      return `Add SubDomain under: ${parent.title}`;\n    }\n    return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n  };\n\n  const getLevel = () => {\n    if (!parent) return 'Root Level';\n    return `Level ${(parent.level || 0) + 1}`;\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <h2>{getModalTitle()}</h2>\n          <button onClick={onClose}>√ó</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>SubDomain Title *</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              placeholder=\"e.g., Machine Learning, Deep Learning\"\n              required\n              minLength={3}\n              maxLength={100}\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Description (Optional)</label>\n            <textarea\n              value={formData.description}\n              onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              rows={3}\n              placeholder=\"Describe what this sub-domain covers...\"\n              maxLength={500}\n            />\n          </div>\n          \n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n            {parent && (\n              <>\n                <strong>Parent SubDomain:</strong> {parent.title}<br />\n              </>\n            )}\n            <strong>Level:</strong> {getLevel()}\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button \n              type=\"submit\" \n              className=\"primary-button\" \n              disabled={loading || !formData.title.trim()}\n            >\n              {loading ? 'Saving...' : 'Save SubDomain'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SubDomainManagement;\n\n\n// // src/components/domains/SubDomainManagement.js - FIXED VERSION\n// import React, { useState, useEffect } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiChevronDown,\n//   FiChevronRight,\n//   FiFolder,\n//   FiFolderPlus,\n//   FiFileText,\n//   FiArrowLeft,\n//   FiMoreVertical,\n//   FiMove,\n//   FiTarget\n// } from 'react-icons/fi';\n\n// const SubDomainManagement = () => {\n//   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n//   const { domainId } = useParams();\n//   const navigate = useNavigate();\n  \n//   const [domain, setDomain] = useState(null);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingSubDomain, setEditingSubDomain] = useState(null);\n//   const [selectedParent, setSelectedParent] = useState(null);\n//   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n//   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n//     domainId,\n//     domain: domain?.title,\n//     subDomainsCount: subDomains.length,\n//     loading,\n//     selectedParent: selectedParent?.title,\n//     expandedCount: expandedNodes.size\n//   });\n\n//   useEffect(() => {\n//     if (domainId) {\n//       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n//       fetchDomainAndSubDomains();\n//     }\n//   }, [domainId]);\n\n//   const fetchDomainAndSubDomains = async () => {\n//     try {\n//       setLoading(true);\n      \n//       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n//       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n//       // First, let's try to get domain details\n//       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n//       const domainsResponse = await authService.getDomains({ id: domainId });\n//       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n//       // Extract domain from response\n//       let domainData = null;\n//       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n//         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n//       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n//         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n//       } else if (Array.isArray(domainsResponse.data)) {\n//         domainData = domainsResponse.data.find(d => d.id == domainId);\n//       }\n      \n//       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n//       // If we don't have domain data, create a placeholder\n//       if (!domainData) {\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n//         domainData = {\n//           id: domainId,\n//           title: `Domain ${domainId}`,\n//           description: 'Loading domain details...',\n//           projectCount: 0\n//         };\n//       }\n      \n//       setDomain(domainData);\n      \n//       // Try to get hierarchy if domain exists\n//       try {\n//         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n//         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n//         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n//         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n//         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n//         setSubDomains(hierarchyData?.subDomains || []);\n        \n//         // Auto-expand first level\n//         if (hierarchyData?.subDomains?.length > 0) {\n//           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n//           setExpandedNodes(new Set(firstLevelIds));\n//           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n//         }\n//       } catch (hierarchyError) {\n//         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n//         setSubDomains([]);\n//       }\n      \n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n//       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n//       toast.error('Failed to fetch domain information');\n      \n//       // Create fallback domain\n//       setDomain({\n//         id: domainId,\n//         title: `Domain ${domainId}`,\n//         description: 'Error loading domain details',\n//         projectCount: 0\n//       });\n//       setSubDomains([]);\n//     } finally {\n//       setLoading(false);\n//       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n//     }\n//   };\n\n//   const handleAddSubDomain = (parent = null) => {\n//     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n//     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n//     setSelectedParent(parent);\n//     setEditingSubDomain(null);\n//     setShowAddModal(true);\n    \n//     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n//       showAddModal: true, \n//       selectedParent: parent?.title,\n//       editingSubDomain: null \n//     });\n//   };\n\n//   const handleEditSubDomain = (subDomain) => {\n//     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n//     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n//     setSelectedParent(null);\n//     setEditingSubDomain(subDomain);\n//     setShowAddModal(true);\n//   };\n\n//   const handleDeleteSubDomain = async (subDomain) => {\n//     const hasChildren = subDomain.children && subDomain.children.length > 0;\n//     const hasProjects = subDomain.projectCount > 0;\n    \n//     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n//     if (hasChildren) {\n//       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n//     }\n//     if (hasProjects) {\n//       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n//     }\n    \n//     if (!window.confirm(confirmMessage)) {\n//       return;\n//     }\n\n//     try {\n//       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n//       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n//       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n//       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n//       const response = await authService.deleteSubDomain(subDomain.id);\n      \n//       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n//       toast.success('Sub-domain deleted successfully');\n//       fetchDomainAndSubDomains();\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n//       toast.error('Failed to delete sub-domain');\n//     }\n//   };\n\n//   const toggleExpanded = (nodeId) => {\n//     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n//     const newExpanded = new Set(expandedNodes);\n//     if (newExpanded.has(nodeId)) {\n//       newExpanded.delete(nodeId);\n//       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n//     } else {\n//       newExpanded.add(nodeId);\n//       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n//     }\n//     setExpandedNodes(newExpanded);\n//   };\n\n//   if (loading) {\n//     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading sub-domains...</p>\n//       </div>\n//     );\n//   }\n\n//   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n//   return (\n//     <div className=\"subdomain-management\">\n//       {/* Header with Breadcrumb */}\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <div className=\"breadcrumb\">\n//             <button \n//               className=\"breadcrumb-link\"\n//               onClick={() => navigate('/domains')}\n//             >\n//               <FiArrowLeft />\n//               Domains\n//             </button>\n//             <span className=\"breadcrumb-separator\">/</span>\n//             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n//           </div>\n//           <h1>SubDomain Management</h1>\n//           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n//         </div>\n//         <div className=\"header-actions\">\n//           <button \n//             className=\"primary-button\" \n//             onClick={() => handleAddSubDomain()}\n//           >\n//             <FiPlus />\n//             Add Root SubDomain\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Quick Guide */}\n//       <div className=\"quick-guide\">\n//         <h3>How to Build Your SubDomain Hierarchy:</h3>\n//         <div className=\"guide-steps\">\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">1</span>\n//             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">2</span>\n//             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n//           </div>\n//           <div className=\"guide-step\">\n//             <span className=\"step-number\">3</span>\n//             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Domain Info Card */}\n//       {domain && (\n//         <div className=\"domain-info-card\">\n//           <div className=\"domain-icon\">\n//             <FiFolder />\n//           </div>\n//           <div className=\"domain-details\">\n//             <h3>{domain.title}</h3>\n//             <p>{domain.description}</p>\n//             <div className=\"domain-stats\">\n//               <span className=\"stat-item\">\n//                 <strong>{subDomains.length}</strong> root sub-domains\n//               </span>\n//               <span className=\"stat-item\">\n//                 <strong>{domain.projectCount || 0}</strong> total projects\n//               </span>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* SubDomain Tree */}\n//       <div className=\"subdomain-tree-container\">\n//         <div className=\"tree-header\">\n//           <h2>SubDomain Hierarchy</h2>\n//           <div className=\"tree-legend\">\n//             <span className=\"legend-item\">\n//               <FiFolder className=\"folder-icon\" />\n//               Has children\n//             </span>\n//             <span className=\"legend-item\">\n//               <FiTarget className=\"leaf-icon\" />\n//               Leaf (can have projects)\n//             </span>\n//           </div>\n//         </div>\n\n//         {subDomains.length > 0 ? (\n//           <div className=\"subdomain-tree\">\n//             {subDomains.map((subDomain) => (\n//               <SubDomainNode\n//                 key={subDomain.id}\n//                 subDomain={subDomain}\n//                 level={0}\n//                 isExpanded={expandedNodes.has(subDomain.id)}\n//                 onToggleExpanded={toggleExpanded}\n//                 onEdit={handleEditSubDomain}\n//                 onDelete={handleDeleteSubDomain}\n//                 onAddChild={handleAddSubDomain}\n//                 expandedNodes={expandedNodes}\n//               />\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"empty-tree-state\">\n//             <FiFolderPlus size={64} />\n//             <h3>No SubDomains Yet</h3>\n//             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n//             <div className=\"empty-state-examples\">\n//               <h4>Example Structure:</h4>\n//               <div className=\"example-tree\">\n//                 <div className=\"example-item\">üìÇ Machine Learning</div>\n//                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n//                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n//                 <div className=\"example-item\">üéØ Data Science</div>\n//               </div>\n//             </div>\n//             <div className=\"empty-state-actions\">\n//               <button \n//                 className=\"primary-button large\" \n//                 onClick={() => handleAddSubDomain()}\n//               >\n//                 <FiPlus />\n//                 Create Your First SubDomain\n//               </button>\n//               <p className=\"help-text\">\n//                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n//               </p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Add/Edit Modal */}\n//       {showAddModal && (\n//         <SubDomainModal\n//           subDomain={editingSubDomain}\n//           parent={selectedParent}\n//           domain={domain}\n//           onClose={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//           }}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             setEditingSubDomain(null);\n//             setSelectedParent(null);\n//             fetchDomainAndSubDomains();\n//           }}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Node Component\n// const SubDomainNode = ({ \n//   subDomain, \n//   level, \n//   isExpanded, \n//   onToggleExpanded, \n//   onEdit, \n//   onDelete, \n//   onAddChild,\n//   expandedNodes \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n//   const hasChildren = subDomain.children && subDomain.children.length > 0;\n//   const isLeaf = !hasChildren;\n\n//   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n//     title: subDomain.title,\n//     level,\n//     hasChildren,\n//     isLeaf,\n//     isExpanded,\n//     projectCount: subDomain.projectCount\n//   });\n\n//   return (\n//     <div className={`subdomain-node level-${level}`}>\n//       <div className=\"node-content\">\n//         <div className=\"node-main\">\n//           {hasChildren ? (\n//             <button \n//               className=\"expand-button\"\n//               onClick={() => onToggleExpanded(subDomain.id)}\n//             >\n//               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n//             </button>\n//           ) : (\n//             <div className=\"expand-placeholder\" />\n//           )}\n          \n//           <div className=\"node-icon\">\n//             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n//           </div>\n          \n//           <div className=\"node-info\">\n//             <h4 className=\"node-title\">{subDomain.title}</h4>\n//             <p className=\"node-description\">{subDomain.description}</p>\n//             <div className=\"node-stats\">\n//               {hasChildren && (\n//                 <span className=\"stat-badge\">\n//                   {subDomain.children.length} sub-domains\n//                 </span>\n//               )}\n//               {subDomain.projectCount > 0 && (\n//                 <span className=\"stat-badge projects\">\n//                   {subDomain.projectCount} projects\n//                 </span>\n//               )}\n//               {isLeaf && (\n//                 <span className=\"stat-badge leaf\">\n//                   Can have projects\n//                 </span>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n        \n//         <div className=\"node-actions\">\n//           <button \n//             className=\"action-button add\" \n//             onClick={() => onAddChild(subDomain)}\n//             title={`Add child subdomain under \"${subDomain.title}\"`}\n//           >\n//             <FiPlus />\n//           </button>\n//           <div className=\"action-menu\">\n//             <button \n//               onClick={() => setShowMenu(!showMenu)}\n//               title=\"More actions\"\n//             >\n//               <FiMoreVertical />\n//             </button>\n//             {showMenu && (\n//               <div className=\"dropdown-menu\">\n//                 <button onClick={() => {\n//                   onEdit(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiEdit /> Edit\n//                 </button>\n//                 <button onClick={() => {\n//                   onAddChild(subDomain);\n//                   setShowMenu(false);\n//                 }}>\n//                   <FiPlus /> Add Child SubDomain\n//                 </button>\n//                 <button onClick={() => {\n//                   onDelete(subDomain);\n//                   setShowMenu(false);\n//                 }} className=\"danger\">\n//                   <FiTrash2 /> Delete\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n      \n//       {/* Children */}\n//       {hasChildren && isExpanded && (\n//         <div className=\"node-children\">\n//           {subDomain.children.map((child) => (\n//             <SubDomainNode\n//               key={child.id}\n//               subDomain={child}\n//               level={level + 1}\n//               isExpanded={expandedNodes.has(child.id)}\n//               onToggleExpanded={onToggleExpanded}\n//               onEdit={onEdit}\n//               onDelete={onDelete}\n//               onAddChild={onAddChild}\n//               expandedNodes={expandedNodes}\n//             />\n//           ))}\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// // SubDomain Modal Component - FIXED VERSION\n// const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: subDomain?.title || '',\n//     description: subDomain?.description || ''\n//   });\n//   const [loading, setLoading] = useState(false);\n\n//   console.log('üìù SUBDOMAIN MODAL - Props:', {\n//     isEditing: !!subDomain,\n//     parentTitle: parent?.title,\n//     domainTitle: domain?.title,\n//     formData\n//   });\n\n//   // Enhanced slug generation with better validation\n//   const generateSlug = (title) => {\n//     if (!title || title.trim() === '') {\n//       return '';\n//     }\n    \n//     let slug = title\n//       .toLowerCase()\n//       .trim()\n//       .replace(/[^a-z0-9\\s-]/g, '') // Remove special chars except spaces and hyphens\n//       .replace(/\\s+/g, '-')         // Replace spaces with hyphens\n//       .replace(/-+/g, '-')          // Remove consecutive hyphens\n//       .replace(/^-|-$/g, '');       // Remove leading/trailing hyphens\n    \n//     // Ensure minimum length - if too short, add timestamp\n//     if (slug.length < 3) {\n//       slug = slug + '-' + Date.now().toString().slice(-4);\n//     }\n    \n//     // Ensure maximum length\n//     if (slug.length > 50) {\n//       slug = slug.substring(0, 50).replace(/-$/, '');\n//     }\n    \n//     return slug;\n//   };\n\n//   const slugPreview = generateSlug(formData.title);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     try {\n//       // Generate slug from title\n//       const slug = generateSlug(formData.title);\n      \n//       // Validate slug\n//       if (!slug || slug.length < 3) {\n//         toast.error('Title must generate a valid slug (at least 3 characters)');\n//         setLoading(false);\n//         return;\n//       }\n\n//       const requestData = {\n//         title: formData.title.trim(),\n//         description: formData.description.trim(),\n       \n//         domainId: domain.id,\n//         parentId: parent?.id || null\n//       };\n\n//       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n//       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n//       console.log('üîç SUBDOMAIN SAVE - Generated slug:', slug, 'Length:', slug.length);\n//       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n//       if (subDomain) {\n//         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n//         const response = await authService.updateSubDomain(subDomain.id, requestData);\n//         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n//         toast.success('Sub-domain updated successfully');\n//       } else {\n//         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n//         const response = await authService.createSubDomain(requestData);\n//         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n//         toast.success('Sub-domain created successfully');\n//       }\n\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n//       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n//       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n      \n//       // Better error handling\n//       const errorMessage = error.response?.data?.message || \n//                           error.response?.data?.error || \n//                           'Failed to save sub-domain';\n//       toast.error(errorMessage);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const getModalTitle = () => {\n//     if (subDomain) {\n//       return `Edit SubDomain: ${subDomain.title}`;\n//     }\n//     if (parent) {\n//       return `Add SubDomain under: ${parent.title}`;\n//     }\n//     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n//   };\n\n//   const getLevel = () => {\n//     if (!parent) return 'Root Level';\n//     // This is a simplified level calculation\n//     return `Level ${(parent.level || 0) + 1}`;\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal\">\n//         <div className=\"modal-header\">\n//           <h2>{getModalTitle()}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label>SubDomain Title *</label>\n//             <input\n//               type=\"text\"\n//               value={formData.title}\n//               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//               placeholder=\"e.g., Machine Learning, Deep Learning\"\n//               required\n//               minLength={3}\n//               maxLength={100}\n//             />\n//             {formData.title && (\n//               <div className=\"slug-preview\">\n//                 <small>\n//                   URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code>\n//                   {slugPreview && slugPreview.length < 3 && (\n//                     <span style={{color: 'red'}}> (Too short - needs at least 3 chars)</span>\n//                   )}\n//                 </small>\n//               </div>\n//             )}\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Description (Optional)</label>\n//             <textarea\n//               value={formData.description}\n//               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n//               rows={3}\n//               placeholder=\"Describe what this sub-domain covers...\"\n//               maxLength={500}\n//             />\n//           </div>\n          \n//           <div className=\"modal-info\">\n//             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n//             {parent && (\n//               <>\n//                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n//               </>\n//             )}\n//             <strong>Level:</strong> {getLevel()}\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button \n//               type=\"submit\" \n//               className=\"primary-button\" \n//               disabled={loading || !formData.title.trim() || slugPreview.length < 3}\n//             >\n//               {loading ? 'Saving...' : 'Save SubDomain'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SubDomainManagement;\n\n\n// // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // import React, { useState, useEffect } from 'react';\n// // import { useParams, useNavigate } from 'react-router-dom';\n// // import { authService } from '../../services/authService';\n// // import { toast } from 'react-toastify';\n// // import {\n// //   FiPlus,\n// //   FiEdit,\n// //   FiTrash2,\n// //   FiChevronDown,\n// //   FiChevronRight,\n// //   FiFolder,\n// //   FiFolderPlus,\n// //   FiFileText,\n// //   FiArrowLeft,\n// //   FiMoreVertical,\n// //   FiMove,\n// //   FiTarget\n// // } from 'react-icons/fi';\n\n// // const SubDomainManagement = () => {\n// //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// //   const { domainId } = useParams();\n// //   const navigate = useNavigate();\n  \n// //   const [domain, setDomain] = useState(null);\n// //   const [subDomains, setSubDomains] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [showAddModal, setShowAddModal] = useState(false);\n// //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// //   const [selectedParent, setSelectedParent] = useState(null);\n// //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// //     domainId,\n// //     domain: domain?.title,\n// //     subDomainsCount: subDomains.length,\n// //     loading,\n// //     selectedParent: selectedParent?.title,\n// //     expandedCount: expandedNodes.size\n// //   });\n\n// //   useEffect(() => {\n// //     if (domainId) {\n// //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// //       fetchDomainAndSubDomains();\n// //     }\n// //   }, [domainId]);\n\n// //   const fetchDomainAndSubDomains = async () => {\n// //     try {\n// //       setLoading(true);\n      \n// //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// //       // First, let's try to get domain details\n// //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// //       const domainsResponse = await authService.getDomains({ id: domainId });\n// //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// //       // Extract domain from response\n// //       let domainData = null;\n// //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// //       } else if (Array.isArray(domainsResponse.data)) {\n// //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// //       }\n      \n// //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// //       // If we don't have domain data, create a placeholder\n// //       if (!domainData) {\n// //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// //         domainData = {\n// //           id: domainId,\n// //           title: `Domain ${domainId}`,\n// //           description: 'Loading domain details...',\n// //           projectCount: 0\n// //         };\n// //       }\n      \n// //       setDomain(domainData);\n      \n// //       // Try to get hierarchy if domain exists\n// //       try {\n// //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// //         // Auto-expand first level\n// //         if (hierarchyData?.subDomains?.length > 0) {\n// //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// //           setExpandedNodes(new Set(firstLevelIds));\n// //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// //         }\n// //       } catch (hierarchyError) {\n// //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// //         setSubDomains([]);\n// //       }\n      \n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// //       toast.error('Failed to fetch domain information');\n      \n// //       // Create fallback domain\n// //       setDomain({\n// //         id: domainId,\n// //         title: `Domain ${domainId}`,\n// //         description: 'Error loading domain details',\n// //         projectCount: 0\n// //       });\n// //       setSubDomains([]);\n// //     } finally {\n// //       setLoading(false);\n// //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// //     }\n// //   };\n\n// //   const handleAddSubDomain = (parent = null) => {\n// //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// //     setSelectedParent(parent);\n// //     setEditingSubDomain(null);\n// //     setShowAddModal(true);\n    \n// //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// //       showAddModal: true, \n// //       selectedParent: parent?.title,\n// //       editingSubDomain: null \n// //     });\n// //   };\n\n// //   const handleEditSubDomain = (subDomain) => {\n// //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// //     setSelectedParent(null);\n// //     setEditingSubDomain(subDomain);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleDeleteSubDomain = async (subDomain) => {\n// //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //     const hasProjects = subDomain.projectCount > 0;\n    \n// //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// //     if (hasChildren) {\n// //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// //     }\n// //     if (hasProjects) {\n// //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// //     }\n    \n// //     if (!window.confirm(confirmMessage)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// //       toast.success('Sub-domain deleted successfully');\n// //       fetchDomainAndSubDomains();\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// //       toast.error('Failed to delete sub-domain');\n// //     }\n// //   };\n\n// //   const toggleExpanded = (nodeId) => {\n// //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// //     const newExpanded = new Set(expandedNodes);\n// //     if (newExpanded.has(nodeId)) {\n// //       newExpanded.delete(nodeId);\n// //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// //     } else {\n// //       newExpanded.add(nodeId);\n// //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// //     }\n// //     setExpandedNodes(newExpanded);\n// //   };\n\n// //   if (loading) {\n// //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// //     return (\n// //       <div className=\"loading-container\">\n// //         <div className=\"loading-spinner\"></div>\n// //         <p>Loading sub-domains...</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// //   return (\n// //     <div className=\"subdomain-management\">\n// //       {/* Header with Breadcrumb */}\n// //       <div className=\"page-header\">\n// //         <div className=\"header-content\">\n// //           <div className=\"breadcrumb\">\n// //             <button \n// //               className=\"breadcrumb-link\"\n// //               onClick={() => navigate('/domains')}\n// //             >\n// //               <FiArrowLeft />\n// //               Domains\n// //             </button>\n// //             <span className=\"breadcrumb-separator\">/</span>\n// //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// //           </div>\n// //           <h1>SubDomain Management</h1>\n// //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// //         </div>\n// //         <div className=\"header-actions\">\n// //           <button \n// //             className=\"primary-button\" \n// //             onClick={() => handleAddSubDomain()}\n// //           >\n// //             <FiPlus />\n// //             Add Root SubDomain\n// //           </button>\n// //         </div>\n// //       </div>\n\n// //       {/* Quick Guide */}\n// //       <div className=\"quick-guide\">\n// //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// //         <div className=\"guide-steps\">\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">1</span>\n// //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">2</span>\n// //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// //           </div>\n// //           <div className=\"guide-step\">\n// //             <span className=\"step-number\">3</span>\n// //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// //           </div>\n// //         </div>\n// //       </div>\n\n// //       {/* Domain Info Card */}\n// //       {domain && (\n// //         <div className=\"domain-info-card\">\n// //           <div className=\"domain-icon\">\n// //             <FiFolder />\n// //           </div>\n// //           <div className=\"domain-details\">\n// //             <h3>{domain.title}</h3>\n// //             <p>{domain.description}</p>\n// //             <div className=\"domain-stats\">\n// //               <span className=\"stat-item\">\n// //                 <strong>{subDomains.length}</strong> root sub-domains\n// //               </span>\n// //               <span className=\"stat-item\">\n// //                 <strong>{domain.projectCount || 0}</strong> total projects\n// //               </span>\n// //             </div>\n// //           </div>\n// //         </div>\n// //       )}\n\n// //       {/* SubDomain Tree */}\n// //       <div className=\"subdomain-tree-container\">\n// //         <div className=\"tree-header\">\n// //           <h2>SubDomain Hierarchy</h2>\n// //           <div className=\"tree-legend\">\n// //             <span className=\"legend-item\">\n// //               <FiFolder className=\"folder-icon\" />\n// //               Has children\n// //             </span>\n// //             <span className=\"legend-item\">\n// //               <FiTarget className=\"leaf-icon\" />\n// //               Leaf (can have projects)\n// //             </span>\n// //           </div>\n// //         </div>\n\n// //         {subDomains.length > 0 ? (\n// //           <div className=\"subdomain-tree\">\n// //             {subDomains.map((subDomain) => (\n// //               <SubDomainNode\n// //                 key={subDomain.id}\n// //                 subDomain={subDomain}\n// //                 level={0}\n// //                 isExpanded={expandedNodes.has(subDomain.id)}\n// //                 onToggleExpanded={toggleExpanded}\n// //                 onEdit={handleEditSubDomain}\n// //                 onDelete={handleDeleteSubDomain}\n// //                 onAddChild={handleAddSubDomain}\n// //                 expandedNodes={expandedNodes}\n// //               />\n// //             ))}\n// //           </div>\n// //         ) : (\n// //           <div className=\"empty-tree-state\">\n// //             <FiFolderPlus size={64} />\n// //             <h3>No SubDomains Yet</h3>\n// //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// //             <div className=\"empty-state-examples\">\n// //               <h4>Example Structure:</h4>\n// //               <div className=\"example-tree\">\n// //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// //                 <div className=\"example-item\">üéØ Data Science</div>\n// //               </div>\n// //             </div>\n// //             <div className=\"empty-state-actions\">\n// //               <button \n// //                 className=\"primary-button large\" \n// //                 onClick={() => handleAddSubDomain()}\n// //               >\n// //                 <FiPlus />\n// //                 Create Your First SubDomain\n// //               </button>\n// //               <p className=\"help-text\">\n// //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// //               </p>\n// //             </div>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Add/Edit Modal */}\n// //       {showAddModal && (\n// //         <SubDomainModal\n// //           subDomain={editingSubDomain}\n// //           parent={selectedParent}\n// //           domain={domain}\n// //           onClose={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //           }}\n// //           onSave={() => {\n// //             setShowAddModal(false);\n// //             setEditingSubDomain(null);\n// //             setSelectedParent(null);\n// //             fetchDomainAndSubDomains();\n// //           }}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // SubDomain Node Component\n// // const SubDomainNode = ({ \n// //   subDomain, \n// //   level, \n// //   isExpanded, \n// //   onToggleExpanded, \n// //   onEdit, \n// //   onDelete, \n// //   onAddChild,\n// //   expandedNodes \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n// //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// //   const isLeaf = !hasChildren;\n\n// //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// //     title: subDomain.title,\n// //     level,\n// //     hasChildren,\n// //     isLeaf,\n// //     isExpanded,\n// //     projectCount: subDomain.projectCount\n// //   });\n\n// //   return (\n// //     <div className={`subdomain-node level-${level}`}>\n// //       <div className=\"node-content\">\n// //         <div className=\"node-main\">\n// //           {hasChildren ? (\n// //             <button \n// //               className=\"expand-button\"\n// //               onClick={() => onToggleExpanded(subDomain.id)}\n// //             >\n// //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// //             </button>\n// //           ) : (\n// //             <div className=\"expand-placeholder\" />\n// //           )}\n          \n// //           <div className=\"node-icon\">\n// //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// //           </div>\n          \n// //           <div className=\"node-info\">\n// //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// //             <p className=\"node-description\">{subDomain.description}</p>\n// //             <div className=\"node-stats\">\n// //               {hasChildren && (\n// //                 <span className=\"stat-badge\">\n// //                   {subDomain.children.length} sub-domains\n// //                 </span>\n// //               )}\n// //               {subDomain.projectCount > 0 && (\n// //                 <span className=\"stat-badge projects\">\n// //                   {subDomain.projectCount} projects\n// //                 </span>\n// //               )}\n// //               {isLeaf && (\n// //                 <span className=\"stat-badge leaf\">\n// //                   Can have projects\n// //                 </span>\n// //               )}\n// //             </div>\n// //           </div>\n// //         </div>\n        \n// //         <div className=\"node-actions\">\n// //           <button \n// //             className=\"action-button add\" \n// //             onClick={() => onAddChild(subDomain)}\n// //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// //           >\n// //             <FiPlus />\n// //           </button>\n// //           <div className=\"action-menu\">\n// //             <button \n// //               onClick={() => setShowMenu(!showMenu)}\n// //               title=\"More actions\"\n// //             >\n// //               <FiMoreVertical />\n// //             </button>\n// //             {showMenu && (\n// //               <div className=\"dropdown-menu\">\n// //                 <button onClick={() => {\n// //                   onEdit(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiEdit /> Edit\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onAddChild(subDomain);\n// //                   setShowMenu(false);\n// //                 }}>\n// //                   <FiPlus /> Add Child SubDomain\n// //                 </button>\n// //                 <button onClick={() => {\n// //                   onDelete(subDomain);\n// //                   setShowMenu(false);\n// //                 }} className=\"danger\">\n// //                   <FiTrash2 /> Delete\n// //                 </button>\n// //               </div>\n// //             )}\n// //           </div>\n// //         </div>\n// //       </div>\n      \n// //       {/* Children */}\n// //       {hasChildren && isExpanded && (\n// //         <div className=\"node-children\">\n// //           {subDomain.children.map((child) => (\n// //             <SubDomainNode\n// //               key={child.id}\n// //               subDomain={child}\n// //               level={level + 1}\n// //               isExpanded={expandedNodes.has(child.id)}\n// //               onToggleExpanded={onToggleExpanded}\n// //               onEdit={onEdit}\n// //               onDelete={onDelete}\n// //               onAddChild={onAddChild}\n// //               expandedNodes={expandedNodes}\n// //             />\n// //           ))}\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // SubDomain Modal Component\n// // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: subDomain?.title || '',\n// //     description: subDomain?.description || ''\n// //   });\n// //   const [loading, setLoading] = useState(false);\n\n// //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// //     isEditing: !!subDomain,\n// //     parentTitle: parent?.title,\n// //     domainTitle: domain?.title,\n// //     formData\n// //   });\n\n// //   // Generate slug preview\n// //   const generateSlug = (title) => {\n// //     return title\n// //       .toLowerCase()\n// //       .replace(/[^a-z0-9]/g, '-')\n// //       .replace(/-+/g, '-')\n// //       .replace(/^-|-$/g, '');\n// //   };\n\n// //   const slugPreview = generateSlug(formData.title);\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       // Generate slug from title\n// //       const slug = generateSlug(formData.title);\n\n// //       const requestData = {\n// //         ...formData,\n// //         // slug: slug,\n// //         domainId: domain.id,\n// //         parentId: parent?.id || null\n// //       };\n\n// //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// //       console.log('üìã SUBDOMAIN SAVE - Generated slug:', slug);\n// //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// //       if (subDomain) {\n// //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// //         toast.success('Sub-domain updated successfully');\n// //       } else {\n// //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// //         const response = await authService.createSubDomain(requestData);\n// //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// //         toast.success('Sub-domain created successfully');\n// //       }\n\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n// //       toast.error('Failed to save sub-domain');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const getModalTitle = () => {\n// //     if (subDomain) {\n// //       return `Edit SubDomain: ${subDomain.title}`;\n// //     }\n// //     if (parent) {\n// //       return `Add SubDomain under: ${parent.title}`;\n// //     }\n// //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// //   };\n\n// //   const getLevel = () => {\n// //     if (!parent) return 'Root Level';\n// //     // This is a simplified level calculation\n// //     return `Level ${(parent.level || 0) + 1}`;\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal\">\n// //         <div className=\"modal-header\">\n// //           <h2>{getModalTitle()}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n        \n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-group\">\n// //             <label>SubDomain Title</label>\n// //             <input\n// //               type=\"text\"\n// //               value={formData.title}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// //               required\n// //             />\n// //             {formData.title && (\n// //               <div className=\"slug-preview\">\n// //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// //               </div>\n// //             )}\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Description (Optional)</label>\n// //             <textarea\n// //               value={formData.description}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// //               rows={3}\n// //               placeholder=\"Describe what this sub-domain covers...\"\n// //             />\n// //           </div>\n          \n// //           <div className=\"modal-info\">\n// //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// //             {parent && (\n// //               <>\n// //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// //               </>\n// //             )}\n// //             <strong>Level:</strong> {getLevel()}\n// //           </div>\n          \n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// //               {loading ? 'Saving...' : 'Save SubDomain'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default SubDomainManagement;\n\n\n\n// // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // import React, { useState, useEffect } from 'react';\n// // // import { useParams, useNavigate } from 'react-router-dom';\n// // // import { authService } from '../../services/authService';\n// // // import { toast } from 'react-toastify';\n// // // import {\n// // //   FiPlus,\n// // //   FiEdit,\n// // //   FiTrash2,\n// // //   FiChevronDown,\n// // //   FiChevronRight,\n// // //   FiFolder,\n// // //   FiFolderPlus,\n// // //   FiFileText,\n// // //   FiArrowLeft,\n// // //   FiMoreVertical,\n// // //   FiMove,\n// // //   FiTarget\n// // // } from 'react-icons/fi';\n\n// // // const SubDomainManagement = () => {\n// // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // //   const { domainId } = useParams();\n// // //   const navigate = useNavigate();\n  \n// // //   const [domain, setDomain] = useState(null);\n// // //   const [subDomains, setSubDomains] = useState([]);\n// // //   const [loading, setLoading] = useState(true);\n// // //   const [showAddModal, setShowAddModal] = useState(false);\n// // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // //   const [selectedParent, setSelectedParent] = useState(null);\n// // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // //     domainId,\n// // //     domain: domain?.title,\n// // //     subDomainsCount: subDomains.length,\n// // //     loading,\n// // //     selectedParent: selectedParent?.title,\n// // //     expandedCount: expandedNodes.size\n// // //   });\n\n// // //   useEffect(() => {\n// // //     if (domainId) {\n// // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // //       fetchDomainAndSubDomains();\n// // //     }\n// // //   }, [domainId]);\n\n// // //   const fetchDomainAndSubDomains = async () => {\n// // //     try {\n// // //       setLoading(true);\n      \n// // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // //       // First, let's try to get domain details\n// // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // //       // Extract domain from response\n// // //       let domainData = null;\n// // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // //       } else if (Array.isArray(domainsResponse.data)) {\n// // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // //       }\n      \n// // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // //       // If we don't have domain data, create a placeholder\n// // //       if (!domainData) {\n// // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // //         domainData = {\n// // //           id: domainId,\n// // //           title: `Domain ${domainId}`,\n// // //           description: 'Loading domain details...',\n// // //           projectCount: 0\n// // //         };\n// // //       }\n      \n// // //       setDomain(domainData);\n      \n// // //       // Try to get hierarchy if domain exists\n// // //       try {\n// // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // //         // Auto-expand first level\n// // //         if (hierarchyData?.subDomains?.length > 0) {\n// // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // //           setExpandedNodes(new Set(firstLevelIds));\n// // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // //         }\n// // //       } catch (hierarchyError) {\n// // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // //         setSubDomains([]);\n// // //       }\n      \n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // //       toast.error('Failed to fetch domain information');\n      \n// // //       // Create fallback domain\n// // //       setDomain({\n// // //         id: domainId,\n// // //         title: `Domain ${domainId}`,\n// // //         description: 'Error loading domain details',\n// // //         projectCount: 0\n// // //       });\n// // //       setSubDomains([]);\n// // //     } finally {\n// // //       setLoading(false);\n// // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // //     }\n// // //   };\n\n// // //   const handleAddSubDomain = (parent = null) => {\n// // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // //     setSelectedParent(parent);\n// // //     setEditingSubDomain(null);\n// // //     setShowAddModal(true);\n    \n// // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // //       showAddModal: true, \n// // //       selectedParent: parent?.title,\n// // //       editingSubDomain: null \n// // //     });\n// // //   };\n\n// // //   const handleEditSubDomain = (subDomain) => {\n// // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // //     setSelectedParent(null);\n// // //     setEditingSubDomain(subDomain);\n// // //     setShowAddModal(true);\n// // //   };\n\n// // //   const handleDeleteSubDomain = async (subDomain) => {\n// // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // //     if (hasChildren) {\n// // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // //     }\n// // //     if (hasProjects) {\n// // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // //     }\n    \n// // //     if (!window.confirm(confirmMessage)) {\n// // //       return;\n// // //     }\n\n// // //     try {\n// // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // //       toast.success('Sub-domain deleted successfully');\n// // //       fetchDomainAndSubDomains();\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // //       toast.error('Failed to delete sub-domain');\n// // //     }\n// // //   };\n\n// // //   const toggleExpanded = (nodeId) => {\n// // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // //     const newExpanded = new Set(expandedNodes);\n// // //     if (newExpanded.has(nodeId)) {\n// // //       newExpanded.delete(nodeId);\n// // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // //     } else {\n// // //       newExpanded.add(nodeId);\n// // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // //     }\n// // //     setExpandedNodes(newExpanded);\n// // //   };\n\n// // //   if (loading) {\n// // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // //     return (\n// // //       <div className=\"loading-container\">\n// // //         <div className=\"loading-spinner\"></div>\n// // //         <p>Loading sub-domains...</p>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // //   return (\n// // //     <div className=\"subdomain-management\">\n// // //       {/* Header with Breadcrumb */}\n// // //       <div className=\"page-header\">\n// // //         <div className=\"header-content\">\n// // //           <div className=\"breadcrumb\">\n// // //             <button \n// // //               className=\"breadcrumb-link\"\n// // //               onClick={() => navigate('/domains')}\n// // //             >\n// // //               <FiArrowLeft />\n// // //               Domains\n// // //             </button>\n// // //             <span className=\"breadcrumb-separator\">/</span>\n// // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // //           </div>\n// // //           <h1>SubDomain Management</h1>\n// // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // //         </div>\n// // //         <div className=\"header-actions\">\n// // //           <button \n// // //             className=\"primary-button\" \n// // //             onClick={() => handleAddSubDomain()}\n// // //           >\n// // //             <FiPlus />\n// // //             Add Root SubDomain\n// // //           </button>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Quick Guide */}\n// // //       <div className=\"quick-guide\">\n// // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // //         <div className=\"guide-steps\">\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">1</span>\n// // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">2</span>\n// // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // //           </div>\n// // //           <div className=\"guide-step\">\n// // //             <span className=\"step-number\">3</span>\n// // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // //           </div>\n// // //         </div>\n// // //       </div>\n\n// // //       {/* Domain Info Card */}\n// // //       {domain && (\n// // //         <div className=\"domain-info-card\">\n// // //           <div className=\"domain-icon\">\n// // //             <FiFolder />\n// // //           </div>\n// // //           <div className=\"domain-details\">\n// // //             <h3>{domain.title}</h3>\n// // //             <p>{domain.description}</p>\n// // //             <div className=\"domain-stats\">\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // //               </span>\n// // //               <span className=\"stat-item\">\n// // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // //               </span>\n// // //             </div>\n// // //           </div>\n// // //         </div>\n// // //       )}\n\n// // //       {/* SubDomain Tree */}\n// // //       <div className=\"subdomain-tree-container\">\n// // //         <div className=\"tree-header\">\n// // //           <h2>SubDomain Hierarchy</h2>\n// // //           <div className=\"tree-legend\">\n// // //             <span className=\"legend-item\">\n// // //               <FiFolder className=\"folder-icon\" />\n// // //               Has children\n// // //             </span>\n// // //             <span className=\"legend-item\">\n// // //               <FiTarget className=\"leaf-icon\" />\n// // //               Leaf (can have projects)\n// // //             </span>\n// // //           </div>\n// // //         </div>\n\n// // //         {subDomains.length > 0 ? (\n// // //           <div className=\"subdomain-tree\">\n// // //             {subDomains.map((subDomain) => (\n// // //               <SubDomainNode\n// // //                 key={subDomain.id}\n// // //                 subDomain={subDomain}\n// // //                 level={0}\n// // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // //                 onToggleExpanded={toggleExpanded}\n// // //                 onEdit={handleEditSubDomain}\n// // //                 onDelete={handleDeleteSubDomain}\n// // //                 onAddChild={handleAddSubDomain}\n// // //                 expandedNodes={expandedNodes}\n// // //               />\n// // //             ))}\n// // //           </div>\n// // //         ) : (\n// // //           <div className=\"empty-tree-state\">\n// // //             <FiFolderPlus size={64} />\n// // //             <h3>No SubDomains Yet</h3>\n// // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // //             <div className=\"empty-state-examples\">\n// // //               <h4>Example Structure:</h4>\n// // //               <div className=\"example-tree\">\n// // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // //               </div>\n// // //             </div>\n// // //             <div className=\"empty-state-actions\">\n// // //               <button \n// // //                 className=\"primary-button large\" \n// // //                 onClick={() => handleAddSubDomain()}\n// // //               >\n// // //                 <FiPlus />\n// // //                 Create Your First SubDomain\n// // //               </button>\n// // //               <p className=\"help-text\">\n// // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // //               </p>\n// // //             </div>\n// // //           </div>\n// // //         )}\n// // //       </div>\n\n// // //       {/* Add/Edit Modal */}\n// // //       {showAddModal && (\n// // //         <SubDomainModal\n// // //           subDomain={editingSubDomain}\n// // //           parent={selectedParent}\n// // //           domain={domain}\n// // //           onClose={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //           }}\n// // //           onSave={() => {\n// // //             setShowAddModal(false);\n// // //             setEditingSubDomain(null);\n// // //             setSelectedParent(null);\n// // //             fetchDomainAndSubDomains();\n// // //           }}\n// // //         />\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // SubDomain Node Component\n// // // const SubDomainNode = ({ \n// // //   subDomain, \n// // //   level, \n// // //   isExpanded, \n// // //   onToggleExpanded, \n// // //   onEdit, \n// // //   onDelete, \n// // //   onAddChild,\n// // //   expandedNodes \n// // // }) => {\n// // //   const [showMenu, setShowMenu] = useState(false);\n// // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // //   const isLeaf = !hasChildren;\n\n// // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // //     title: subDomain.title,\n// // //     level,\n// // //     hasChildren,\n// // //     isLeaf,\n// // //     isExpanded,\n// // //     projectCount: subDomain.projectCount\n// // //   });\n\n// // //   return (\n// // //     <div className={`subdomain-node level-${level}`}>\n// // //       <div className=\"node-content\">\n// // //         <div className=\"node-main\">\n// // //           {hasChildren ? (\n// // //             <button \n// // //               className=\"expand-button\"\n// // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // //             >\n// // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // //             </button>\n// // //           ) : (\n// // //             <div className=\"expand-placeholder\" />\n// // //           )}\n          \n// // //           <div className=\"node-icon\">\n// // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // //           </div>\n          \n// // //           <div className=\"node-info\">\n// // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // //             <p className=\"node-description\">{subDomain.description}</p>\n// // //             <div className=\"node-stats\">\n// // //               {hasChildren && (\n// // //                 <span className=\"stat-badge\">\n// // //                   {subDomain.children.length} sub-domains\n// // //                 </span>\n// // //               )}\n// // //               {subDomain.projectCount > 0 && (\n// // //                 <span className=\"stat-badge projects\">\n// // //                   {subDomain.projectCount} projects\n// // //                 </span>\n// // //               )}\n// // //               {isLeaf && (\n// // //                 <span className=\"stat-badge leaf\">\n// // //                   Can have projects\n// // //                 </span>\n// // //               )}\n// // //             </div>\n// // //           </div>\n// // //         </div>\n        \n// // //         <div className=\"node-actions\">\n// // //           <button \n// // //             className=\"action-button add\" \n// // //             onClick={() => onAddChild(subDomain)}\n// // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // //           >\n// // //             <FiPlus />\n// // //           </button>\n// // //           <div className=\"action-menu\">\n// // //             <button \n// // //               onClick={() => setShowMenu(!showMenu)}\n// // //               title=\"More actions\"\n// // //             >\n// // //               <FiMoreVertical />\n// // //             </button>\n// // //             {showMenu && (\n// // //               <div className=\"dropdown-menu\">\n// // //                 <button onClick={() => {\n// // //                   onEdit(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiEdit /> Edit\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onAddChild(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }}>\n// // //                   <FiPlus /> Add Child SubDomain\n// // //                 </button>\n// // //                 <button onClick={() => {\n// // //                   onDelete(subDomain);\n// // //                   setShowMenu(false);\n// // //                 }} className=\"danger\">\n// // //                   <FiTrash2 /> Delete\n// // //                 </button>\n// // //               </div>\n// // //             )}\n// // //           </div>\n// // //         </div>\n// // //       </div>\n      \n// // //       {/* Children */}\n// // //       {hasChildren && isExpanded && (\n// // //         <div className=\"node-children\">\n// // //           {subDomain.children.map((child) => (\n// // //             <SubDomainNode\n// // //               key={child.id}\n// // //               subDomain={child}\n// // //               level={level + 1}\n// // //               isExpanded={expandedNodes.has(child.id)}\n// // //               onToggleExpanded={onToggleExpanded}\n// // //               onEdit={onEdit}\n// // //               onDelete={onDelete}\n// // //               onAddChild={onAddChild}\n// // //               expandedNodes={expandedNodes}\n// // //             />\n// // //           ))}\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // // SubDomain Modal Component\n// // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // //   const [formData, setFormData] = useState({\n// // //     title: subDomain?.title || '',\n// // //     description: subDomain?.description || ''\n// // //   });\n// // //   const [loading, setLoading] = useState(false);\n\n// // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // //     isEditing: !!subDomain,\n// // //     parentTitle: parent?.title,\n// // //     domainTitle: domain?.title,\n// // //     formData\n// // //   });\n\n// // //   // Generate slug preview\n// // //   const generateSlug = (title) => {\n// // //     return title\n// // //       .toLowerCase()\n// // //       .replace(/[^a-z0-9]/g, '-')\n// // //       .replace(/-+/g, '-')\n// // //       .replace(/^-|-$/g, '');\n// // //   };\n\n// // //   const slugPreview = generateSlug(formData.title);\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     setLoading(true);\n\n// // //     try {\n// // //       // Generate slug from title\n// // //       const slug = generateSlug(formData.title);\n\n// // //       const requestData = {\n// // //         ...formData,\n// // //         slug: slug,\n// // //         domainId: domain.id,\n// // //         parentId: parent?.id || null\n// // //       };\n\n// // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // //       console.log('üìã SUBDOMAIN SAVE - Generated slug:', slug);\n// // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // //       if (subDomain) {\n// // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // //         toast.success('Sub-domain updated successfully');\n// // //       } else {\n// // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // //         const response = await authService.createSubDomain(requestData);\n// // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // //         toast.success('Sub-domain created successfully');\n// // //       }\n\n// // //       onSave();\n// // //     } catch (error) {\n// // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // //       console.error('‚ùå SUBDOMAIN SAVE - Error response:', error.response);\n// // //       console.error('‚ùå SUBDOMAIN SAVE - Error data:', error.response?.data);\n// // //       toast.error('Failed to save sub-domain');\n// // //     } finally {\n// // //       setLoading(false);\n// // //     }\n// // //   };\n\n// // //   const getModalTitle = () => {\n// // //     if (subDomain) {\n// // //       return `Edit SubDomain: ${subDomain.title}`;\n// // //     }\n// // //     if (parent) {\n// // //       return `Add SubDomain under: ${parent.title}`;\n// // //     }\n// // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // //   };\n\n// // //   const getLevel = () => {\n// // //     if (!parent) return 'Root Level';\n// // //     // This is a simplified level calculation\n// // //     return `Level ${(parent.level || 0) + 1}`;\n// // //   };\n\n// // //   return (\n// // //     <div className=\"modal-overlay\">\n// // //       <div className=\"modal\">\n// // //         <div className=\"modal-header\">\n// // //           <h2>{getModalTitle()}</h2>\n// // //           <button onClick={onClose}>√ó</button>\n// // //         </div>\n        \n// // //         <form onSubmit={handleSubmit}>\n// // //           <div className=\"form-group\">\n// // //             <label>SubDomain Title</label>\n// // //             <input\n// // //               type=\"text\"\n// // //               value={formData.title}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // //               required\n// // //             />\n// // //             {formData.title && (\n// // //               <div className=\"slug-preview\">\n// // //                 <small>URL Slug: <code>{slugPreview || 'enter-title-to-see-slug'}</code></small>\n// // //               </div>\n// // //             )}\n// // //           </div>\n          \n// // //           <div className=\"form-group\">\n// // //             <label>Description (Optional)</label>\n// // //             <textarea\n// // //               value={formData.description}\n// // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // //               rows={3}\n// // //               placeholder=\"Describe what this sub-domain covers...\"\n// // //             />\n// // //           </div>\n          \n// // //           <div className=\"modal-info\">\n// // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // //             {parent && (\n// // //               <>\n// // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // //               </>\n// // //             )}\n// // //             <strong>Level:</strong> {getLevel()}\n// // //           </div>\n          \n// // //           <div className=\"modal-actions\">\n// // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // //               Cancel\n// // //             </button>\n// // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // //             </button>\n// // //           </div>\n// // //         </form>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default SubDomainManagement;\n\n\n// // // // // src/components/domains/SubDomainManagement.js - REPLACE THE TEST VERSION\n// // // // import React, { useState, useEffect } from 'react';\n// // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // import { authService } from '../../services/authService';\n// // // // import { toast } from 'react-toastify';\n// // // // import {\n// // // //   FiPlus,\n// // // //   FiEdit,\n// // // //   FiTrash2,\n// // // //   FiChevronDown,\n// // // //   FiChevronRight,\n// // // //   FiFolder,\n// // // //   FiFolderPlus,\n// // // //   FiFileText,\n// // // //   FiArrowLeft,\n// // // //   FiMoreVertical,\n// // // //   FiMove,\n// // // //   FiTarget\n// // // // } from 'react-icons/fi';\n\n// // // // const SubDomainManagement = () => {\n// // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // //   const { domainId } = useParams();\n// // // //   const navigate = useNavigate();\n  \n// // // //   const [domain, setDomain] = useState(null);\n// // // //   const [subDomains, setSubDomains] = useState([]);\n// // // //   const [loading, setLoading] = useState(true);\n// // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // //     domainId,\n// // // //     domain: domain?.title,\n// // // //     subDomainsCount: subDomains.length,\n// // // //     loading,\n// // // //     selectedParent: selectedParent?.title,\n// // // //     expandedCount: expandedNodes.size\n// // // //   });\n\n// // // //   useEffect(() => {\n// // // //     if (domainId) {\n// // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // //       fetchDomainAndSubDomains();\n// // // //     }\n// // // //   }, [domainId]);\n\n// // // //   const fetchDomainAndSubDomains = async () => {\n// // // //     try {\n// // // //       setLoading(true);\n      \n// // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // //       // First, let's try to get domain details\n// // // //       console.log('üåê SUBDOMAIN FETCH - Calling getDomains with filter');\n// // // //       const domainsResponse = await authService.getDomains({ id: domainId });\n// // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domains response:', domainsResponse.data);\n      \n// // // //       // Extract domain from response\n// // // //       let domainData = null;\n// // // //       if (domainsResponse.data?.domains && domainsResponse.data.domains.length > 0) {\n// // // //         domainData = domainsResponse.data.domains.find(d => d.id == domainId);\n// // // //       } else if (domainsResponse.data?.data?.domains && domainsResponse.data.data.domains.length > 0) {\n// // // //         domainData = domainsResponse.data.data.domains.find(d => d.id == domainId);\n// // // //       } else if (Array.isArray(domainsResponse.data)) {\n// // // //         domainData = domainsResponse.data.find(d => d.id == domainId);\n// // // //       }\n      \n// // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n      \n// // // //       // If we don't have domain data, create a placeholder\n// // // //       if (!domainData) {\n// // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - No domain found, creating placeholder');\n// // // //         domainData = {\n// // // //           id: domainId,\n// // // //           title: `Domain ${domainId}`,\n// // // //           description: 'Loading domain details...',\n// // // //           projectCount: 0\n// // // //         };\n// // // //       }\n      \n// // // //       setDomain(domainData);\n      \n// // // //       // Try to get hierarchy if domain exists\n// // // //       try {\n// // // //         console.log('üåê SUBDOMAIN FETCH - Calling getDomainHierarchy');\n// // // //         const hierarchyResponse = await authService.getDomainHierarchy(domainId);\n// // // //         console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n        \n// // // //         const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n// // // //         console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy data:', hierarchyData);\n        \n// // // //         setSubDomains(hierarchyData?.subDomains || []);\n        \n// // // //         // Auto-expand first level\n// // // //         if (hierarchyData?.subDomains?.length > 0) {\n// // // //           const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // //           setExpandedNodes(new Set(firstLevelIds));\n// // // //           console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // //         }\n// // // //       } catch (hierarchyError) {\n// // // //         console.log('‚ö†Ô∏è SUBDOMAIN FETCH - Hierarchy fetch failed, starting with empty structure:', hierarchyError);\n// // // //         setSubDomains([]);\n// // // //       }\n      \n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // //       toast.error('Failed to fetch domain information');\n      \n// // // //       // Create fallback domain\n// // // //       setDomain({\n// // // //         id: domainId,\n// // // //         title: `Domain ${domainId}`,\n// // // //         description: 'Error loading domain details',\n// // // //         projectCount: 0\n// // // //       });\n// // // //       setSubDomains([]);\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // //     }\n// // // //   };\n\n// // // //   const handleAddSubDomain = (parent = null) => {\n// // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // //     setSelectedParent(parent);\n// // // //     setEditingSubDomain(null);\n// // // //     setShowAddModal(true);\n    \n// // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // //       showAddModal: true, \n// // // //       selectedParent: parent?.title,\n// // // //       editingSubDomain: null \n// // // //     });\n// // // //   };\n\n// // // //   const handleEditSubDomain = (subDomain) => {\n// // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // //     setSelectedParent(null);\n// // // //     setEditingSubDomain(subDomain);\n// // // //     setShowAddModal(true);\n// // // //   };\n\n// // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // //     if (hasChildren) {\n// // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // //     }\n// // // //     if (hasProjects) {\n// // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // //     }\n    \n// // // //     if (!window.confirm(confirmMessage)) {\n// // // //       return;\n// // // //     }\n\n// // // //     try {\n// // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // //       toast.success('Sub-domain deleted successfully');\n// // // //       fetchDomainAndSubDomains();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // //       toast.error('Failed to delete sub-domain');\n// // // //     }\n// // // //   };\n\n// // // //   const toggleExpanded = (nodeId) => {\n// // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // //     const newExpanded = new Set(expandedNodes);\n// // // //     if (newExpanded.has(nodeId)) {\n// // // //       newExpanded.delete(nodeId);\n// // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // //     } else {\n// // // //       newExpanded.add(nodeId);\n// // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // //     }\n// // // //     setExpandedNodes(newExpanded);\n// // // //   };\n\n// // // //   if (loading) {\n// // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // //     return (\n// // // //       <div className=\"loading-container\">\n// // // //         <div className=\"loading-spinner\"></div>\n// // // //         <p>Loading sub-domains...</p>\n// // // //       </div>\n// // // //     );\n// // // //   }\n\n// // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // //   return (\n// // // //     <div className=\"subdomain-management\">\n// // // //       {/* Header with Breadcrumb */}\n// // // //       <div className=\"page-header\">\n// // // //         <div className=\"header-content\">\n// // // //           <div className=\"breadcrumb\">\n// // // //             <button \n// // // //               className=\"breadcrumb-link\"\n// // // //               onClick={() => navigate('/domains')}\n// // // //             >\n// // // //               <FiArrowLeft />\n// // // //               Domains\n// // // //             </button>\n// // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // //             <span className=\"breadcrumb-current\">{domain?.title || 'Loading...'}</span>\n// // // //           </div>\n// // // //           <h1>SubDomain Management</h1>\n// // // //           <p>Manage the hierarchical structure of {domain?.title || 'this domain'}</p>\n// // // //         </div>\n// // // //         <div className=\"header-actions\">\n// // // //           <button \n// // // //             className=\"primary-button\" \n// // // //             onClick={() => handleAddSubDomain()}\n// // // //           >\n// // // //             <FiPlus />\n// // // //             Add Root SubDomain\n// // // //           </button>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Quick Guide */}\n// // // //       <div className=\"quick-guide\">\n// // // //         <h3>How to Build Your SubDomain Hierarchy:</h3>\n// // // //         <div className=\"guide-steps\">\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">1</span>\n// // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">2</span>\n// // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // //           </div>\n// // // //           <div className=\"guide-step\">\n// // // //             <span className=\"step-number\">3</span>\n// // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n\n// // // //       {/* Domain Info Card */}\n// // // //       {domain && (\n// // // //         <div className=\"domain-info-card\">\n// // // //           <div className=\"domain-icon\">\n// // // //             <FiFolder />\n// // // //           </div>\n// // // //           <div className=\"domain-details\">\n// // // //             <h3>{domain.title}</h3>\n// // // //             <p>{domain.description}</p>\n// // // //             <div className=\"domain-stats\">\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{subDomains.length}</strong> root sub-domains\n// // // //               </span>\n// // // //               <span className=\"stat-item\">\n// // // //                 <strong>{domain.projectCount || 0}</strong> total projects\n// // // //               </span>\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n// // // //       )}\n\n// // // //       {/* SubDomain Tree */}\n// // // //       <div className=\"subdomain-tree-container\">\n// // // //         <div className=\"tree-header\">\n// // // //           <h2>SubDomain Hierarchy</h2>\n// // // //           <div className=\"tree-legend\">\n// // // //             <span className=\"legend-item\">\n// // // //               <FiFolder className=\"folder-icon\" />\n// // // //               Has children\n// // // //             </span>\n// // // //             <span className=\"legend-item\">\n// // // //               <FiTarget className=\"leaf-icon\" />\n// // // //               Leaf (can have projects)\n// // // //             </span>\n// // // //           </div>\n// // // //         </div>\n\n// // // //         {subDomains.length > 0 ? (\n// // // //           <div className=\"subdomain-tree\">\n// // // //             {subDomains.map((subDomain) => (\n// // // //               <SubDomainNode\n// // // //                 key={subDomain.id}\n// // // //                 subDomain={subDomain}\n// // // //                 level={0}\n// // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // //                 onToggleExpanded={toggleExpanded}\n// // // //                 onEdit={handleEditSubDomain}\n// // // //                 onDelete={handleDeleteSubDomain}\n// // // //                 onAddChild={handleAddSubDomain}\n// // // //                 expandedNodes={expandedNodes}\n// // // //               />\n// // // //             ))}\n// // // //           </div>\n// // // //         ) : (\n// // // //           <div className=\"empty-tree-state\">\n// // // //             <FiFolderPlus size={64} />\n// // // //             <h3>No SubDomains Yet</h3>\n// // // //             <p>Start organizing your {domain?.title || 'domain'} projects by creating subdomains</p>\n// // // //             <div className=\"empty-state-examples\">\n// // // //               <h4>Example Structure:</h4>\n// // // //               <div className=\"example-tree\">\n// // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // //               </div>\n// // // //             </div>\n// // // //             <div className=\"empty-state-actions\">\n// // // //               <button \n// // // //                 className=\"primary-button large\" \n// // // //                 onClick={() => handleAddSubDomain()}\n// // // //               >\n// // // //                 <FiPlus />\n// // // //                 Create Your First SubDomain\n// // // //               </button>\n// // // //               <p className=\"help-text\">\n// // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // //               </p>\n// // // //             </div>\n// // // //           </div>\n// // // //         )}\n// // // //       </div>\n\n// // // //       {/* Add/Edit Modal */}\n// // // //       {showAddModal && (\n// // // //         <SubDomainModal\n// // // //           subDomain={editingSubDomain}\n// // // //           parent={selectedParent}\n// // // //           domain={domain}\n// // // //           onClose={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //           }}\n// // // //           onSave={() => {\n// // // //             setShowAddModal(false);\n// // // //             setEditingSubDomain(null);\n// // // //             setSelectedParent(null);\n// // // //             fetchDomainAndSubDomains();\n// // // //           }}\n// // // //         />\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Node Component\n// // // // const SubDomainNode = ({ \n// // // //   subDomain, \n// // // //   level, \n// // // //   isExpanded, \n// // // //   onToggleExpanded, \n// // // //   onEdit, \n// // // //   onDelete, \n// // // //   onAddChild,\n// // // //   expandedNodes \n// // // // }) => {\n// // // //   const [showMenu, setShowMenu] = useState(false);\n// // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // //   const isLeaf = !hasChildren;\n\n// // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // //     title: subDomain.title,\n// // // //     level,\n// // // //     hasChildren,\n// // // //     isLeaf,\n// // // //     isExpanded,\n// // // //     projectCount: subDomain.projectCount\n// // // //   });\n\n// // // //   return (\n// // // //     <div className={`subdomain-node level-${level}`}>\n// // // //       <div className=\"node-content\">\n// // // //         <div className=\"node-main\">\n// // // //           {hasChildren ? (\n// // // //             <button \n// // // //               className=\"expand-button\"\n// // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // //             >\n// // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // //             </button>\n// // // //           ) : (\n// // // //             <div className=\"expand-placeholder\" />\n// // // //           )}\n          \n// // // //           <div className=\"node-icon\">\n// // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // //           </div>\n          \n// // // //           <div className=\"node-info\">\n// // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // //             <div className=\"node-stats\">\n// // // //               {hasChildren && (\n// // // //                 <span className=\"stat-badge\">\n// // // //                   {subDomain.children.length} sub-domains\n// // // //                 </span>\n// // // //               )}\n// // // //               {subDomain.projectCount > 0 && (\n// // // //                 <span className=\"stat-badge projects\">\n// // // //                   {subDomain.projectCount} projects\n// // // //                 </span>\n// // // //               )}\n// // // //               {isLeaf && (\n// // // //                 <span className=\"stat-badge leaf\">\n// // // //                   Can have projects\n// // // //                 </span>\n// // // //               )}\n// // // //             </div>\n// // // //           </div>\n// // // //         </div>\n        \n// // // //         <div className=\"node-actions\">\n// // // //           <button \n// // // //             className=\"action-button add\" \n// // // //             onClick={() => onAddChild(subDomain)}\n// // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // //           >\n// // // //             <FiPlus />\n// // // //           </button>\n// // // //           <div className=\"action-menu\">\n// // // //             <button \n// // // //               onClick={() => setShowMenu(!showMenu)}\n// // // //               title=\"More actions\"\n// // // //             >\n// // // //               <FiMoreVertical />\n// // // //             </button>\n// // // //             {showMenu && (\n// // // //               <div className=\"dropdown-menu\">\n// // // //                 <button onClick={() => {\n// // // //                   onEdit(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiEdit /> Edit\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onAddChild(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }}>\n// // // //                   <FiPlus /> Add Child SubDomain\n// // // //                 </button>\n// // // //                 <button onClick={() => {\n// // // //                   onDelete(subDomain);\n// // // //                   setShowMenu(false);\n// // // //                 }} className=\"danger\">\n// // // //                   <FiTrash2 /> Delete\n// // // //                 </button>\n// // // //               </div>\n// // // //             )}\n// // // //           </div>\n// // // //         </div>\n// // // //       </div>\n      \n// // // //       {/* Children */}\n// // // //       {hasChildren && isExpanded && (\n// // // //         <div className=\"node-children\">\n// // // //           {subDomain.children.map((child) => (\n// // // //             <SubDomainNode\n// // // //               key={child.id}\n// // // //               subDomain={child}\n// // // //               level={level + 1}\n// // // //               isExpanded={expandedNodes.has(child.id)}\n// // // //               onToggleExpanded={onToggleExpanded}\n// // // //               onEdit={onEdit}\n// // // //               onDelete={onDelete}\n// // // //               onAddChild={onAddChild}\n// // // //               expandedNodes={expandedNodes}\n// // // //             />\n// // // //           ))}\n// // // //         </div>\n// // // //       )}\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // // SubDomain Modal Component\n// // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // //   const [formData, setFormData] = useState({\n// // // //     title: subDomain?.title || '',\n// // // //     description: subDomain?.description || ''\n// // // //   });\n// // // //   const [loading, setLoading] = useState(false);\n\n// // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // //     isEditing: !!subDomain,\n// // // //     parentTitle: parent?.title,\n// // // //     domainTitle: domain?.title,\n// // // //     formData\n// // // //   });\n\n// // // //   const handleSubmit = async (e) => {\n// // // //     e.preventDefault();\n// // // //     setLoading(true);\n\n// // // //     try {\n// // // //       const requestData = {\n// // // //         ...formData,\n// // // //         domainId: domain.id,\n// // // //         parentId: parent?.id || null\n// // // //       };\n\n// // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // //       if (subDomain) {\n// // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // //         toast.success('Sub-domain updated successfully');\n// // // //       } else {\n// // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // //         const response = await authService.createSubDomain(requestData);\n// // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // //         toast.success('Sub-domain created successfully');\n// // // //       }\n\n// // // //       onSave();\n// // // //     } catch (error) {\n// // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // //       toast.error('Failed to save sub-domain');\n// // // //     } finally {\n// // // //       setLoading(false);\n// // // //     }\n// // // //   };\n\n// // // //   const getModalTitle = () => {\n// // // //     if (subDomain) {\n// // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // //     }\n// // // //     if (parent) {\n// // // //       return `Add SubDomain under: ${parent.title}`;\n// // // //     }\n// // // //     return `Add Root SubDomain in: ${domain?.title || 'Domain'}`;\n// // // //   };\n\n// // // //   const getLevel = () => {\n// // // //     if (!parent) return 'Root Level';\n// // // //     // This is a simplified level calculation\n// // // //     return `Level ${(parent.level || 0) + 1}`;\n// // // //   };\n\n// // // //   return (\n// // // //     <div className=\"modal-overlay\">\n// // // //       <div className=\"modal\">\n// // // //         <div className=\"modal-header\">\n// // // //           <h2>{getModalTitle()}</h2>\n// // // //           <button onClick={onClose}>√ó</button>\n// // // //         </div>\n        \n// // // //         <form onSubmit={handleSubmit}>\n// // // //           <div className=\"form-group\">\n// // // //             <label>SubDomain Title</label>\n// // // //             <input\n// // // //               type=\"text\"\n// // // //               value={formData.title}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // //               required\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"form-group\">\n// // // //             <label>Description (Optional)</label>\n// // // //             <textarea\n// // // //               value={formData.description}\n// // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // //               rows={3}\n// // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // //             />\n// // // //           </div>\n          \n// // // //           <div className=\"modal-info\">\n// // // //             <strong>Domain:</strong> {domain?.title || 'Unknown'}<br />\n// // // //             {parent && (\n// // // //               <>\n// // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // //               </>\n// // // //             )}\n// // // //             <strong>Level:</strong> {getLevel()}\n// // // //           </div>\n          \n// // // //           <div className=\"modal-actions\">\n// // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // //               Cancel\n// // // //             </button>\n// // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // //             </button>\n// // // //           </div>\n// // // //         </form>\n// // // //       </div>\n// // // //     </div>\n// // // //   );\n// // // // };\n\n// // // // export default SubDomainManagement;\n\n\n// // // // // // src/components/domains/SubDomainManagement.js - NEW FILE\n// // // // // import React, { useState, useEffect } from 'react';\n// // // // // import { useParams, useNavigate } from 'react-router-dom';\n// // // // // import { authService } from '../../services/authService';\n// // // // // import { toast } from 'react-toastify';\n// // // // // import {\n// // // // //   FiPlus,\n// // // // //   FiEdit,\n// // // // //   FiTrash2,\n// // // // //   FiChevronDown,\n// // // // //   FiChevronRight,\n// // // // //   FiFolder,\n// // // // //   FiFolderPlus,\n// // // // //   FiFileText,\n// // // // //   FiArrowLeft,\n// // // // //   FiMoreVertical,\n// // // // //   FiMove,\n// // // // //   FiTarget\n// // // // // } from 'react-icons/fi';\n\n// // // // // const SubDomainManagement = () => {\n// // // // //   console.log('üöÄ SUBDOMAIN MANAGEMENT - Component mounting');\n  \n// // // // //   const { domainId } = useParams();\n// // // // //   const navigate = useNavigate();\n  \n// // // // //   const [domain, setDomain] = useState(null);\n// // // // //   const [subDomains, setSubDomains] = useState([]);\n// // // // //   const [loading, setLoading] = useState(true);\n// // // // //   const [showAddModal, setShowAddModal] = useState(false);\n// // // // //   const [editingSubDomain, setEditingSubDomain] = useState(null);\n// // // // //   const [selectedParent, setSelectedParent] = useState(null);\n// // // // //   const [expandedNodes, setExpandedNodes] = useState(new Set());\n\n// // // // //   console.log('üìä SUBDOMAIN MANAGEMENT - Current state:', {\n// // // // //     domainId,\n// // // // //     domain: domain?.title,\n// // // // //     subDomainsCount: subDomains.length,\n// // // // //     loading,\n// // // // //     selectedParent: selectedParent?.title,\n// // // // //     expandedCount: expandedNodes.size\n// // // // //   });\n\n// // // // //   useEffect(() => {\n// // // // //     if (domainId) {\n// // // // //       console.log('üîÑ SUBDOMAIN MANAGEMENT - useEffect triggered, fetching data');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     }\n// // // // //   }, [domainId]);\n\n// // // // //   const fetchDomainAndSubDomains = async () => {\n// // // // //     try {\n// // // // //       setLoading(true);\n      \n// // // // //       console.log('üîç SUBDOMAIN FETCH - Starting API calls');\n// // // // //       console.log('üìã SUBDOMAIN FETCH - Domain ID:', domainId);\n      \n// // // // //       // Fetch domain details and hierarchy\n// // // // //       const [domainResponse, hierarchyResponse] = await Promise.all([\n// // // // //         authService.getDomains({ id: domainId }),\n// // // // //         authService.getDomainHierarchy(domainId)\n// // // // //       ]);\n      \n// // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Domain response:', domainResponse.data);\n// // // // //       console.log('‚úÖ SUBDOMAIN FETCH - Hierarchy response:', hierarchyResponse.data);\n      \n// // // // //       const domainData = domainResponse.data?.domains?.[0] || \n// // // // //                         domainResponse.data?.data?.domains?.[0] || \n// // // // //                         domainResponse.data;\n      \n// // // // //       const hierarchyData = hierarchyResponse.data?.data || hierarchyResponse.data;\n      \n// // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted domain:', domainData);\n// // // // //       console.log('üéØ SUBDOMAIN FETCH - Extracted hierarchy:', hierarchyData);\n      \n// // // // //       setDomain(domainData);\n// // // // //       setSubDomains(hierarchyData?.subDomains || []);\n      \n// // // // //       // Auto-expand first level\n// // // // //       if (hierarchyData?.subDomains?.length > 0) {\n// // // // //         const firstLevelIds = hierarchyData.subDomains.map(sd => sd.id);\n// // // // //         setExpandedNodes(new Set(firstLevelIds));\n// // // // //         console.log('üå≥ SUBDOMAIN FETCH - Auto-expanded first level nodes:', firstLevelIds);\n// // // // //       }\n      \n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error occurred:', error);\n// // // // //       console.error('‚ùå SUBDOMAIN FETCH - Error response:', error.response);\n// // // // //       toast.error('Failed to fetch sub-domains');\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //       console.log('üèÅ SUBDOMAIN FETCH - Loading completed');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const handleAddSubDomain = (parent = null) => {\n// // // // //     console.log('‚ûï SUBDOMAIN MANAGEMENT - Add subdomain clicked');\n// // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - Parent:', parent);\n    \n// // // // //     setSelectedParent(parent);\n// // // // //     setEditingSubDomain(null);\n// // // // //     setShowAddModal(true);\n    \n// // // // //     console.log('üìä SUBDOMAIN MANAGEMENT - Modal state:', { \n// // // // //       showAddModal: true, \n// // // // //       selectedParent: parent?.title,\n// // // // //       editingSubDomain: null \n// // // // //     });\n// // // // //   };\n\n// // // // //   const handleEditSubDomain = (subDomain) => {\n// // // // //     console.log('‚úèÔ∏è SUBDOMAIN MANAGEMENT - Edit subdomain clicked');\n// // // // //     console.log('üìã SUBDOMAIN MANAGEMENT - SubDomain to edit:', subDomain);\n    \n// // // // //     setSelectedParent(null);\n// // // // //     setEditingSubDomain(subDomain);\n// // // // //     setShowAddModal(true);\n// // // // //   };\n\n// // // // //   const handleDeleteSubDomain = async (subDomain) => {\n// // // // //     const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //     const hasProjects = subDomain.projectCount > 0;\n    \n// // // // //     let confirmMessage = `Are you sure you want to delete \"${subDomain.title}\"?`;\n// // // // //     if (hasChildren) {\n// // // // //       confirmMessage += '\\n\\nThis will also delete all nested sub-domains.';\n// // // // //     }\n// // // // //     if (hasProjects) {\n// // // // //       confirmMessage += '\\n\\nThis sub-domain has projects assigned to it.';\n// // // // //     }\n    \n// // // // //     if (!window.confirm(confirmMessage)) {\n// // // // //       return;\n// // // // //     }\n\n// // // // //     try {\n// // // // //       console.log('üóëÔ∏è SUBDOMAIN DELETE - Starting API call');\n// // // // //       console.log('üìã SUBDOMAIN DELETE - SubDomain to delete:', subDomain);\n// // // // //       console.log('üìã SUBDOMAIN DELETE - Has children:', hasChildren);\n// // // // //       console.log('üìã SUBDOMAIN DELETE - Has projects:', hasProjects);\n      \n// // // // //       const response = await authService.deleteSubDomain(subDomain.id);\n      \n// // // // //       console.log('‚úÖ SUBDOMAIN DELETE - Response:', response.data);\n      \n// // // // //       toast.success('Sub-domain deleted successfully');\n// // // // //       fetchDomainAndSubDomains();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN DELETE - Error:', error);\n// // // // //       toast.error('Failed to delete sub-domain');\n// // // // //     }\n// // // // //   };\n\n// // // // //   const toggleExpanded = (nodeId) => {\n// // // // //     console.log('üîÑ SUBDOMAIN TREE - Toggle expansion for node:', nodeId);\n    \n// // // // //     const newExpanded = new Set(expandedNodes);\n// // // // //     if (newExpanded.has(nodeId)) {\n// // // // //       newExpanded.delete(nodeId);\n// // // // //       console.log('üìä SUBDOMAIN TREE - Collapsed node:', nodeId);\n// // // // //     } else {\n// // // // //       newExpanded.add(nodeId);\n// // // // //       console.log('üìä SUBDOMAIN TREE - Expanded node:', nodeId);\n// // // // //     }\n// // // // //     setExpandedNodes(newExpanded);\n// // // // //   };\n\n// // // // //   const isLeafNode = (subDomain) => {\n// // // // //     return !subDomain.children || subDomain.children.length === 0;\n// // // // //   };\n\n// // // // //   const getNodeLevel = (subDomain, level = 0) => {\n// // // // //     return level;\n// // // // //   };\n\n// // // // //   if (loading) {\n// // // // //     console.log('‚è≥ SUBDOMAIN MANAGEMENT - Showing loading state');\n    \n// // // // //     return (\n// // // // //       <div className=\"loading-container\">\n// // // // //         <div className=\"loading-spinner\"></div>\n// // // // //         <p>Loading sub-domains...</p>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   if (!domain) {\n// // // // //     console.log('‚ùå SUBDOMAIN MANAGEMENT - Domain not found');\n    \n// // // // //     return (\n// // // // //       <div className=\"empty-state\">\n// // // // //         <h3>Domain not found</h3>\n// // // // //         <p>The requested domain could not be loaded.</p>\n// // // // //         <button \n// // // // //           className=\"primary-button\" \n// // // // //           onClick={() => navigate('/domains')}\n// // // // //         >\n// // // // //           <FiArrowLeft />\n// // // // //           Back to Domains\n// // // // //         </button>\n// // // // //       </div>\n// // // // //     );\n// // // // //   }\n\n// // // // //   console.log('üé® SUBDOMAIN MANAGEMENT - Rendering main component');\n\n// // // // //   return (\n// // // // //     <div className=\"subdomain-management\">\n// // // // //       {/* Header with Breadcrumb */}\n// // // // //       <div className=\"page-header\">\n// // // // //         <div className=\"header-content\">\n// // // // //           <div className=\"breadcrumb\">\n// // // // //             <button \n// // // // //               className=\"breadcrumb-link\"\n// // // // //               onClick={() => navigate('/domains')}\n// // // // //             >\n// // // // //               <FiArrowLeft />\n// // // // //               Domains\n// // // // //             </button>\n// // // // //             <span className=\"breadcrumb-separator\">/</span>\n// // // // //             <span className=\"breadcrumb-current\">{domain.title}</span>\n// // // // //           </div>\n// // // // //           <h1>SubDomain Management</h1>\n// // // // //           <p>Manage the hierarchical structure of {domain.title}</p>\n// // // // //         </div>\n// // // // //         <div className=\"header-actions\">\n// // // // //           <button \n// // // // //             className=\"primary-button\" \n// // // // //             onClick={() => handleAddSubDomain()}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //             Add Root SubDomain\n// // // // //           </button>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Quick Guide */}\n// // // // //       <div className=\"quick-guide\">\n// // // // //         <h3>How to Add SubDomains:</h3>\n// // // // //         <div className=\"guide-steps\">\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">1</span>\n// // // // //             <span className=\"step-text\">Click <strong>\"Add Root SubDomain\"</strong> to create top-level categories</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">2</span>\n// // // // //             <span className=\"step-text\">Click the <FiPlus className=\"inline-icon\" /> button next to any subdomain to add children</span>\n// // // // //           </div>\n// // // // //           <div className=\"guide-step\">\n// // // // //             <span className=\"step-number\">3</span>\n// // // // //             <span className=\"step-text\">Only <FiTarget className=\"inline-icon leaf\" /> leaf subdomains can have projects assigned</span>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* Domain Info Card */}\n// // // // //       <div className=\"domain-info-card\">\n// // // // //         <div className=\"domain-icon\">\n// // // // //           <FiFolder />\n// // // // //         </div>\n// // // // //         <div className=\"domain-details\">\n// // // // //           <h3>{domain.title}</h3>\n// // // // //           <p>{domain.description}</p>\n// // // // //           <div className=\"domain-stats\">\n// // // // //             <span className=\"stat-item\">\n// // // // //               <strong>{subDomains.length}</strong> root sub-domains\n// // // // //             </span>\n// // // // //             <span className=\"stat-item\">\n// // // // //               <strong>{domain.projectCount || 0}</strong> total projects\n// // // // //             </span>\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n\n// // // // //       {/* SubDomain Tree */}\n// // // // //       <div className=\"subdomain-tree-container\">\n// // // // //         <div className=\"tree-header\">\n// // // // //           <h2>SubDomain Hierarchy</h2>\n// // // // //           <div className=\"tree-legend\">\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiFolder className=\"folder-icon\" />\n// // // // //               Has children\n// // // // //             </span>\n// // // // //             <span className=\"legend-item\">\n// // // // //               <FiTarget className=\"leaf-icon\" />\n// // // // //               Leaf (can have projects)\n// // // // //             </span>\n// // // // //           </div>\n// // // // //         </div>\n\n// // // // //         {subDomains.length > 0 ? (\n// // // // //           <div className=\"subdomain-tree\">\n// // // // //             {subDomains.map((subDomain) => (\n// // // // //               <SubDomainNode\n// // // // //                 key={subDomain.id}\n// // // // //                 subDomain={subDomain}\n// // // // //                 level={0}\n// // // // //                 isExpanded={expandedNodes.has(subDomain.id)}\n// // // // //                 onToggleExpanded={toggleExpanded}\n// // // // //                 onEdit={handleEditSubDomain}\n// // // // //                 onDelete={handleDeleteSubDomain}\n// // // // //                 onAddChild={handleAddSubDomain}\n// // // // //                 expandedNodes={expandedNodes}\n// // // // //               />\n// // // // //             ))}\n// // // // //           </div>\n// // // // //         ) : (\n// // // // //           <div className=\"empty-tree-state\">\n// // // // //             <FiFolderPlus size={64} />\n// // // // //             <h3>No SubDomains Yet</h3>\n// // // // //             <p>Start organizing your {domain.title} projects by creating subdomains</p>\n// // // // //             <div className=\"empty-state-examples\">\n// // // // //               <h4>Example Structure:</h4>\n// // // // //               <div className=\"example-tree\">\n// // // // //                 <div className=\"example-item\">üìÇ Machine Learning</div>\n// // // // //                 <div className=\"example-item nested\">üéØ Deep Learning</div>\n// // // // //                 <div className=\"example-item nested\">üéØ Computer Vision</div>\n// // // // //                 <div className=\"example-item\">üéØ Data Science</div>\n// // // // //               </div>\n// // // // //             </div>\n// // // // //             <div className=\"empty-state-actions\">\n// // // // //               <button \n// // // // //                 className=\"primary-button large\" \n// // // // //                 onClick={() => handleAddSubDomain()}\n// // // // //               >\n// // // // //                 <FiPlus />\n// // // // //                 Create Your First SubDomain\n// // // // //               </button>\n// // // // //               <p className=\"help-text\">\n// // // // //                 üí° Tip: Start with broad categories, then add specific subcategories as needed\n// // // // //               </p>\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         )}\n// // // // //       </div>\n\n// // // // //       {/* Add/Edit Modal */}\n// // // // //       {showAddModal && (\n// // // // //         <SubDomainModal\n// // // // //           subDomain={editingSubDomain}\n// // // // //           parent={selectedParent}\n// // // // //           domain={domain}\n// // // // //           onClose={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //           }}\n// // // // //           onSave={() => {\n// // // // //             setShowAddModal(false);\n// // // // //             setEditingSubDomain(null);\n// // // // //             setSelectedParent(null);\n// // // // //             fetchDomainAndSubDomains();\n// // // // //           }}\n// // // // //         />\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Node Component\n// // // // // const SubDomainNode = ({ \n// // // // //   subDomain, \n// // // // //   level, \n// // // // //   isExpanded, \n// // // // //   onToggleExpanded, \n// // // // //   onEdit, \n// // // // //   onDelete, \n// // // // //   onAddChild,\n// // // // //   expandedNodes \n// // // // // }) => {\n// // // // //   const [showMenu, setShowMenu] = useState(false);\n// // // // //   const hasChildren = subDomain.children && subDomain.children.length > 0;\n// // // // //   const isLeaf = !hasChildren;\n\n// // // // //   console.log('üå≥ SUBDOMAIN NODE - Rendering:', {\n// // // // //     title: subDomain.title,\n// // // // //     level,\n// // // // //     hasChildren,\n// // // // //     isLeaf,\n// // // // //     isExpanded,\n// // // // //     projectCount: subDomain.projectCount\n// // // // //   });\n\n// // // // //   return (\n// // // // //     <div className={`subdomain-node level-${level}`}>\n// // // // //       <div className=\"node-content\">\n// // // // //         <div className=\"node-main\">\n// // // // //           {hasChildren ? (\n// // // // //             <button \n// // // // //               className=\"expand-button\"\n// // // // //               onClick={() => onToggleExpanded(subDomain.id)}\n// // // // //             >\n// // // // //               {isExpanded ? <FiChevronDown /> : <FiChevronRight />}\n// // // // //             </button>\n// // // // //           ) : (\n// // // // //             <div className=\"expand-placeholder\" />\n// // // // //           )}\n          \n// // // // //           <div className=\"node-icon\">\n// // // // //             {isLeaf ? <FiTarget className=\"leaf-icon\" /> : <FiFolder className=\"folder-icon\" />}\n// // // // //           </div>\n          \n// // // // //           <div className=\"node-info\">\n// // // // //             <h4 className=\"node-title\">{subDomain.title}</h4>\n// // // // //             <p className=\"node-description\">{subDomain.description}</p>\n// // // // //             <div className=\"node-stats\">\n// // // // //               {hasChildren && (\n// // // // //                 <span className=\"stat-badge\">\n// // // // //                   {subDomain.children.length} sub-domains\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {subDomain.projectCount > 0 && (\n// // // // //                 <span className=\"stat-badge projects\">\n// // // // //                   {subDomain.projectCount} projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //               {isLeaf && (\n// // // // //                 <span className=\"stat-badge leaf\">\n// // // // //                   Can have projects\n// // // // //                 </span>\n// // // // //               )}\n// // // // //             </div>\n// // // // //           </div>\n// // // // //         </div>\n        \n// // // // //         <div className=\"node-actions\">\n// // // // //           <button \n// // // // //             className=\"action-button add\" \n// // // // //             onClick={() => onAddChild(subDomain)}\n// // // // //             title={`Add child subdomain under \"${subDomain.title}\"`}\n// // // // //           >\n// // // // //             <FiPlus />\n// // // // //           </button>\n// // // // //           <div className=\"action-menu\">\n// // // // //             <button \n// // // // //               onClick={() => setShowMenu(!showMenu)}\n// // // // //               title=\"More actions\"\n// // // // //             >\n// // // // //               <FiMoreVertical />\n// // // // //             </button>\n// // // // //             {showMenu && (\n// // // // //               <div className=\"dropdown-menu\">\n// // // // //                 <button onClick={() => onEdit(subDomain)}>\n// // // // //                   <FiEdit /> Edit\n// // // // //                 </button>\n// // // // //                 <button onClick={() => onAddChild(subDomain)}>\n// // // // //                   <FiPlus /> Add Child SubDomain\n// // // // //                 </button>\n// // // // //                 <button onClick={() => onDelete(subDomain)} className=\"danger\">\n// // // // //                   <FiTrash2 /> Delete\n// // // // //                 </button>\n// // // // //               </div>\n// // // // //             )}\n// // // // //           </div>\n// // // // //         </div>\n// // // // //       </div>\n      \n// // // // //       {/* Children */}\n// // // // //       {hasChildren && isExpanded && (\n// // // // //         <div className=\"node-children\">\n// // // // //           {subDomain.children.map((child) => (\n// // // // //             <SubDomainNode\n// // // // //               key={child.id}\n// // // // //               subDomain={child}\n// // // // //               level={level + 1}\n// // // // //               isExpanded={expandedNodes.has(child.id)}\n// // // // //               onToggleExpanded={onToggleExpanded}\n// // // // //               onEdit={onEdit}\n// // // // //               onDelete={onDelete}\n// // // // //               onAddChild={onAddChild}\n// // // // //               expandedNodes={expandedNodes}\n// // // // //             />\n// // // // //           ))}\n// // // // //         </div>\n// // // // //       )}\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // SubDomain Modal Component\n// // // // // const SubDomainModal = ({ subDomain, parent, domain, onClose, onSave }) => {\n// // // // //   const [formData, setFormData] = useState({\n// // // // //     title: subDomain?.title || '',\n// // // // //     description: subDomain?.description || ''\n// // // // //   });\n// // // // //   const [loading, setLoading] = useState(false);\n\n// // // // //   console.log('üìù SUBDOMAIN MODAL - Props:', {\n// // // // //     isEditing: !!subDomain,\n// // // // //     parentTitle: parent?.title,\n// // // // //     domainTitle: domain?.title,\n// // // // //     formData\n// // // // //   });\n\n// // // // //   const handleSubmit = async (e) => {\n// // // // //     e.preventDefault();\n// // // // //     setLoading(true);\n\n// // // // //     try {\n// // // // //       const requestData = {\n// // // // //         ...formData,\n// // // // //         domainId: domain.id,\n// // // // //         parentId: parent?.id || null\n// // // // //       };\n\n// // // // //       console.log('üíæ SUBDOMAIN SAVE - Starting API call');\n// // // // //       console.log('üìã SUBDOMAIN SAVE - Request data:', requestData);\n// // // // //       console.log('üìã SUBDOMAIN SAVE - Is editing:', !!subDomain);\n\n// // // // //       if (subDomain) {\n// // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains/' + subDomain.id);\n// // // // //         const response = await authService.updateSubDomain(subDomain.id, requestData);\n// // // // //         console.log('‚úÖ SUBDOMAIN UPDATE - Response:', response.data);\n// // // // //         toast.success('Sub-domain updated successfully');\n// // // // //       } else {\n// // // // //         console.log('üåê SUBDOMAIN SAVE - API URL: /admin/subdomains');\n// // // // //         const response = await authService.createSubDomain(requestData);\n// // // // //         console.log('‚úÖ SUBDOMAIN CREATE - Response:', response.data);\n// // // // //         toast.success('Sub-domain created successfully');\n// // // // //       }\n\n// // // // //       onSave();\n// // // // //     } catch (error) {\n// // // // //       console.error('‚ùå SUBDOMAIN SAVE - Error:', error);\n// // // // //       toast.error('Failed to save sub-domain');\n// // // // //     } finally {\n// // // // //       setLoading(false);\n// // // // //     }\n// // // // //   };\n\n// // // // //   const getModalTitle = () => {\n// // // // //     if (subDomain) {\n// // // // //       return `Edit SubDomain: ${subDomain.title}`;\n// // // // //     }\n// // // // //     if (parent) {\n// // // // //       return `Add SubDomain under: ${parent.title}`;\n// // // // //     }\n// // // // //     return `Add Root SubDomain in: ${domain.title}`;\n// // // // //   };\n\n// // // // //   return (\n// // // // //     <div className=\"modal-overlay\">\n// // // // //       <div className=\"modal\">\n// // // // //         <div className=\"modal-header\">\n// // // // //           <h2>{getModalTitle()}</h2>\n// // // // //           <button onClick={onClose}>√ó</button>\n// // // // //         </div>\n        \n// // // // //         <form onSubmit={handleSubmit}>\n// // // // //           <div className=\"form-group\">\n// // // // //             <label>SubDomain Title</label>\n// // // // //             <input\n// // // // //               type=\"text\"\n// // // // //               value={formData.title}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// // // // //               placeholder=\"e.g., Machine Learning, Deep Learning\"\n// // // // //               required\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"form-group\">\n// // // // //             <label>Description (Optional)</label>\n// // // // //             <textarea\n// // // // //               value={formData.description}\n// // // // //               onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n// // // // //               rows={3}\n// // // // //               placeholder=\"Describe what this sub-domain covers...\"\n// // // // //             />\n// // // // //           </div>\n          \n// // // // //           <div className=\"modal-info\">\n// // // // //             <strong>Domain:</strong> {domain.title}<br />\n// // // // //             {parent && (\n// // // // //               <>\n// // // // //                 <strong>Parent SubDomain:</strong> {parent.title}<br />\n// // // // //               </>\n// // // // //             )}\n// // // // //             <strong>Level:</strong> {parent ? `Level ${getLevel(parent) + 1}` : 'Root Level'}\n// // // // //           </div>\n          \n// // // // //           <div className=\"modal-actions\">\n// // // // //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// // // // //               Cancel\n// // // // //             </button>\n// // // // //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// // // // //               {loading ? 'Saving...' : 'Save SubDomain'}\n// // // // //             </button>\n// // // // //           </div>\n// // // // //         </form>\n// // // // //       </div>\n// // // // //     </div>\n// // // // //   );\n// // // // // };\n\n// // // // // // Helper function to get level\n// // // // // const getLevel = (subDomain, level = 0) => {\n// // // // //   // This would need to be calculated based on the hierarchy\n// // // // //   return level + 1;\n// // // // // };\n\n// // // // // export default SubDomainManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}