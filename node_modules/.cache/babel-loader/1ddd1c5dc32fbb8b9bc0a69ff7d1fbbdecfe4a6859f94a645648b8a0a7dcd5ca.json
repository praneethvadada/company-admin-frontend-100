{"ast":null,"code":"var _jsxFileName = \"/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/projects/ProjectManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// src/components/projects/ProjectManagement.js - SIMPLIFIED VERSION FOR VIEWING/MANAGING PROJECTS\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport { FiEdit, FiTrash2, FiSearch, FiFilter, FiMove, FiArchive, FiStar, FiEye, FiUsers, FiImage, FiMoreVertical, FiFolder, FiFileText, FiPlus, FiSettings, FiArrowRight } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectManagement = () => {\n  _s();\n  console.log('üöÄ PROJECT MANAGEMENT - Component rendering/mounting');\n  const navigate = useNavigate();\n  const [projects, setProjects] = useState([]);\n  const [domains, setDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0\n  });\n  const [filters, setFilters] = useState({\n    search: '',\n    domainId: '',\n    isActive: true,\n    isFeatured: null,\n    sortBy: 'updatedAt',\n    sortOrder: 'DESC'\n  });\n  const [editingProject, setEditingProject] = useState(null);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  console.log('üìä PROJECT MANAGEMENT - Current state:', {\n    projectsCount: projects.length,\n    loading,\n    pagination,\n    filters,\n    editingProject: !!editingProject,\n    selectedProject: !!selectedProject\n  });\n  useEffect(() => {\n    console.log('üîÑ PROJECT MANAGEMENT - useEffect triggered');\n    fetchInitialData();\n  }, []);\n  useEffect(() => {\n    console.log('üîÑ PROJECT MANAGEMENT - Filters or pagination changed');\n    fetchProjects();\n  }, [filters, pagination.currentPage]);\n  const fetchInitialData = async () => {\n    try {\n      var _domainsResponse$data;\n      console.log('üì° INITIAL DATA - Fetching domains...');\n      const domainsResponse = await authService.getDomains({\n        limit: 100\n      });\n      console.log('‚úÖ INITIAL DATA - Domains fetched:', domainsResponse.data);\n      setDomains(((_domainsResponse$data = domainsResponse.data) === null || _domainsResponse$data === void 0 ? void 0 : _domainsResponse$data.domains) || []);\n    } catch (error) {\n      console.error('‚ùå INITIAL DATA - Error fetching domains:', error);\n      toast.error('Failed to load domains');\n    }\n  };\n  const fetchProjects = async () => {\n    try {\n      setLoading(true);\n\n      // Clean up filters - remove empty strings and null values\n      const cleanFilters = {};\n      Object.keys(filters).forEach(key => {\n        const value = filters[key];\n        if (value !== '' && value !== null && value !== undefined) {\n          cleanFilters[key] = value;\n        }\n      });\n      const params = {\n        page: pagination.currentPage,\n        limit: 12,\n        ...cleanFilters\n      };\n      console.log('üì° PROJECT FETCH - Starting with params:', params);\n      const response = await authService.getProjects(params);\n      console.log('‚úÖ PROJECT FETCH - Response:', response.data);\n      setProjects(response.data.projects || []);\n      setPagination(response.data.pagination || pagination);\n    } catch (error) {\n      console.error('‚ùå PROJECT FETCH - Error:', error);\n      toast.error('Failed to fetch projects');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSearch = searchTerm => {\n    console.log('üîç PROJECT SEARCH - Search term:', searchTerm);\n    setFilters(prev => ({\n      ...prev,\n      search: searchTerm\n    }));\n    setPagination(prev => ({\n      ...prev,\n      currentPage: 1\n    }));\n  };\n  const handleFilterChange = (filterKey, value) => {\n    console.log('üéõÔ∏è PROJECT FILTER - Changed:', filterKey, '=', value);\n    setFilters(prev => ({\n      ...prev,\n      [filterKey]: value\n    }));\n    setPagination(prev => ({\n      ...prev,\n      currentPage: 1\n    }));\n  };\n  const handleEditProject = project => {\n    console.log('‚úèÔ∏è PROJECT EDIT - Editing:', project.title);\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n  const handleDeleteProject = async project => {\n    console.log('üóëÔ∏è PROJECT DELETE - Requesting deletion:', project.title);\n    if (!window.confirm(`Are you sure you want to delete \"${project.title}\"?`)) {\n      console.log('‚ùå PROJECT DELETE - Cancelled by user');\n      return;\n    }\n    try {\n      console.log('üì° PROJECT DELETE - API call for:', project.id);\n      await authService.deleteProject(project.id);\n      console.log('‚úÖ PROJECT DELETE - Success');\n      toast.success('Project deleted successfully');\n      fetchProjects();\n    } catch (error) {\n      console.error('‚ùå PROJECT DELETE - Error:', error);\n      toast.error('Failed to delete project');\n    }\n  };\n  const handleArchiveProject = async project => {\n    const isArchiving = project.isActive;\n    const action = isArchiving ? 'archive' : 'restore';\n    console.log('üìÅ PROJECT ARCHIVE - Action:', action, 'for:', project.title);\n    if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n      return;\n    }\n    try {\n      await authService.archiveProject(project.id, {\n        archive: isArchiving,\n        reason: `${action} via admin panel`\n      });\n      console.log('‚úÖ PROJECT ARCHIVE - Success');\n      toast.success(`Project ${action}d successfully`);\n      fetchProjects();\n    } catch (error) {\n      console.error('‚ùå PROJECT ARCHIVE - Error:', error);\n      toast.error(`Failed to ${action} project`);\n    }\n  };\n  const handleToggleFeatured = async project => {\n    console.log('‚≠ê PROJECT FEATURED - Toggle for:', project.title);\n    try {\n      await authService.updateProject(project.id, {\n        isFeatured: !project.isFeatured\n      });\n      console.log('‚úÖ PROJECT FEATURED - Success');\n      toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n      fetchProjects();\n    } catch (error) {\n      console.error('‚ùå PROJECT FEATURED - Error:', error);\n      toast.error('Failed to update featured status');\n    }\n  };\n  const navigateToCreateProject = () => {\n    console.log('üåê NAVIGATION - Redirecting to domains for project creation');\n    navigate('/domains');\n    toast.info('Navigate to Domains ‚Üí SubDomains to create new projects');\n  };\n  if (loading && projects.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading projects...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Project Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"View and manage your existing projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary-button\",\n          onClick: navigateToCreateProject,\n          children: [/*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), \"Manage Domains\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"primary-button\",\n          onClick: navigateToCreateProject,\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), \"Create New Project\", /*#__PURE__*/_jsxDEV(FiArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-banner\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner-content\",\n        children: [/*#__PURE__*/_jsxDEV(FiFileText, {\n          className: \"banner-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Want to create a new project?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Go to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Domains \\u2192 SubDomains\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 22\n            }, this), \" and click \\\"Add Project\\\" on any leaf subdomain for better organization.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"banner-button\",\n          onClick: navigateToCreateProject,\n          children: [\"Go to Domains \", /*#__PURE__*/_jsxDEV(FiArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: [/*#__PURE__*/_jsxDEV(FiSearch, {\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search projects...\",\n          value: filters.search,\n          onChange: e => handleSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.domainId,\n          onChange: e => handleFilterChange('domainId', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Domains\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), domains.map(domain => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: domain.id,\n            children: domain.title\n          }, domain.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.isFeatured === null ? '' : filters.isFeatured,\n          onChange: e => handleFilterChange('isFeatured', e.target.value === '' ? null : e.target.value === 'true'),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"Featured Only\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"Non-Featured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.isActive,\n          onChange: e => handleFilterChange('isActive', e.target.value === 'true'),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"Active Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"Archived Projects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.sortBy,\n          onChange: e => handleFilterChange('sortBy', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"updatedAt\",\n            children: \"Sort by Last Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"title\",\n            children: \"Sort by Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"createdAt\",\n            children: \"Sort by Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"leadCount\",\n            children: \"Sort by Leads\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"viewCount\",\n            children: \"Sort by Views\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-grid\",\n      children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project,\n        onEdit: handleEditProject,\n        onDelete: handleDeleteProject,\n        onArchive: handleArchiveProject,\n        onToggleFeatured: handleToggleFeatured,\n        onViewDetails: project => setSelectedProject(project)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(FiFileText, {\n          size: 48\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No projects found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Projects are created from Domain \\u2192 SubDomain pages for better organization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary-button\",\n            onClick: navigateToCreateProject,\n            children: [/*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), \"Go to Domains\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"\\uD83D\\uDCA1 Tip: Organize your projects by creating domains and subdomains first\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), pagination.totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: pagination.currentPage === 1,\n        onClick: () => setPagination(prev => ({\n          ...prev,\n          currentPage: prev.currentPage - 1\n        })),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"page-info\",\n        children: [\"Page \", pagination.currentPage, \" of \", pagination.totalPages, \"(\", pagination.totalItems, \" total)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: pagination.currentPage === pagination.totalPages,\n        onClick: () => setPagination(prev => ({\n          ...prev,\n          currentPage: prev.currentPage + 1\n        })),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), showEditModal && editingProject && /*#__PURE__*/_jsxDEV(ProjectEditModal, {\n      project: editingProject,\n      onClose: () => {\n        setShowEditModal(false);\n        setEditingProject(null);\n      },\n      onSave: () => {\n        setShowEditModal(false);\n        setEditingProject(null);\n        fetchProjects();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this), selectedProject && /*#__PURE__*/_jsxDEV(ProjectDetailsModal, {\n      project: selectedProject,\n      onClose: () => setSelectedProject(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n\n// Project Card Component\n_s(ProjectManagement, \"gIBfM+1S2KG3uI1OI9yLAQnIq8U=\", false, function () {\n  return [useNavigate];\n});\n_c = ProjectManagement;\nconst ProjectCard = ({\n  project,\n  onEdit,\n  onDelete,\n  onArchive,\n  onToggleFeatured,\n  onViewDetails\n}) => {\n  _s2();\n  var _project$subDomain, _project$subDomain$do, _project$subDomain2, _project$abstract;\n  const [showMenu, setShowMenu] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `project-card ${!project.isActive ? 'archived' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-image\",\n        children: project.images && project.images.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: project.images[0].url,\n          alt: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(FiImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-badges\",\n        children: [project.isFeatured && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge featured\",\n          children: [/*#__PURE__*/_jsxDEV(FiStar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), \" Featured\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), !project.isActive && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge archived\",\n          children: \"Archived\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowMenu(!showMenu),\n          children: /*#__PURE__*/_jsxDEV(FiMoreVertical, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onViewDetails(project),\n            children: [/*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), \" View Details\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onEdit(project),\n            children: [/*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), \" Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onToggleFeatured(project),\n            children: [/*#__PURE__*/_jsxDEV(FiStar, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), \" \", project.isFeatured ? 'Remove Featured' : 'Make Featured']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onArchive(project),\n            children: [/*#__PURE__*/_jsxDEV(FiArchive, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), \" \", project.isActive ? 'Archive' : 'Restore']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(project),\n            className: \"danger\",\n            children: [/*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), \" Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"project-title\",\n        children: project.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"project-subdomain\",\n        children: [/*#__PURE__*/_jsxDEV(FiFolder, {\n          className: \"subdomain-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), (_project$subDomain = project.subDomain) === null || _project$subDomain === void 0 ? void 0 : (_project$subDomain$do = _project$subDomain.domain) === null || _project$subDomain$do === void 0 ? void 0 : _project$subDomain$do.title, \" \\u2192 \", ((_project$subDomain2 = project.subDomain) === null || _project$subDomain2 === void 0 ? void 0 : _project$subDomain2.title) || 'No sub-domain']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"project-abstract\",\n        children: [(_project$abstract = project.abstract) === null || _project$abstract === void 0 ? void 0 : _project$abstract.substring(0, 100), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: project.viewCount || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(FiUsers, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: project.leadCount || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onEdit(project),\n          className: \"edit-button\",\n          children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 402,\n    columnNumber: 5\n  }, this);\n};\n\n// Project Edit Modal Component\n_s2(ProjectCard, \"2FjIcsdimgVhm2IsUWodA2ftTZU=\");\n_c2 = ProjectCard;\nconst ProjectEditModal = ({\n  project,\n  onClose,\n  onSave\n}) => {\n  _s3();\n  var _project$subDomain3, _project$subDomain3$d, _project$subDomain4;\n  const [formData, setFormData] = useState({\n    title: (project === null || project === void 0 ? void 0 : project.title) || '',\n    abstract: (project === null || project === void 0 ? void 0 : project.abstract) || '',\n    specifications: (project === null || project === void 0 ? void 0 : project.specifications) || '',\n    learningOutcomes: (project === null || project === void 0 ? void 0 : project.learningOutcomes) || '',\n    isFeatured: (project === null || project === void 0 ? void 0 : project.isFeatured) || false\n  });\n  const [loading, setLoading] = useState(false);\n  console.log('üìù PROJECT EDIT MODAL - Project:', project.title);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      console.log('üíæ PROJECT UPDATE - Starting with data:', formData);\n      await authService.updateProject(project.id, formData);\n      console.log('‚úÖ PROJECT UPDATE - Success');\n      toast.success('Project updated successfully');\n      onSave();\n    } catch (error) {\n      console.error('‚ùå PROJECT UPDATE - Error:', error);\n      toast.error('Failed to update project');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit Project: \", project.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Project Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formData.title,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              title: e.target.value\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this), \" \", ((_project$subDomain3 = project.subDomain) === null || _project$subDomain3 === void 0 ? void 0 : (_project$subDomain3$d = _project$subDomain3.domain) === null || _project$subDomain3$d === void 0 ? void 0 : _project$subDomain3$d.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 85\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"SubDomain:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this), \" \", ((_project$subDomain4 = project.subDomain) === null || _project$subDomain4 === void 0 ? void 0 : _project$subDomain4.title) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-note\",\n            children: \"\\uD83D\\uDCA1 To move this project to a different domain/subdomain, contact your administrator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Abstract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.abstract,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              abstract: e.target.value\n            })),\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Specifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.specifications,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              specifications: e.target.value\n            })),\n            rows: 6,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Learning Outcomes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: formData.learningOutcomes,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              learningOutcomes: e.target.value\n            })),\n            rows: 4,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group checkbox\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: formData.isFeatured,\n              onChange: e => setFormData(prev => ({\n                ...prev,\n                isFeatured: e.target.checked\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), \"Featured Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary-button\",\n            disabled: loading,\n            children: loading ? 'Updating...' : 'Update Project'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 516,\n    columnNumber: 5\n  }, this);\n};\n\n// Project Details Modal\n_s3(ProjectEditModal, \"HWWjhxv4JT3/Tfbaz4NAG+yYBwQ=\");\n_c3 = ProjectEditModal;\nconst ProjectDetailsModal = ({\n  project,\n  onClose\n}) => {\n  var _project$subDomain5, _project$subDomain5$d, _project$subDomain6;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal large\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: project.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Domain:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 16\n            }, this), \" \", ((_project$subDomain5 = project.subDomain) === null || _project$subDomain5 === void 0 ? void 0 : (_project$subDomain5$d = _project$subDomain5.domain) === null || _project$subDomain5$d === void 0 ? void 0 : _project$subDomain5$d.title) || 'Unknown']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"SubDomain:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 16\n            }, this), \" \", ((_project$subDomain6 = project.subDomain) === null || _project$subDomain6 === void 0 ? void 0 : _project$subDomain6.title) || 'Unknown']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Abstract\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.abstract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Specifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.specifications\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Learning Outcomes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.learningOutcomes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detail-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Views:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this), \" \", project.viewCount || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Leads:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this), \" \", project.leadCount || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Featured:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 15\n            }, this), \" \", project.isFeatured ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this), \" \", project.isActive ? 'Active' : 'Archived']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 600,\n    columnNumber: 5\n  }, this);\n};\n_c4 = ProjectDetailsModal;\nexport default ProjectManagement;\n\n// // src/components/projects/ProjectManagement.js - FIXED WITH LOGGING\n// import React, { useState, useEffect } from 'react';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiSearch,\n//   FiFilter,\n//   FiMove,\n//   FiArchive,\n//   FiStar,\n//   FiEye,\n//   FiUsers,\n//   FiImage,\n//   FiMoreVertical,\n//   FiFolder,\n//   FiFileText\n// } from 'react-icons/fi';\n\n// const ProjectManagement = () => {\n//   const [projects, setProjects] = useState([]);\n//   const [domains, setDomains] = useState([]);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [pagination, setPagination] = useState({\n//     currentPage: 1,\n//     totalPages: 1,\n//     totalItems: 0\n//   });\n//   const [filters, setFilters] = useState({\n//     search: '',\n//     subDomainId: '',\n//     isActive: true,\n//     isFeatured: null,\n//     sortBy: 'title',\n//     sortOrder: 'ASC'\n//   });\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingProject, setEditingProject] = useState(null);\n//   const [selectedProject, setSelectedProject] = useState(null);\n\n//   useEffect(() => {\n//     console.log('üöÄ ProjectManagement component mounted');\n//     fetchInitialData();\n//   }, []);\n\n//   useEffect(() => {\n//     console.log('üîÑ Filters or pagination changed:', { filters, currentPage: pagination.currentPage });\n//     fetchProjects();\n//   }, [filters, pagination.currentPage]);\n\n//   const fetchInitialData = async () => {\n//     try {\n//       console.log('üì° Fetching initial data (domains)...');\n//       const [domainsResponse] = await Promise.all([\n//         authService.getDomains({ limit: 100 })\n//       ]);\n\n//       console.log('‚úÖ Domains fetched:', domainsResponse);\n//       setDomains(domainsResponse.data.domains || []);\n//     } catch (error) {\n//       console.error('‚ùå Error fetching initial data:', error);\n//       toast.error('Failed to load domains');\n//     }\n//   };\n\n//   const fetchProjects = async () => {\n//     try {\n//       setLoading(true);\n\n//       // Clean up filters - remove empty strings and null values\n//       const cleanFilters = {};\n//       Object.keys(filters).forEach(key => {\n//         const value = filters[key];\n//         // Only add non-empty values to the params\n//         if (value !== '' && value !== null && value !== undefined) {\n//           cleanFilters[key] = value;\n//         }\n//       });\n\n//       const params = {\n//         page: pagination.currentPage,\n//         limit: 12,\n//         ...cleanFilters\n//       };\n\n//       console.log('üì° Fetching projects with params:', params);\n//       console.log('üîç Raw filters before cleaning:', filters);\n//       console.log('üßπ Cleaned filters:', cleanFilters);\n\n//       const response = await authService.getProjects(params);\n//       console.log('‚úÖ Projects API response:', response);\n\n//       setProjects(response.data.projects || []);\n//       setPagination(response.data.pagination || pagination);\n\n//       console.log('üìä Projects set:', response.data.projects?.length || 0, 'projects');\n//       console.log('üìÑ Pagination set:', response.data.pagination);\n\n//     } catch (error) {\n//       console.error('‚ùå Error fetching projects:', error);\n//       console.error('‚ùå Error details:', {\n//         message: error.message,\n//         response: error.response?.data,\n//         status: error.response?.status,\n//         config: error.config\n//       });\n//       toast.error('Failed to fetch projects');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const fetchSubDomains = async (domainId) => {\n//     try {\n//       console.log('üì° Fetching subdomains for domain:', domainId);\n//       const response = await authService.getLeafSubDomains(domainId);\n//       console.log('‚úÖ Subdomains fetched:', response);\n//       setSubDomains(response.data || []);\n//     } catch (error) {\n//       console.error('‚ùå Error fetching sub-domains:', error);\n//     }\n//   };\n\n//   const handleSearch = (searchTerm) => {\n//     console.log('üîç Search term changed:', searchTerm);\n//     setFilters(prev => ({ ...prev, search: searchTerm }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n//   };\n\n//   const handleFilterChange = (filterKey, value) => {\n//     console.log('üéõÔ∏è Filter changed:', filterKey, '=', value);\n//     setFilters(prev => ({ ...prev, [filterKey]: value }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n//   };\n\n//   const handleDomainChange = (domainId) => {\n//     console.log('üè¢ Domain changed:', domainId);\n//     if (domainId) {\n//       fetchSubDomains(domainId);\n//     } else {\n//       setSubDomains([]);\n//     }\n//     // Reset subdomain filter when domain changes\n//     setFilters(prev => ({ ...prev, subDomainId: '' }));\n//   };\n\n//   const handleAddProject = () => {\n//     console.log('‚ûï Add project clicked');\n//     setEditingProject(null);\n//     setShowAddModal(true);\n//   };\n\n//   const handleEditProject = (project) => {\n//     console.log('‚úèÔ∏è Edit project clicked:', project.id, project.title);\n//     setEditingProject(project);\n//     setShowAddModal(true);\n//   };\n\n//   const handleDeleteProject = async (project) => {\n//     console.log('üóëÔ∏è Delete project requested:', project.id, project.title);\n\n//     if (!window.confirm(`Are you sure you want to delete \"${project.title}\"?`)) {\n//       console.log('‚ùå Delete cancelled by user');\n//       return;\n//     }\n\n//     try {\n//       console.log('üì° Deleting project:', project.id);\n//       await authService.deleteProject(project.id);\n//       console.log('‚úÖ Project deleted successfully');\n//       toast.success('Project deleted successfully');\n//       fetchProjects();\n//     } catch (error) {\n//       console.error('‚ùå Error deleting project:', error);\n//       toast.error('Failed to delete project');\n//     }\n//   };\n\n//   const handleMoveProject = async (project, newSubDomainId) => {\n//     console.log('üì¶ Move project requested:', project.id, 'to subdomain:', newSubDomainId);\n\n//     try {\n//       await authService.moveProject(project.id, {\n//         newSubDomainId,\n//         reason: 'Moved via admin panel'\n//       });\n//       console.log('‚úÖ Project moved successfully');\n//       toast.success('Project moved successfully');\n//       fetchProjects();\n//     } catch (error) {\n//       console.error('‚ùå Error moving project:', error);\n//       toast.error('Failed to move project');\n//     }\n//   };\n\n//   const handleArchiveProject = async (project) => {\n//     const isArchiving = project.isActive;\n//     const action = isArchiving ? 'archive' : 'restore';\n\n//     console.log('üìÅ Archive/restore project requested:', project.id, action);\n\n//     if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n//       console.log('‚ùå Archive/restore cancelled by user');\n//       return;\n//     }\n\n//     try {\n//       await authService.archiveProject(project.id, {\n//         archive: isArchiving,\n//         reason: `${action} via admin panel`\n//       });\n//       console.log('‚úÖ Project archived/restored successfully');\n//       toast.success(`Project ${action}d successfully`);\n//       fetchProjects();\n//     } catch (error) {\n//       console.error(`‚ùå Error ${action}ing project:`, error);\n//       toast.error(`Failed to ${action} project`);\n//     }\n//   };\n\n//   const handleToggleFeatured = async (project) => {\n//     console.log('‚≠ê Toggle featured requested:', project.id, 'current:', project.isFeatured);\n\n//     try {\n//       await authService.updateProject(project.id, {\n//         isFeatured: !project.isFeatured\n//       });\n//       console.log('‚úÖ Featured status updated successfully');\n//       toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n//       fetchProjects();\n//     } catch (error) {\n//       console.error('‚ùå Error updating featured status:', error);\n//       toast.error('Failed to update featured status');\n//     }\n//   };\n\n//   if (loading && projects.length === 0) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading projects...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"project-management\">\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <h1>Project Management</h1>\n//           <p>Manage your project portfolio and content</p>\n//         </div>\n//         <button className=\"primary-button\" onClick={handleAddProject}>\n//           <FiPlus />\n//           Add Project\n//         </button>\n//       </div>\n\n//       {/* Filters and Controls */}\n//       <div className=\"controls-section\">\n//         <div className=\"search-bar\">\n//           <FiSearch className=\"search-icon\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search projects...\"\n//             value={filters.search}\n//             onChange={(e) => handleSearch(e.target.value)}\n//           />\n//         </div>\n\n//         <div className=\"filter-controls\">\n//           {/* Domain Selector */}\n//           <select\n//             onChange={(e) => handleDomainChange(e.target.value)}\n//           >\n//             <option value=\"\">Select Domain</option>\n//             {domains.map(domain => (\n//               <option key={domain.id} value={domain.id}>{domain.title}</option>\n//             ))}\n//           </select>\n\n//           {/* Subdomain Selector */}\n//           <select\n//             value={filters.subDomainId}\n//             onChange={(e) => handleFilterChange('subDomainId', e.target.value)}\n//             disabled={subDomains.length === 0}\n//           >\n//             <option value=\"\">All Sub-domains</option>\n//             {subDomains.map(sub => (\n//               <option key={sub.id} value={sub.id}>{sub.title}</option>\n//             ))}\n//           </select>\n\n//           <select\n//             value={filters.isFeatured === null ? '' : filters.isFeatured}\n//             onChange={(e) => handleFilterChange('isFeatured', \n//               e.target.value === '' ? null : e.target.value === 'true'\n//             )}\n//           >\n//             <option value=\"\">All Projects</option>\n//             <option value=\"true\">Featured Only</option>\n//             <option value=\"false\">Non-Featured</option>\n//           </select>\n\n//           <select\n//             value={filters.isActive}\n//             onChange={(e) => handleFilterChange('isActive', e.target.value === 'true')}\n//           >\n//             <option value=\"true\">Active Projects</option>\n//             <option value=\"false\">Archived Projects</option>\n//           </select>\n\n//           <select\n//             value={filters.sortBy}\n//             onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n//           >\n//             <option value=\"title\">Sort by Title</option>\n//             <option value=\"createdAt\">Sort by Date</option>\n//             <option value=\"leadCount\">Sort by Leads</option>\n//             <option value=\"viewCount\">Sort by Views</option>\n//           </select>\n//         </div>\n//       </div>\n\n//       {/* Projects Grid */}\n//       <div className=\"projects-grid\">\n//         {projects.length > 0 ? (\n//           projects.map((project) => (\n//             <ProjectCard\n//               key={project.id}\n//               project={project}\n//               onEdit={handleEditProject}\n//               onDelete={handleDeleteProject}\n//               onMove={handleMoveProject}\n//               onArchive={handleArchiveProject}\n//               onToggleFeatured={handleToggleFeatured}\n//               onViewDetails={(project) => setSelectedProject(project)}\n//             />\n//           ))\n//         ) : (\n//           <div className=\"empty-state\">\n//             <FiFileText size={48} />\n//             <h3>No projects found</h3>\n//             <p>Create your first project to get started</p>\n//             <button className=\"primary-button\" onClick={handleAddProject}>\n//               <FiPlus />\n//               Add Project\n//             </button>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Pagination */}\n//       {pagination.totalPages > 1 && (\n//         <div className=\"pagination\">\n//           <button\n//             disabled={pagination.currentPage === 1}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n//           >\n//             Previous\n//           </button>\n\n//           <span className=\"page-info\">\n//             Page {pagination.currentPage} of {pagination.totalPages}\n//             ({pagination.totalItems} total)\n//           </span>\n\n//           <button\n//             disabled={pagination.currentPage === pagination.totalPages}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Add/Edit Modal */}\n//       {showAddModal && (\n//         <ProjectModal\n//           project={editingProject}\n//           domains={domains}\n//           onClose={() => setShowAddModal(false)}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             fetchProjects();\n//           }}\n//         />\n//       )}\n\n//       {/* Project Details Modal */}\n//       {selectedProject && (\n//         <ProjectDetailsModal\n//           project={selectedProject}\n//           onClose={() => setSelectedProject(null)}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // Project Card Component\n// const ProjectCard = ({ \n//   project, \n//   onEdit, \n//   onDelete, \n//   onMove, \n//   onArchive, \n//   onToggleFeatured, \n//   onViewDetails \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   return (\n//     <div className={`project-card ${!project.isActive ? 'archived' : ''}`}>\n//       <div className=\"project-header\">\n//         <div className=\"project-image\">\n//           {project.images && project.images.length > 0 ? (\n//             <img src={project.images[0].url} alt={project.title} />\n//           ) : (\n//             <div className=\"image-placeholder\">\n//               <FiImage />\n//             </div>\n//           )}\n//         </div>\n\n//         <div className=\"project-badges\">\n//           {project.isFeatured && (\n//             <span className=\"badge featured\">\n//               <FiStar /> Featured\n//             </span>\n//           )}\n//           {!project.isActive && (\n//             <span className=\"badge archived\">Archived</span>\n//           )}\n//         </div>\n\n//         <div className=\"project-menu\">\n//           <button onClick={() => setShowMenu(!showMenu)}>\n//             <FiMoreVertical />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\">\n//               <button onClick={() => onViewDetails(project)}>\n//                 <FiEye /> View Details\n//               </button>\n//               <button onClick={() => onEdit(project)}>\n//                 <FiEdit /> Edit\n//               </button>\n//               <button onClick={() => onToggleFeatured(project)}>\n//                 <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n//               </button>\n//               <button onClick={() => onMove(project)}>\n//                 <FiMove /> Move\n//               </button>\n//               <button onClick={() => onArchive(project)}>\n//                 <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n//               </button>\n//               <button onClick={() => onDelete(project)} className=\"danger\">\n//                 <FiTrash2 /> Delete\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n\n//       <div className=\"project-content\">\n//         <h3 className=\"project-title\">{project.title}</h3>\n//         <p className=\"project-subdomain\">\n//           <FiFolder className=\"subdomain-icon\" />\n//           {project.subDomain?.title || 'No sub-domain'}\n//         </p>\n//         <p className=\"project-abstract\">\n//           {project.abstract?.substring(0, 100)}...\n//         </p>\n//       </div>\n\n//       <div className=\"project-footer\">\n//         <div className=\"project-stats\">\n//           <div className=\"stat\">\n//             <FiEye />\n//             <span>{project.viewCount || 0}</span>\n//           </div>\n//           <div className=\"stat\">\n//             <FiUsers />\n//             <span>{project.leadCount || 0}</span>\n//           </div>\n//         </div>\n\n//         <div className=\"project-actions\">\n//           <button onClick={() => onEdit(project)} className=\"edit-button\">\n//             <FiEdit />\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Project Modal Component (Add/Edit)\n// const ProjectModal = ({ project, domains, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: project?.title || '',\n//     abstract: project?.abstract || '',\n//     specifications: project?.specifications || '',\n//     learningOutcomes: project?.learningOutcomes || '',\n//     subDomainId: project?.subDomainId || '',\n//     isFeatured: project?.isFeatured || false\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [selectedDomain, setSelectedDomain] = useState('');\n//   const [subDomains, setSubDomains] = useState([]);\n\n//   useEffect(() => {\n//     if (selectedDomain) {\n//       fetchSubDomains(selectedDomain);\n//     }\n//   }, [selectedDomain]);\n\n//   const fetchSubDomains = async (domainId) => {\n//     try {\n//       console.log('üì° Modal: Fetching subdomains for domain:', domainId);\n//       const response = await authService.getLeafSubDomains(domainId);\n//       console.log('‚úÖ Modal: Subdomains fetched:', response);\n//       setSubDomains(response.data || []);\n//     } catch (error) {\n//       console.error('‚ùå Modal: Error fetching sub-domains:', error);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     console.log('üíæ Modal: Submitting form data:', formData);\n\n//     try {\n//       if (project) {\n//         console.log('üì° Modal: Updating project:', project.id);\n//         await authService.updateProject(project.id, formData);\n//         console.log('‚úÖ Modal: Project updated successfully');\n//         toast.success('Project updated successfully');\n//       } else {\n//         console.log('üì° Modal: Creating new project');\n//         await authService.createProject(formData);\n//         console.log('‚úÖ Modal: Project created successfully');\n//         toast.success('Project created successfully');\n//       }\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå Modal: Error saving project:', error);\n//       toast.error('Failed to save project');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>{project ? 'Edit Project' : 'Add New Project'}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-grid\">\n//             <div className=\"form-group\">\n//               <label>Project Title</label>\n//               <input\n//                 type=\"text\"\n//                 value={formData.title}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//                 required\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>Domain</label>\n//               <select\n//                 value={selectedDomain}\n//                 onChange={(e) => setSelectedDomain(e.target.value)}\n//                 required={!project}\n//               >\n//                 <option value=\"\">Select Domain</option>\n//                 {domains.map(domain => (\n//                   <option key={domain.id} value={domain.id}>{domain.title}</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>Sub-Domain</label>\n//               <select\n//                 value={formData.subDomainId}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, subDomainId: e.target.value }))}\n//                 required\n//               >\n//                 <option value=\"\">Select Sub-Domain</option>\n//                 {subDomains.map(sub => (\n//                   <option key={sub.id} value={sub.id}>{sub.title}</option>\n//                 ))}\n//               </select>\n//             </div>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Abstract</label>\n//             <textarea\n//               value={formData.abstract}\n//               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n//               rows={4}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Specifications</label>\n//             <textarea\n//               value={formData.specifications}\n//               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n//               rows={6}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label>Learning Outcomes</label>\n//             <textarea\n//               value={formData.learningOutcomes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n//               rows={4}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group checkbox\">\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={formData.isFeatured}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n//               />\n//               Featured Project\n//             </label>\n//           </div>\n\n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Saving...' : 'Save'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Project Details Modal\n// const ProjectDetailsModal = ({ project, onClose }) => {\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>{project.title}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n\n//         <div className=\"project-details\">\n//           <div className=\"detail-section\">\n//             <h3>Abstract</h3>\n//             <p>{project.abstract}</p>\n//           </div>\n\n//           <div className=\"detail-section\">\n//             <h3>Specifications</h3>\n//             <p>{project.specifications}</p>\n//           </div>\n\n//           <div className=\"detail-section\">\n//             <h3>Learning Outcomes</h3>\n//             <p>{project.learningOutcomes}</p>\n//           </div>\n\n//           <div className=\"detail-stats\">\n//             <div className=\"stat-item\">\n//               <strong>Views:</strong> {project.viewCount || 0}\n//             </div>\n//             <div className=\"stat-item\">\n//               <strong>Leads:</strong> {project.leadCount || 0}\n//             </div>\n//             <div className=\"stat-item\">\n//               <strong>Featured:</strong> {project.isFeatured ? 'Yes' : 'No'}\n//             </div>\n//             <div className=\"stat-item\">\n//               <strong>Status:</strong> {project.isActive ? 'Active' : 'Archived'}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProjectManagement;\n\n// // // src/components/projects/ProjectManagement.js - NEW FILE\n// // import React, { useState, useEffect } from 'react';\n// // import { authService } from '../../services/authService';\n// // import { toast } from 'react-toastify';\n// // import {\n// //   FiPlus,\n// //   FiEdit,\n// //   FiTrash2,\n// //   FiSearch,\n// //   FiFilter,\n// //   FiMove,\n// //   FiArchive,\n// //   FiStar,\n// //   FiEye,\n// //   FiUsers,\n// //   FiImage,\n// //   FiMoreVertical,\n// //   FiFolder,\n// //   FiFileText\n// // } from 'react-icons/fi';\n\n// // const ProjectManagement = () => {\n// //   const [projects, setProjects] = useState([]);\n// //   const [domains, setDomains] = useState([]);\n// //   const [subDomains, setSubDomains] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [pagination, setPagination] = useState({\n// //     currentPage: 1,\n// //     totalPages: 1,\n// //     totalItems: 0\n// //   });\n// //   const [filters, setFilters] = useState({\n// //     search: '',\n// //     subDomainId: '',\n// //     isActive: true,\n// //     isFeatured: null,\n// //     sortBy: 'title',\n// //     sortOrder: 'ASC'\n// //   });\n// //   const [showAddModal, setShowAddModal] = useState(false);\n// //   const [editingProject, setEditingProject] = useState(null);\n// //   const [selectedProject, setSelectedProject] = useState(null);\n\n// //   useEffect(() => {\n// //     fetchInitialData();\n// //   }, []);\n\n// //   useEffect(() => {\n// //     fetchProjects();\n// //   }, [filters, pagination.currentPage]);\n\n// //   const fetchInitialData = async () => {\n// //     try {\n// //       const [domainsResponse] = await Promise.all([\n// //         authService.getDomains({ limit: 100 })\n// //       ]);\n\n// //       setDomains(domainsResponse.data.domains || []);\n// //     } catch (error) {\n// //       console.error('‚ùå Error fetching initial data:', error);\n// //       toast.error('Failed to load domains');\n// //     }\n// //   };\n\n// //   const fetchProjects = async () => {\n// //     try {\n// //       setLoading(true);\n// //       const params = {\n// //         page: pagination.currentPage,\n// //         limit: 12,\n// //         ...filters\n// //       };\n\n// //       const response = await authService.getProjects(params);\n// //       console.log('‚úÖ Projects fetched:', response);\n\n// //       setProjects(response.data.projects || []);\n// //       setPagination(response.data.pagination || pagination);\n// //     } catch (error) {\n// //       console.error('‚ùå Error fetching projects:', error);\n// //       toast.error('Failed to fetch projects');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const fetchSubDomains = async (domainId) => {\n// //     try {\n// //       const response = await authService.getLeafSubDomains(domainId);\n// //       setSubDomains(response.data || []);\n// //     } catch (error) {\n// //       console.error('‚ùå Error fetching sub-domains:', error);\n// //     }\n// //   };\n\n// //   const handleSearch = (searchTerm) => {\n// //     setFilters(prev => ({ ...prev, search: searchTerm }));\n// //     setPagination(prev => ({ ...prev, currentPage: 1 }));\n// //   };\n\n// //   const handleFilterChange = (filterKey, value) => {\n// //     setFilters(prev => ({ ...prev, [filterKey]: value }));\n// //     setPagination(prev => ({ ...prev, currentPage: 1 }));\n// //   };\n\n// //   const handleAddProject = () => {\n// //     setEditingProject(null);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleEditProject = (project) => {\n// //     setEditingProject(project);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleDeleteProject = async (project) => {\n// //     if (!window.confirm(`Are you sure you want to delete \"${project.title}\"?`)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       await authService.deleteProject(project.id);\n// //       toast.success('Project deleted successfully');\n// //       fetchProjects();\n// //     } catch (error) {\n// //       console.error('‚ùå Error deleting project:', error);\n// //       toast.error('Failed to delete project');\n// //     }\n// //   };\n\n// //   const handleMoveProject = async (project, newSubDomainId) => {\n// //     try {\n// //       await authService.moveProject(project.id, {\n// //         newSubDomainId,\n// //         reason: 'Moved via admin panel'\n// //       });\n// //       toast.success('Project moved successfully');\n// //       fetchProjects();\n// //     } catch (error) {\n// //       console.error('‚ùå Error moving project:', error);\n// //       toast.error('Failed to move project');\n// //     }\n// //   };\n\n// //   const handleArchiveProject = async (project) => {\n// //     const isArchiving = project.isActive;\n// //     const action = isArchiving ? 'archive' : 'restore';\n\n// //     if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       await authService.archiveProject(project.id, {\n// //         archive: isArchiving,\n// //         reason: `${action} via admin panel`\n// //       });\n// //       toast.success(`Project ${action}d successfully`);\n// //       fetchProjects();\n// //     } catch (error) {\n// //       console.error(`‚ùå Error ${action}ing project:`, error);\n// //       toast.error(`Failed to ${action} project`);\n// //     }\n// //   };\n\n// //   const handleToggleFeatured = async (project) => {\n// //     try {\n// //       await authService.updateProject(project.id, {\n// //         isFeatured: !project.isFeatured\n// //       });\n// //       toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n// //       fetchProjects();\n// //     } catch (error) {\n// //       console.error('‚ùå Error updating featured status:', error);\n// //       toast.error('Failed to update featured status');\n// //     }\n// //   };\n\n// //   if (loading && projects.length === 0) {\n// //     return (\n// //       <div className=\"loading-container\">\n// //         <div className=\"loading-spinner\"></div>\n// //         <p>Loading projects...</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"project-management\">\n// //       <div className=\"page-header\">\n// //         <div className=\"header-content\">\n// //           <h1>Project Management</h1>\n// //           <p>Manage your project portfolio and content</p>\n// //         </div>\n// //         <button className=\"primary-button\" onClick={handleAddProject}>\n// //           <FiPlus />\n// //           Add Project\n// //         </button>\n// //       </div>\n\n// //       {/* Filters and Controls */}\n// //       <div className=\"controls-section\">\n// //         <div className=\"search-bar\">\n// //           <FiSearch className=\"search-icon\" />\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Search projects...\"\n// //             value={filters.search}\n// //             onChange={(e) => handleSearch(e.target.value)}\n// //           />\n// //         </div>\n\n// //         <div className=\"filter-controls\">\n// //           <select\n// //             value={filters.subDomainId}\n// //             onChange={(e) => handleFilterChange('subDomainId', e.target.value)}\n// //           >\n// //             <option value=\"\">All Sub-domains</option>\n// //             {subDomains.map(sub => (\n// //               <option key={sub.id} value={sub.id}>{sub.title}</option>\n// //             ))}\n// //           </select>\n\n// //           <select\n// //             value={filters.isFeatured === null ? '' : filters.isFeatured}\n// //             onChange={(e) => handleFilterChange('isFeatured', \n// //               e.target.value === '' ? null : e.target.value === 'true'\n// //             )}\n// //           >\n// //             <option value=\"\">All Projects</option>\n// //             <option value=\"true\">Featured Only</option>\n// //             <option value=\"false\">Non-Featured</option>\n// //           </select>\n\n// //           <select\n// //             value={filters.isActive}\n// //             onChange={(e) => handleFilterChange('isActive', e.target.value === 'true')}\n// //           >\n// //             <option value=\"true\">Active Projects</option>\n// //             <option value=\"false\">Archived Projects</option>\n// //           </select>\n\n// //           <select\n// //             value={filters.sortBy}\n// //             onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n// //           >\n// //             <option value=\"title\">Sort by Title</option>\n// //             <option value=\"createdAt\">Sort by Date</option>\n// //             <option value=\"leadCount\">Sort by Leads</option>\n// //             <option value=\"viewCount\">Sort by Views</option>\n// //           </select>\n// //         </div>\n// //       </div>\n\n// //       {/* Projects Grid */}\n// //       <div className=\"projects-grid\">\n// //         {projects.length > 0 ? (\n// //           projects.map((project) => (\n// //             <ProjectCard\n// //               key={project.id}\n// //               project={project}\n// //               onEdit={handleEditProject}\n// //               onDelete={handleDeleteProject}\n// //               onMove={handleMoveProject}\n// //               onArchive={handleArchiveProject}\n// //               onToggleFeatured={handleToggleFeatured}\n// //               onViewDetails={(project) => setSelectedProject(project)}\n// //             />\n// //           ))\n// //         ) : (\n// //           <div className=\"empty-state\">\n// //             <FiFileText size={48} />\n// //             <h3>No projects found</h3>\n// //             <p>Create your first project to get started</p>\n// //             <button className=\"primary-button\" onClick={handleAddProject}>\n// //               <FiPlus />\n// //               Add Project\n// //             </button>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Pagination */}\n// //       {pagination.totalPages > 1 && (\n// //         <div className=\"pagination\">\n// //           <button\n// //             disabled={pagination.currentPage === 1}\n// //             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n// //           >\n// //             Previous\n// //           </button>\n\n// //           <span className=\"page-info\">\n// //             Page {pagination.currentPage} of {pagination.totalPages}\n// //             ({pagination.totalItems} total)\n// //           </span>\n\n// //           <button\n// //             disabled={pagination.currentPage === pagination.totalPages}\n// //             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n// //           >\n// //             Next\n// //           </button>\n// //         </div>\n// //       )}\n\n// //       {/* Add/Edit Modal */}\n// //       {showAddModal && (\n// //         <ProjectModal\n// //           project={editingProject}\n// //           domains={domains}\n// //           onClose={() => setShowAddModal(false)}\n// //           onSave={() => {\n// //             setShowAddModal(false);\n// //             fetchProjects();\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* Project Details Modal */}\n// //       {selectedProject && (\n// //         <ProjectDetailsModal\n// //           project={selectedProject}\n// //           onClose={() => setSelectedProject(null)}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // Project Card Component\n// // const ProjectCard = ({ \n// //   project, \n// //   onEdit, \n// //   onDelete, \n// //   onMove, \n// //   onArchive, \n// //   onToggleFeatured, \n// //   onViewDetails \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n\n// //   return (\n// //     <div className={`project-card ${!project.isActive ? 'archived' : ''}`}>\n// //       <div className=\"project-header\">\n// //         <div className=\"project-image\">\n// //           {project.images && project.images.length > 0 ? (\n// //             <img src={project.images[0].url} alt={project.title} />\n// //           ) : (\n// //             <div className=\"image-placeholder\">\n// //               <FiImage />\n// //             </div>\n// //           )}\n// //         </div>\n\n// //         <div className=\"project-badges\">\n// //           {project.isFeatured && (\n// //             <span className=\"badge featured\">\n// //               <FiStar /> Featured\n// //             </span>\n// //           )}\n// //           {!project.isActive && (\n// //             <span className=\"badge archived\">Archived</span>\n// //           )}\n// //         </div>\n\n// //         <div className=\"project-menu\">\n// //           <button onClick={() => setShowMenu(!showMenu)}>\n// //             <FiMoreVertical />\n// //           </button>\n// //           {showMenu && (\n// //             <div className=\"dropdown-menu\">\n// //               <button onClick={() => onViewDetails(project)}>\n// //                 <FiEye /> View Details\n// //               </button>\n// //               <button onClick={() => onEdit(project)}>\n// //                 <FiEdit /> Edit\n// //               </button>\n// //               <button onClick={() => onToggleFeatured(project)}>\n// //                 <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n// //               </button>\n// //               <button onClick={() => onMove(project)}>\n// //                 <FiMove /> Move\n// //               </button>\n// //               <button onClick={() => onArchive(project)}>\n// //                 <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n// //               </button>\n// //               <button onClick={() => onDelete(project)} className=\"danger\">\n// //                 <FiTrash2 /> Delete\n// //               </button>\n// //             </div>\n// //           )}\n// //         </div>\n// //       </div>\n\n// //       <div className=\"project-content\">\n// //         <h3 className=\"project-title\">{project.title}</h3>\n// //         <p className=\"project-subdomain\">\n// //           <FiFolder className=\"subdomain-icon\" />\n// //           {project.subDomain?.title || 'No sub-domain'}\n// //         </p>\n// //         <p className=\"project-abstract\">\n// //           {project.abstract?.substring(0, 100)}...\n// //         </p>\n// //       </div>\n\n// //       <div className=\"project-footer\">\n// //         <div className=\"project-stats\">\n// //           <div className=\"stat\">\n// //             <FiEye />\n// //             <span>{project.viewCount || 0}</span>\n// //           </div>\n// //           <div className=\"stat\">\n// //             <FiUsers />\n// //             <span>{project.leadCount || 0}</span>\n// //           </div>\n// //         </div>\n\n// //         <div className=\"project-actions\">\n// //           <button onClick={() => onEdit(project)} className=\"edit-button\">\n// //             <FiEdit />\n// //           </button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // Project Modal Component (Add/Edit)\n// // const ProjectModal = ({ project, domains, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: project?.title || '',\n// //     abstract: project?.abstract || '',\n// //     specifications: project?.specifications || '',\n// //     learningOutcomes: project?.learningOutcomes || '',\n// //     subDomainId: project?.subDomainId || '',\n// //     isFeatured: project?.isFeatured || false\n// //   });\n// //   const [loading, setLoading] = useState(false);\n// //   const [selectedDomain, setSelectedDomain] = useState('');\n// //   const [subDomains, setSubDomains] = useState([]);\n\n// //   useEffect(() => {\n// //     if (selectedDomain) {\n// //       fetchSubDomains(selectedDomain);\n// //     }\n// //   }, [selectedDomain]);\n\n// //   const fetchSubDomains = async (domainId) => {\n// //     try {\n// //       const response = await authService.getLeafSubDomains(domainId);\n// //       setSubDomains(response.data || []);\n// //     } catch (error) {\n// //       console.error('‚ùå Error fetching sub-domains:', error);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       if (project) {\n// //         await authService.updateProject(project.id, formData);\n// //         toast.success('Project updated successfully');\n// //       } else {\n// //         await authService.createProject(formData);\n// //         toast.success('Project created successfully');\n// //       }\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå Error saving project:', error);\n// //       toast.error('Failed to save project');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>{project ? 'Edit Project' : 'Add New Project'}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-grid\">\n// //             <div className=\"form-group\">\n// //               <label>Project Title</label>\n// //               <input\n// //                 type=\"text\"\n// //                 value={formData.title}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //                 required\n// //               />\n// //             </div>\n\n// //             <div className=\"form-group\">\n// //               <label>Domain</label>\n// //               <select\n// //                 value={selectedDomain}\n// //                 onChange={(e) => setSelectedDomain(e.target.value)}\n// //                 required={!project}\n// //               >\n// //                 <option value=\"\">Select Domain</option>\n// //                 {domains.map(domain => (\n// //                   <option key={domain.id} value={domain.id}>{domain.title}</option>\n// //                 ))}\n// //               </select>\n// //             </div>\n\n// //             <div className=\"form-group\">\n// //               <label>Sub-Domain</label>\n// //               <select\n// //                 value={formData.subDomainId}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, subDomainId: e.target.value }))}\n// //                 required\n// //               >\n// //                 <option value=\"\">Select Sub-Domain</option>\n// //                 {subDomains.map(sub => (\n// //                   <option key={sub.id} value={sub.id}>{sub.title}</option>\n// //                 ))}\n// //               </select>\n// //             </div>\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Abstract</label>\n// //             <textarea\n// //               value={formData.abstract}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// //               rows={4}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Specifications</label>\n// //             <textarea\n// //               value={formData.specifications}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// //               rows={6}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label>Learning Outcomes</label>\n// //             <textarea\n// //               value={formData.learningOutcomes}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// //               rows={4}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group checkbox\">\n// //             <label>\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={formData.isFeatured}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// //               />\n// //               Featured Project\n// //             </label>\n// //           </div>\n\n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// //               {loading ? 'Saving...' : 'Save'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // Project Details Modal\n// // const ProjectDetailsModal = ({ project, onClose }) => {\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>{project.title}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n\n// //         <div className=\"project-details\">\n// //           <div className=\"detail-section\">\n// //             <h3>Abstract</h3>\n// //             <p>{project.abstract}</p>\n// //           </div>\n\n// //           <div className=\"detail-section\">\n// //             <h3>Specifications</h3>\n// //             <p>{project.specifications}</p>\n// //           </div>\n\n// //           <div className=\"detail-section\">\n// //             <h3>Learning Outcomes</h3>\n// //             <p>{project.learningOutcomes}</p>\n// //           </div>\n\n// //           <div className=\"detail-stats\">\n// //             <div className=\"stat-item\">\n// //               <strong>Views:</strong> {project.viewCount || 0}\n// //             </div>\n// //             <div className=\"stat-item\">\n// //               <strong>Leads:</strong> {project.leadCount || 0}\n// //             </div>\n// //             <div className=\"stat-item\">\n// //               <strong>Featured:</strong> {project.isFeatured ? 'Yes' : 'No'}\n// //             </div>\n// //             <div className=\"stat-item\">\n// //               <strong>Status:</strong> {project.isActive ? 'Active' : 'Archived'}\n// //             </div>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default ProjectManagement;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ProjectManagement\");\n$RefreshReg$(_c2, \"ProjectCard\");\n$RefreshReg$(_c3, \"ProjectEditModal\");\n$RefreshReg$(_c4, \"ProjectDetailsModal\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","authService","toast","FiEdit","FiTrash2","FiSearch","FiFilter","FiMove","FiArchive","FiStar","FiEye","FiUsers","FiImage","FiMoreVertical","FiFolder","FiFileText","FiPlus","FiSettings","FiArrowRight","jsxDEV","_jsxDEV","ProjectManagement","_s","console","log","navigate","projects","setProjects","domains","setDomains","loading","setLoading","pagination","setPagination","currentPage","totalPages","totalItems","filters","setFilters","search","domainId","isActive","isFeatured","sortBy","sortOrder","editingProject","setEditingProject","selectedProject","setSelectedProject","showEditModal","setShowEditModal","projectsCount","length","fetchInitialData","fetchProjects","_domainsResponse$data","domainsResponse","getDomains","limit","data","error","cleanFilters","Object","keys","forEach","key","value","undefined","params","page","response","getProjects","handleSearch","searchTerm","prev","handleFilterChange","filterKey","handleEditProject","project","title","handleDeleteProject","window","confirm","id","deleteProject","success","handleArchiveProject","isArchiving","action","archiveProject","archive","reason","handleToggleFeatured","updateProject","navigateToCreateProject","info","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","map","domain","ProjectCard","onEdit","onDelete","onArchive","onToggleFeatured","onViewDetails","size","disabled","ProjectEditModal","onClose","onSave","ProjectDetailsModal","_c","_s2","_project$subDomain","_project$subDomain$do","_project$subDomain2","_project$abstract","showMenu","setShowMenu","images","src","url","alt","subDomain","abstract","substring","viewCount","leadCount","_c2","_s3","_project$subDomain3","_project$subDomain3$d","_project$subDomain4","formData","setFormData","specifications","learningOutcomes","handleSubmit","preventDefault","onSubmit","required","rows","checked","_c3","_project$subDomain5","_project$subDomain5$d","_project$subDomain6","_c4","$RefreshReg$"],"sources":["/Users/praneeth/Desktop/Project100/frontend100/adminpanel100/src/components/projects/ProjectManagement.js"],"sourcesContent":["// src/components/projects/ProjectManagement.js - SIMPLIFIED VERSION FOR VIEWING/MANAGING PROJECTS\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authService } from '../../services/authService';\nimport { toast } from 'react-toastify';\nimport {\n  FiEdit,\n  FiTrash2,\n  FiSearch,\n  FiFilter,\n  FiMove,\n  FiArchive,\n  FiStar,\n  FiEye,\n  FiUsers,\n  FiImage,\n  FiMoreVertical,\n  FiFolder,\n  FiFileText,\n  FiPlus,\n  FiSettings,\n  FiArrowRight\n} from 'react-icons/fi';\n\nconst ProjectManagement = () => {\n  console.log('üöÄ PROJECT MANAGEMENT - Component rendering/mounting');\n  \n  const navigate = useNavigate();\n  const [projects, setProjects] = useState([]);\n  const [domains, setDomains] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalItems: 0\n  });\n  const [filters, setFilters] = useState({\n    search: '',\n    domainId: '',\n    isActive: true,\n    isFeatured: null,\n    sortBy: 'updatedAt',\n    sortOrder: 'DESC'\n  });\n  const [editingProject, setEditingProject] = useState(null);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  console.log('üìä PROJECT MANAGEMENT - Current state:', {\n    projectsCount: projects.length,\n    loading,\n    pagination,\n    filters,\n    editingProject: !!editingProject,\n    selectedProject: !!selectedProject\n  });\n\n  useEffect(() => {\n    console.log('üîÑ PROJECT MANAGEMENT - useEffect triggered');\n    fetchInitialData();\n  }, []);\n\n  useEffect(() => {\n    console.log('üîÑ PROJECT MANAGEMENT - Filters or pagination changed');\n    fetchProjects();\n  }, [filters, pagination.currentPage]);\n\n  const fetchInitialData = async () => {\n    try {\n      console.log('üì° INITIAL DATA - Fetching domains...');\n      const domainsResponse = await authService.getDomains({ limit: 100 });\n      console.log('‚úÖ INITIAL DATA - Domains fetched:', domainsResponse.data);\n      \n      setDomains(domainsResponse.data?.domains || []);\n    } catch (error) {\n      console.error('‚ùå INITIAL DATA - Error fetching domains:', error);\n      toast.error('Failed to load domains');\n    }\n  };\n\n  const fetchProjects = async () => {\n    try {\n      setLoading(true);\n      \n      // Clean up filters - remove empty strings and null values\n      const cleanFilters = {};\n      Object.keys(filters).forEach(key => {\n        const value = filters[key];\n        if (value !== '' && value !== null && value !== undefined) {\n          cleanFilters[key] = value;\n        }\n      });\n      \n      const params = {\n        page: pagination.currentPage,\n        limit: 12,\n        ...cleanFilters\n      };\n      \n      console.log('üì° PROJECT FETCH - Starting with params:', params);\n      \n      const response = await authService.getProjects(params);\n      console.log('‚úÖ PROJECT FETCH - Response:', response.data);\n      \n      setProjects(response.data.projects || []);\n      setPagination(response.data.pagination || pagination);\n      \n    } catch (error) {\n      console.error('‚ùå PROJECT FETCH - Error:', error);\n      toast.error('Failed to fetch projects');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearch = (searchTerm) => {\n    console.log('üîç PROJECT SEARCH - Search term:', searchTerm);\n    setFilters(prev => ({ ...prev, search: searchTerm }));\n    setPagination(prev => ({ ...prev, currentPage: 1 }));\n  };\n\n  const handleFilterChange = (filterKey, value) => {\n    console.log('üéõÔ∏è PROJECT FILTER - Changed:', filterKey, '=', value);\n    setFilters(prev => ({ ...prev, [filterKey]: value }));\n    setPagination(prev => ({ ...prev, currentPage: 1 }));\n  };\n\n  const handleEditProject = (project) => {\n    console.log('‚úèÔ∏è PROJECT EDIT - Editing:', project.title);\n    setEditingProject(project);\n    setShowEditModal(true);\n  };\n\n  const handleDeleteProject = async (project) => {\n    console.log('üóëÔ∏è PROJECT DELETE - Requesting deletion:', project.title);\n    \n    if (!window.confirm(`Are you sure you want to delete \"${project.title}\"?`)) {\n      console.log('‚ùå PROJECT DELETE - Cancelled by user');\n      return;\n    }\n\n    try {\n      console.log('üì° PROJECT DELETE - API call for:', project.id);\n      await authService.deleteProject(project.id);\n      console.log('‚úÖ PROJECT DELETE - Success');\n      toast.success('Project deleted successfully');\n      fetchProjects();\n    } catch (error) {\n      console.error('‚ùå PROJECT DELETE - Error:', error);\n      toast.error('Failed to delete project');\n    }\n  };\n\n  const handleArchiveProject = async (project) => {\n    const isArchiving = project.isActive;\n    const action = isArchiving ? 'archive' : 'restore';\n    \n    console.log('üìÅ PROJECT ARCHIVE - Action:', action, 'for:', project.title);\n    \n    if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n      return;\n    }\n\n    try {\n      await authService.archiveProject(project.id, {\n        archive: isArchiving,\n        reason: `${action} via admin panel`\n      });\n      console.log('‚úÖ PROJECT ARCHIVE - Success');\n      toast.success(`Project ${action}d successfully`);\n      fetchProjects();\n    } catch (error) {\n      console.error('‚ùå PROJECT ARCHIVE - Error:', error);\n      toast.error(`Failed to ${action} project`);\n    }\n  };\n\n  const handleToggleFeatured = async (project) => {\n    console.log('‚≠ê PROJECT FEATURED - Toggle for:', project.title);\n    \n    try {\n      await authService.updateProject(project.id, {\n        isFeatured: !project.isFeatured\n      });\n      console.log('‚úÖ PROJECT FEATURED - Success');\n      toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n      fetchProjects();\n    } catch (error) {\n      console.error('‚ùå PROJECT FEATURED - Error:', error);\n      toast.error('Failed to update featured status');\n    }\n  };\n\n  const navigateToCreateProject = () => {\n    console.log('üåê NAVIGATION - Redirecting to domains for project creation');\n    navigate('/domains');\n    toast.info('Navigate to Domains ‚Üí SubDomains to create new projects');\n  };\n\n  if (loading && projects.length === 0) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <p>Loading projects...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"project-management\">\n      <div className=\"page-header\">\n        <div className=\"header-content\">\n          <h1>Project Management</h1>\n          <p>View and manage your existing projects</p>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            className=\"secondary-button\" \n            onClick={navigateToCreateProject}\n          >\n            <FiSettings />\n            Manage Domains\n          </button>\n          <button \n            className=\"primary-button\" \n            onClick={navigateToCreateProject}\n          >\n            <FiPlus />\n            Create New Project\n            <FiArrowRight />\n          </button>\n        </div>\n      </div>\n\n      {/* Info Banner */}\n      <div className=\"info-banner\">\n        <div className=\"banner-content\">\n          <FiFileText className=\"banner-icon\" />\n          <div className=\"banner-text\">\n            <strong>Want to create a new project?</strong>\n            <p>Go to <strong>Domains ‚Üí SubDomains</strong> and click \"Add Project\" on any leaf subdomain for better organization.</p>\n          </div>\n          <button \n            className=\"banner-button\" \n            onClick={navigateToCreateProject}\n          >\n            Go to Domains <FiArrowRight />\n          </button>\n        </div>\n      </div>\n\n      {/* Filters and Controls */}\n      <div className=\"controls-section\">\n        <div className=\"search-bar\">\n          <FiSearch className=\"search-icon\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search projects...\"\n            value={filters.search}\n            onChange={(e) => handleSearch(e.target.value)}\n          />\n        </div>\n        \n        <div className=\"filter-controls\">\n          <select\n            value={filters.domainId}\n            onChange={(e) => handleFilterChange('domainId', e.target.value)}\n          >\n            <option value=\"\">All Domains</option>\n            {domains.map(domain => (\n              <option key={domain.id} value={domain.id}>{domain.title}</option>\n            ))}\n          </select>\n          \n          <select\n            value={filters.isFeatured === null ? '' : filters.isFeatured}\n            onChange={(e) => handleFilterChange('isFeatured', \n              e.target.value === '' ? null : e.target.value === 'true'\n            )}\n          >\n            <option value=\"\">All Projects</option>\n            <option value=\"true\">Featured Only</option>\n            <option value=\"false\">Non-Featured</option>\n          </select>\n          \n          <select\n            value={filters.isActive}\n            onChange={(e) => handleFilterChange('isActive', e.target.value === 'true')}\n          >\n            <option value=\"true\">Active Projects</option>\n            <option value=\"false\">Archived Projects</option>\n          </select>\n          \n          <select\n            value={filters.sortBy}\n            onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n          >\n            <option value=\"updatedAt\">Sort by Last Updated</option>\n            <option value=\"title\">Sort by Title</option>\n            <option value=\"createdAt\">Sort by Date Created</option>\n            <option value=\"leadCount\">Sort by Leads</option>\n            <option value=\"viewCount\">Sort by Views</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Projects Grid */}\n      <div className=\"projects-grid\">\n        {projects.length > 0 ? (\n          projects.map((project) => (\n            <ProjectCard\n              key={project.id}\n              project={project}\n              onEdit={handleEditProject}\n              onDelete={handleDeleteProject}\n              onArchive={handleArchiveProject}\n              onToggleFeatured={handleToggleFeatured}\n              onViewDetails={(project) => setSelectedProject(project)}\n            />\n          ))\n        ) : (\n          <div className=\"empty-state\">\n            <FiFileText size={48} />\n            <h3>No projects found</h3>\n            <p>Projects are created from Domain ‚Üí SubDomain pages for better organization</p>\n            <div className=\"empty-state-actions\">\n              <button className=\"primary-button\" onClick={navigateToCreateProject}>\n                <FiSettings />\n                Go to Domains\n              </button>\n              <p className=\"help-text\">\n                üí° Tip: Organize your projects by creating domains and subdomains first\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Pagination */}\n      {pagination.totalPages > 1 && (\n        <div className=\"pagination\">\n          <button\n            disabled={pagination.currentPage === 1}\n            onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n          >\n            Previous\n          </button>\n          \n          <span className=\"page-info\">\n            Page {pagination.currentPage} of {pagination.totalPages}\n            ({pagination.totalItems} total)\n          </span>\n          \n          <button\n            disabled={pagination.currentPage === pagination.totalPages}\n            onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n          >\n            Next\n          </button>\n        </div>\n      )}\n\n      {/* Edit Project Modal */}\n      {showEditModal && editingProject && (\n        <ProjectEditModal\n          project={editingProject}\n          onClose={() => {\n            setShowEditModal(false);\n            setEditingProject(null);\n          }}\n          onSave={() => {\n            setShowEditModal(false);\n            setEditingProject(null);\n            fetchProjects();\n          }}\n        />\n      )}\n\n      {/* Project Details Modal */}\n      {selectedProject && (\n        <ProjectDetailsModal\n          project={selectedProject}\n          onClose={() => setSelectedProject(null)}\n        />\n      )}\n    </div>\n  );\n};\n\n// Project Card Component\nconst ProjectCard = ({ \n  project, \n  onEdit, \n  onDelete, \n  onArchive, \n  onToggleFeatured, \n  onViewDetails \n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  return (\n    <div className={`project-card ${!project.isActive ? 'archived' : ''}`}>\n      <div className=\"project-header\">\n        <div className=\"project-image\">\n          {project.images && project.images.length > 0 ? (\n            <img src={project.images[0].url} alt={project.title} />\n          ) : (\n            <div className=\"image-placeholder\">\n              <FiImage />\n            </div>\n          )}\n        </div>\n        \n        <div className=\"project-badges\">\n          {project.isFeatured && (\n            <span className=\"badge featured\">\n              <FiStar /> Featured\n            </span>\n          )}\n          {!project.isActive && (\n            <span className=\"badge archived\">Archived</span>\n          )}\n        </div>\n        \n        <div className=\"project-menu\">\n          <button onClick={() => setShowMenu(!showMenu)}>\n            <FiMoreVertical />\n          </button>\n          {showMenu && (\n            <div className=\"dropdown-menu\">\n              <button onClick={() => onViewDetails(project)}>\n                <FiEye /> View Details\n              </button>\n              <button onClick={() => onEdit(project)}>\n                <FiEdit /> Edit\n              </button>\n              <button onClick={() => onToggleFeatured(project)}>\n                <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n              </button>\n              <button onClick={() => onArchive(project)}>\n                <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n              </button>\n              <button onClick={() => onDelete(project)} className=\"danger\">\n                <FiTrash2 /> Delete\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"project-content\">\n        <h3 className=\"project-title\">{project.title}</h3>\n        <p className=\"project-subdomain\">\n          <FiFolder className=\"subdomain-icon\" />\n          {project.subDomain?.domain?.title} ‚Üí {project.subDomain?.title || 'No sub-domain'}\n        </p>\n        <p className=\"project-abstract\">\n          {project.abstract?.substring(0, 100)}...\n        </p>\n      </div>\n      \n      <div className=\"project-footer\">\n        <div className=\"project-stats\">\n          <div className=\"stat\">\n            <FiEye />\n            <span>{project.viewCount || 0}</span>\n          </div>\n          <div className=\"stat\">\n            <FiUsers />\n            <span>{project.leadCount || 0}</span>\n          </div>\n        </div>\n        \n        <div className=\"project-actions\">\n          <button onClick={() => onEdit(project)} className=\"edit-button\">\n            <FiEdit />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Project Edit Modal Component\nconst ProjectEditModal = ({ project, onClose, onSave }) => {\n  const [formData, setFormData] = useState({\n    title: project?.title || '',\n    abstract: project?.abstract || '',\n    specifications: project?.specifications || '',\n    learningOutcomes: project?.learningOutcomes || '',\n    isFeatured: project?.isFeatured || false\n  });\n  const [loading, setLoading] = useState(false);\n\n  console.log('üìù PROJECT EDIT MODAL - Project:', project.title);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      console.log('üíæ PROJECT UPDATE - Starting with data:', formData);\n      await authService.updateProject(project.id, formData);\n      console.log('‚úÖ PROJECT UPDATE - Success');\n      toast.success('Project updated successfully');\n      onSave();\n    } catch (error) {\n      console.error('‚ùå PROJECT UPDATE - Error:', error);\n      toast.error('Failed to update project');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>Edit Project: {project.title}</h2>\n          <button onClick={onClose}>√ó</button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Project Title</label>\n            <input\n              type=\"text\"\n              value={formData.title}\n              onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              required\n            />\n          </div>\n\n          <div className=\"modal-info\">\n            <strong>Domain:</strong> {project.subDomain?.domain?.title || 'Unknown'}<br />\n            <strong>SubDomain:</strong> {project.subDomain?.title || 'Unknown'}<br />\n            <span className=\"info-note\">\n              üí° To move this project to a different domain/subdomain, contact your administrator\n            </span>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Abstract</label>\n            <textarea\n              value={formData.abstract}\n              onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n              rows={4}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Specifications</label>\n            <textarea\n              value={formData.specifications}\n              onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n              rows={6}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Learning Outcomes</label>\n            <textarea\n              value={formData.learningOutcomes}\n              onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n              rows={4}\n              required\n            />\n          </div>\n          \n          <div className=\"form-group checkbox\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={formData.isFeatured}\n                onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n              />\n              Featured Project\n            </label>\n          </div>\n          \n          <div className=\"modal-actions\">\n            <button type=\"button\" onClick={onClose} disabled={loading}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n              {loading ? 'Updating...' : 'Update Project'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Project Details Modal\nconst ProjectDetailsModal = ({ project, onClose }) => {\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal large\">\n        <div className=\"modal-header\">\n          <h2>{project.title}</h2>\n          <button onClick={onClose}>√ó</button>\n        </div>\n        \n        <div className=\"project-details\">\n          <div className=\"detail-section\">\n            <h3>Location</h3>\n            <p><strong>Domain:</strong> {project.subDomain?.domain?.title || 'Unknown'}</p>\n            <p><strong>SubDomain:</strong> {project.subDomain?.title || 'Unknown'}</p>\n          </div>\n          \n          <div className=\"detail-section\">\n            <h3>Abstract</h3>\n            <p>{project.abstract}</p>\n          </div>\n          \n          <div className=\"detail-section\">\n            <h3>Specifications</h3>\n            <p>{project.specifications}</p>\n          </div>\n          \n          <div className=\"detail-section\">\n            <h3>Learning Outcomes</h3>\n            <p>{project.learningOutcomes}</p>\n          </div>\n          \n          <div className=\"detail-stats\">\n            <div className=\"stat-item\">\n              <strong>Views:</strong> {project.viewCount || 0}\n            </div>\n            <div className=\"stat-item\">\n              <strong>Leads:</strong> {project.leadCount || 0}\n            </div>\n            <div className=\"stat-item\">\n              <strong>Featured:</strong> {project.isFeatured ? 'Yes' : 'No'}\n            </div>\n            <div className=\"stat-item\">\n              <strong>Status:</strong> {project.isActive ? 'Active' : 'Archived'}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectManagement;\n\n\n// // src/components/projects/ProjectManagement.js - FIXED WITH LOGGING\n// import React, { useState, useEffect } from 'react';\n// import { authService } from '../../services/authService';\n// import { toast } from 'react-toastify';\n// import {\n//   FiPlus,\n//   FiEdit,\n//   FiTrash2,\n//   FiSearch,\n//   FiFilter,\n//   FiMove,\n//   FiArchive,\n//   FiStar,\n//   FiEye,\n//   FiUsers,\n//   FiImage,\n//   FiMoreVertical,\n//   FiFolder,\n//   FiFileText\n// } from 'react-icons/fi';\n\n// const ProjectManagement = () => {\n//   const [projects, setProjects] = useState([]);\n//   const [domains, setDomains] = useState([]);\n//   const [subDomains, setSubDomains] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [pagination, setPagination] = useState({\n//     currentPage: 1,\n//     totalPages: 1,\n//     totalItems: 0\n//   });\n//   const [filters, setFilters] = useState({\n//     search: '',\n//     subDomainId: '',\n//     isActive: true,\n//     isFeatured: null,\n//     sortBy: 'title',\n//     sortOrder: 'ASC'\n//   });\n//   const [showAddModal, setShowAddModal] = useState(false);\n//   const [editingProject, setEditingProject] = useState(null);\n//   const [selectedProject, setSelectedProject] = useState(null);\n\n//   useEffect(() => {\n//     console.log('üöÄ ProjectManagement component mounted');\n//     fetchInitialData();\n//   }, []);\n\n//   useEffect(() => {\n//     console.log('üîÑ Filters or pagination changed:', { filters, currentPage: pagination.currentPage });\n//     fetchProjects();\n//   }, [filters, pagination.currentPage]);\n\n//   const fetchInitialData = async () => {\n//     try {\n//       console.log('üì° Fetching initial data (domains)...');\n//       const [domainsResponse] = await Promise.all([\n//         authService.getDomains({ limit: 100 })\n//       ]);\n      \n//       console.log('‚úÖ Domains fetched:', domainsResponse);\n//       setDomains(domainsResponse.data.domains || []);\n//     } catch (error) {\n//       console.error('‚ùå Error fetching initial data:', error);\n//       toast.error('Failed to load domains');\n//     }\n//   };\n\n//   const fetchProjects = async () => {\n//     try {\n//       setLoading(true);\n      \n//       // Clean up filters - remove empty strings and null values\n//       const cleanFilters = {};\n//       Object.keys(filters).forEach(key => {\n//         const value = filters[key];\n//         // Only add non-empty values to the params\n//         if (value !== '' && value !== null && value !== undefined) {\n//           cleanFilters[key] = value;\n//         }\n//       });\n      \n//       const params = {\n//         page: pagination.currentPage,\n//         limit: 12,\n//         ...cleanFilters\n//       };\n      \n//       console.log('üì° Fetching projects with params:', params);\n//       console.log('üîç Raw filters before cleaning:', filters);\n//       console.log('üßπ Cleaned filters:', cleanFilters);\n      \n//       const response = await authService.getProjects(params);\n//       console.log('‚úÖ Projects API response:', response);\n      \n//       setProjects(response.data.projects || []);\n//       setPagination(response.data.pagination || pagination);\n      \n//       console.log('üìä Projects set:', response.data.projects?.length || 0, 'projects');\n//       console.log('üìÑ Pagination set:', response.data.pagination);\n      \n//     } catch (error) {\n//       console.error('‚ùå Error fetching projects:', error);\n//       console.error('‚ùå Error details:', {\n//         message: error.message,\n//         response: error.response?.data,\n//         status: error.response?.status,\n//         config: error.config\n//       });\n//       toast.error('Failed to fetch projects');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const fetchSubDomains = async (domainId) => {\n//     try {\n//       console.log('üì° Fetching subdomains for domain:', domainId);\n//       const response = await authService.getLeafSubDomains(domainId);\n//       console.log('‚úÖ Subdomains fetched:', response);\n//       setSubDomains(response.data || []);\n//     } catch (error) {\n//       console.error('‚ùå Error fetching sub-domains:', error);\n//     }\n//   };\n\n//   const handleSearch = (searchTerm) => {\n//     console.log('üîç Search term changed:', searchTerm);\n//     setFilters(prev => ({ ...prev, search: searchTerm }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n//   };\n\n//   const handleFilterChange = (filterKey, value) => {\n//     console.log('üéõÔ∏è Filter changed:', filterKey, '=', value);\n//     setFilters(prev => ({ ...prev, [filterKey]: value }));\n//     setPagination(prev => ({ ...prev, currentPage: 1 }));\n//   };\n\n//   const handleDomainChange = (domainId) => {\n//     console.log('üè¢ Domain changed:', domainId);\n//     if (domainId) {\n//       fetchSubDomains(domainId);\n//     } else {\n//       setSubDomains([]);\n//     }\n//     // Reset subdomain filter when domain changes\n//     setFilters(prev => ({ ...prev, subDomainId: '' }));\n//   };\n\n//   const handleAddProject = () => {\n//     console.log('‚ûï Add project clicked');\n//     setEditingProject(null);\n//     setShowAddModal(true);\n//   };\n\n//   const handleEditProject = (project) => {\n//     console.log('‚úèÔ∏è Edit project clicked:', project.id, project.title);\n//     setEditingProject(project);\n//     setShowAddModal(true);\n//   };\n\n//   const handleDeleteProject = async (project) => {\n//     console.log('üóëÔ∏è Delete project requested:', project.id, project.title);\n    \n//     if (!window.confirm(`Are you sure you want to delete \"${project.title}\"?`)) {\n//       console.log('‚ùå Delete cancelled by user');\n//       return;\n//     }\n\n//     try {\n//       console.log('üì° Deleting project:', project.id);\n//       await authService.deleteProject(project.id);\n//       console.log('‚úÖ Project deleted successfully');\n//       toast.success('Project deleted successfully');\n//       fetchProjects();\n//     } catch (error) {\n//       console.error('‚ùå Error deleting project:', error);\n//       toast.error('Failed to delete project');\n//     }\n//   };\n\n//   const handleMoveProject = async (project, newSubDomainId) => {\n//     console.log('üì¶ Move project requested:', project.id, 'to subdomain:', newSubDomainId);\n    \n//     try {\n//       await authService.moveProject(project.id, {\n//         newSubDomainId,\n//         reason: 'Moved via admin panel'\n//       });\n//       console.log('‚úÖ Project moved successfully');\n//       toast.success('Project moved successfully');\n//       fetchProjects();\n//     } catch (error) {\n//       console.error('‚ùå Error moving project:', error);\n//       toast.error('Failed to move project');\n//     }\n//   };\n\n//   const handleArchiveProject = async (project) => {\n//     const isArchiving = project.isActive;\n//     const action = isArchiving ? 'archive' : 'restore';\n    \n//     console.log('üìÅ Archive/restore project requested:', project.id, action);\n    \n//     if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n//       console.log('‚ùå Archive/restore cancelled by user');\n//       return;\n//     }\n\n//     try {\n//       await authService.archiveProject(project.id, {\n//         archive: isArchiving,\n//         reason: `${action} via admin panel`\n//       });\n//       console.log('‚úÖ Project archived/restored successfully');\n//       toast.success(`Project ${action}d successfully`);\n//       fetchProjects();\n//     } catch (error) {\n//       console.error(`‚ùå Error ${action}ing project:`, error);\n//       toast.error(`Failed to ${action} project`);\n//     }\n//   };\n\n//   const handleToggleFeatured = async (project) => {\n//     console.log('‚≠ê Toggle featured requested:', project.id, 'current:', project.isFeatured);\n    \n//     try {\n//       await authService.updateProject(project.id, {\n//         isFeatured: !project.isFeatured\n//       });\n//       console.log('‚úÖ Featured status updated successfully');\n//       toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n//       fetchProjects();\n//     } catch (error) {\n//       console.error('‚ùå Error updating featured status:', error);\n//       toast.error('Failed to update featured status');\n//     }\n//   };\n\n//   if (loading && projects.length === 0) {\n//     return (\n//       <div className=\"loading-container\">\n//         <div className=\"loading-spinner\"></div>\n//         <p>Loading projects...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"project-management\">\n//       <div className=\"page-header\">\n//         <div className=\"header-content\">\n//           <h1>Project Management</h1>\n//           <p>Manage your project portfolio and content</p>\n//         </div>\n//         <button className=\"primary-button\" onClick={handleAddProject}>\n//           <FiPlus />\n//           Add Project\n//         </button>\n//       </div>\n\n//       {/* Filters and Controls */}\n//       <div className=\"controls-section\">\n//         <div className=\"search-bar\">\n//           <FiSearch className=\"search-icon\" />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search projects...\"\n//             value={filters.search}\n//             onChange={(e) => handleSearch(e.target.value)}\n//           />\n//         </div>\n        \n//         <div className=\"filter-controls\">\n//           {/* Domain Selector */}\n//           <select\n//             onChange={(e) => handleDomainChange(e.target.value)}\n//           >\n//             <option value=\"\">Select Domain</option>\n//             {domains.map(domain => (\n//               <option key={domain.id} value={domain.id}>{domain.title}</option>\n//             ))}\n//           </select>\n          \n//           {/* Subdomain Selector */}\n//           <select\n//             value={filters.subDomainId}\n//             onChange={(e) => handleFilterChange('subDomainId', e.target.value)}\n//             disabled={subDomains.length === 0}\n//           >\n//             <option value=\"\">All Sub-domains</option>\n//             {subDomains.map(sub => (\n//               <option key={sub.id} value={sub.id}>{sub.title}</option>\n//             ))}\n//           </select>\n          \n//           <select\n//             value={filters.isFeatured === null ? '' : filters.isFeatured}\n//             onChange={(e) => handleFilterChange('isFeatured', \n//               e.target.value === '' ? null : e.target.value === 'true'\n//             )}\n//           >\n//             <option value=\"\">All Projects</option>\n//             <option value=\"true\">Featured Only</option>\n//             <option value=\"false\">Non-Featured</option>\n//           </select>\n          \n//           <select\n//             value={filters.isActive}\n//             onChange={(e) => handleFilterChange('isActive', e.target.value === 'true')}\n//           >\n//             <option value=\"true\">Active Projects</option>\n//             <option value=\"false\">Archived Projects</option>\n//           </select>\n          \n//           <select\n//             value={filters.sortBy}\n//             onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n//           >\n//             <option value=\"title\">Sort by Title</option>\n//             <option value=\"createdAt\">Sort by Date</option>\n//             <option value=\"leadCount\">Sort by Leads</option>\n//             <option value=\"viewCount\">Sort by Views</option>\n//           </select>\n//         </div>\n//       </div>\n\n//       {/* Projects Grid */}\n//       <div className=\"projects-grid\">\n//         {projects.length > 0 ? (\n//           projects.map((project) => (\n//             <ProjectCard\n//               key={project.id}\n//               project={project}\n//               onEdit={handleEditProject}\n//               onDelete={handleDeleteProject}\n//               onMove={handleMoveProject}\n//               onArchive={handleArchiveProject}\n//               onToggleFeatured={handleToggleFeatured}\n//               onViewDetails={(project) => setSelectedProject(project)}\n//             />\n//           ))\n//         ) : (\n//           <div className=\"empty-state\">\n//             <FiFileText size={48} />\n//             <h3>No projects found</h3>\n//             <p>Create your first project to get started</p>\n//             <button className=\"primary-button\" onClick={handleAddProject}>\n//               <FiPlus />\n//               Add Project\n//             </button>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Pagination */}\n//       {pagination.totalPages > 1 && (\n//         <div className=\"pagination\">\n//           <button\n//             disabled={pagination.currentPage === 1}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n//           >\n//             Previous\n//           </button>\n          \n//           <span className=\"page-info\">\n//             Page {pagination.currentPage} of {pagination.totalPages}\n//             ({pagination.totalItems} total)\n//           </span>\n          \n//           <button\n//             disabled={pagination.currentPage === pagination.totalPages}\n//             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       )}\n\n//       {/* Add/Edit Modal */}\n//       {showAddModal && (\n//         <ProjectModal\n//           project={editingProject}\n//           domains={domains}\n//           onClose={() => setShowAddModal(false)}\n//           onSave={() => {\n//             setShowAddModal(false);\n//             fetchProjects();\n//           }}\n//         />\n//       )}\n\n//       {/* Project Details Modal */}\n//       {selectedProject && (\n//         <ProjectDetailsModal\n//           project={selectedProject}\n//           onClose={() => setSelectedProject(null)}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// // Project Card Component\n// const ProjectCard = ({ \n//   project, \n//   onEdit, \n//   onDelete, \n//   onMove, \n//   onArchive, \n//   onToggleFeatured, \n//   onViewDetails \n// }) => {\n//   const [showMenu, setShowMenu] = useState(false);\n\n//   return (\n//     <div className={`project-card ${!project.isActive ? 'archived' : ''}`}>\n//       <div className=\"project-header\">\n//         <div className=\"project-image\">\n//           {project.images && project.images.length > 0 ? (\n//             <img src={project.images[0].url} alt={project.title} />\n//           ) : (\n//             <div className=\"image-placeholder\">\n//               <FiImage />\n//             </div>\n//           )}\n//         </div>\n        \n//         <div className=\"project-badges\">\n//           {project.isFeatured && (\n//             <span className=\"badge featured\">\n//               <FiStar /> Featured\n//             </span>\n//           )}\n//           {!project.isActive && (\n//             <span className=\"badge archived\">Archived</span>\n//           )}\n//         </div>\n        \n//         <div className=\"project-menu\">\n//           <button onClick={() => setShowMenu(!showMenu)}>\n//             <FiMoreVertical />\n//           </button>\n//           {showMenu && (\n//             <div className=\"dropdown-menu\">\n//               <button onClick={() => onViewDetails(project)}>\n//                 <FiEye /> View Details\n//               </button>\n//               <button onClick={() => onEdit(project)}>\n//                 <FiEdit /> Edit\n//               </button>\n//               <button onClick={() => onToggleFeatured(project)}>\n//                 <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n//               </button>\n//               <button onClick={() => onMove(project)}>\n//                 <FiMove /> Move\n//               </button>\n//               <button onClick={() => onArchive(project)}>\n//                 <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n//               </button>\n//               <button onClick={() => onDelete(project)} className=\"danger\">\n//                 <FiTrash2 /> Delete\n//               </button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n      \n//       <div className=\"project-content\">\n//         <h3 className=\"project-title\">{project.title}</h3>\n//         <p className=\"project-subdomain\">\n//           <FiFolder className=\"subdomain-icon\" />\n//           {project.subDomain?.title || 'No sub-domain'}\n//         </p>\n//         <p className=\"project-abstract\">\n//           {project.abstract?.substring(0, 100)}...\n//         </p>\n//       </div>\n      \n//       <div className=\"project-footer\">\n//         <div className=\"project-stats\">\n//           <div className=\"stat\">\n//             <FiEye />\n//             <span>{project.viewCount || 0}</span>\n//           </div>\n//           <div className=\"stat\">\n//             <FiUsers />\n//             <span>{project.leadCount || 0}</span>\n//           </div>\n//         </div>\n        \n//         <div className=\"project-actions\">\n//           <button onClick={() => onEdit(project)} className=\"edit-button\">\n//             <FiEdit />\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Project Modal Component (Add/Edit)\n// const ProjectModal = ({ project, domains, onClose, onSave }) => {\n//   const [formData, setFormData] = useState({\n//     title: project?.title || '',\n//     abstract: project?.abstract || '',\n//     specifications: project?.specifications || '',\n//     learningOutcomes: project?.learningOutcomes || '',\n//     subDomainId: project?.subDomainId || '',\n//     isFeatured: project?.isFeatured || false\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [selectedDomain, setSelectedDomain] = useState('');\n//   const [subDomains, setSubDomains] = useState([]);\n\n//   useEffect(() => {\n//     if (selectedDomain) {\n//       fetchSubDomains(selectedDomain);\n//     }\n//   }, [selectedDomain]);\n\n//   const fetchSubDomains = async (domainId) => {\n//     try {\n//       console.log('üì° Modal: Fetching subdomains for domain:', domainId);\n//       const response = await authService.getLeafSubDomains(domainId);\n//       console.log('‚úÖ Modal: Subdomains fetched:', response);\n//       setSubDomains(response.data || []);\n//     } catch (error) {\n//       console.error('‚ùå Modal: Error fetching sub-domains:', error);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     console.log('üíæ Modal: Submitting form data:', formData);\n\n//     try {\n//       if (project) {\n//         console.log('üì° Modal: Updating project:', project.id);\n//         await authService.updateProject(project.id, formData);\n//         console.log('‚úÖ Modal: Project updated successfully');\n//         toast.success('Project updated successfully');\n//       } else {\n//         console.log('üì° Modal: Creating new project');\n//         await authService.createProject(formData);\n//         console.log('‚úÖ Modal: Project created successfully');\n//         toast.success('Project created successfully');\n//       }\n//       onSave();\n//     } catch (error) {\n//       console.error('‚ùå Modal: Error saving project:', error);\n//       toast.error('Failed to save project');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>{project ? 'Edit Project' : 'Add New Project'}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n        \n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-grid\">\n//             <div className=\"form-group\">\n//               <label>Project Title</label>\n//               <input\n//                 type=\"text\"\n//                 value={formData.title}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n//                 required\n//               />\n//             </div>\n            \n//             <div className=\"form-group\">\n//               <label>Domain</label>\n//               <select\n//                 value={selectedDomain}\n//                 onChange={(e) => setSelectedDomain(e.target.value)}\n//                 required={!project}\n//               >\n//                 <option value=\"\">Select Domain</option>\n//                 {domains.map(domain => (\n//                   <option key={domain.id} value={domain.id}>{domain.title}</option>\n//                 ))}\n//               </select>\n//             </div>\n            \n//             <div className=\"form-group\">\n//               <label>Sub-Domain</label>\n//               <select\n//                 value={formData.subDomainId}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, subDomainId: e.target.value }))}\n//                 required\n//               >\n//                 <option value=\"\">Select Sub-Domain</option>\n//                 {subDomains.map(sub => (\n//                   <option key={sub.id} value={sub.id}>{sub.title}</option>\n//                 ))}\n//               </select>\n//             </div>\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Abstract</label>\n//             <textarea\n//               value={formData.abstract}\n//               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n//               rows={4}\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Specifications</label>\n//             <textarea\n//               value={formData.specifications}\n//               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n//               rows={6}\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group\">\n//             <label>Learning Outcomes</label>\n//             <textarea\n//               value={formData.learningOutcomes}\n//               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n//               rows={4}\n//               required\n//             />\n//           </div>\n          \n//           <div className=\"form-group checkbox\">\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={formData.isFeatured}\n//                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n//               />\n//               Featured Project\n//             </label>\n//           </div>\n          \n//           <div className=\"modal-actions\">\n//             <button type=\"button\" onClick={onClose} disabled={loading}>\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n//               {loading ? 'Saving...' : 'Save'}\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// // Project Details Modal\n// const ProjectDetailsModal = ({ project, onClose }) => {\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal large\">\n//         <div className=\"modal-header\">\n//           <h2>{project.title}</h2>\n//           <button onClick={onClose}>√ó</button>\n//         </div>\n        \n//         <div className=\"project-details\">\n//           <div className=\"detail-section\">\n//             <h3>Abstract</h3>\n//             <p>{project.abstract}</p>\n//           </div>\n          \n//           <div className=\"detail-section\">\n//             <h3>Specifications</h3>\n//             <p>{project.specifications}</p>\n//           </div>\n          \n//           <div className=\"detail-section\">\n//             <h3>Learning Outcomes</h3>\n//             <p>{project.learningOutcomes}</p>\n//           </div>\n          \n//           <div className=\"detail-stats\">\n//             <div className=\"stat-item\">\n//               <strong>Views:</strong> {project.viewCount || 0}\n//             </div>\n//             <div className=\"stat-item\">\n//               <strong>Leads:</strong> {project.leadCount || 0}\n//             </div>\n//             <div className=\"stat-item\">\n//               <strong>Featured:</strong> {project.isFeatured ? 'Yes' : 'No'}\n//             </div>\n//             <div className=\"stat-item\">\n//               <strong>Status:</strong> {project.isActive ? 'Active' : 'Archived'}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProjectManagement;\n\n\n// // // src/components/projects/ProjectManagement.js - NEW FILE\n// // import React, { useState, useEffect } from 'react';\n// // import { authService } from '../../services/authService';\n// // import { toast } from 'react-toastify';\n// // import {\n// //   FiPlus,\n// //   FiEdit,\n// //   FiTrash2,\n// //   FiSearch,\n// //   FiFilter,\n// //   FiMove,\n// //   FiArchive,\n// //   FiStar,\n// //   FiEye,\n// //   FiUsers,\n// //   FiImage,\n// //   FiMoreVertical,\n// //   FiFolder,\n// //   FiFileText\n// // } from 'react-icons/fi';\n\n// // const ProjectManagement = () => {\n// //   const [projects, setProjects] = useState([]);\n// //   const [domains, setDomains] = useState([]);\n// //   const [subDomains, setSubDomains] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n// //   const [pagination, setPagination] = useState({\n// //     currentPage: 1,\n// //     totalPages: 1,\n// //     totalItems: 0\n// //   });\n// //   const [filters, setFilters] = useState({\n// //     search: '',\n// //     subDomainId: '',\n// //     isActive: true,\n// //     isFeatured: null,\n// //     sortBy: 'title',\n// //     sortOrder: 'ASC'\n// //   });\n// //   const [showAddModal, setShowAddModal] = useState(false);\n// //   const [editingProject, setEditingProject] = useState(null);\n// //   const [selectedProject, setSelectedProject] = useState(null);\n\n// //   useEffect(() => {\n// //     fetchInitialData();\n// //   }, []);\n\n// //   useEffect(() => {\n// //     fetchProjects();\n// //   }, [filters, pagination.currentPage]);\n\n// //   const fetchInitialData = async () => {\n// //     try {\n// //       const [domainsResponse] = await Promise.all([\n// //         authService.getDomains({ limit: 100 })\n// //       ]);\n      \n// //       setDomains(domainsResponse.data.domains || []);\n// //     } catch (error) {\n// //       console.error('‚ùå Error fetching initial data:', error);\n// //       toast.error('Failed to load domains');\n// //     }\n// //   };\n\n// //   const fetchProjects = async () => {\n// //     try {\n// //       setLoading(true);\n// //       const params = {\n// //         page: pagination.currentPage,\n// //         limit: 12,\n// //         ...filters\n// //       };\n      \n// //       const response = await authService.getProjects(params);\n// //       console.log('‚úÖ Projects fetched:', response);\n      \n// //       setProjects(response.data.projects || []);\n// //       setPagination(response.data.pagination || pagination);\n// //     } catch (error) {\n// //       console.error('‚ùå Error fetching projects:', error);\n// //       toast.error('Failed to fetch projects');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   const fetchSubDomains = async (domainId) => {\n// //     try {\n// //       const response = await authService.getLeafSubDomains(domainId);\n// //       setSubDomains(response.data || []);\n// //     } catch (error) {\n// //       console.error('‚ùå Error fetching sub-domains:', error);\n// //     }\n// //   };\n\n// //   const handleSearch = (searchTerm) => {\n// //     setFilters(prev => ({ ...prev, search: searchTerm }));\n// //     setPagination(prev => ({ ...prev, currentPage: 1 }));\n// //   };\n\n// //   const handleFilterChange = (filterKey, value) => {\n// //     setFilters(prev => ({ ...prev, [filterKey]: value }));\n// //     setPagination(prev => ({ ...prev, currentPage: 1 }));\n// //   };\n\n// //   const handleAddProject = () => {\n// //     setEditingProject(null);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleEditProject = (project) => {\n// //     setEditingProject(project);\n// //     setShowAddModal(true);\n// //   };\n\n// //   const handleDeleteProject = async (project) => {\n// //     if (!window.confirm(`Are you sure you want to delete \"${project.title}\"?`)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       await authService.deleteProject(project.id);\n// //       toast.success('Project deleted successfully');\n// //       fetchProjects();\n// //     } catch (error) {\n// //       console.error('‚ùå Error deleting project:', error);\n// //       toast.error('Failed to delete project');\n// //     }\n// //   };\n\n// //   const handleMoveProject = async (project, newSubDomainId) => {\n// //     try {\n// //       await authService.moveProject(project.id, {\n// //         newSubDomainId,\n// //         reason: 'Moved via admin panel'\n// //       });\n// //       toast.success('Project moved successfully');\n// //       fetchProjects();\n// //     } catch (error) {\n// //       console.error('‚ùå Error moving project:', error);\n// //       toast.error('Failed to move project');\n// //     }\n// //   };\n\n// //   const handleArchiveProject = async (project) => {\n// //     const isArchiving = project.isActive;\n// //     const action = isArchiving ? 'archive' : 'restore';\n    \n// //     if (!window.confirm(`Are you sure you want to ${action} \"${project.title}\"?`)) {\n// //       return;\n// //     }\n\n// //     try {\n// //       await authService.archiveProject(project.id, {\n// //         archive: isArchiving,\n// //         reason: `${action} via admin panel`\n// //       });\n// //       toast.success(`Project ${action}d successfully`);\n// //       fetchProjects();\n// //     } catch (error) {\n// //       console.error(`‚ùå Error ${action}ing project:`, error);\n// //       toast.error(`Failed to ${action} project`);\n// //     }\n// //   };\n\n// //   const handleToggleFeatured = async (project) => {\n// //     try {\n// //       await authService.updateProject(project.id, {\n// //         isFeatured: !project.isFeatured\n// //       });\n// //       toast.success(`Project ${project.isFeatured ? 'removed from' : 'added to'} featured`);\n// //       fetchProjects();\n// //     } catch (error) {\n// //       console.error('‚ùå Error updating featured status:', error);\n// //       toast.error('Failed to update featured status');\n// //     }\n// //   };\n\n// //   if (loading && projects.length === 0) {\n// //     return (\n// //       <div className=\"loading-container\">\n// //         <div className=\"loading-spinner\"></div>\n// //         <p>Loading projects...</p>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"project-management\">\n// //       <div className=\"page-header\">\n// //         <div className=\"header-content\">\n// //           <h1>Project Management</h1>\n// //           <p>Manage your project portfolio and content</p>\n// //         </div>\n// //         <button className=\"primary-button\" onClick={handleAddProject}>\n// //           <FiPlus />\n// //           Add Project\n// //         </button>\n// //       </div>\n\n// //       {/* Filters and Controls */}\n// //       <div className=\"controls-section\">\n// //         <div className=\"search-bar\">\n// //           <FiSearch className=\"search-icon\" />\n// //           <input\n// //             type=\"text\"\n// //             placeholder=\"Search projects...\"\n// //             value={filters.search}\n// //             onChange={(e) => handleSearch(e.target.value)}\n// //           />\n// //         </div>\n        \n// //         <div className=\"filter-controls\">\n// //           <select\n// //             value={filters.subDomainId}\n// //             onChange={(e) => handleFilterChange('subDomainId', e.target.value)}\n// //           >\n// //             <option value=\"\">All Sub-domains</option>\n// //             {subDomains.map(sub => (\n// //               <option key={sub.id} value={sub.id}>{sub.title}</option>\n// //             ))}\n// //           </select>\n          \n// //           <select\n// //             value={filters.isFeatured === null ? '' : filters.isFeatured}\n// //             onChange={(e) => handleFilterChange('isFeatured', \n// //               e.target.value === '' ? null : e.target.value === 'true'\n// //             )}\n// //           >\n// //             <option value=\"\">All Projects</option>\n// //             <option value=\"true\">Featured Only</option>\n// //             <option value=\"false\">Non-Featured</option>\n// //           </select>\n          \n// //           <select\n// //             value={filters.isActive}\n// //             onChange={(e) => handleFilterChange('isActive', e.target.value === 'true')}\n// //           >\n// //             <option value=\"true\">Active Projects</option>\n// //             <option value=\"false\">Archived Projects</option>\n// //           </select>\n          \n// //           <select\n// //             value={filters.sortBy}\n// //             onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n// //           >\n// //             <option value=\"title\">Sort by Title</option>\n// //             <option value=\"createdAt\">Sort by Date</option>\n// //             <option value=\"leadCount\">Sort by Leads</option>\n// //             <option value=\"viewCount\">Sort by Views</option>\n// //           </select>\n// //         </div>\n// //       </div>\n\n// //       {/* Projects Grid */}\n// //       <div className=\"projects-grid\">\n// //         {projects.length > 0 ? (\n// //           projects.map((project) => (\n// //             <ProjectCard\n// //               key={project.id}\n// //               project={project}\n// //               onEdit={handleEditProject}\n// //               onDelete={handleDeleteProject}\n// //               onMove={handleMoveProject}\n// //               onArchive={handleArchiveProject}\n// //               onToggleFeatured={handleToggleFeatured}\n// //               onViewDetails={(project) => setSelectedProject(project)}\n// //             />\n// //           ))\n// //         ) : (\n// //           <div className=\"empty-state\">\n// //             <FiFileText size={48} />\n// //             <h3>No projects found</h3>\n// //             <p>Create your first project to get started</p>\n// //             <button className=\"primary-button\" onClick={handleAddProject}>\n// //               <FiPlus />\n// //               Add Project\n// //             </button>\n// //           </div>\n// //         )}\n// //       </div>\n\n// //       {/* Pagination */}\n// //       {pagination.totalPages > 1 && (\n// //         <div className=\"pagination\">\n// //           <button\n// //             disabled={pagination.currentPage === 1}\n// //             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage - 1 }))}\n// //           >\n// //             Previous\n// //           </button>\n          \n// //           <span className=\"page-info\">\n// //             Page {pagination.currentPage} of {pagination.totalPages}\n// //             ({pagination.totalItems} total)\n// //           </span>\n          \n// //           <button\n// //             disabled={pagination.currentPage === pagination.totalPages}\n// //             onClick={() => setPagination(prev => ({ ...prev, currentPage: prev.currentPage + 1 }))}\n// //           >\n// //             Next\n// //           </button>\n// //         </div>\n// //       )}\n\n// //       {/* Add/Edit Modal */}\n// //       {showAddModal && (\n// //         <ProjectModal\n// //           project={editingProject}\n// //           domains={domains}\n// //           onClose={() => setShowAddModal(false)}\n// //           onSave={() => {\n// //             setShowAddModal(false);\n// //             fetchProjects();\n// //           }}\n// //         />\n// //       )}\n\n// //       {/* Project Details Modal */}\n// //       {selectedProject && (\n// //         <ProjectDetailsModal\n// //           project={selectedProject}\n// //           onClose={() => setSelectedProject(null)}\n// //         />\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // // Project Card Component\n// // const ProjectCard = ({ \n// //   project, \n// //   onEdit, \n// //   onDelete, \n// //   onMove, \n// //   onArchive, \n// //   onToggleFeatured, \n// //   onViewDetails \n// // }) => {\n// //   const [showMenu, setShowMenu] = useState(false);\n\n// //   return (\n// //     <div className={`project-card ${!project.isActive ? 'archived' : ''}`}>\n// //       <div className=\"project-header\">\n// //         <div className=\"project-image\">\n// //           {project.images && project.images.length > 0 ? (\n// //             <img src={project.images[0].url} alt={project.title} />\n// //           ) : (\n// //             <div className=\"image-placeholder\">\n// //               <FiImage />\n// //             </div>\n// //           )}\n// //         </div>\n        \n// //         <div className=\"project-badges\">\n// //           {project.isFeatured && (\n// //             <span className=\"badge featured\">\n// //               <FiStar /> Featured\n// //             </span>\n// //           )}\n// //           {!project.isActive && (\n// //             <span className=\"badge archived\">Archived</span>\n// //           )}\n// //         </div>\n        \n// //         <div className=\"project-menu\">\n// //           <button onClick={() => setShowMenu(!showMenu)}>\n// //             <FiMoreVertical />\n// //           </button>\n// //           {showMenu && (\n// //             <div className=\"dropdown-menu\">\n// //               <button onClick={() => onViewDetails(project)}>\n// //                 <FiEye /> View Details\n// //               </button>\n// //               <button onClick={() => onEdit(project)}>\n// //                 <FiEdit /> Edit\n// //               </button>\n// //               <button onClick={() => onToggleFeatured(project)}>\n// //                 <FiStar /> {project.isFeatured ? 'Remove Featured' : 'Make Featured'}\n// //               </button>\n// //               <button onClick={() => onMove(project)}>\n// //                 <FiMove /> Move\n// //               </button>\n// //               <button onClick={() => onArchive(project)}>\n// //                 <FiArchive /> {project.isActive ? 'Archive' : 'Restore'}\n// //               </button>\n// //               <button onClick={() => onDelete(project)} className=\"danger\">\n// //                 <FiTrash2 /> Delete\n// //               </button>\n// //             </div>\n// //           )}\n// //         </div>\n// //       </div>\n      \n// //       <div className=\"project-content\">\n// //         <h3 className=\"project-title\">{project.title}</h3>\n// //         <p className=\"project-subdomain\">\n// //           <FiFolder className=\"subdomain-icon\" />\n// //           {project.subDomain?.title || 'No sub-domain'}\n// //         </p>\n// //         <p className=\"project-abstract\">\n// //           {project.abstract?.substring(0, 100)}...\n// //         </p>\n// //       </div>\n      \n// //       <div className=\"project-footer\">\n// //         <div className=\"project-stats\">\n// //           <div className=\"stat\">\n// //             <FiEye />\n// //             <span>{project.viewCount || 0}</span>\n// //           </div>\n// //           <div className=\"stat\">\n// //             <FiUsers />\n// //             <span>{project.leadCount || 0}</span>\n// //           </div>\n// //         </div>\n        \n// //         <div className=\"project-actions\">\n// //           <button onClick={() => onEdit(project)} className=\"edit-button\">\n// //             <FiEdit />\n// //           </button>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // Project Modal Component (Add/Edit)\n// // const ProjectModal = ({ project, domains, onClose, onSave }) => {\n// //   const [formData, setFormData] = useState({\n// //     title: project?.title || '',\n// //     abstract: project?.abstract || '',\n// //     specifications: project?.specifications || '',\n// //     learningOutcomes: project?.learningOutcomes || '',\n// //     subDomainId: project?.subDomainId || '',\n// //     isFeatured: project?.isFeatured || false\n// //   });\n// //   const [loading, setLoading] = useState(false);\n// //   const [selectedDomain, setSelectedDomain] = useState('');\n// //   const [subDomains, setSubDomains] = useState([]);\n\n// //   useEffect(() => {\n// //     if (selectedDomain) {\n// //       fetchSubDomains(selectedDomain);\n// //     }\n// //   }, [selectedDomain]);\n\n// //   const fetchSubDomains = async (domainId) => {\n// //     try {\n// //       const response = await authService.getLeafSubDomains(domainId);\n// //       setSubDomains(response.data || []);\n// //     } catch (error) {\n// //       console.error('‚ùå Error fetching sub-domains:', error);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setLoading(true);\n\n// //     try {\n// //       if (project) {\n// //         await authService.updateProject(project.id, formData);\n// //         toast.success('Project updated successfully');\n// //       } else {\n// //         await authService.createProject(formData);\n// //         toast.success('Project created successfully');\n// //       }\n// //       onSave();\n// //     } catch (error) {\n// //       console.error('‚ùå Error saving project:', error);\n// //       toast.error('Failed to save project');\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>{project ? 'Edit Project' : 'Add New Project'}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n        \n// //         <form onSubmit={handleSubmit}>\n// //           <div className=\"form-grid\">\n// //             <div className=\"form-group\">\n// //               <label>Project Title</label>\n// //               <input\n// //                 type=\"text\"\n// //                 value={formData.title}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n// //                 required\n// //               />\n// //             </div>\n            \n// //             <div className=\"form-group\">\n// //               <label>Domain</label>\n// //               <select\n// //                 value={selectedDomain}\n// //                 onChange={(e) => setSelectedDomain(e.target.value)}\n// //                 required={!project}\n// //               >\n// //                 <option value=\"\">Select Domain</option>\n// //                 {domains.map(domain => (\n// //                   <option key={domain.id} value={domain.id}>{domain.title}</option>\n// //                 ))}\n// //               </select>\n// //             </div>\n            \n// //             <div className=\"form-group\">\n// //               <label>Sub-Domain</label>\n// //               <select\n// //                 value={formData.subDomainId}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, subDomainId: e.target.value }))}\n// //                 required\n// //               >\n// //                 <option value=\"\">Select Sub-Domain</option>\n// //                 {subDomains.map(sub => (\n// //                   <option key={sub.id} value={sub.id}>{sub.title}</option>\n// //                 ))}\n// //               </select>\n// //             </div>\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Abstract</label>\n// //             <textarea\n// //               value={formData.abstract}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, abstract: e.target.value }))}\n// //               rows={4}\n// //               required\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Specifications</label>\n// //             <textarea\n// //               value={formData.specifications}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, specifications: e.target.value }))}\n// //               rows={6}\n// //               required\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group\">\n// //             <label>Learning Outcomes</label>\n// //             <textarea\n// //               value={formData.learningOutcomes}\n// //               onChange={(e) => setFormData(prev => ({ ...prev, learningOutcomes: e.target.value }))}\n// //               rows={4}\n// //               required\n// //             />\n// //           </div>\n          \n// //           <div className=\"form-group checkbox\">\n// //             <label>\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={formData.isFeatured}\n// //                 onChange={(e) => setFormData(prev => ({ ...prev, isFeatured: e.target.checked }))}\n// //               />\n// //               Featured Project\n// //             </label>\n// //           </div>\n          \n// //           <div className=\"modal-actions\">\n// //             <button type=\"button\" onClick={onClose} disabled={loading}>\n// //               Cancel\n// //             </button>\n// //             <button type=\"submit\" className=\"primary-button\" disabled={loading}>\n// //               {loading ? 'Saving...' : 'Save'}\n// //             </button>\n// //           </div>\n// //         </form>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // // Project Details Modal\n// // const ProjectDetailsModal = ({ project, onClose }) => {\n// //   return (\n// //     <div className=\"modal-overlay\">\n// //       <div className=\"modal large\">\n// //         <div className=\"modal-header\">\n// //           <h2>{project.title}</h2>\n// //           <button onClick={onClose}>√ó</button>\n// //         </div>\n        \n// //         <div className=\"project-details\">\n// //           <div className=\"detail-section\">\n// //             <h3>Abstract</h3>\n// //             <p>{project.abstract}</p>\n// //           </div>\n          \n// //           <div className=\"detail-section\">\n// //             <h3>Specifications</h3>\n// //             <p>{project.specifications}</p>\n// //           </div>\n          \n// //           <div className=\"detail-section\">\n// //             <h3>Learning Outcomes</h3>\n// //             <p>{project.learningOutcomes}</p>\n// //           </div>\n          \n// //           <div className=\"detail-stats\">\n// //             <div className=\"stat-item\">\n// //               <strong>Views:</strong> {project.viewCount || 0}\n// //             </div>\n// //             <div className=\"stat-item\">\n// //               <strong>Leads:</strong> {project.leadCount || 0}\n// //             </div>\n// //             <div className=\"stat-item\">\n// //               <strong>Featured:</strong> {project.isFeatured ? 'Yes' : 'No'}\n// //             </div>\n// //             <div className=\"stat-item\">\n// //               <strong>Status:</strong> {project.isActive ? 'Active' : 'Archived'}\n// //             </div>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default ProjectManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}